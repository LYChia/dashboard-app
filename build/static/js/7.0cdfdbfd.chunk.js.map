{"version":3,"sources":["../node_modules/react/index.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/react/jsx-runtime.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/prop-types/index.js","../../src/Enum.js","../../src/Utility.js","../../src/Tokenizer.js","../../src/Parser.js","../../src/Prefixer.js","../../src/Serializer.js","../../src/Middleware.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","../../modules/createNameContext.js","../../modules/HistoryContext.js","../../modules/RouterContext.js","../../modules/Router.js","../../modules/MemoryRouter.js","../../modules/Lifecycle.js","../../modules/generatePath.js","../../modules/Redirect.js","../../modules/matchPath.js","../../modules/Route.js","../../modules/StaticRouter.js","../../modules/Switch.js","../../modules/hooks.js","../node_modules/@material-ui/styles/esm/withStyles/withStyles.js","../node_modules/@material-ui/core/esm/styles/withStyles.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/jss/dist/jss.esm.js","../node_modules/@emotion/react/dist/emotion-element-99289b21.browser.esm.js","../node_modules/@material-ui/core/esm/utils/useEventCallback.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/resolve-pathname/esm/resolve-pathname.js","../node_modules/value-equal/esm/value-equal.js","../node_modules/history/esm/history.js","../node_modules/@material-ui/core/esm/utils/capitalize.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/react-dom/index.js","../node_modules/@material-ui/core/esm/utils/useForkRef.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@material-ui/core/esm/styles/colorManipulator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/tiny-warning/dist/tiny-warning.esm.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/@material-ui/system/esm/merge.js","../node_modules/@material-ui/core/esm/utils/ownerDocument.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../node_modules/is-in-browser/dist/module.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@material-ui/core/esm/styles/defaultTheme.js","../node_modules/@emotion/hash/dist/hash.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","../node_modules/react-i18next/dist/es/utils.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/@material-ui/core/esm/utils/deprecatedPropType.js","../node_modules/@material-ui/core/esm/styles/transitions.js","../../../src/lib/sync-event.ts","../node_modules/@material-ui/core/esm/utils/setRef.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/react-i18next/dist/es/context.js","../node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","../node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../src/index.ts","../node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js","../node_modules/@mui/system/esm/breakpoints.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../src/lib/base-event.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@mui/system/esm/merge.js","../node_modules/@mui/material/styles/defaultTheme.js","../node_modules/@material-ui/core/esm/transitions/utils.js","../node_modules/@mui/system/esm/useTheme.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@material-ui/styles/esm/useTheme/ThemeContext.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@material-ui/styles/esm/ThemeProvider/nested.js","../node_modules/@material-ui/system/esm/breakpoints.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","../node_modules/@mui/utils/esm/formatMuiErrorMessage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","../node_modules/webpack/buildin/global.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/object-assign/index.js","../../../src/lib/EventQueue.ts","../node_modules/@material-ui/core/esm/utils/requirePropFactory.js","../node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../node_modules/@emotion/react/isolated-hoist-non-react-statics-do-not-use-this-in-your-code/dist/emotion-react-isolated-hoist-non-react-statics-do-not-use-this-in-your-code.browser.esm.js","../node_modules/path-to-regexp/index.js","../node_modules/@material-ui/styles/esm/useTheme/useTheme.js","../node_modules/@mui/material/styles/useThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js","../node_modules/@mui/system/esm/style.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/esm/styles/useTheme.js","../node_modules/@material-ui/core/esm/utils/debounce.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/utils/ownerWindow.js","../../../src/lib/index.ts","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@mui/material/styles/createTransitions.js","../node_modules/@mui/system/esm/spacing.js","../node_modules/@mui/system/esm/memoize.js","../node_modules/@material-ui/core/esm/utils/unsupportedProp.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@material-ui/core/esm/styles/zIndex.js","../../../src/lib/queued-event.ts","../../../src/lib/async-event.ts","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@mui/system/esm/useThemeWithoutDefault.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/mini-create-react-context/dist/esm/index.js","../node_modules/jss-rtl/lib/main.js","../../src/stylis-rtl.ts","../node_modules/cssjanus/src/cssjanus.js","../node_modules/@material-ui/core/esm/styles/createBreakpoints.js","../node_modules/@material-ui/core/esm/styles/createMixins.js","../node_modules/@material-ui/core/esm/colors/common.js","../node_modules/@material-ui/core/esm/colors/grey.js","../node_modules/@material-ui/core/esm/colors/indigo.js","../node_modules/@material-ui/core/esm/colors/pink.js","../node_modules/@material-ui/core/esm/colors/red.js","../node_modules/@material-ui/core/esm/colors/orange.js","../node_modules/@material-ui/core/esm/colors/blue.js","../node_modules/@material-ui/core/esm/colors/green.js","../node_modules/@material-ui/core/esm/styles/createPalette.js","../node_modules/@material-ui/core/esm/styles/createTypography.js","../node_modules/@material-ui/core/esm/styles/shadows.js","../node_modules/@material-ui/core/esm/styles/shape.js","../node_modules/@material-ui/core/esm/styles/createSpacing.js","../node_modules/@material-ui/core/esm/styles/createTheme.js","../node_modules/@mui/material/styles/createMixins.js","../node_modules/@mui/material/colors/common.js","../node_modules/@mui/material/colors/grey.js","../node_modules/@mui/material/colors/purple.js","../node_modules/@mui/material/colors/red.js","../node_modules/@mui/material/colors/orange.js","../node_modules/@mui/material/colors/blue.js","../node_modules/@mui/material/colors/lightBlue.js","../node_modules/@mui/material/colors/green.js","../node_modules/@mui/material/styles/createPalette.js","../node_modules/@mui/material/styles/createTypography.js","../node_modules/@mui/material/styles/shadows.js","../node_modules/@mui/material/styles/zIndex.js","../node_modules/@mui/material/styles/createTheme.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/i18next/dist/esm/i18next.js","../node_modules/@material-ui/utils/esm/formatMuiErrorMessage.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@mui/utils/esm/deepmerge.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/process/browser.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../../../src/lib/any-event.ts","../../../src/lib/objects.ts","../../src/acceleration.g.ts","../../src/amountofsubstance.g.ts","../../src/amplituderatio.g.ts","../../src/angle.g.ts","../../src/apparentenergy.g.ts","../../src/apparentpower.g.ts","../../src/area.g.ts","../../src/areadensity.g.ts","../../src/areamomentofinertia.g.ts","../../src/bitrate.g.ts","../../src/brakespecificfuelconsumption.g.ts","../../src/capacitance.g.ts","../../src/coefficientofthermalexpansion.g.ts","../../src/density.g.ts","../../src/duration.g.ts","../../src/dynamicviscosity.g.ts","../../src/electricadmittance.g.ts","../../src/electriccharge.g.ts","../../src/electricchargedensity.g.ts","../../src/electricconductance.g.ts","../../src/electricconductivity.g.ts","../../src/electriccurrent.g.ts","../../src/electriccurrentdensity.g.ts","../../src/electriccurrentgradient.g.ts","../../src/electricfield.g.ts","../../src/electricinductance.g.ts","../../src/electricpotential.g.ts","../../src/electricpotentialac.g.ts","../../src/electricpotentialchangerate.g.ts","../../src/electricpotentialdc.g.ts","../../src/electricresistance.g.ts","../../src/electricresistivity.g.ts","../../src/electricsurfacechargedensity.g.ts","../../src/energy.g.ts","../../src/entropy.g.ts","../../src/force.g.ts","../../src/forcechangerate.g.ts","../../src/forceperlength.g.ts","../../src/frequency.g.ts","../../src/fuelefficiency.g.ts","../../src/heatflux.g.ts","../../src/heattransfercoefficient.g.ts","../../src/illuminance.g.ts","../../src/information.g.ts","../../src/irradiance.g.ts","../../src/irradiation.g.ts","../../src/kinematicviscosity.g.ts","../../src/lapserate.g.ts","../../src/length.g.ts","../../src/level.g.ts","../../src/lineardensity.g.ts","../../src/linearpowerdensity.g.ts","../../src/luminosity.g.ts","../../src/luminousflux.g.ts","../../src/luminousintensity.g.ts","../../src/magneticfield.g.ts","../../src/magneticflux.g.ts","../../src/magnetization.g.ts","../../src/mass.g.ts","../../src/massconcentration.g.ts","../../src/massflow.g.ts","../../src/massflux.g.ts","../../src/massfraction.g.ts","../../src/massmomentofinertia.g.ts","../../src/molarenergy.g.ts","../../src/molarentropy.g.ts","../../src/molarmass.g.ts","../../src/molarity.g.ts","../../src/permeability.g.ts","../../src/permittivity.g.ts","../../src/power.g.ts","../../src/powerdensity.g.ts","../../src/powerratio.g.ts","../../src/pressure.g.ts","../../src/pressurechangerate.g.ts","../../src/ratio.g.ts","../../src/ratiochangerate.g.ts","../../src/reactiveenergy.g.ts","../../src/reactivepower.g.ts","../../src/relativehumidity.g.ts","../../src/rotationalacceleration.g.ts","../../src/rotationalspeed.g.ts","../../src/rotationalstiffness.g.ts","../../src/rotationalstiffnessperlength.g.ts","../../src/scalar.g.ts","../../src/solidangle.g.ts","../../src/specificenergy.g.ts","../../src/specificentropy.g.ts","../../src/specificfuelconsumption.g.ts","../../src/specificvolume.g.ts","../../src/specificweight.g.ts","../../src/speed.g.ts","../../src/standardvolumeflow.g.ts","../../src/temperature.g.ts","../../src/temperaturechangerate.g.ts","../../src/temperaturedelta.g.ts","../../src/thermalconductivity.g.ts","../../src/thermalresistance.g.ts","../../src/torque.g.ts","../../src/torqueperlength.g.ts","../../src/turbidity.g.ts","../../src/vitamina.g.ts","../../src/volume.g.ts","../../src/volumeconcentration.g.ts","../../src/volumeflow.g.ts","../../src/volumeperlength.g.ts","../../src/warpingmomentofinertia.g.ts","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/path-to-regexp/node_modules/isarray/index.js","../node_modules/react-router/node_modules/react-is/index.js","../node_modules/react-router/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/rtl-css-js/dist/esm/convert-09159978.js","../node_modules/rtl-css-js/dist/esm/index.js","../node_modules/@material-ui/core/esm/utils/unstable_useId.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/utils/esm/deepmerge.js","../node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../node_modules/@mui/utils/esm/capitalize.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@material-ui/system/esm/styleFunctionSx.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/system/esm/grid.js","../node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/styles/esm/styled/styled.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","../node_modules/@mui/system/esm/createTheme/createBreakpoints.js","../node_modules/@mui/system/esm/createTheme/shape.js","../node_modules/@mui/system/esm/createTheme/createSpacing.js","../node_modules/@mui/system/esm/createTheme/createTheme.js","../node_modules/@material-ui/core/esm/ButtonBase/Ripple.js","../node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js","../node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js","../node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js","../node_modules/react-i18next/dist/es/useTranslation.js","../node_modules/@material-ui/core/esm/Grow/Grow.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","../node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/system/esm/colorManipulator.js","../node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js","../node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js","../node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js","../node_modules/hyphenate-style-name/index.js","../node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js","../node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js","../node_modules/css-vendor/dist/css-vendor.esm.js","../node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js","../node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js","../node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js","../node_modules/@material-ui/styles/esm/makeStyles/multiKeyStore.js","../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","../node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js","../node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js","../node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js","../node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js","../node_modules/@material-ui/system/esm/spacing.js","../node_modules/@material-ui/system/esm/memoize.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js"],"names":["module","exports","require","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_objectWithoutProperties","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","MEDIA","IMPORT","SUPPORTS","KEYFRAMES","abs","Math","from","String","fromCharCode","trim","value","replace","pattern","replacement","indexof","search","charat","index","charCodeAt","substr","begin","end","slice","strlen","sizeof","append","array","push","combine","callback","map","join","line","column","position","character","characters","node","root","parent","type","children","return","copy","prev","next","peek","caret","token","alloc","dealloc","delimit","delimiter","whitespace","escaping","count","commenter","identifier","compile","parse","rule","rules","rulesets","pseudo","points","declarations","offset","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","size","j","k","x","y","z","prefix","hash","serialize","output","stringify","element","middleware","collection","rulesheet","prefixer","exec","match","_objectWithoutPropertiesLoose","sourceKeys","keys","toVal","mix","str","Array","isArray","tmp","createNamedContext","name","context","createContext","historyContext","Router","location","computeRootMatch","path","url","params","isExact","pathname","componentDidMount","_pendingLocation","componentWillUnmount","render","RouterContext","history","state","staticContext","HistoryContext","React","Component","Lifecycle","onMount","componentDidUpdate","onUpdate","prevProps","onUnmount","cache","cacheCount","generatePath","generator","pathToRegexp","compilePath","pretty","Redirect","computedMatch","to","method","createLocation","prevLocation","locationsAreEqual","matchPath","options","exact","strict","sensitive","concat","matched","cacheKey","pathCache","result","regexp","values","memo","Route","component","isEmptyChildren","addLeadingSlash","stripBasename","basename","base","createURL","createPath","staticHandler","methodName","invariant","noop","Switch","child","useContext","useHistory","useLocation","useParams","withStyles","stylesOrCreator","undefined","defaultTheme","_options$withTheme","withTheme","stylesOptions","classNamePrefix","useStyles","makeStyles","displayName","WithStyles","forwardRef","ref","classes","theme","innerRef","other","defaultProps","more","useTheme","getThemeProps","createElement","hoistNonReactStatics","withStylesWithoutDefault","_inheritsLoose","subClass","superClass","create","constructor","_defineProperty","obj","plainObjectConstrurctor","cloneStyle","style","newStyle","createRule","decl","jss","declCopy","plugins","onCreateRule","by","toCssValue","ignoreImportant","cssValue","indentStr","indent","toCss","selector","_options$indent","fallbacks","fallback","prop","_prop","_value","_prop2","_value2","allowEmpty","escapeRegex","nativeEscape","CSS","escape","BaseStyleRule","isProcessed","renderer","renderable","sheet","Renderer","force","newValue","process","onChangeValue","isEmpty","isDefined","remove","removeProperty","setProperty","attached","StyleRule","_BaseStyleRule","_this","selectorText","id","scoped","generateId","_assertThisInitialized","_proto2","applyTo","json","toJSON","toString","opts","link","_createClass","set","setSelector","replaceRule","get","pluginStyleRule","defaultToStringOptions","atRegExp","ConditionalRule","styles","at","query","atMatch","RuleList","add","_proto","getRule","addRule","onProcessRule","keyRegExp","pluginConditionalRule","test","defaultToStringOptions$1","nameRegExp","KeyframesRule","frames","nameMatch","keyRegExp$1","refRegExp","findReferencedKeyframe","val","keyframes","replaceRef","refKeyframe","plugin","onProcessStyle","KeyframeRule","_len","args","_key","pluginKeyframeRule","FontFaceRule","keyRegExp$2","pluginFontFaceRule","ViewportRule","pluginViewportRule","SimpleRule","keysMap","defaultUpdateOptions","forceUpdateOptions","raw","counter","ruleOptions","_this$options","register","splice","unregister","forEach","update","data","updateOne","_this$options2","styleRule","nextValue","_nextValue","_prevValue","css","StyleSheet","deployed","queue","attach","deploy","detach","insertRule","addRules","added","deleteRule","_this$rules","PluginsRegistry","internal","external","registry","onProcessSheet","processedValue","use","newPlugin","reduce","SheetsRegistry","reset","_temp","_ref","globalThis$1","globalThis","window","self","Function","ns","moduleId","createGenerateId","ruleCounter","jssId","minify","memoize","fn","getPropertyValue","cssRule","attributeStyleMap","err","delete","getHead","document","querySelector","findPrevNode","registry$1","insertionPoint","findHigherSheet","parentNode","findHighestSheet","nextSibling","text","head","childNodes","nodeType","nodeValue","findCommentNode","getNonce","getAttribute","_insertRule","container","appendRule","cssRules","getValidRuleInsertionIndex","maxIndex","DomRenderer","hasInsertedRules","media","meta","el","textContent","createStyle","setAttribute","nonce","nextNode","insertBefore","insertionPointElement","appendChild","insertStyle","Boolean","removeChild","insertRules","nativeParent","latestNativeParent","_insertionIndex","refCssRule","ruleStr","insertionIndex","nativeRule","getRules","instanceCounter","Jss","version","isInBrowser","setup","createStyleSheet","removeStyleSheet","getDynamicStyles","extracted","hasCSSTOMSupport","EmotionCacheContext","HTMLElement","createCache","CacheProvider","Provider","withEmotionCache","func","ThemeContext","typePropName","createEmotionProps","newProps","Emotion","cssProp","registered","registeredStyles","className","getRegisteredStyles","serialized","serializeStyles","insertStyles","useEnhancedEffect","useEventCallback","current","ReferenceError","isAbsolute","charAt","spliceOne","list","n","pop","resolvePathname","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","valueOf","valueEqual","a","b","every","item","aValue","bValue","stripLeadingSlash","toLowerCase","hasBasename","stripTrailingSlash","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","e","URIError","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","appendListener","isActive","listener","filter","notifyListeners","canUseDOM","getConfirmation","message","confirm","PopStateEvent","HashChangeEvent","getHistoryState","createBrowserHistory","globalHistory","canUseHistory","ua","navigator","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","getHashPath","substring","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","allPaths","lastIndexOf","baseTag","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","createMemoryHistory","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","entry","nextIndex","nextEntries","canGo","capitalize","string","Error","_formatMuiErrorMessage","toUpperCase","condition","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","useForkRef","refA","refB","refValue","setRef","_typeof","Symbol","iterator","decomposeColor","color","re","RegExp","colors","parseInt","round","hexToRgb","marker","parseFloat","recomposeColor","getContrastRatio","foreground","background","lumA","getLuminance","lumB","rgb","h","s","l","f","hslToRgb","pow","Number","toFixed","emphasize","coefficient","darken","lighten","alpha","_classCallCheck","warning","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","merge","acc","deepmerge","clone","ownerDocument","_toConsumableArray","arr","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","_s","_i","done","nonIterableRest","classNames","rawClassName","isStringTag","inserted","insert","isBrowser","createTheme","murmur2","len","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","processStyleValue","p1","p2","cursor","unitless","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","interpolated","createStringFromObject","previousCursor","cached","labelPattern","stringMode","strings","lastIndex","identifierName","hashString","warn","_console","alreadyWarned","warnOnce","_len2","_key2","Date","loadNamespaces","i18n","cb","isInitialized","on","initialized","setTimeout","off","hasLoadedNamespace","languages","lng","fallbackLng","lastLng","loadNotPending","loadState","services","backendConnector","bindI18n","backend","isLanguageChangingTo","hasResourceBundle","deprecatedPropType","validator","reason","easing","easeInOut","easeOut","easeIn","sharp","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","_options$duration","durationOption","_options$easing","easingOption","_options$delay","delay","animatedProp","getAutoHeightDuration","height","constant","_recursion","_listenersChanged","VoidSyncEvent","_listeners","SyncEvent","MAX_RECURSION_DEPTH","isInteger","_call","_attach","once","evtListenersChanged","_detach","BaseEvent","ErrorSyncEvent","createChainedFunction","funcs","ownKeys","object","enumerableOnly","symbols","sym","_objectSpread","getOwnPropertyDescriptors","defineProperties","i18nInstance","defaultOptions","bindI18nStore","transEmptyNodeValue","transSupportBasicHtmlNodes","transWrapTextNodes","transKeepBasicHtmlNodesFor","useSuspense","I18nContext","getDefaults","ReportNamespaces","usedNamespaces","namespaces","getI18n","initReactI18next","init","setDefaults","react","setI18n","parsed","toRules","fixedElements","WeakMap","compat","isImplicitRule","parentRules","removeLabel","defaultStylisPlugins","ssrStyles","querySelectorAll","stylisPlugins","_insert","nodesToHydrate","attrib","omnipresentPlugins","currentSheet","finalizingPlugins","serializer","shouldCache","speedy","prepend","hydrate","weakMemoize","arg","has","ret","_arrayLikeToArray","arr2","__exportStar","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","visibilityState","isFocusVisible","matches","tagName","readOnly","isContentEditable","focusTriggersKeyboardModality","handleBlurVisible","clearTimeout","useIsFocusVisible","onBlurVisible","doc","ReactDOM","xs","sm","md","lg","xl","defaultBreakpoints","handleBreakpoints","propValue","styleFromPropValue","themeBreakpoints","breakpoints","breakpoint","cssKey","createEmptyBreakpointObject","_breakpointsInput$key","breakpointsInput","breakpointsInOrder","removeUnusedBreakpoints","breakpointKeys","breakpointOutput","resolveBreakpointValues","breakpointValues","_unsupportedIterableToArray","o","minLen","boundTo","handler","deleted","__esModule","reflow","scrollTop","getTransitionProps","timeout","_props$style","transitionDuration","mode","transitionDelay","systemDefaultTheme","useThemeWithoutDefault","_setPrototypeOf","p","setPrototypeOf","__proto__","hasSymbol","for","_themeBreakpoints","_insertTag","tag","before","tags","firstChild","isSpeedy","ctr","nodes","createTextNode","createStyleElement","styleSheets","ownerNode","sheetForTag","flush","formatMuiErrorMessage","code","encodeURIComponent","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","Promise","then","_asyncToGenerator","Global","sheetRef","useRef","useLayoutEffect","rehydrating","sheetRefCurrent","nextElementSibling","insertable","g","propIsEnumerable","toObject","test1","test2","test3","letter","shouldUseNative","evtFilled","evtDrained","_queue","_flushing","global","EventQueue","_instance","resetGlobal","empty","flushOnce","flushing","maxRounds","requirePropFactory","componentNameInError","hoistNonReactStatics$1","isarray","tokensToFunction","tokensToRegExp","PATH_REGEXP","res","tokens","defaultDelimiter","m","escaped","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","c","flags","encode","segment","JSON","attachKeys","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","useThemeProps","systemUseThemeProps","HashRouter","createHistory","resolveToLocation","normalizeToLocation","forwardRefShim","C","LinkAnchor","navigate","onClick","rest","ex","isModifiedEvent","forwardedRef","Link","isDuplicateNavigation","ariaCurrent","activeClassName","activeStyle","classNameProp","isActiveProp","locationProp","styleProp","escapedPath","classnames","joinClassnames","getPath","getValue","themeMapping","transform","propValueFinal","userValue","cssProperty","themeKey","filterProps","_interopRequireDefault","_interopRequireWildcard","default","_default","d","debounce","wait","debounced","that","later","clear","createSvgIcon","SvgIcon","muiName","ownerWindow","defaultView","isMuiElement","muiNames","useControlled","controlled","defaultProp","isControlled","_React$useState","valueState","setValue","_excluded","createTransitions","inputTransitions","mergedEasing","mergedDuration","properties","directions","t","r","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","direction","dir","marginKeys","paddingKeys","spacingKeys","createUnaryUnit","defaultValue","propName","themeSpacing","createUnarySpacing","transformer","transformed","resolveCssProperty","cssProperties","getStyleFromPropValue","margin","padding","spacing","unsupportedProp","componentName","propFullName","_iterableToArray","iter","_arrayWithHoles","_nonIterableRest","mobileStepper","speedDial","appBar","drawer","modal","snackbar","tooltip","_queued","condensed","_condensed","_queuedData","_queuedListeners","QueuedEvent","VoidQueuedEvent","ErrorQueuedEvent","defaultScheduler","setImmediate","setScheduler","scheduler","AsyncEvent","_scheduler","_postDirect","VoidAsyncEvent","ErrorAsyncEvent","iterableToArrayLimit","isObjectEmpty","contextTheme","muiUseTheme","components","MAX_SIGNED_31_BIT_INT","commonjsGlobal","createEventEmitter","handlers","changedBits","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","getUniqueId","_Component","emitter","getChildContext","componentWillReceiveProps","nextProps","oldValue","PropTypes","isRequired","Consumer","_Component2","_this2","observedBits","rtl","convert","_a","_b","_c","enabled","opt","flip","cssjanus","Tokenizer","regex","tokenizeCallback","detokenizeCallback","tokenize","detokenize","commentToken","numPattern","noFlipPattern","escapePattern","nmcharPattern","quantPattern","signedQuantPattern","colorPattern","urlCharsPattern","lookAheadNotOpenBracePattern","lookAheadNotClosingParenPattern","lookAheadForClosingParenPattern","suffixPattern","temporaryTokenRegExp","commentRegExp","noFlipSingleRegExp","noFlipClassRegExp","directionLtrRegExp","directionRtlRegExp","leftRegExp","nonLetterPattern","rightRegExp","leftInUrlRegExp","rightInUrlRegExp","ltrInUrlRegExp","rtlInUrlRegExp","cursorEastRegExp","cursorWestRegExp","fourNotationQuantRegExp","fourNotationColorRegExp","bgHorizontalPercentageRegExp","bgHorizontalPercentageXRegExp","borderRadiusRegExp","boxShadowRegExp","textShadow1RegExp","textShadow2RegExp","textShadow3RegExp","translateXRegExp","translateRegExp","calculateNewBackgroundPosition","pre","idx","flipBorderRadiusValues","calculateNewBorderRadius","firstGroup","secondGroup","flipSign","calculateNewShadow","calculateNewTranslate","suffix","calculateNewFourTextShadow","space","noFlipSingleTokenizer","noFlipClassTokenizer","commentTokenizer","transformDirInUrl","transformEdgeInUrl","norm","createBreakpoints","_breakpoints$values","_breakpoints$unit","unit","_breakpoints$step","step","between","start","endIndex","down","upperbound","only","width","createMixins","_toolbar","gutters","paddingLeft","paddingRight","toolbar","minHeight","common","black","white","grey","A100","A200","A400","A700","indigo","pink","red","orange","blue","green","light","primary","secondary","disabled","hint","divider","paper","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","intent","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","main","createPalette","palette","_palette$primary","_palette$secondary","_palette$error","_palette$warning","_palette$info","_palette$success","success","_palette$type","_palette$contrastThre","contrastThreshold","_palette$tonalOffset","getContrastText","augmentColor","mainShade","lightShade","darkShade","contrastText","types","roundWithDeprecationWarning","caseAllCaps","textTransform","defaultFontFamily","createTypography","typography","_ref$fontFamily","fontFamily","_ref$fontSize","fontSize","_ref$fontWeightLight","fontWeightLight","_ref$fontWeightRegula","fontWeightRegular","_ref$fontWeightMedium","fontWeightMedium","_ref$fontWeightBold","fontWeightBold","_ref$htmlFontSize","htmlFontSize","allVariants","pxToRem2","pxToRem","coef","buildVariant","letterSpacing","casing","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","createShadow","shadows","shape","borderRadius","createSpacing","spacingInput","mui","argument","_options$breakpoints","_options$mixins","mixinsInput","_options$palette","paletteInput","_options$typography","typographyInput","muiTheme","overrides","transitions","purple","lightBlue","getDefaultPrimary","getDefaultSecondary","getDefaultError","getDefaultInfo","getDefaultSuccess","getDefaultWarning","modes","transitionsInput","systemTheme","systemCreateTheme","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","_inherits","consoleLogger","log","baseLogger","Logger","concreteLogger","logger","debug","bool","forward","_len3","_key3","_len4","_key4","lvl","debugOnly","moduleName","EventEmitter","observers","events","cloned","observer","_cloned","defer","rej","promise","makeString","getLastOfPath","Empty","cleanKey","canNotTraverseDeeper","stack","shift","setPath","_getLastOfPath","_getLastOfPath3","getPathWithDefaults","defaultData","deepExtend","overwrite","regexEscape","_entityMap","isIE10","deepFind","keySeparator","paths","joinedPath","ResourceStore","_EventEmitter","defaultNS","ignoreJSONStructure","silent","addNamespaces","emit","resources","addResource","deep","pack","removeNamespaces","getResource","compatibilityAPI","postProcessor","processors","addPostProcessor","handle","translator","processor","checkedLoadedFor","Translator","language","resolved","nsSeparator","interpolator","nestingRegexp","lastKey","overloadTranslationOptionHandler","_this$extractFromKey","extractFromKey","namespace","appendNamespaceToCIMode","resUsedKey","usedKey","resExactUsedKey","exactUsedKey","resType","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","translate","extendTranslation","usedDefault","needsPluralHandling","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","saveMissingTo","toResolveHierarchy","send","fallbackValue","missingKeyHandler","saveMissing","saveMissingPlurals","getSuffixes","appendNamespaceToMissingKey","parseMissingKeyHandler","_this3","usedLng","usedNS","skipInterpolation","nestBef","skipOnVariables","nb","defaultVariables","interpolate","na","nest","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","_this4","fallbackNS","needsContextHandling","codes","utils","pluralSuffix","possibleKey","finalKey","finalKeys","addLookupKeys","contextSeparator","returnNull","returnEmptyString","resourceStore","option","LanguageUtil","whitelist","supportedLngs","formatLanguageCode","specialCases","lowerCaseLng","cleanCode","deprecate","isSupportedCode","load","nonExplicitSupportedLngs","getLanguagePartFromCode","cleanedLng","lngOnly","find","supportedLng","getScriptPartFromCode","fallbackCode","fallbackCodes","addCode","fc","sets","nr","_rulesPluralsTypes","createRules","numbers","plurals","PluralResolver","noAbs","simplifyPluralSuffix","returnSuffix","compatibilityJSON","Interpolator","format","escapeValue","iOpts","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","regexpStr","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","replaces","regexSafe","handleFormat","interpolationkey","missingInterpolationHandler","safeValue","todo","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","formatters","doReduce","elem","v","Connector","store","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","addResourceBundle","q","_getLastOfPath2","pushPath","what","fcName","tried","read","queueLoad","loadOne","prepareLoading","_this5","isUpdate","initImmediate","nonExplicitWhitelist","preload","pluralSeparator","partialBundledLanguages","tDescription","_format","transformOptions","i18next","I18n","modules","isClone","createClassOnDemand","ClassOrObject","lu","bind","languageDetector","detection","storeApi","_this2$store","storeApiChained","_this2$store2","deferred","finish","initializedStoreOnce","changeLanguage","usedCallback","setLng","getBestMatchFromCodes","cacheUserLanguage","loadResources","async","detect","keyPrefix","fixedT","resultKey","_this$translator","_this$translator2","exists","_this6","precheck","preResult","_this7","preloaded","newLngs","_this8","mergedOptions","membersToCopy","_props$color","_props$component","_props$fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","clsx","focusable","role","userSelect","display","fill","transition","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","isPlainObject","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","newObj","hasPropertyDescriptor","desc","_utils","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","runClearTimeout","Item","nextTick","title","browser","env","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","umask","Fragment","StrictMode","Profiler","Suspense","u","w","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","refs","updater","D","E","isReactComponent","forceUpdate","F","isPureReactComponent","G","H","I","__self","__source","J","$$typeof","_owner","L","M","N","O","K","P","Q","_status","_result","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","_context","createFactory","createRef","isValidElement","lazy","_payload","_init","useCallback","useDebugValue","useEffect","useImperativeHandle","useMemo","useReducer","useState","aa","ba","Set","ca","da","ea","fa","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","oa","pa","qa","ma","isNaN","la","removeAttribute","setAttributeNS","xlinkHref","ra","sa","ta","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","Oa","Pa","prepareStackTrace","Reflect","construct","Qa","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","$a","ab","bb","eb","db","fb","defaultSelected","gb","dangerouslySetInnerHTML","hb","ib","jb","kb","lb","mb","ob","namespaceURI","innerHTML","MSApp","execUnsafeLocalFunction","pb","lastChild","qb","gridArea","lineClamp","rb","sb","tb","ub","menuitem","area","br","col","embed","hr","img","input","keygen","param","track","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","$b","memoizedState","dehydrated","ac","cc","sibling","bc","dc","ec","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","containerInfo","xc","yc","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","clz32","bd","cd","LN2","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","uc","jd","kd","ld","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","getModifierState","zd","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Jd","clipboardData","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Rd","locale","which","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Zd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","range","me","ne","oe","pe","qe","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","Ze","Yb","$e","af","bf","cf","df","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","jf","kf","lf","mf","autoFocus","nf","__html","of","pf","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","Gf","Hf","If","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","effects","yg","zg","eventTime","lane","payload","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","Ng","UNSAFE_componentWillReceiveProps","Og","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Tg","Ug","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","Ih","Jh","Kh","lastRenderedReducer","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","hi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","qi","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onclick","createElementNS","V","Hi","Ii","W","Ji","Ki","Li","Mi","Ni","Oi","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","aj","bj","onCommitFiberUnmount","cj","dj","ej","fj","gj","hj","_reactRootContainer","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","onCommitFiberRoot","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_wrapCallback","jsx","jsxs","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","getShim","ReactPropTypes","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","checkPropTypes","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Lazy","Portal","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","reverse","skipTempReset","stop","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","messagePrefix","onGlobalMessage","installPostMessageImplementation","channel","installMessageChannelImplementation","html","script","onreadystatechange","installReadyStateChangeImplementation","task","EventType","_events","monitorAttach","evtFirstAttached","VoidAnyEvent","evtLastDetached","Sync","postable","detacher","prevCount","evt","Async","shallowEquals","Queued","attachSync","onceSync","attachAsync","onceAsync","attachQueued","onceQueued","AnyEvent","ErrorAnyEvent","namesA","namesB","sort","AccelerationUnits","Acceleration","AmountOfSubstanceUnits","convertFromBase","AmountOfSubstance","AmplitudeRatioUnits","AngleUnits","Angle","ApparentEnergyUnits","ApparentPowerUnits","AreaUnits","Area","AreaDensityUnits","AreaDensity","AreaMomentOfInertiaUnits","AreaMomentOfInertia","areaMomentOfInertia","BaseValue","BitRateUnits","BitRate","BrakeSpecificFuelConsumptionUnits","CapacitanceUnits","Capacitance","CoefficientOfThermalExpansionUnits","DensityUnits","Density","DurationUnits","Duration","DynamicViscosityUnits","DynamicViscosity","ElectricAdmittanceUnits","ElectricChargeUnits","ElectricCharge","ElectricChargeDensityUnits","ElectricChargeDensity","ElectricConductanceUnits","ElectricConductivityUnits","ElectricCurrentUnits","ElectricCurrent","ElectricCurrentDensityUnits","ElectricCurrentGradientUnits","ElectricFieldUnits","ElectricField","ElectricInductanceUnits","ElectricPotentialUnits","ElectricPotential","ElectricPotentialAcUnits","ElectricPotentialAc","ElectricPotentialChangeRateUnits","ElectricPotentialChangeRate","ElectricPotentialDcUnits","ElectricPotentialDc","ElectricResistanceUnits","ElectricResistance","electricResistance","ElectricResistivityUnits","ElectricResistivity","ElectricSurfaceChargeDensityUnits","EnergyUnits","Energy","EntropyUnits","Entropy","ForceUnits","Force","ForceChangeRateUnits","ForceChangeRate","ForcePerLengthUnits","ForcePerLength","FrequencyUnits","Frequency","FuelEfficiencyUnits","HeatFluxUnits","HeatFlux","HeatTransferCoefficientUnits","IlluminanceUnits","InformationUnits","Information","IrradianceUnits","Irradiance","IrradiationUnits","Irradiation","KinematicViscosityUnits","LapseRateUnits","LapseRate","LengthUnits","Length","LevelUnits","Level","level","LinearDensityUnits","LinearDensity","LinearPowerDensityUnits","LinearPowerDensity","LuminosityUnits","Luminosity","LuminousFluxUnits","LuminousFlux","LuminousIntensityUnits","LuminousIntensity","MagneticFieldUnits","MagneticField","magneticField","MagneticFluxUnits","MagneticFlux","MagnetizationUnits","Magnetization","MassUnits","Mass","MassConcentrationUnits","MassConcentration","MassFlowUnits","MassFlow","MassFluxUnits","MassFlux","MassFractionUnits","MassFraction","MassMomentOfInertiaUnits","MassMomentOfInertia","MolarEnergyUnits","MolarEntropyUnits","MolarMassUnits","MolarMass","MolarityUnits","Molarity","PermeabilityUnits","Permeability","PermittivityUnits","Permittivity","PowerUnits","Power","PowerDensityUnits","PowerDensity","PowerRatioUnits","PowerRatio","powerRatio","PressureUnits","Pressure","PressureChangeRateUnits","PressureChangeRate","RatioUnits","Ratio","ratio","RatioChangeRateUnits","RatioChangeRate","ratioChangeRate","ReactiveEnergyUnits","ReactivePowerUnits","RelativeHumidityUnits","RelativeHumidity","RotationalAccelerationUnits","RotationalSpeedUnits","RotationalSpeed","RotationalStiffnessUnits","RotationalStiffness","RotationalStiffnessPerLengthUnits","RotationalStiffnessPerLength","ScalarUnits","Scalar","SolidAngleUnits","SolidAngle","SpecificEnergyUnits","SpecificEnergy","SpecificEntropyUnits","SpecificFuelConsumptionUnits","SpecificVolumeUnits","SpecificWeightUnits","SpecificWeight","SpeedUnits","Speed","StandardVolumeFlowUnits","TemperatureUnits","Temperature","TemperatureChangeRateUnits","TemperatureChangeRate","TemperatureDeltaUnits","ThermalConductivityUnits","ThermalConductivity","thermalConductivity","ThermalResistanceUnits","ThermalResistance","TorqueUnits","Torque","TorquePerLengthUnits","TorquePerLength","TurbidityUnits","Turbidity","VitaminAUnits","VitaminA","VolumeUnits","Volume","VolumeConcentrationUnits","VolumeConcentration","VolumeFlowUnits","VolumeFlow","VolumePerLengthUnits","VolumePerLength","WarpingMomentOfInertiaUnits","WarpingMomentOfInertia","warpingMomentOfInertia","arrayToObject","prop1","prop2","isNumber","includes","inclusive","inclusee","flipTransformSign","getValuesAsList","_ref2","openParansCount","closedParansCount","parensDepth","handleQuartetValues","splitValues","right","bottom","propertyValueConverters","textShadow","negative","borderColor","_ref3","_ref4","_value$split","radius1","radius2","topLeft","topRight","bottomRight","_ref5","valuesToConvert","isRtl","bgImgDirectionRegex","bgPosDirectionRegex","backgroundPositionValue","backgroundPosition","backgroundImage","_ref6","g1","group2","_ref7","backgroundPositionX","_ref8","_ref9","propertiesToConvert","transitionProperty","_ref10","_ref11","translate3dRegExp","rotateRegExp","objectPosition","borderWidth","boxShadow","webkitBoxShadow","mozBoxShadow","WebkitBoxShadow","MozBoxShadow","borderStyle","webkitTransform","mozTransform","WebkitTransform","MozTransform","transformOrigin","webkitTransformOrigin","mozTransformOrigin","WebkitTransformOrigin","MozTransformOrigin","webkitTransition","mozTransition","WebkitTransition","MozTransition","webkitTransitionProperty","mozTransitionProperty","WebkitTransitionProperty","MozTransitionProperty","propsToIgnore","originalKey","originalValue","_convertProperty","isNoFlip","isNullOrUndefined","isBoolean","isObject","isNum","isFunc","isFunction","importantlessValue","isImportant","valueConverter","getValueDoppelganger","convertProperty","useId","idOverride","defaultId","setDefaultId","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","appearing","nodeRef","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","onExit","onExiting","onExited","cancel","setNextCallback","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","_this$props","childProps","TransitionGroupContext","SPACINGS","GRID_SIZES","getOffset","div","Grid","_props$alignContent","alignContent","_props$alignItems","alignItems","_props$container","_props$direction","_props$item","justify","_props$justifyContent","justifyContent","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","_props$xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","StyledGrid","boxSizing","flexWrap","minWidth","flexDirection","generateGutter","accumulator","globalStyles","flexBasis","maxWidth","generateGrid","SIZE","CircularProgress","_props$disableShrink","disableShrink","_props$size","_props$thickness","thickness","_props$value","_props$variant","variant","circleStyle","rootStyle","rootProps","circumference","PI","determinate","indeterminate","static","svg","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","stroke","GlobalStyles","_jsx","SystemGlobalStyles","themeInput","omit","fields","styleFunctionSx","styleFunction","newStyleFunction","sx","compose","_options$cssProperty","getBorder","borders","flexbox","grid","maxHeight","sizing","styled","componentCreator","StyledComponent","ComponentProp","spread","FinalComponent","styledWithoutDefault","positions","Box","argsInput","shapeInput","Ripple","_props$pulsate","pulsate","rippleX","rippleY","rippleSize","inProp","_props$onExited","leaving","setLeaving","rippleClassName","ripple","rippleVisible","ripplePulsate","rippleStyles","childClassName","childLeaving","childPulsate","handleExited","timeoutId","TouchRipple","_props$center","center","centerProp","ripples","setRipples","nextKey","rippleCallback","ignoringMouseDown","startTimer","startTimerCommit","startCommit","oldRipples","_options$pulsate","_options$center","_options$fakeElement","fakeElement","rect","getBoundingClientRect","sqrt","sizeX","clientWidth","sizeY","clientHeight","TransitionGroup","overflow","pointerEvents","animationDuration","backgroundColor","ButtonBase","buttonRefProp","buttonRef","_props$centerRipple","centerRipple","_props$disabled","_props$disableRipple","disableRipple","_props$disableTouchRi","disableTouchRipple","_props$focusRipple","focusRipple","focusVisibleClassName","onBlur","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","_props$tabIndex","tabIndex","TouchRippleProps","_props$type","rippleRef","focusVisible","setFocusVisible","_useIsFocusVisible","focusVisibleRef","useRippleHandler","rippleAction","eventCallback","skipRippleAction","handleMouseDown","handleDragLeave","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","isNonNativeButton","keydownRef","handleKeyUp","buttonProps","handleUserRef","handleOwnRef","handleRef","_React$useState2","mountedState","setMountedState","enableTouchRipple","WebkitTapHighlightColor","outline","border","verticalAlign","textDecoration","colorAdjust","mergeClasses","baseClasses","newClasses","nextClasses","useTranslation","i18nFromProps","i18nFromContext","defaultNSFromContext","reportNamespaces","notReadyT","retNotReady","ready","i18nOptions","addUsedNamespaces","getT","getFixedT","nsMode","_useState","_useState2","setT","boundReset","isInitial","getScale","entering","entered","Grow","_props$disableStrictM","disableStrictModeCompat","_props$timeout","_props$TransitionComp","TransitionComponent","timer","autoTimeout","enableStrictModeCompat","unstable_strictMode","foreignRef","normalizedTransitionCallback","nodeOrAppearing","isAppearing","handleEntering","handleEnter","_getTransitionProps","handleEntered","handleExiting","handleExit","_getTransitionProps2","nodeOrNext","maybeNext","visibility","muiSupportAuto","Paper","_props$square","square","_props$elevation","elevation","outlined","rounded","elevations","shadow","IconButton","_props$edge","edge","_props$disableFocusRi","disableFocusRipple","edgeStart","edgeEnd","label","textAlign","marginLeft","marginRight","colorInherit","sizeSmall","useMediaQuery","queryInput","supportMatchMedia","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","setMatch","queryList","updateMatch","ThemeProvider","localTheme","outerTheme","mergeOuterLocalTheme","nested","WebkitFontSmoothing","MozOsxFontSmoothing","_props$children","_GlobalStyles","WebkitTextSizeAdjust","_theme$components","_theme$components$Mui","defaultStyles","themeOverrides","MuiCssBaseline","styleOverrides","CssBaseline","inProps","_jsxs","colorSpace","fnValuesNs","fnRuleNs","functionPlugin","fnValues","fnRule","atPrefix","GlobalContainerRule","GlobalPrefixedRule","separatorRegExp","addScope","jssGlobal","handleNestedGlobalContainerRule","handlePrefixedGlobalRule","parentRegExp","jssNested","getReplaceRef","replaceParentRefs","nestedProp","parentProp","parentSelectors","nestedSelectors","getOptions","prevOptions","nestingLevel","isNested","isNestedConditional","uppercasePattern","msPattern","toHyphenLower","hyphenateStyleName","hName","convertCase","converted","hyphenate","camelCase","hyphenatedProp","px","ms","percent","addCamelCasedVersion","regExp","units","inset","motion","perspective","gap","iterate","innerProp","_innerProp","defaultUnit","camelCasedOptions","js","vendor","isTouch","jsCssMap","Moz","Webkit","appearence","noPrefill","supportedProperty","toUpper","camelize","pascalize","mask","longhand","textOrientation","writingMode","breakPropsOld","inlineLogicalOld","newProp","unprefixed","prefixed","pascalized","scrollSnap","overscrollBehavior","propMap","flex2012","propMap$1","propKeys","prefixCss","propertyDetectors","computed","getComputedStyle","key$1","el$1","cache$1","transitionProperties","transPropsRegExp","prefixTransitionCallback","prefixedValue","supportedValue","jssVendorPrefixer","prefixStyle","changeProp","supportedProp","changeValue","supportedValue$1","atRule","jssPropsSort","prop0","jssPreset","functions","vendorPrefixer","propsSort","multiKeyStore","key1","key2","subCache","indexCounter","increment","getStylesCreator","themingEnabled","stylesWithOverrides","noopTheme","getClasses","disableGeneration","cacheClasses","lastProp","lastJSS","generate","stylesCreator","sheetManager","sheetsManager","staticSheet","dynamicStyles","serverGenerateClassName","generateClassName","sheetsRegistry","sheetsCache","dynamicSheet","useSynchronousEffect","currentKey","classNamePrefixOption","_options$defaultTheme","stylesOptions2","StylesContext","shouldUpdate","mapEventPropToEvent","eventProp","ClickAwayListener","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","activatedRef","syntheticEventRef","handleClickAway","insideReactTree","clickedRootScrollbar","insideDOM","composedPath","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","mappedMouseEvent","SnackbarContent","_props$role","emphasis","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","onClose","onMouseEnter","open","resumeHideDuration","_props$transitionDura","TransitionProps","timerAutoHide","exited","setExited","handleClose","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","top1","bottom1","top3","bottom3","right3","left3","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","InnerThemeProvider","StyledEngineThemeContext","MuiThemeProvider","pseudoClasses","injectFirstNode","_options$disableGloba","disableGlobal","_options$productionPr","productionPrefix","_options$seed","seed","seedPrefix","getNextCounterId","styleSheet","createGenerateClassName","StylesProvider","_props$injectFirst","injectFirst","_props$disableGenerat","localOptions","outerOptions","createComment","_prop$split","_prop$split2","getChildMapping","mapFn","mapper","getProp","getNextChildMapping","prevChildMapping","nextChildMapping","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","contextValue","firstRender","mounted","currentChildMapping","childFactory"],"mappings":"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AAG,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAIA,EAAa,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAA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","file":"static/js/7.0cdfdbfd.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3)\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} value\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string} type\n * @param {string[]} props\n * @param {object[]} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {string} type\n */\nexport function copy (value, root, type) {\n\treturn node(value, root.root, root.parent, type, root.props, root.children, 0)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\treturn delimiter(type === 34 || type === 39 ? type : character)\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, trim, from, sizeof, strlen, substr, append, replace} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// \" ' [ (\n\t\t\tcase 34: case 39: case 91: case 40:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, length, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {string}\n */\nexport function prefix (value, length) {\n\tswitch (hash(value, length)) {\n\t\t// color-adjust\n\t\tcase 5103:\n\t\t\treturn WEBKIT + 'print-' + value + value\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// flex, flex-direction\n\t\tcase 6828: case 4268:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (charat(value, length + 4) !== 45)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t// (f)ill-available, (f)it-content\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// (s)ticky?\n\t\t\tif (charat(value, length + 1) !== 115)\n\t\t\t\tbreak\n\t\t// display: (flex|inline-flex)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n\t\t\t\t// stic(k)y\n\t\t\t\tcase 107:\n\t\t\t\t\treturn replace(value, ':', ':' + WEBKIT) + value\n\t\t\t\t// (inline-)?fl(e)x\n\t\t\t\tcase 101:\n\t\t\t\t\treturn replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t}\n\t\t\tbreak\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t}\n\n\t\t\treturn WEBKIT + value + MS + value + value\n\t}\n\n\treturn value\n}\n","import {IMPORT, COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (!element.return)\n\t\tswitch (element.type) {\n\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\tbreak\n\t\t\tcase KEYFRAMES:\n\t\t\t\treturn serialize([copy(replace(element.value, '@', '@' + WEBKIT), element, '')], callback)\n\t\t\tcase RULESET:\n\t\t\t\tif (element.length)\n\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\treturn serialize([copy(replace(value, /:(read-\\w+)/, ':' + MOZ + '$1'), element, '')], callback)\n\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1'), element, ''),\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, ':' + MOZ + '$1'), element, ''),\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, MS + 'input-$1'), element, '')\n\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t})\n\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nexport default createNamedContext;\n","import createNamedContext from \"./createNameContext\";\n\nconst historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nexport default historyContext;\n","import createNamedContext from \"./createNameContext\";\n\nconst context = /*#__PURE__*/ createNamedContext(\"Router\");\nexport default context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\nimport HistoryContext from \"./HistoryContext.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for putting history on context.\n */\nclass Router extends React.Component {\n  static computeRootMatch(pathname) {\n    return { path: \"/\", url: \"/\", params: {}, isExact: pathname === \"/\" };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: props.history.location\n    };\n\n    // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n    this._isMounted = false;\n    this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      this.unlisten = props.history.listen(location => {\n        if (this._isMounted) {\n          this.setState({ location });\n        } else {\n          this._pendingLocation = location;\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({ location: this._pendingLocation });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) {\n      this.unlisten();\n      this._isMounted = false;\n      this._pendingLocation = null;\n    }\n  }\n\n  render() {\n    return (\n      <RouterContext.Provider\n        value={{\n          history: this.props.history,\n          location: this.state.location,\n          match: Router.computeRootMatch(this.state.location.pathname),\n          staticContext: this.props.staticContext\n        }}\n      >\n        <HistoryContext.Provider\n          children={this.props.children || null}\n          value={this.props.history}\n        />\n      </RouterContext.Provider>\n    );\n  }\n}\n\nif (__DEV__) {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      prevProps.history === this.props.history,\n      \"You cannot change <Router history>\"\n    );\n  };\n}\n\nexport default Router;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMemoryHistory as createHistory } from \"history\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\nclass MemoryRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<MemoryRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\"\n    );\n  };\n}\n\nexport default MemoryRouter;\n","import React from \"react\";\n\nclass Lifecycle extends React.Component {\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Lifecycle;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, { pretty: true });\n}\n\nexport default generatePath;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\nimport generatePath from \"./generatePath.js\";\n\n/**\n * The public API for navigating programmatically with a component.\n */\nfunction Redirect({ computedMatch, to, push = false }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Redirect> outside a <Router>\");\n\n        const { history, staticContext } = context;\n\n        const method = push ? history.push : history.replace;\n        const location = createLocation(\n          computedMatch\n            ? typeof to === \"string\"\n              ? generatePath(to, computedMatch.params)\n              : {\n                  ...to,\n                  pathname: generatePath(to.pathname, computedMatch.params)\n                }\n            : to\n        );\n\n        // When rendering in a static context,\n        // set the new location immediately.\n        if (staticContext) {\n          method(location);\n          return null;\n        }\n\n        return (\n          <Lifecycle\n            onMount={() => {\n              method(location);\n            }}\n            onUpdate={(self, prevProps) => {\n              const prevLocation = createLocation(prevProps.to);\n              if (\n                !locationsAreEqual(prevLocation, {\n                  ...location,\n                  key: prevLocation.key\n                })\n              ) {\n                method(location);\n              }\n            }}\n            to={to}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nexport default Redirect;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path, options) {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname, options = {}) {\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = { path: options };\n  }\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  const paths = [].concat(path);\n\n  return paths.reduce((matched, path) => {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    const { regexp, keys } = compilePath(path, {\n      end: exact,\n      strict,\n      sensitive\n    });\n    const match = regexp.exec(pathname);\n\n    if (!match) return null;\n\n    const [url, ...values] = match;\n    const isExact = pathname === url;\n\n    if (exact && !isExact) return null;\n\n    return {\n      path, // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n      isExact, // whether or not we matched exactly\n      params: keys.reduce((memo, key, index) => {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nexport default matchPath;\n","import React from \"react\";\nimport { isValidElementType } from \"react-is\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  const value = children(props);\n\n  warning(\n    value !== undefined,\n    \"You returned `undefined` from the `children` function of \" +\n      `<Route${path ? ` path=\"${path}\"` : \"\"}>, but you ` +\n      \"should have returned a React element or `null`\"\n  );\n\n  return value || null;\n}\n\n/**\n * The public API for matching a single path and rendering.\n */\nclass Route extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Route> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n          const match = this.props.computedMatch\n            ? this.props.computedMatch // <Switch> already computed the match for us\n            : this.props.path\n            ? matchPath(location.pathname, this.props)\n            : context.match;\n\n          const props = { ...context, location, match };\n\n          let { children, component, render } = this.props;\n\n          // Preact uses an empty array as children by\n          // default, so use null if that's the case.\n          if (Array.isArray(children) && isEmptyChildren(children)) {\n            children = null;\n          }\n\n          return (\n            <RouterContext.Provider value={props}>\n              {props.match\n                ? children\n                  ? typeof children === \"function\"\n                    ? __DEV__\n                      ? evalChildrenDev(children, props, this.props.path)\n                      : children(props)\n                    : children\n                  : component\n                  ? React.createElement(component, props)\n                  : render\n                  ? render(props)\n                  : null\n                : typeof children === \"function\"\n                ? __DEV__\n                  ? evalChildrenDev(children, props, this.props.path)\n                  : children(props)\n                : null}\n            </RouterContext.Provider>\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: (props, propName) => {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\n          `Invalid prop 'component' supplied to 'Route': the prop is not a valid React component`\n        );\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function() {\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.component\n      ),\n      \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\"\n    );\n\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.render\n      ),\n      \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\"\n    );\n\n    warning(\n      !(this.props.component && this.props.render),\n      \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\"\n    );\n  };\n\n  Route.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Route;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, createPath } from \"history\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n\n  return {\n    ...location,\n    pathname: addLeadingSlash(basename) + location.pathname\n  };\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n\n  const base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return {\n    ...location,\n    pathname: location.pathname.substr(base.length)\n  };\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return () => {\n    invariant(false, \"You cannot %s with <StaticRouter>\", methodName);\n  };\n}\n\nfunction noop() {}\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass StaticRouter extends React.Component {\n  navigateTo(location, action) {\n    const { basename = \"\", context = {} } = this.props;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  }\n\n  handlePush = location => this.navigateTo(location, \"PUSH\");\n  handleReplace = location => this.navigateTo(location, \"REPLACE\");\n  handleListen = () => noop;\n  handleBlock = () => noop;\n\n  render() {\n    const { basename = \"\", context = {}, location = \"/\", ...rest } = this.props;\n\n    const history = {\n      createHref: path => addLeadingSlash(basename + createURL(path)),\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return <Router {...rest} history={history} staticContext={context} />;\n  }\n}\n\nif (__DEV__) {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<StaticRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { StaticRouter as Router }`.\"\n    );\n  };\n}\n\nexport default StaticRouter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\nclass Switch extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Switch> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n\n          let element, match;\n\n          // We use React.Children.forEach instead of React.Children.toArray().find()\n          // here because toArray adds keys to all child elements and we do not want\n          // to trigger an unmount/remount for two <Route>s that render the same\n          // component at different URLs.\n          React.Children.forEach(this.props.children, child => {\n            if (match == null && React.isValidElement(child)) {\n              element = child;\n\n              const path = child.props.path || child.props.from;\n\n              match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : context.match;\n            }\n          });\n\n          return match\n            ? React.cloneElement(element, { location, computedMatch: match })\n            : null;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Switch;\n","import React from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport HistoryContext from \"./HistoryContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nconst useContext = React.useContext;\n\nexport function useHistory() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useHistory()\"\n    );\n  }\n\n  return useContext(HistoryContext);\n}\n\nexport function useLocation() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useLocation()\"\n    );\n  }\n\n  return useContext(RouterContext).location;\n}\n\nexport function useParams() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useParams()\"\n    );\n  }\n\n  const match = useContext(RouterContext).match;\n  return match ? match.params : {};\n}\n\nexport function useRouteMatch(path) {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useRouteMatch()\"\n    );\n  }\n\n  const location = useLocation();\n  const match = useContext(RouterContext).match;\n  return path ? matchPath(location.pathname, path) : match;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nvar withStyles = function withStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (Component) {\n    var defaultTheme = options.defaultTheme,\n        _options$withTheme = options.withTheme,\n        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,\n        name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (Component === undefined) {\n        throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n      }\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      defaultTheme: defaultTheme,\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n      var classesProp = props.classes,\n          innerRef = props.innerRef,\n          other = _objectWithoutProperties(props, [\"classes\", \"innerRef\"]); // The wrapper receives only user supplied props, which could be a subset of\n      // the actual props Component might receive due to merging with defaultProps.\n      // So copying it here would give us the same result in the wrapper as well.\n\n\n      var classes = useStyles(_extends({}, Component.defaultProps, props));\n      var theme;\n      var more = other;\n\n      if (typeof name === 'string' || withTheme) {\n        // name and withTheme are invariant in the outer scope\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        theme = useTheme() || defaultTheme;\n\n        if (name) {\n          more = getThemeProps({\n            theme: theme,\n            name: name,\n            props: other\n          });\n        } // Provide the theme to the wrapped component.\n        // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n        if (withTheme && !more.theme) {\n          more.theme = theme;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Component, _extends({\n        ref: innerRef || ref,\n        classes: classes\n      }, more));\n    });\n    process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: PropTypes.object,\n\n      /**\n       * Use that prop to pass a ref to the decorated component.\n       * @deprecated\n       */\n      innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), function (props) {\n        if (props.innerRef == null) {\n          return null;\n        }\n\n        return null; // return new Error(\n        //   'Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' +\n        //     'Refs are now automatically forwarded to the inner component.',\n        // );\n      })\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithStyles.displayName = \"WithStyles(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithStyles, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n      WithStyles.useStyles = useStyles;\n    }\n\n    return WithStyles;\n  };\n};\n\nexport default withStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { withStyles as withStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction withStyles(stylesOrCreator, options) {\n  return withStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default withStyles;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport isInBrowser from 'is-in-browser';\nimport warning from 'tiny-warning';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\nvar plainObjectConstrurctor = {}.constructor;\nfunction cloneStyle(style) {\n  if (style == null || typeof style !== 'object') return style;\n  if (Array.isArray(style)) return style.map(cloneStyle);\n  if (style.constructor !== plainObjectConstrurctor) return style;\n  var newStyle = {};\n\n  for (var name in style) {\n    newStyle[name] = cloneStyle(style[name]);\n  }\n\n  return newStyle;\n}\n\n/**\n * Create a rule instance.\n */\n\nfunction createRule(name, decl, options) {\n  if (name === void 0) {\n    name = 'unnamed';\n  }\n\n  var jss = options.jss;\n  var declCopy = cloneStyle(decl);\n  var rule = jss.plugins.onCreateRule(name, declCopy, options);\n  if (rule) return rule; // It is an at-rule and it has no instance.\n\n  if (name[0] === '@') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Unknown rule \" + name) : void 0;\n  }\n\n  return null;\n}\n\nvar join = function join(value, by) {\n  var result = '';\n\n  for (var i = 0; i < value.length; i++) {\n    // Remove !important from the value, it will be readded later.\n    if (value[i] === '!important') break;\n    if (result) result += by;\n    result += value[i];\n  }\n\n  return result;\n};\n\n/**\n * Converts array values to string.\n *\n * `margin: [['5px', '10px']]` > `margin: 5px 10px;`\n * `border: ['1px', '2px']` > `border: 1px, 2px;`\n * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`\n * `color: ['red', !important]` > `color: red !important;`\n */\nvar toCssValue = function toCssValue(value, ignoreImportant) {\n  if (ignoreImportant === void 0) {\n    ignoreImportant = false;\n  }\n\n  if (!Array.isArray(value)) return value;\n  var cssValue = ''; // Support space separated values via `[['5px', '10px']]`.\n\n  if (Array.isArray(value[0])) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '!important') break;\n      if (cssValue) cssValue += ', ';\n      cssValue += join(value[i], ' ');\n    }\n  } else cssValue = join(value, ', '); // Add !important, because it was ignored.\n\n\n  if (!ignoreImportant && value[value.length - 1] === '!important') {\n    cssValue += ' !important';\n  }\n\n  return cssValue;\n};\n\n/**\n * Indent a string.\n * http://jsperf.com/array-join-vs-for\n */\nfunction indentStr(str, indent) {\n  var result = '';\n\n  for (var index = 0; index < indent; index++) {\n    result += '  ';\n  }\n\n  return result + str;\n}\n/**\n * Converts a Rule to CSS string.\n */\n\n\nfunction toCss(selector, style, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var result = '';\n  if (!style) return result;\n  var _options = options,\n      _options$indent = _options.indent,\n      indent = _options$indent === void 0 ? 0 : _options$indent;\n  var fallbacks = style.fallbacks;\n  if (selector) indent++; // Apply fallbacks first.\n\n  if (fallbacks) {\n    // Array syntax {fallbacks: [{prop: value}]}\n    if (Array.isArray(fallbacks)) {\n      for (var index = 0; index < fallbacks.length; index++) {\n        var fallback = fallbacks[index];\n\n        for (var prop in fallback) {\n          var value = fallback[prop];\n\n          if (value != null) {\n            if (result) result += '\\n';\n            result += indentStr(prop + \": \" + toCssValue(value) + \";\", indent);\n          }\n        }\n      }\n    } else {\n      // Object syntax {fallbacks: {prop: value}}\n      for (var _prop in fallbacks) {\n        var _value = fallbacks[_prop];\n\n        if (_value != null) {\n          if (result) result += '\\n';\n          result += indentStr(_prop + \": \" + toCssValue(_value) + \";\", indent);\n        }\n      }\n    }\n  }\n\n  for (var _prop2 in style) {\n    var _value2 = style[_prop2];\n\n    if (_value2 != null && _prop2 !== 'fallbacks') {\n      if (result) result += '\\n';\n      result += indentStr(_prop2 + \": \" + toCssValue(_value2) + \";\", indent);\n    }\n  } // Allow empty style in this case, because properties will be added dynamically.\n\n\n  if (!result && !options.allowEmpty) return result; // When rule is being stringified before selector was defined.\n\n  if (!selector) return result;\n  indent--;\n  if (result) result = \"\\n\" + result + \"\\n\";\n  return indentStr(selector + \" {\" + result, indent) + indentStr('}', indent);\n}\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\nvar nativeEscape = typeof CSS !== 'undefined' && CSS.escape;\nvar escape = (function (str) {\n  return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\\\$1');\n});\n\nvar BaseStyleRule =\n/*#__PURE__*/\nfunction () {\n  function BaseStyleRule(key, style, options) {\n    this.type = 'style';\n    this.key = void 0;\n    this.isProcessed = false;\n    this.style = void 0;\n    this.renderer = void 0;\n    this.renderable = void 0;\n    this.options = void 0;\n    var sheet = options.sheet,\n        Renderer = options.Renderer;\n    this.key = key;\n    this.options = options;\n    this.style = style;\n    if (sheet) this.renderer = sheet.renderer;else if (Renderer) this.renderer = new Renderer();\n  }\n  /**\n   * Get or set a style property.\n   */\n\n\n  var _proto = BaseStyleRule.prototype;\n\n  _proto.prop = function prop(name, value, options) {\n    // It's a getter.\n    if (value === undefined) return this.style[name]; // Don't do anything if the value has not changed.\n\n    var force = options ? options.force : false;\n    if (!force && this.style[name] === value) return this;\n    var newValue = value;\n\n    if (!options || options.process !== false) {\n      newValue = this.options.jss.plugins.onChangeValue(value, name, this);\n    }\n\n    var isEmpty = newValue == null || newValue === false;\n    var isDefined = name in this.style; // Value is empty and wasn't defined before.\n\n    if (isEmpty && !isDefined && !force) return this; // We are going to remove this value.\n\n    var remove = isEmpty && isDefined;\n    if (remove) delete this.style[name];else this.style[name] = newValue; // Renderable is defined if StyleSheet option `link` is true.\n\n    if (this.renderable && this.renderer) {\n      if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, newValue);\n      return this;\n    }\n\n    var sheet = this.options.sheet;\n\n    if (sheet && sheet.attached) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Rule is not linked. Missing sheet option \"link: true\".') : void 0;\n    }\n\n    return this;\n  };\n\n  return BaseStyleRule;\n}();\nvar StyleRule =\n/*#__PURE__*/\nfunction (_BaseStyleRule) {\n  _inheritsLoose(StyleRule, _BaseStyleRule);\n\n  function StyleRule(key, style, options) {\n    var _this;\n\n    _this = _BaseStyleRule.call(this, key, style, options) || this;\n    _this.selectorText = void 0;\n    _this.id = void 0;\n    _this.renderable = void 0;\n    var selector = options.selector,\n        scoped = options.scoped,\n        sheet = options.sheet,\n        generateId = options.generateId;\n\n    if (selector) {\n      _this.selectorText = selector;\n    } else if (scoped !== false) {\n      _this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet);\n      _this.selectorText = \".\" + escape(_this.id);\n    }\n\n    return _this;\n  }\n  /**\n   * Set selector string.\n   * Attention: use this with caution. Most browsers didn't implement\n   * selectorText setter, so this may result in rerendering of entire Style Sheet.\n   */\n\n\n  var _proto2 = StyleRule.prototype;\n\n  /**\n   * Apply rule to an element inline.\n   */\n  _proto2.applyTo = function applyTo(renderable) {\n    var renderer = this.renderer;\n\n    if (renderer) {\n      var json = this.toJSON();\n\n      for (var prop in json) {\n        renderer.setProperty(renderable, prop, json[prop]);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Returns JSON representation of the rule.\n   * Fallbacks are not supported.\n   * Useful for inline styles.\n   */\n  ;\n\n  _proto2.toJSON = function toJSON() {\n    var json = {};\n\n    for (var prop in this.style) {\n      var value = this.style[prop];\n      if (typeof value !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = toCssValue(value);\n    }\n\n    return json;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto2.toString = function toString(options) {\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n    var opts = link ? _extends({}, options, {\n      allowEmpty: true\n    }) : options;\n    return toCss(this.selectorText, this.style, opts);\n  };\n\n  _createClass(StyleRule, [{\n    key: \"selector\",\n    set: function set(selector) {\n      if (selector === this.selectorText) return;\n      this.selectorText = selector;\n      var renderer = this.renderer,\n          renderable = this.renderable;\n      if (!renderable || !renderer) return;\n      var hasChanged = renderer.setSelector(renderable, selector); // If selector setter is not implemented, rerender the rule.\n\n      if (!hasChanged) {\n        renderer.replaceRule(renderable, this);\n      }\n    }\n    /**\n     * Get selector string.\n     */\n    ,\n    get: function get() {\n      return this.selectorText;\n    }\n  }]);\n\n  return StyleRule;\n}(BaseStyleRule);\nvar pluginStyleRule = {\n  onCreateRule: function onCreateRule(name, style, options) {\n    if (name[0] === '@' || options.parent && options.parent.type === 'keyframes') {\n      return null;\n    }\n\n    return new StyleRule(name, style, options);\n  }\n};\n\nvar defaultToStringOptions = {\n  indent: 1,\n  children: true\n};\nvar atRegExp = /@([\\w-]+)/;\n/**\n * Conditional rule for @media, @supports\n */\n\nvar ConditionalRule =\n/*#__PURE__*/\nfunction () {\n  function ConditionalRule(key, styles, options) {\n    this.type = 'conditional';\n    this.at = void 0;\n    this.key = void 0;\n    this.query = void 0;\n    this.rules = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    var atMatch = key.match(atRegExp);\n    this.at = atMatch ? atMatch[1] : 'unknown'; // Key might contain a unique suffix in case the `name` passed by user was duplicate.\n\n    this.query = options.name || \"@\" + this.at;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var name in styles) {\n      this.rules.add(name, styles[name]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = ConditionalRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (!rule) return null;\n    this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    if (options === void 0) {\n      options = defaultToStringOptions;\n    }\n\n    if (options.indent == null) options.indent = defaultToStringOptions.indent;\n    if (options.children == null) options.children = defaultToStringOptions.children;\n\n    if (options.children === false) {\n      return this.query + \" {}\";\n    }\n\n    var children = this.rules.toString(options);\n    return children ? this.query + \" {\\n\" + children + \"\\n}\" : '';\n  };\n\n  return ConditionalRule;\n}();\nvar keyRegExp = /@media|@supports\\s+/;\nvar pluginConditionalRule = {\n  onCreateRule: function onCreateRule(key, styles, options) {\n    return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;\n  }\n};\n\nvar defaultToStringOptions$1 = {\n  indent: 1,\n  children: true\n};\nvar nameRegExp = /@keyframes\\s+([\\w-]+)/;\n/**\n * Rule for @keyframes\n */\n\nvar KeyframesRule =\n/*#__PURE__*/\nfunction () {\n  function KeyframesRule(key, frames, options) {\n    this.type = 'keyframes';\n    this.at = '@keyframes';\n    this.key = void 0;\n    this.name = void 0;\n    this.id = void 0;\n    this.rules = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    var nameMatch = key.match(nameRegExp);\n\n    if (nameMatch && nameMatch[1]) {\n      this.name = nameMatch[1];\n    } else {\n      this.name = 'noname';\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Bad keyframes name \" + key) : void 0;\n    }\n\n    this.key = this.type + \"-\" + this.name;\n    this.options = options;\n    var scoped = options.scoped,\n        sheet = options.sheet,\n        generateId = options.generateId;\n    this.id = scoped === false ? this.name : escape(generateId(this, sheet));\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var name in frames) {\n      this.rules.add(name, frames[name], _extends({}, options, {\n        parent: this\n      }));\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = KeyframesRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (options === void 0) {\n      options = defaultToStringOptions$1;\n    }\n\n    if (options.indent == null) options.indent = defaultToStringOptions$1.indent;\n    if (options.children == null) options.children = defaultToStringOptions$1.children;\n\n    if (options.children === false) {\n      return this.at + \" \" + this.id + \" {}\";\n    }\n\n    var children = this.rules.toString(options);\n    if (children) children = \"\\n\" + children + \"\\n\";\n    return this.at + \" \" + this.id + \" {\" + children + \"}\";\n  };\n\n  return KeyframesRule;\n}();\nvar keyRegExp$1 = /@keyframes\\s+/;\nvar refRegExp = /\\$([\\w-]+)/g;\n\nvar findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) {\n  if (typeof val === 'string') {\n    return val.replace(refRegExp, function (match, name) {\n      if (name in keyframes) {\n        return keyframes[name];\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced keyframes rule \\\"\" + name + \"\\\" is not defined.\") : void 0;\n      return match;\n    });\n  }\n\n  return val;\n};\n/**\n * Replace the reference for a animation name.\n */\n\n\nvar replaceRef = function replaceRef(style, prop, keyframes) {\n  var value = style[prop];\n  var refKeyframe = findReferencedKeyframe(value, keyframes);\n\n  if (refKeyframe !== value) {\n    style[prop] = refKeyframe;\n  }\n};\n\nvar plugin = {\n  onCreateRule: function onCreateRule(key, frames, options) {\n    return typeof key === 'string' && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;\n  },\n  // Animation name ref replacer.\n  onProcessStyle: function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return style;\n    if ('animation-name' in style) replaceRef(style, 'animation-name', sheet.keyframes);\n    if ('animation' in style) replaceRef(style, 'animation', sheet.keyframes);\n    return style;\n  },\n  onChangeValue: function onChangeValue(val, prop, rule) {\n    var sheet = rule.options.sheet;\n\n    if (!sheet) {\n      return val;\n    }\n\n    switch (prop) {\n      case 'animation':\n        return findReferencedKeyframe(val, sheet.keyframes);\n\n      case 'animation-name':\n        return findReferencedKeyframe(val, sheet.keyframes);\n\n      default:\n        return val;\n    }\n  }\n};\n\nvar KeyframeRule =\n/*#__PURE__*/\nfunction (_BaseStyleRule) {\n  _inheritsLoose(KeyframeRule, _BaseStyleRule);\n\n  function KeyframeRule() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _BaseStyleRule.call.apply(_BaseStyleRule, [this].concat(args)) || this;\n    _this.renderable = void 0;\n    return _this;\n  }\n\n  var _proto = KeyframeRule.prototype;\n\n  /**\n   * Generates a CSS string.\n   */\n  _proto.toString = function toString(options) {\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n    var opts = link ? _extends({}, options, {\n      allowEmpty: true\n    }) : options;\n    return toCss(this.key, this.style, opts);\n  };\n\n  return KeyframeRule;\n}(BaseStyleRule);\nvar pluginKeyframeRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    if (options.parent && options.parent.type === 'keyframes') {\n      return new KeyframeRule(key, style, options);\n    }\n\n    return null;\n  }\n};\n\nvar FontFaceRule =\n/*#__PURE__*/\nfunction () {\n  function FontFaceRule(key, style, options) {\n    this.type = 'font-face';\n    this.at = '@font-face';\n    this.key = void 0;\n    this.style = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.style = style;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = FontFaceRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (Array.isArray(this.style)) {\n      var str = '';\n\n      for (var index = 0; index < this.style.length; index++) {\n        str += toCss(this.at, this.style[index]);\n        if (this.style[index + 1]) str += '\\n';\n      }\n\n      return str;\n    }\n\n    return toCss(this.at, this.style, options);\n  };\n\n  return FontFaceRule;\n}();\nvar keyRegExp$2 = /@font-face/;\nvar pluginFontFaceRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    return keyRegExp$2.test(key) ? new FontFaceRule(key, style, options) : null;\n  }\n};\n\nvar ViewportRule =\n/*#__PURE__*/\nfunction () {\n  function ViewportRule(key, style, options) {\n    this.type = 'viewport';\n    this.at = '@viewport';\n    this.key = void 0;\n    this.style = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.style = style;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = ViewportRule.prototype;\n\n  _proto.toString = function toString(options) {\n    return toCss(this.key, this.style, options);\n  };\n\n  return ViewportRule;\n}();\nvar pluginViewportRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key, style, options) : null;\n  }\n};\n\nvar SimpleRule =\n/*#__PURE__*/\nfunction () {\n  function SimpleRule(key, value, options) {\n    this.type = 'simple';\n    this.key = void 0;\n    this.value = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.value = value;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  var _proto = SimpleRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (Array.isArray(this.value)) {\n      var str = '';\n\n      for (var index = 0; index < this.value.length; index++) {\n        str += this.key + \" \" + this.value[index] + \";\";\n        if (this.value[index + 1]) str += '\\n';\n      }\n\n      return str;\n    }\n\n    return this.key + \" \" + this.value + \";\";\n  };\n\n  return SimpleRule;\n}();\nvar keysMap = {\n  '@charset': true,\n  '@import': true,\n  '@namespace': true\n};\nvar pluginSimpleRule = {\n  onCreateRule: function onCreateRule(key, value, options) {\n    return key in keysMap ? new SimpleRule(key, value, options) : null;\n  }\n};\n\nvar plugins = [pluginStyleRule, pluginConditionalRule, plugin, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];\n\nvar defaultUpdateOptions = {\n  process: true\n};\nvar forceUpdateOptions = {\n  force: true,\n  process: true\n  /**\n   * Contains rules objects and allows adding/removing etc.\n   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.\n   */\n\n};\n\nvar RuleList =\n/*#__PURE__*/\nfunction () {\n  // Rules registry for access by .get() method.\n  // It contains the same rule registered by name and by selector.\n  // Original styles object.\n  // Used to ensure correct rules order.\n  function RuleList(options) {\n    this.map = {};\n    this.raw = {};\n    this.index = [];\n    this.counter = 0;\n    this.options = void 0;\n    this.classes = void 0;\n    this.keyframes = void 0;\n    this.options = options;\n    this.classes = options.classes;\n    this.keyframes = options.keyframes;\n  }\n  /**\n   * Create and register rule.\n   *\n   * Will not render after Style Sheet was rendered the first time.\n   */\n\n\n  var _proto = RuleList.prototype;\n\n  _proto.add = function add(name, decl, ruleOptions) {\n    var _this$options = this.options,\n        parent = _this$options.parent,\n        sheet = _this$options.sheet,\n        jss = _this$options.jss,\n        Renderer = _this$options.Renderer,\n        generateId = _this$options.generateId,\n        scoped = _this$options.scoped;\n\n    var options = _extends({\n      classes: this.classes,\n      parent: parent,\n      sheet: sheet,\n      jss: jss,\n      Renderer: Renderer,\n      generateId: generateId,\n      scoped: scoped,\n      name: name,\n      keyframes: this.keyframes,\n      selector: undefined\n    }, ruleOptions); // When user uses .createStyleSheet(), duplicate names are not possible, but\n    // `sheet.addRule()` opens the door for any duplicate rule name. When this happens\n    // we need to make the key unique within this RuleList instance scope.\n\n\n    var key = name;\n\n    if (name in this.raw) {\n      key = name + \"-d\" + this.counter++;\n    } // We need to save the original decl before creating the rule\n    // because cache plugin needs to use it as a key to return a cached rule.\n\n\n    this.raw[key] = decl;\n\n    if (key in this.classes) {\n      // E.g. rules inside of @media container\n      options.selector = \".\" + escape(this.classes[key]);\n    }\n\n    var rule = createRule(key, decl, options);\n    if (!rule) return null;\n    this.register(rule);\n    var index = options.index === undefined ? this.index.length : options.index;\n    this.index.splice(index, 0, rule);\n    return rule;\n  }\n  /**\n   * Get a rule.\n   */\n  ;\n\n  _proto.get = function get(name) {\n    return this.map[name];\n  }\n  /**\n   * Delete a rule.\n   */\n  ;\n\n  _proto.remove = function remove(rule) {\n    this.unregister(rule);\n    delete this.raw[rule.key];\n    this.index.splice(this.index.indexOf(rule), 1);\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.index.indexOf(rule);\n  }\n  /**\n   * Run `onProcessRule()` plugins on every rule.\n   */\n  ;\n\n  _proto.process = function process() {\n    var plugins = this.options.jss.plugins; // We need to clone array because if we modify the index somewhere else during a loop\n    // we end up with very hard-to-track-down side effects.\n\n    this.index.slice(0).forEach(plugins.onProcessRule, plugins);\n  }\n  /**\n   * Register a rule in `.map`, `.classes` and `.keyframes` maps.\n   */\n  ;\n\n  _proto.register = function register(rule) {\n    this.map[rule.key] = rule;\n\n    if (rule instanceof StyleRule) {\n      this.map[rule.selector] = rule;\n      if (rule.id) this.classes[rule.key] = rule.id;\n    } else if (rule instanceof KeyframesRule && this.keyframes) {\n      this.keyframes[rule.name] = rule.id;\n    }\n  }\n  /**\n   * Unregister a rule.\n   */\n  ;\n\n  _proto.unregister = function unregister(rule) {\n    delete this.map[rule.key];\n\n    if (rule instanceof StyleRule) {\n      delete this.map[rule.selector];\n      delete this.classes[rule.key];\n    } else if (rule instanceof KeyframesRule) {\n      delete this.keyframes[rule.name];\n    }\n  }\n  /**\n   * Update the function values with a new data.\n   */\n  ;\n\n  _proto.update = function update() {\n    var name;\n    var data;\n    var options;\n\n    if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n      name = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe[invalid-tuple-index]\n\n      data = arguments.length <= 1 ? undefined : arguments[1]; // $FlowFixMe[invalid-tuple-index]\n\n      options = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      data = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe[invalid-tuple-index]\n\n      options = arguments.length <= 1 ? undefined : arguments[1];\n      name = null;\n    }\n\n    if (name) {\n      this.updateOne(this.map[name], data, options);\n    } else {\n      for (var index = 0; index < this.index.length; index++) {\n        this.updateOne(this.index[index], data, options);\n      }\n    }\n  }\n  /**\n   * Execute plugins, update rule props.\n   */\n  ;\n\n  _proto.updateOne = function updateOne(rule, data, options) {\n    if (options === void 0) {\n      options = defaultUpdateOptions;\n    }\n\n    var _this$options2 = this.options,\n        plugins = _this$options2.jss.plugins,\n        sheet = _this$options2.sheet; // It is a rules container like for e.g. ConditionalRule.\n\n    if (rule.rules instanceof RuleList) {\n      rule.rules.update(data, options);\n      return;\n    }\n\n    var styleRule = rule;\n    var style = styleRule.style;\n    plugins.onUpdate(data, rule, sheet, options); // We rely on a new `style` ref in case it was mutated during onUpdate hook.\n\n    if (options.process && style && style !== styleRule.style) {\n      // We need to run the plugins in case new `style` relies on syntax plugins.\n      plugins.onProcessStyle(styleRule.style, styleRule, sheet); // Update and add props.\n\n      for (var prop in styleRule.style) {\n        var nextValue = styleRule.style[prop];\n        var prevValue = style[prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.\n        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.\n\n        if (nextValue !== prevValue) {\n          styleRule.prop(prop, nextValue, forceUpdateOptions);\n        }\n      } // Remove props.\n\n\n      for (var _prop in style) {\n        var _nextValue = styleRule.style[_prop];\n        var _prevValue = style[_prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.\n        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.\n\n        if (_nextValue == null && _nextValue !== _prevValue) {\n          styleRule.prop(_prop, null, forceUpdateOptions);\n        }\n      }\n    }\n  }\n  /**\n   * Convert rules to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    var str = '';\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n\n    for (var index = 0; index < this.index.length; index++) {\n      var rule = this.index[index];\n      var css = rule.toString(options); // No need to render an empty rule.\n\n      if (!css && !link) continue;\n      if (str) str += '\\n';\n      str += css;\n    }\n\n    return str;\n  };\n\n  return RuleList;\n}();\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(styles, options) {\n    this.options = void 0;\n    this.deployed = void 0;\n    this.attached = void 0;\n    this.rules = void 0;\n    this.renderer = void 0;\n    this.classes = void 0;\n    this.keyframes = void 0;\n    this.queue = void 0;\n    this.attached = false;\n    this.deployed = false;\n    this.classes = {};\n    this.keyframes = {};\n    this.options = _extends({}, options, {\n      sheet: this,\n      parent: this,\n      classes: this.classes,\n      keyframes: this.keyframes\n    });\n\n    if (options.Renderer) {\n      this.renderer = new options.Renderer(this);\n    }\n\n    this.rules = new RuleList(this.options);\n\n    for (var name in styles) {\n      this.rules.add(name, styles[name]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Attach renderable to the render tree.\n   */\n\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.attach = function attach() {\n    if (this.attached) return this;\n    if (this.renderer) this.renderer.attach();\n    this.attached = true; // Order is important, because we can't use insertRule API if style element is not attached.\n\n    if (!this.deployed) this.deploy();\n    return this;\n  }\n  /**\n   * Remove renderable from render tree.\n   */\n  ;\n\n  _proto.detach = function detach() {\n    if (!this.attached) return this;\n    if (this.renderer) this.renderer.detach();\n    this.attached = false;\n    return this;\n  }\n  /**\n   * Add a rule to the current stylesheet.\n   * Will insert a rule also after the stylesheet has been rendered first time.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, decl, options) {\n    var queue = this.queue; // Plugins can create rules.\n    // In order to preserve the right order, we need to queue all `.addRule` calls,\n    // which happen after the first `rules.add()` call.\n\n    if (this.attached && !queue) this.queue = [];\n    var rule = this.rules.add(name, decl, options);\n    if (!rule) return null;\n    this.options.jss.plugins.onProcessRule(rule);\n\n    if (this.attached) {\n      if (!this.deployed) return rule; // Don't insert rule directly if there is no stringified version yet.\n      // It will be inserted all together when .attach is called.\n\n      if (queue) queue.push(rule);else {\n        this.insertRule(rule);\n\n        if (this.queue) {\n          this.queue.forEach(this.insertRule, this);\n          this.queue = undefined;\n        }\n      }\n      return rule;\n    } // We can't add rules to a detached style node.\n    // We will redeploy the sheet once user will attach it.\n\n\n    this.deployed = false;\n    return rule;\n  }\n  /**\n   * Insert rule into the StyleSheet\n   */\n  ;\n\n  _proto.insertRule = function insertRule(rule) {\n    if (this.renderer) {\n      this.renderer.insertRule(rule);\n    }\n  }\n  /**\n   * Create and add rules.\n   * Will render also after Style Sheet was rendered the first time.\n   */\n  ;\n\n  _proto.addRules = function addRules(styles, options) {\n    var added = [];\n\n    for (var name in styles) {\n      var rule = this.addRule(name, styles[name], options);\n      if (rule) added.push(rule);\n    }\n\n    return added;\n  }\n  /**\n   * Get a rule by name.\n   */\n  ;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Delete a rule by name.\n   * Returns `true`: if rule has been deleted from the DOM.\n   */\n  ;\n\n  _proto.deleteRule = function deleteRule(name) {\n    var rule = typeof name === 'object' ? name : this.rules.get(name);\n\n    if (!rule || // Style sheet was created without link: true and attached, in this case we\n    // won't be able to remove the CSS rule from the DOM.\n    this.attached && !rule.renderable) {\n      return false;\n    }\n\n    this.rules.remove(rule);\n\n    if (this.attached && rule.renderable && this.renderer) {\n      return this.renderer.deleteRule(rule.renderable);\n    }\n\n    return true;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Deploy pure CSS string to a renderable.\n   */\n  ;\n\n  _proto.deploy = function deploy() {\n    if (this.renderer) this.renderer.deploy();\n    this.deployed = true;\n    return this;\n  }\n  /**\n   * Update the function values with a new data.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this$rules;\n\n    (_this$rules = this.rules).update.apply(_this$rules, arguments);\n\n    return this;\n  }\n  /**\n   * Updates a single rule.\n   */\n  ;\n\n  _proto.updateOne = function updateOne(rule, data, options) {\n    this.rules.updateOne(rule, data, options);\n    return this;\n  }\n  /**\n   * Convert rules to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    return this.rules.toString(options);\n  };\n\n  return StyleSheet;\n}();\n\nvar PluginsRegistry =\n/*#__PURE__*/\nfunction () {\n  function PluginsRegistry() {\n    this.plugins = {\n      internal: [],\n      external: []\n    };\n    this.registry = void 0;\n  }\n\n  var _proto = PluginsRegistry.prototype;\n\n  /**\n   * Call `onCreateRule` hooks and return an object if returned by a hook.\n   */\n  _proto.onCreateRule = function onCreateRule(name, decl, options) {\n    for (var i = 0; i < this.registry.onCreateRule.length; i++) {\n      var rule = this.registry.onCreateRule[i](name, decl, options);\n      if (rule) return rule;\n    }\n\n    return null;\n  }\n  /**\n   * Call `onProcessRule` hooks.\n   */\n  ;\n\n  _proto.onProcessRule = function onProcessRule(rule) {\n    if (rule.isProcessed) return;\n    var sheet = rule.options.sheet;\n\n    for (var i = 0; i < this.registry.onProcessRule.length; i++) {\n      this.registry.onProcessRule[i](rule, sheet);\n    }\n\n    if (rule.style) this.onProcessStyle(rule.style, rule, sheet);\n    rule.isProcessed = true;\n  }\n  /**\n   * Call `onProcessStyle` hooks.\n   */\n  ;\n\n  _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) {\n    for (var i = 0; i < this.registry.onProcessStyle.length; i++) {\n      // $FlowFixMe[prop-missing]\n      rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);\n    }\n  }\n  /**\n   * Call `onProcessSheet` hooks.\n   */\n  ;\n\n  _proto.onProcessSheet = function onProcessSheet(sheet) {\n    for (var i = 0; i < this.registry.onProcessSheet.length; i++) {\n      this.registry.onProcessSheet[i](sheet);\n    }\n  }\n  /**\n   * Call `onUpdate` hooks.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(data, rule, sheet, options) {\n    for (var i = 0; i < this.registry.onUpdate.length; i++) {\n      this.registry.onUpdate[i](data, rule, sheet, options);\n    }\n  }\n  /**\n   * Call `onChangeValue` hooks.\n   */\n  ;\n\n  _proto.onChangeValue = function onChangeValue(value, prop, rule) {\n    var processedValue = value;\n\n    for (var i = 0; i < this.registry.onChangeValue.length; i++) {\n      processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);\n    }\n\n    return processedValue;\n  }\n  /**\n   * Register a plugin.\n   */\n  ;\n\n  _proto.use = function use(newPlugin, options) {\n    if (options === void 0) {\n      options = {\n        queue: 'external'\n      };\n    }\n\n    var plugins = this.plugins[options.queue]; // Avoids applying same plugin twice, at least based on ref.\n\n    if (plugins.indexOf(newPlugin) !== -1) {\n      return;\n    }\n\n    plugins.push(newPlugin);\n    this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function (registry, plugin) {\n      for (var name in plugin) {\n        if (name in registry) {\n          registry[name].push(plugin[name]);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Unknown hook \\\"\" + name + \"\\\".\") : void 0;\n        }\n      }\n\n      return registry;\n    }, {\n      onCreateRule: [],\n      onProcessRule: [],\n      onProcessStyle: [],\n      onProcessSheet: [],\n      onChangeValue: [],\n      onUpdate: []\n    });\n  };\n\n  return PluginsRegistry;\n}();\n\n/**\n * Sheets registry to access them all at one place.\n */\nvar SheetsRegistry =\n/*#__PURE__*/\nfunction () {\n  function SheetsRegistry() {\n    this.registry = [];\n  }\n\n  var _proto = SheetsRegistry.prototype;\n\n  /**\n   * Register a Style Sheet.\n   */\n  _proto.add = function add(sheet) {\n    var registry = this.registry;\n    var index = sheet.options.index;\n    if (registry.indexOf(sheet) !== -1) return;\n\n    if (registry.length === 0 || index >= this.index) {\n      registry.push(sheet);\n      return;\n    } // Find a position.\n\n\n    for (var i = 0; i < registry.length; i++) {\n      if (registry[i].options.index > index) {\n        registry.splice(i, 0, sheet);\n        return;\n      }\n    }\n  }\n  /**\n   * Reset the registry.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.registry = [];\n  }\n  /**\n   * Remove a Style Sheet.\n   */\n  ;\n\n  _proto.remove = function remove(sheet) {\n    var index = this.registry.indexOf(sheet);\n    this.registry.splice(index, 1);\n  }\n  /**\n   * Convert all attached sheets to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        attached = _ref.attached,\n        options = _objectWithoutPropertiesLoose(_ref, [\"attached\"]);\n\n    var css = '';\n\n    for (var i = 0; i < this.registry.length; i++) {\n      var sheet = this.registry[i];\n\n      if (attached != null && sheet.attached !== attached) {\n        continue;\n      }\n\n      if (css) css += '\\n';\n      css += sheet.toString(options);\n    }\n\n    return css;\n  };\n\n  _createClass(SheetsRegistry, [{\n    key: \"index\",\n\n    /**\n     * Current highest index number.\n     */\n    get: function get() {\n      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;\n    }\n  }]);\n\n  return SheetsRegistry;\n}();\n\n/**\n * This is a global sheets registry. Only DomRenderer will add sheets to it.\n * On the server one should use an own SheetsRegistry instance and add the\n * sheets to it, because you need to make sure to create a new registry for\n * each request in order to not leak sheets across requests.\n */\n\nvar registry = new SheetsRegistry();\n\n/* eslint-disable */\n\n/**\n * Now that `globalThis` is available on most platforms\n * (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis#browser_compatibility)\n * we check for `globalThis` first. `globalThis` is necessary for jss\n * to run in Agoric's secure version of JavaScript (SES). Under SES,\n * `globalThis` exists, but `window`, `self`, and `Function('return\n * this')()` are all undefined for security reasons.\n *\n * https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n */\nvar globalThis$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' && window.Math === Math ? window : typeof self !== 'undefined' && self.Math === Math ? self : Function('return this')();\n\nvar ns = '2f1acc6c3a606b082e5eef5e54414ffb';\nif (globalThis$1[ns] == null) globalThis$1[ns] = 0; // Bundle may contain multiple JSS versions at the same time. In order to identify\n// the current version with just one short number and use it for classes generation\n// we use a counter. Also it is more accurate, because user can manually reevaluate\n// the module.\n\nvar moduleId = globalThis$1[ns]++;\n\nvar maxRules = 1e10;\n\n/**\n * Returns a function which generates unique class names based on counters.\n * When new generator function is created, rule counter is reseted.\n * We need to reset the rule counter for SSR for each request.\n */\nvar createGenerateId = function createGenerateId(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ruleCounter = 0;\n\n  var generateId = function generateId(rule, sheet) {\n    ruleCounter += 1;\n\n    if (ruleCounter > maxRules) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] You might have a memory leak. Rule counter is at \" + ruleCounter + \".\") : void 0;\n    }\n\n    var jssId = '';\n    var prefix = '';\n\n    if (sheet) {\n      if (sheet.options.classNamePrefix) {\n        prefix = sheet.options.classNamePrefix;\n      }\n\n      if (sheet.options.jss.id != null) {\n        jssId = String(sheet.options.jss.id);\n      }\n    }\n\n    if (options.minify) {\n      // Using \"c\" because a number can't be the first char in a class name.\n      return \"\" + (prefix || 'c') + moduleId + jssId + ruleCounter;\n    }\n\n    return prefix + rule.key + \"-\" + moduleId + (jssId ? \"-\" + jssId : '') + \"-\" + ruleCounter;\n  };\n\n  return generateId;\n};\n\n/**\n * Cache the value from the first time a function is called.\n */\nvar memoize = function memoize(fn) {\n  var value;\n  return function () {\n    if (!value) value = fn();\n    return value;\n  };\n};\n\n/**\n * Get a style property value.\n */\nvar getPropertyValue = function getPropertyValue(cssRule, prop) {\n  try {\n    // Support CSSTOM.\n    if (cssRule.attributeStyleMap) {\n      return cssRule.attributeStyleMap.get(prop);\n    }\n\n    return cssRule.style.getPropertyValue(prop);\n  } catch (err) {\n    // IE may throw if property is unknown.\n    return '';\n  }\n};\n\n/**\n * Set a style property.\n */\nvar setProperty = function setProperty(cssRule, prop, value) {\n  try {\n    var cssValue = value;\n\n    if (Array.isArray(value)) {\n      cssValue = toCssValue(value, true);\n\n      if (value[value.length - 1] === '!important') {\n        cssRule.style.setProperty(prop, cssValue, 'important');\n        return true;\n      }\n    } // Support CSSTOM.\n\n\n    if (cssRule.attributeStyleMap) {\n      cssRule.attributeStyleMap.set(prop, cssValue);\n    } else {\n      cssRule.style.setProperty(prop, cssValue);\n    }\n  } catch (err) {\n    // IE may throw if property is unknown.\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Remove a style property.\n */\nvar removeProperty = function removeProperty(cssRule, prop) {\n  try {\n    // Support CSSTOM.\n    if (cssRule.attributeStyleMap) {\n      cssRule.attributeStyleMap.delete(prop);\n    } else {\n      cssRule.style.removeProperty(prop);\n    }\n  } catch (err) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] DOMException \\\"\" + err.message + \"\\\" was thrown. Tried to remove property \\\"\" + prop + \"\\\".\") : void 0;\n  }\n};\n\n/**\n * Set the selector.\n */\nvar setSelector = function setSelector(cssRule, selectorText) {\n  cssRule.selectorText = selectorText; // Return false if setter was not successful.\n  // Currently works in chrome only.\n\n  return cssRule.selectorText === selectorText;\n};\n/**\n * Gets the `head` element upon the first call and caches it.\n * We assume it can't be null.\n */\n\n\nvar getHead = memoize(function () {\n  return document.querySelector('head');\n});\n/**\n * Find attached sheet with an index higher than the passed one.\n */\n\nfunction findHigherSheet(registry, options) {\n  for (var i = 0; i < registry.length; i++) {\n    var sheet = registry[i];\n\n    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {\n      return sheet;\n    }\n  }\n\n  return null;\n}\n/**\n * Find attached sheet with the highest index.\n */\n\n\nfunction findHighestSheet(registry, options) {\n  for (var i = registry.length - 1; i >= 0; i--) {\n    var sheet = registry[i];\n\n    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {\n      return sheet;\n    }\n  }\n\n  return null;\n}\n/**\n * Find a comment with \"jss\" inside.\n */\n\n\nfunction findCommentNode(text) {\n  var head = getHead();\n\n  for (var i = 0; i < head.childNodes.length; i++) {\n    var node = head.childNodes[i];\n\n    if (node.nodeType === 8 && node.nodeValue.trim() === text) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Find a node before which we can insert the sheet.\n */\nfunction findPrevNode(options) {\n  var registry$1 = registry.registry;\n\n  if (registry$1.length > 0) {\n    // Try to insert before the next higher sheet.\n    var sheet = findHigherSheet(registry$1, options);\n\n    if (sheet && sheet.renderer) {\n      return {\n        parent: sheet.renderer.element.parentNode,\n        node: sheet.renderer.element\n      };\n    } // Otherwise insert after the last attached.\n\n\n    sheet = findHighestSheet(registry$1, options);\n\n    if (sheet && sheet.renderer) {\n      return {\n        parent: sheet.renderer.element.parentNode,\n        node: sheet.renderer.element.nextSibling\n      };\n    }\n  } // Try to find a comment placeholder if registry is empty.\n\n\n  var insertionPoint = options.insertionPoint;\n\n  if (insertionPoint && typeof insertionPoint === 'string') {\n    var comment = findCommentNode(insertionPoint);\n\n    if (comment) {\n      return {\n        parent: comment.parentNode,\n        node: comment.nextSibling\n      };\n    } // If user specifies an insertion point and it can't be found in the document -\n    // bad specificity issues may appear.\n\n\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Insertion point \\\"\" + insertionPoint + \"\\\" not found.\") : void 0;\n  }\n\n  return false;\n}\n/**\n * Insert style element into the DOM.\n */\n\n\nfunction insertStyle(style, options) {\n  var insertionPoint = options.insertionPoint;\n  var nextNode = findPrevNode(options);\n\n  if (nextNode !== false && nextNode.parent) {\n    nextNode.parent.insertBefore(style, nextNode.node);\n    return;\n  } // Works with iframes and any node types.\n\n\n  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {\n    // https://stackoverflow.com/questions/41328728/force-casting-in-flow\n    var insertionPointElement = insertionPoint;\n    var parentNode = insertionPointElement.parentNode;\n    if (parentNode) parentNode.insertBefore(style, insertionPointElement.nextSibling);else process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Insertion point is not in the DOM.') : void 0;\n    return;\n  }\n\n  getHead().appendChild(style);\n}\n/**\n * Read jss nonce setting from the page if the user has set it.\n */\n\n\nvar getNonce = memoize(function () {\n  var node = document.querySelector('meta[property=\"csp-nonce\"]');\n  return node ? node.getAttribute('content') : null;\n});\n\nvar _insertRule = function insertRule(container, rule, index) {\n  try {\n    if ('insertRule' in container) {\n      var c = container;\n      c.insertRule(rule, index);\n    } // Keyframes rule.\n    else if ('appendRule' in container) {\n        var _c = container;\n\n        _c.appendRule(rule);\n      }\n  } catch (err) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] \" + err.message) : void 0;\n    return false;\n  }\n\n  return container.cssRules[index];\n};\n\nvar getValidRuleInsertionIndex = function getValidRuleInsertionIndex(container, index) {\n  var maxIndex = container.cssRules.length; // In case previous insertion fails, passed index might be wrong\n\n  if (index === undefined || index > maxIndex) {\n    // eslint-disable-next-line no-param-reassign\n    return maxIndex;\n  }\n\n  return index;\n};\n\nvar createStyle = function createStyle() {\n  var el = document.createElement('style'); // Without it, IE will have a broken source order specificity if we\n  // insert rules after we insert the style tag.\n  // It seems to kick-off the source order specificity algorithm.\n\n  el.textContent = '\\n';\n  return el;\n};\n\nvar DomRenderer =\n/*#__PURE__*/\nfunction () {\n  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696\n  // Will be empty if link: true option is not set, because\n  // it is only for use together with insertRule API.\n  function DomRenderer(sheet) {\n    this.getPropertyValue = getPropertyValue;\n    this.setProperty = setProperty;\n    this.removeProperty = removeProperty;\n    this.setSelector = setSelector;\n    this.element = void 0;\n    this.sheet = void 0;\n    this.hasInsertedRules = false;\n    this.cssRules = [];\n    // There is no sheet when the renderer is used from a standalone StyleRule.\n    if (sheet) registry.add(sheet);\n    this.sheet = sheet;\n\n    var _ref = this.sheet ? this.sheet.options : {},\n        media = _ref.media,\n        meta = _ref.meta,\n        element = _ref.element;\n\n    this.element = element || createStyle();\n    this.element.setAttribute('data-jss', '');\n    if (media) this.element.setAttribute('media', media);\n    if (meta) this.element.setAttribute('data-meta', meta);\n    var nonce = getNonce();\n    if (nonce) this.element.setAttribute('nonce', nonce);\n  }\n  /**\n   * Insert style element into render tree.\n   */\n\n\n  var _proto = DomRenderer.prototype;\n\n  _proto.attach = function attach() {\n    // In the case the element node is external and it is already in the DOM.\n    if (this.element.parentNode || !this.sheet) return;\n    insertStyle(this.element, this.sheet.options); // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`\n    // most browsers create a new CSSStyleSheet, except of all IEs.\n\n    var deployed = Boolean(this.sheet && this.sheet.deployed);\n\n    if (this.hasInsertedRules && deployed) {\n      this.hasInsertedRules = false;\n      this.deploy();\n    }\n  }\n  /**\n   * Remove style element from render tree.\n   */\n  ;\n\n  _proto.detach = function detach() {\n    if (!this.sheet) return;\n    var parentNode = this.element.parentNode;\n    if (parentNode) parentNode.removeChild(this.element); // In the most browsers, rules inserted using insertRule() API will be lost when style element is removed.\n    // Though IE will keep them and we need a consistent behavior.\n\n    if (this.sheet.options.link) {\n      this.cssRules = [];\n      this.element.textContent = '\\n';\n    }\n  }\n  /**\n   * Inject CSS string into element.\n   */\n  ;\n\n  _proto.deploy = function deploy() {\n    var sheet = this.sheet;\n    if (!sheet) return;\n\n    if (sheet.options.link) {\n      this.insertRules(sheet.rules);\n      return;\n    }\n\n    this.element.textContent = \"\\n\" + sheet.toString() + \"\\n\";\n  }\n  /**\n   * Insert RuleList into an element.\n   */\n  ;\n\n  _proto.insertRules = function insertRules(rules, nativeParent) {\n    for (var i = 0; i < rules.index.length; i++) {\n      this.insertRule(rules.index[i], i, nativeParent);\n    }\n  }\n  /**\n   * Insert a rule into element.\n   */\n  ;\n\n  _proto.insertRule = function insertRule(rule, index, nativeParent) {\n    if (nativeParent === void 0) {\n      nativeParent = this.element.sheet;\n    }\n\n    if (rule.rules) {\n      var parent = rule;\n      var latestNativeParent = nativeParent;\n\n      if (rule.type === 'conditional' || rule.type === 'keyframes') {\n        var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index); // We need to render the container without children first.\n\n\n        latestNativeParent = _insertRule(nativeParent, parent.toString({\n          children: false\n        }), _insertionIndex);\n\n        if (latestNativeParent === false) {\n          return false;\n        }\n\n        this.refCssRule(rule, _insertionIndex, latestNativeParent);\n      }\n\n      this.insertRules(parent.rules, latestNativeParent);\n      return latestNativeParent;\n    }\n\n    var ruleStr = rule.toString();\n    if (!ruleStr) return false;\n    var insertionIndex = getValidRuleInsertionIndex(nativeParent, index);\n\n    var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);\n\n    if (nativeRule === false) {\n      return false;\n    }\n\n    this.hasInsertedRules = true;\n    this.refCssRule(rule, insertionIndex, nativeRule);\n    return nativeRule;\n  };\n\n  _proto.refCssRule = function refCssRule(rule, index, cssRule) {\n    rule.renderable = cssRule; // We only want to reference the top level rules, deleteRule API doesn't support removing nested rules\n    // like rules inside media queries or keyframes\n\n    if (rule.options.parent instanceof StyleSheet) {\n      this.cssRules[index] = cssRule;\n    }\n  }\n  /**\n   * Delete a rule.\n   */\n  ;\n\n  _proto.deleteRule = function deleteRule(cssRule) {\n    var sheet = this.element.sheet;\n    var index = this.indexOf(cssRule);\n    if (index === -1) return false;\n    sheet.deleteRule(index);\n    this.cssRules.splice(index, 1);\n    return true;\n  }\n  /**\n   * Get index of a CSS Rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(cssRule) {\n    return this.cssRules.indexOf(cssRule);\n  }\n  /**\n   * Generate a new CSS rule and replace the existing one.\n   *\n   * Only used for some old browsers because they can't set a selector.\n   */\n  ;\n\n  _proto.replaceRule = function replaceRule(cssRule, rule) {\n    var index = this.indexOf(cssRule);\n    if (index === -1) return false;\n    this.element.sheet.deleteRule(index);\n    this.cssRules.splice(index, 1);\n    return this.insertRule(rule, index);\n  }\n  /**\n   * Get all rules elements.\n   */\n  ;\n\n  _proto.getRules = function getRules() {\n    return this.element.sheet.cssRules;\n  };\n\n  return DomRenderer;\n}();\n\nvar instanceCounter = 0;\n\nvar Jss =\n/*#__PURE__*/\nfunction () {\n  function Jss(options) {\n    this.id = instanceCounter++;\n    this.version = \"10.7.1\";\n    this.plugins = new PluginsRegistry();\n    this.options = {\n      id: {\n        minify: false\n      },\n      createGenerateId: createGenerateId,\n      Renderer: isInBrowser ? DomRenderer : null,\n      plugins: []\n    };\n    this.generateId = createGenerateId({\n      minify: false\n    });\n\n    for (var i = 0; i < plugins.length; i++) {\n      this.plugins.use(plugins[i], {\n        queue: 'internal'\n      });\n    }\n\n    this.setup(options);\n  }\n  /**\n   * Prepares various options, applies plugins.\n   * Should not be used twice on the same instance, because there is no plugins\n   * deduplication logic.\n   */\n\n\n  var _proto = Jss.prototype;\n\n  _proto.setup = function setup(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.createGenerateId) {\n      this.options.createGenerateId = options.createGenerateId;\n    }\n\n    if (options.id) {\n      this.options.id = _extends({}, this.options.id, options.id);\n    }\n\n    if (options.createGenerateId || options.id) {\n      this.generateId = this.options.createGenerateId(this.options.id);\n    }\n\n    if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;\n\n    if ('Renderer' in options) {\n      this.options.Renderer = options.Renderer;\n    } // eslint-disable-next-line prefer-spread\n\n\n    if (options.plugins) this.use.apply(this, options.plugins);\n    return this;\n  }\n  /**\n   * Create a Style Sheet.\n   */\n  ;\n\n  _proto.createStyleSheet = function createStyleSheet(styles, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        index = _options.index;\n\n    if (typeof index !== 'number') {\n      index = registry.index === 0 ? 0 : registry.index + 1;\n    }\n\n    var sheet = new StyleSheet(styles, _extends({}, options, {\n      jss: this,\n      generateId: options.generateId || this.generateId,\n      insertionPoint: this.options.insertionPoint,\n      Renderer: this.options.Renderer,\n      index: index\n    }));\n    this.plugins.onProcessSheet(sheet);\n    return sheet;\n  }\n  /**\n   * Detach the Style Sheet and remove it from the registry.\n   */\n  ;\n\n  _proto.removeStyleSheet = function removeStyleSheet(sheet) {\n    sheet.detach();\n    registry.remove(sheet);\n    return this;\n  }\n  /**\n   * Create a rule without a Style Sheet.\n   * [Deprecated] will be removed in the next major version.\n   */\n  ;\n\n  _proto.createRule = function createRule$1(name, style, options) {\n    if (style === void 0) {\n      style = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    // Enable rule without name for inline styles.\n    if (typeof name === 'object') {\n      // $FlowFixMe[incompatible-call]\n      return this.createRule(undefined, name, style);\n    } // $FlowFixMe[incompatible-type]\n\n\n    var ruleOptions = _extends({}, options, {\n      name: name,\n      jss: this,\n      Renderer: this.options.Renderer\n    });\n\n    if (!ruleOptions.generateId) ruleOptions.generateId = this.generateId;\n    if (!ruleOptions.classes) ruleOptions.classes = {};\n    if (!ruleOptions.keyframes) ruleOptions.keyframes = {};\n\n    var rule = createRule(name, style, ruleOptions);\n\n    if (rule) this.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Register plugin. Passed function will be invoked with a rule instance.\n   */\n  ;\n\n  _proto.use = function use() {\n    var _this = this;\n\n    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n      plugins[_key] = arguments[_key];\n    }\n\n    plugins.forEach(function (plugin) {\n      _this.plugins.use(plugin);\n    });\n    return this;\n  };\n\n  return Jss;\n}();\n\n/**\n * Extracts a styles object with only props that contain function values.\n */\nfunction getDynamicStyles(styles) {\n  var to = null;\n\n  for (var key in styles) {\n    var value = styles[key];\n    var type = typeof value;\n\n    if (type === 'function') {\n      if (!to) to = {};\n      to[key] = value;\n    } else if (type === 'object' && value !== null && !Array.isArray(value)) {\n      var extracted = getDynamicStyles(value);\n\n      if (extracted) {\n        if (!to) to = {};\n        to[key] = extracted;\n      }\n    }\n  }\n\n  return to;\n}\n\n/**\n * SheetsManager is like a WeakMap which is designed to count StyleSheet\n * instances and attach/detach automatically.\n */\nvar SheetsManager =\n/*#__PURE__*/\nfunction () {\n  function SheetsManager() {\n    this.length = 0;\n    this.sheets = new WeakMap();\n  }\n\n  var _proto = SheetsManager.prototype;\n\n  _proto.get = function get(key) {\n    var entry = this.sheets.get(key);\n    return entry && entry.sheet;\n  };\n\n  _proto.add = function add(key, sheet) {\n    if (this.sheets.has(key)) return;\n    this.length++;\n    this.sheets.set(key, {\n      sheet: sheet,\n      refs: 0\n    });\n  };\n\n  _proto.manage = function manage(key) {\n    var entry = this.sheets.get(key);\n\n    if (entry) {\n      if (entry.refs === 0) {\n        entry.sheet.attach();\n      }\n\n      entry.refs++;\n      return entry.sheet;\n    }\n\n    warning(false, \"[JSS] SheetsManager: can't find sheet to manage\");\n    return undefined;\n  };\n\n  _proto.unmanage = function unmanage(key) {\n    var entry = this.sheets.get(key);\n\n    if (entry) {\n      if (entry.refs > 0) {\n        entry.refs--;\n        if (entry.refs === 0) entry.sheet.detach();\n      }\n    } else {\n      warning(false, \"SheetsManager: can't find sheet to unmanage\");\n    }\n  };\n\n  _createClass(SheetsManager, [{\n    key: \"size\",\n    get: function get() {\n      return this.length;\n    }\n  }]);\n\n  return SheetsManager;\n}();\n\n/**\n * A better abstraction over CSS.\n *\n * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present\n * @website https://github.com/cssinjs/jss\n * @license MIT\n */\n\n/**\n * Export a constant indicating if this browser has CSSTOM support.\n * https://developers.google.com/web/updates/2018/03/cssom\n */\nvar hasCSSTOMSupport = typeof CSS === 'object' && CSS != null && 'number' in CSS;\n/**\n * Creates a new instance of Jss.\n */\n\nvar create = function create(options) {\n  return new Jss(options);\n};\n/**\n * A global Jss instance.\n */\n\nvar jss = create();\n\nexport default jss;\nexport { RuleList, SheetsManager, SheetsRegistry, create, createGenerateId, createRule, getDynamicStyles, hasCSSTOMSupport, registry as sheets, toCssValue };\n","import { createContext, useContext, forwardRef, createElement } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../isolated-hoist-non-react-statics-do-not-use-this-in-your-code/dist/emotion-react-isolated-hoist-non-react-statics-do-not-use-this-in-your-code.browser.esm.js';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = /* #__PURE__ */createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = useContext(ThemeContext);\n    return /*#__PURE__*/createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z0-9$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z0-9$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n\n  return ele;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwnProperty as h, useTheme as u, withEmotionCache as w };\n","import * as React from 'react';\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n *\n * @param {function} fn\n */\n\nexport default function useEventCallback(fn) {\n  var ref = React.useRef(fn);\n  useEnhancedEffect(function () {\n    ref.current = fn;\n  });\n  return React.useCallback(function () {\n    return (0, ref.current).apply(void 0, arguments);\n  }, []);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n","function valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(\"Material-UI: The value provided \".concat(value, \" is out of range [\").concat(min, \", \").concat(max, \"].\"));\n    }\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nexport function hexToRgb(color) {\n  color = color.substr(1);\n  var re = new RegExp(\".{1,\".concat(color.length >= 6 ? 2 : 1, \"}\"), 'g');\n  var colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (n) {\n      return n + n;\n    });\n  }\n\n  return colors ? \"rgb\".concat(colors.length === 4 ? 'a' : '', \"(\").concat(colors.map(function (n, index) {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', '), \")\") : '';\n}\n\nfunction intToHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\n\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  var _decomposeColor = decomposeColor(color),\n      values = _decomposeColor.values;\n\n  return \"#\".concat(values.map(function (n) {\n    return intToHex(n);\n  }).join(''));\n}\n/**\n * Converts a color from hsl format to rgb format.\n *\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  var _color = color,\n      values = _color.values;\n  var h = values[0];\n  var s = values[1] / 100;\n  var l = values[2] / 100;\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  var type = 'rgb';\n  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type: type,\n    values: rgb\n  });\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported `\".concat(color, \"` color.\\nWe support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().\") : _formatMuiErrorMessage(3, color));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\nexport function recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = \"\".concat(values[1], \"%\");\n    values[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(values.join(', '), \")\");\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\nexport function getContrastRatio(foreground, background) {\n  var lumA = getLuminance(foreground);\n  var lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(function (val) {\n    val /= 255; // normalized\n\n    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function emphasize(color) {\n  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nvar warnedOnce = false;\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n *\n * @deprecated\n * Use `import { alpha } from '@material-ui/core/styles'` instead.\n */\n\nexport function fade(color, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: The `fade` color utility was renamed to `alpha` to better describe its functionality.', '', \"You should use `import { alpha } from '@material-ui/core/styles'`\"].join('\\n'));\n    }\n  }\n\n  return alpha(color, value);\n}\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha value is overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0-1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  color.values[3] = value;\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import { deepmerge } from '@material-ui/utils';\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };\n","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexport var isBrowser = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" && (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === 'object' && document.nodeType === 9;\n\nexport default isBrowser;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import createTheme from './createTheme';\nvar defaultTheme = createTheme();\nexport default defaultTheme;","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","export function warn() {\n  if (console && console.warn) {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'string') args[0] = \"react-i18next:: \".concat(args[0]);\n\n    (_console = console).warn.apply(_console, args);\n  }\n}\nvar alreadyWarned = {};\nexport function warnOnce() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (typeof args[0] === 'string' && alreadyWarned[args[0]]) return;\n  if (typeof args[0] === 'string') alreadyWarned[args[0]] = new Date();\n  warn.apply(void 0, args);\n}\nexport function loadNamespaces(i18n, ns, cb) {\n  i18n.loadNamespaces(ns, function () {\n    if (i18n.isInitialized) {\n      cb();\n    } else {\n      var initialized = function initialized() {\n        setTimeout(function () {\n          i18n.off('initialized', initialized);\n        }, 0);\n        cb();\n      };\n\n      i18n.on('initialized', initialized);\n    }\n  });\n}\nexport function hasLoadedNamespace(ns, i18n) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce('i18n.languages were undefined or empty', i18n.languages);\n    return true;\n  }\n\n  var lng = i18n.languages[0];\n  var fallbackLng = i18n.options ? i18n.options.fallbackLng : false;\n  var lastLng = i18n.languages[i18n.languages.length - 1];\n  if (lng.toLowerCase() === 'cimode') return true;\n\n  var loadNotPending = function loadNotPending(l, n) {\n    var loadState = i18n.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n    return loadState === -1 || loadState === 2;\n  };\n\n  if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) return false;\n  if (i18n.hasResourceBundle(lng, ns)) return true;\n  if (!i18n.services.backendConnector.backend) return true;\n  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n  return false;\n}\nexport function getDisplayName(Component) {\n  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');\n}","import React from 'react';\nexport default React.createContext(null);","module.exports = require(\"regenerator-runtime\");\n","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport var easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexport var duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nfunction formatMs(milliseconds) {\n  return \"\".concat(Math.round(milliseconds), \"ms\");\n}\n/**\n * @param {string|Array} props\n * @param {object} param\n * @param {string} param.prop\n * @param {number} param.duration\n * @param {string} param.easing\n * @param {number} param.delay\n */\n\n\nexport default {\n  easing: easing,\n  duration: duration,\n  create: function create() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _options$duration = options.duration,\n        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,\n        _options$easing = options.easing,\n        easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 0 : _options$delay,\n        other = _objectWithoutProperties(options, [\"duration\", \"easing\", \"delay\"]);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isString = function isString(value) {\n        return typeof value === 'string';\n      };\n\n      var isNumber = function isNumber(value) {\n        return !isNaN(parseFloat(value));\n      };\n\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('Material-UI: Argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(\"Material-UI: Argument \\\"duration\\\" must be a number or a string but found \".concat(durationOption, \".\"));\n      }\n\n      if (!isString(easingOption)) {\n        console.error('Material-UI: Argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('Material-UI: Argument \"delay\" must be a number or a string.');\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(\"Material-UI: Unrecognized argument(s) [\".concat(Object.keys(other).join(','), \"].\"));\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {\n      return \"\".concat(animatedProp, \" \").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), \" \").concat(easingOption, \" \").concat(typeof delay === 'string' ? delay : formatMs(delay));\n    }).join(',');\n  },\n  getAutoHeightDuration: function getAutoHeightDuration(height) {\n    if (!height) {\n      return 0;\n    }\n\n    var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);\n  }\n};","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nimport {BaseEvent, Postable} from './base-event';\r\n\r\n/**\r\n * This is a true EventEmitter replacement: the handlers are called synchronously when\r\n * you post the event.\r\n * - Allows better error handling by aggregating any errors thrown by handlers.\r\n * - Prevents livelock by throwing an error when recursion depth is above a maximum.\r\n * - Handlers are called only for events posted after they were attached.\r\n * - Handlers are not called anymore when they are detached, even if a post() is in progress\r\n */\r\nexport class SyncEvent<T> extends BaseEvent<T> implements Postable<T> {\r\n    /**\r\n     * Sent when someone attaches or detaches\r\n     */\r\n    public get evtListenersChanged(): VoidSyncEvent {\r\n        if (!this._listenersChanged) {\r\n            // need to delay-load to avoid stack overflow in constructor\r\n            this._listenersChanged = new VoidSyncEvent();\r\n        }\r\n        return this._listenersChanged;\r\n    }\r\n\r\n    /**\r\n     * Event for listening to listener count\r\n     */\r\n    private _listenersChanged?: VoidSyncEvent;\r\n\r\n    /**\r\n     * Maximum number of times that an event handler may cause the same event\r\n     * recursively.\r\n     */\r\n    public static MAX_RECURSION_DEPTH?: number | null = 10;\r\n\r\n    /**\r\n     * Recursive post() invocations\r\n     */\r\n    private _recursion: number = 0;\r\n\r\n    /**\r\n     * Send the event. Handlers are called immediately and synchronously.\r\n     * If an error is thrown by a handler, the remaining handlers are still called.\r\n     * Afterward, an AggregateError is thrown with the original error(s) in its 'causes' property.\r\n     */\r\n    public post(data: T): void;\r\n    public post(...args: any[]): void {\r\n        if (!this._listeners || this._listeners.length === 0) {\r\n            return;\r\n        }\r\n        this._recursion++;\r\n        if (\r\n            typeof SyncEvent.MAX_RECURSION_DEPTH === 'number'\r\n            && Number.isInteger(SyncEvent.MAX_RECURSION_DEPTH)\r\n            && SyncEvent.MAX_RECURSION_DEPTH > 0\r\n            && this._recursion > SyncEvent.MAX_RECURSION_DEPTH\r\n        ) {\r\n            throw new Error('event fired recursively');\r\n        }\r\n        // copy a reference to the array because this._listeners might be replaced during\r\n        // the handler calls\r\n        const listeners = this._listeners;\r\n        for (let i = 0; i < listeners.length; ++i) {\r\n            const listener = listeners[i];\r\n            this._call(listener, args);\r\n        }\r\n        this._recursion--;\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    protected _attach(a: ((data: T) => void) | Object | Postable<T>, b: ((data: T) => void) | undefined, once: boolean): () => void {\r\n        const count = this._listeners?.length ?? 0;\r\n        const result = super._attach(a, b, once);\r\n        if (this.evtListenersChanged && count !== (this._listeners?.length ?? 0)) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    protected _detach(...args: any[]): void {\r\n        const count = this._listeners?.length ?? 0;\r\n        const result = super._detach(...args);\r\n        if (this.evtListenersChanged && count !== (this._listeners?.length ?? 0)) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Convenience class for events without data\r\n */\r\nexport class VoidSyncEvent extends SyncEvent<void> {\r\n\r\n    /**\r\n     * Send the event.\r\n     */\r\n    public post(): void {\r\n        super.post(undefined);\r\n    }\r\n}\r\n\r\n/**\r\n * Similar to 'error' event on EventEmitter: throws when a post() occurs while no handlers set.\r\n */\r\nexport class ErrorSyncEvent extends SyncEvent<Error> {\r\n\r\n    public post(data: Error): void {\r\n        if (this.listenerCount() === 0) {\r\n            throw new Error(`error event posted while no listeners attached. Error: ${data.message}`);\r\n        }\r\n        super.post(data);\r\n    }\r\n}\r\n","// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nvar defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: '',\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true\n};\nvar i18nInstance;\nexport var I18nContext = React.createContext();\nexport function setDefaults() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n}\nexport function getDefaults() {\n  return defaultOptions;\n}\nexport var ReportNamespaces = function () {\n  function ReportNamespaces() {\n    _classCallCheck(this, ReportNamespaces);\n\n    this.usedNamespaces = {};\n  }\n\n  _createClass(ReportNamespaces, [{\n    key: \"addUsedNamespaces\",\n    value: function addUsedNamespaces(namespaces) {\n      var _this = this;\n\n      namespaces.forEach(function (ns) {\n        if (!_this.usedNamespaces[ns]) _this.usedNamespaces[ns] = true;\n      });\n    }\n  }, {\n    key: \"getUsedNamespaces\",\n    value: function getUsedNamespaces() {\n      return Object.keys(this.usedNamespaces);\n    }\n  }]);\n\n  return ReportNamespaces;\n}();\nexport function setI18n(instance) {\n  i18nInstance = instance;\n}\nexport function getI18n() {\n  return i18nInstance;\n}\nexport var initReactI18next = {\n  type: '3rdParty',\n  init: function init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};\nexport function composeInitialProps(ForComponent) {\n  return function (ctx) {\n    return new Promise(function (resolve) {\n      var i18nInitialProps = getInitialProps();\n\n      if (ForComponent.getInitialProps) {\n        ForComponent.getInitialProps(ctx).then(function (componentsInitialProps) {\n          resolve(_objectSpread(_objectSpread({}, componentsInitialProps), i18nInitialProps));\n        });\n      } else {\n        resolve(i18nInitialProps);\n      }\n    });\n  };\n}\nexport function getInitialProps() {\n  var i18n = getI18n();\n  var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  var ret = {};\n  var initialI18nStore = {};\n  i18n.languages.forEach(function (l) {\n    initialI18nStore[l] = {};\n    namespaces.forEach(function (ns) {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, identifier, position, stringify, COMMENT, rulesheet, middleware, prefixer, serialize, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar last = function last(arr) {\n  return arr.length ? arr[arr.length - 1] : null;\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifier(position - 1);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // .length indicates if this rule contains pseudo or not\n  !element.length) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return !!element && element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule') return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses && cache.compat !== true) {\n      var prevElement = index > 0 ? children[index - 1] : null;\n\n      if (prevElement && isIgnoringComment(last(prevElement.children))) {\n        return;\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if ( key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport default createCache;\n","var weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\nexport default weakMemoize;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./acceleration.g\"), exports);\r\n__exportStar(require(\"./amountofsubstance.g\"), exports);\r\n__exportStar(require(\"./amplituderatio.g\"), exports);\r\n__exportStar(require(\"./angle.g\"), exports);\r\n__exportStar(require(\"./apparentenergy.g\"), exports);\r\n__exportStar(require(\"./apparentpower.g\"), exports);\r\n__exportStar(require(\"./area.g\"), exports);\r\n__exportStar(require(\"./areadensity.g\"), exports);\r\n__exportStar(require(\"./areamomentofinertia.g\"), exports);\r\n__exportStar(require(\"./bitrate.g\"), exports);\r\n__exportStar(require(\"./brakespecificfuelconsumption.g\"), exports);\r\n__exportStar(require(\"./capacitance.g\"), exports);\r\n__exportStar(require(\"./coefficientofthermalexpansion.g\"), exports);\r\n__exportStar(require(\"./density.g\"), exports);\r\n__exportStar(require(\"./duration.g\"), exports);\r\n__exportStar(require(\"./dynamicviscosity.g\"), exports);\r\n__exportStar(require(\"./electricadmittance.g\"), exports);\r\n__exportStar(require(\"./electriccharge.g\"), exports);\r\n__exportStar(require(\"./electricchargedensity.g\"), exports);\r\n__exportStar(require(\"./electricconductance.g\"), exports);\r\n__exportStar(require(\"./electricconductivity.g\"), exports);\r\n__exportStar(require(\"./electriccurrent.g\"), exports);\r\n__exportStar(require(\"./electriccurrentdensity.g\"), exports);\r\n__exportStar(require(\"./electriccurrentgradient.g\"), exports);\r\n__exportStar(require(\"./electricfield.g\"), exports);\r\n__exportStar(require(\"./electricinductance.g\"), exports);\r\n__exportStar(require(\"./electricpotential.g\"), exports);\r\n__exportStar(require(\"./electricpotentialac.g\"), exports);\r\n__exportStar(require(\"./electricpotentialchangerate.g\"), exports);\r\n__exportStar(require(\"./electricpotentialdc.g\"), exports);\r\n__exportStar(require(\"./electricresistance.g\"), exports);\r\n__exportStar(require(\"./electricresistivity.g\"), exports);\r\n__exportStar(require(\"./electricsurfacechargedensity.g\"), exports);\r\n__exportStar(require(\"./energy.g\"), exports);\r\n__exportStar(require(\"./entropy.g\"), exports);\r\n__exportStar(require(\"./force.g\"), exports);\r\n__exportStar(require(\"./forcechangerate.g\"), exports);\r\n__exportStar(require(\"./forceperlength.g\"), exports);\r\n__exportStar(require(\"./frequency.g\"), exports);\r\n__exportStar(require(\"./fuelefficiency.g\"), exports);\r\n__exportStar(require(\"./heatflux.g\"), exports);\r\n__exportStar(require(\"./heattransfercoefficient.g\"), exports);\r\n__exportStar(require(\"./illuminance.g\"), exports);\r\n__exportStar(require(\"./information.g\"), exports);\r\n__exportStar(require(\"./irradiance.g\"), exports);\r\n__exportStar(require(\"./irradiation.g\"), exports);\r\n__exportStar(require(\"./kinematicviscosity.g\"), exports);\r\n__exportStar(require(\"./lapserate.g\"), exports);\r\n__exportStar(require(\"./length.g\"), exports);\r\n__exportStar(require(\"./level.g\"), exports);\r\n__exportStar(require(\"./lineardensity.g\"), exports);\r\n__exportStar(require(\"./linearpowerdensity.g\"), exports);\r\n__exportStar(require(\"./luminosity.g\"), exports);\r\n__exportStar(require(\"./luminousflux.g\"), exports);\r\n__exportStar(require(\"./luminousintensity.g\"), exports);\r\n__exportStar(require(\"./magneticfield.g\"), exports);\r\n__exportStar(require(\"./magneticflux.g\"), exports);\r\n__exportStar(require(\"./magnetization.g\"), exports);\r\n__exportStar(require(\"./mass.g\"), exports);\r\n__exportStar(require(\"./massconcentration.g\"), exports);\r\n__exportStar(require(\"./massflow.g\"), exports);\r\n__exportStar(require(\"./massflux.g\"), exports);\r\n__exportStar(require(\"./massfraction.g\"), exports);\r\n__exportStar(require(\"./massmomentofinertia.g\"), exports);\r\n__exportStar(require(\"./molarenergy.g\"), exports);\r\n__exportStar(require(\"./molarentropy.g\"), exports);\r\n__exportStar(require(\"./molarmass.g\"), exports);\r\n__exportStar(require(\"./molarity.g\"), exports);\r\n__exportStar(require(\"./permeability.g\"), exports);\r\n__exportStar(require(\"./permittivity.g\"), exports);\r\n__exportStar(require(\"./power.g\"), exports);\r\n__exportStar(require(\"./powerdensity.g\"), exports);\r\n__exportStar(require(\"./powerratio.g\"), exports);\r\n__exportStar(require(\"./pressure.g\"), exports);\r\n__exportStar(require(\"./pressurechangerate.g\"), exports);\r\n__exportStar(require(\"./ratio.g\"), exports);\r\n__exportStar(require(\"./ratiochangerate.g\"), exports);\r\n__exportStar(require(\"./reactiveenergy.g\"), exports);\r\n__exportStar(require(\"./reactivepower.g\"), exports);\r\n__exportStar(require(\"./relativehumidity.g\"), exports);\r\n__exportStar(require(\"./rotationalacceleration.g\"), exports);\r\n__exportStar(require(\"./rotationalspeed.g\"), exports);\r\n__exportStar(require(\"./rotationalstiffness.g\"), exports);\r\n__exportStar(require(\"./rotationalstiffnessperlength.g\"), exports);\r\n__exportStar(require(\"./scalar.g\"), exports);\r\n__exportStar(require(\"./solidangle.g\"), exports);\r\n__exportStar(require(\"./specificenergy.g\"), exports);\r\n__exportStar(require(\"./specificentropy.g\"), exports);\r\n__exportStar(require(\"./specificfuelconsumption.g\"), exports);\r\n__exportStar(require(\"./specificvolume.g\"), exports);\r\n__exportStar(require(\"./specificweight.g\"), exports);\r\n__exportStar(require(\"./speed.g\"), exports);\r\n__exportStar(require(\"./standardvolumeflow.g\"), exports);\r\n__exportStar(require(\"./temperature.g\"), exports);\r\n__exportStar(require(\"./temperaturechangerate.g\"), exports);\r\n__exportStar(require(\"./temperaturedelta.g\"), exports);\r\n__exportStar(require(\"./thermalconductivity.g\"), exports);\r\n__exportStar(require(\"./thermalresistance.g\"), exports);\r\n__exportStar(require(\"./torque.g\"), exports);\r\n__exportStar(require(\"./torqueperlength.g\"), exports);\r\n__exportStar(require(\"./turbidity.g\"), exports);\r\n__exportStar(require(\"./vitamina.g\"), exports);\r\n__exportStar(require(\"./volume.g\"), exports);\r\n__exportStar(require(\"./volumeconcentration.g\"), exports);\r\n__exportStar(require(\"./volumeflow.g\"), exports);\r\n__exportStar(require(\"./volumeperlength.g\"), exports);\r\n__exportStar(require(\"./warpingmomentofinertia.g\"), exports);\r\n//# sourceMappingURL=index.js.map","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport default function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(isFocusVisible);\n  }\n\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@mui/utils';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nexport const values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablets\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screens\n\n};\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      // key is breakpoint\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  const output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\n  var _breakpointsInput$key;\n\n  const breakpointsInOrder = breakpointsInput == null ? void 0 : (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = Object.keys(breakpointOutput).length === 0;\n\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n\n    return acc;\n  }, style);\n}\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\nexport function resolveBreakpointValues({\n  values: breakpointValues,\n  base\n}) {\n  const keys = Object.keys(base);\n\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n\n  let previous;\n  return keys.reduce((acc, breakpoint) => {\n    if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n\n    previous = breakpoint;\n    return acc;\n  }, {});\n}\nexport default breakpoints;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\nexport interface Postable<T> {\r\n    post(data: T): void;\r\n}\r\n\r\n/**\r\n * Internal interface between BaseEvent and its subclasses\r\n */\r\nexport interface Listener<T> {\r\n    /**\r\n     * Indicates that the listener was detached\r\n     */\r\n    deleted: boolean;\r\n    /**\r\n     * The handler\r\n     */\r\n    handler?: (data: T) => void;\r\n    /**\r\n     * The this pointer for the handler\r\n     */\r\n    boundTo?: Object;\r\n    /**\r\n     * Instead of a handler, an attached event\r\n     */\r\n    event?: Postable<T>;\r\n    /**\r\n     * Remove after first call?\r\n     */\r\n    once: boolean;\r\n}\r\n\r\n/**\r\n * Base class for events.\r\n * Handles attaching and detaching listeners\r\n */\r\nexport class BaseEvent<T> implements Postable<T> {\r\n\r\n    /**\r\n     * Attached listeners. NOTE: do not modify.\r\n     * Instead, replace with a new array with possibly the same elements. This ensures\r\n     * that any references to the array by events that are underway remain the same.\r\n     */\r\n    protected _listeners?: Listener<T>[];\r\n\r\n    /**\r\n     * Attach an event handler\r\n     * @param handler The function to call. The this argument of the function will be this object.\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    public attach(handler: (data: T) => void): () => void;\r\n    /**\r\n     * Attach an event handler\r\n     * @param boundTo The this argument of the handler\r\n     * @param handler The function to call.\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    public attach(boundTo: Object, handler: (data: T) => void): () => void;\r\n    /**\r\n     * Attach an event directly\r\n     * @param event The event to be posted\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    public attach(event: Postable<T>): () => void;\r\n    /**\r\n     * Attach implementation\r\n     */\r\n    public attach(a: ((data: T) => void) | Object | Postable<T>, b?: (data: T) => void): () => void {\r\n        return this._attach(a, b, false);\r\n    }\r\n\r\n    /**\r\n     * Attach an event handler which automatically gets removed after the first call\r\n     * @param handler The function to call. The this argument of the function will be this object.\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    public once(handler: (data: T) => void): () => void;\r\n    /**\r\n     * Attach an event handler which automatically gets removed after the first call\r\n     * @param boundTo The this argument of the handler\r\n     * @param handler The function to call.\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    public once(boundTo: Object, handler: (data: T) => void): () => void;\r\n    /**\r\n     * Attach an event directly and de-attach after the first call\r\n     * @param event The event to be posted\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    public once(event: Postable<T>): () => void;\r\n    /**\r\n     * Once implementation\r\n     */\r\n    public once(a: ((data: T) => void) | Object | Postable<T>, b?: (data: T) => void): () => void {\r\n        return this._attach(a, b, true);\r\n    }\r\n\r\n    /**\r\n     * Attach / once implementation\r\n     * @param a\r\n     * @param b\r\n     * @param once\r\n     * @returns function you can use for detaching from the event, instead of calling detach()\r\n     */\r\n    protected _attach(a: ((data: T) => void) | Object | Postable<T>, b: ((data: T) => void) | undefined, once: boolean): () => void {\r\n        let boundTo: Object | undefined;\r\n        let handler: ((data: T) => void) | undefined;\r\n        let event: Postable<T> | undefined;\r\n        let result: () => void;\r\n        if (typeof a === 'function') {\r\n            handler = a as ((data: T) => void);\r\n            result = () => this.detach(handler!);\r\n        } else if (!b && typeof (a as Postable<T>).post === 'function') {\r\n            event = a as Postable<T>;\r\n            result = () => this.detach(event!);\r\n        } else {\r\n            if (typeof a !== 'object' || a === undefined) {\r\n                throw new Error('Expect a function or object as first argument');\r\n            }\r\n            if (typeof b !== 'function') {\r\n                throw new Error('Expect a function as second argument');\r\n            }\r\n            boundTo = a;\r\n            handler = b;\r\n            result = () => this.detach(boundTo!, handler!);\r\n        }\r\n        if (!this._listeners) {\r\n            this._listeners = [];\r\n        } else {\r\n            // make a copy of the array so events that are underway have a stable local copy\r\n            // of the listeners array at the time of post()\r\n            this._listeners = this._listeners.slice();\r\n        }\r\n        this._listeners.push({\r\n            deleted: false,\r\n            boundTo,\r\n            handler,\r\n            event,\r\n            once\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Detach all listeners with the given handler function\r\n     */\r\n    public detach(handler: (data: T) => void): void;\r\n    /**\r\n     * Detach all listeners with the given handler function and boundTo object.\r\n     */\r\n    public detach(boundTo: Object, handler: (data: T) => void): void;\r\n    /**\r\n     * Detach all listeners that were attached with the given boundTo object.\r\n     */\r\n    public detach(boundTo: Object): void;\r\n    /**\r\n     * Detach the given event.\r\n     */\r\n    public detach(event: Postable<T>): void;\r\n    /**\r\n     * Detach all listeners\r\n     */\r\n    public detach(): void;\r\n    /**\r\n     * Detach implementation. See the overloads for description.\r\n     */\r\n    public detach(...args: any[]): void {\r\n        this._detach(...args);\r\n    }\r\n\r\n    /**\r\n     * Detach implementation\r\n     * @param args\r\n     */\r\n    protected _detach(...args: any[]): void {\r\n        if (!this._listeners || this._listeners.length === 0) {\r\n            return;\r\n        }\r\n        let boundTo: Object;\r\n        let handler: (data: T) => void;\r\n        let event: Postable<T>;\r\n        if (args.length >= 1) {\r\n            if (typeof (args[0]) === 'function') {\r\n                handler = args[0];\r\n            } else if (args.length === 1 && typeof args[0].post === 'function') {\r\n                event = args[0];\r\n            } else {\r\n                boundTo = args[0];\r\n            }\r\n        }\r\n        if (args.length >= 2) {\r\n            handler = args[1];\r\n        }\r\n\r\n        // remove listeners AND mark them as deleted so subclasses don't send any more events to them\r\n        this._listeners = this._listeners.filter((listener: Listener<T>): boolean => {\r\n            if ((typeof handler === 'undefined' || listener.handler === handler)\r\n                && (typeof event === 'undefined' || listener.event === event)\r\n                && (typeof boundTo === 'undefined' || listener.boundTo === boundTo)) {\r\n                listener.deleted = true;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        if (this._listeners.length === 0) {\r\n            delete this._listeners;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Abstract post() method to be able to connect any type of event to any other directly\r\n     * @abstract\r\n     */\r\n    public post(data: T): void {\r\n        throw new Error('abstract');\r\n    }\r\n\r\n    /**\r\n     * The number of attached listeners\r\n     */\r\n    public listenerCount(): number {\r\n        return (this._listeners ? this._listeners.length : 0);\r\n    }\r\n\r\n    /**\r\n     * Call the given listener, if it is not marked as 'deleted'\r\n     * @param listener The listener to call\r\n     * @param args The arguments to the handler\r\n     */\r\n    protected _call(listener: Listener<T>, args: any[]): void {\r\n        if (!this._listeners) {\r\n            return;\r\n        }\r\n        if (!listener.deleted) {\r\n            if (listener.once) {\r\n                // remove listeners AND mark as deleted so subclasses don't send any more events to them\r\n                listener.deleted = true;\r\n                this._listeners = this._listeners.filter((l: Listener<T>): boolean => l !== listener);\r\n                if (this._listeners.length === 0) {\r\n                    delete this._listeners;\r\n                }\r\n            }\r\n            if (listener.event) {\r\n                listener.event.post.apply(listener.event, args);\r\n            } else if (listener.handler) {\r\n                listener.handler.apply((typeof listener.boundTo === 'object' ? listener.boundTo : this), args);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { deepmerge } from '@mui/utils';\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","import createTheme from './createTheme';\nconst defaultTheme = createTheme();\nexport default defaultTheme;","export var reflow = function reflow(node) {\n  return node.scrollTop;\n};\nexport function getTransitionProps(props, options) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}","import createTheme from './createTheme';\nimport useThemeWithoutDefault from './useThemeWithoutDefault';\nexport const systemDefaultTheme = createTheme();\n\nfunction useTheme(defaultTheme = systemDefaultTheme) {\n  return useThemeWithoutDefault(defaultTheme);\n}\n\nexport default useTheme;","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import React from 'react';\nvar ThemeContext = React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\n\nexport default ThemeContext;","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","var hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (_typeof(propValue) === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return Object.keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\n\nexport default ThemeContext;","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        before = _this.prepend ? _this.container.firstChild : _this.before;\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { createElement, useContext, useRef, useLayoutEffect } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-99289b21.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-99289b21.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../isolated-hoist-non-react-statics-do-not-use-this-in-your-code/dist/emotion-react-isolated-hoist-non-react-statics-do-not-use-this-in-your-code.browser.esm.js';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.4.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.cjs.js\": \"./dist/emotion-react.browser.cjs.js\",\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"isolated-hoist-non-react-statics-do-not-use-this-in-your-code\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"mitchellhamilton <mitchell@mitchellhamilton.me>\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.13.10\",\n\t\t\"@emotion/cache\": \"^11.4.0\",\n\t\t\"@emotion/serialize\": \"^1.0.2\",\n\t\t\"@emotion/sheet\": \"^1.0.2\",\n\t\t\"@emotion/utils\": \"^1.0.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.2.5\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.13.10\",\n\t\t\"@emotion/css\": \"11.1.3\",\n\t\t\"@emotion/css-prettifier\": \"1.0.0\",\n\t\t\"@emotion/server\": \"11.4.0\",\n\t\t\"@emotion/styled\": \"11.3.0\",\n\t\t\"@types/react\": \"^16.9.11\",\n\t\tdtslint: \"^0.3.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./isolated-hoist-non-react-statics-do-not-use-this-in-your-code.js\"\n\t\t],\n\t\tumdName: \"emotionReact\"\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useLayoutEffect(function () {\n    var key = cache.key + \"-global\";\n    var sheet = new StyleSheet({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useLayoutEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n\n    {\n      insertStyles(cache, serialized, false);\n    }\n\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n\n  return ele;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    var globalContext = isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nimport {SyncEvent} from './sync-event';\r\n\r\n/**\r\n * Simple synchronous event queue that needs to be drained manually.\r\n */\r\nclass EventQueue {\r\n\r\n    /**\r\n     * SyncEvent triggered after an event is added outside of a flush operation.\r\n     * @param queue The event queue itself\r\n     */\r\n    public evtFilled: SyncEvent<EventQueue> = new SyncEvent<EventQueue>();\r\n    /**\r\n     * SyncEvent triggered after the queue is flushed empty\r\n     * @param queue The event queue itself\r\n     */\r\n    public evtDrained: SyncEvent<EventQueue> = new SyncEvent<EventQueue>();\r\n\r\n    /**\r\n     * The module-global event queue\r\n     */\r\n    private static _instance: EventQueue;\r\n\r\n    /**\r\n     * The module-global event queue\r\n     */\r\n    public static global(): EventQueue {\r\n        if (!EventQueue._instance) {\r\n            EventQueue.resetGlobal();\r\n        }\r\n        return EventQueue._instance;\r\n    }\r\n\r\n    /**\r\n     * Testing purposes\r\n     */\r\n    public static resetGlobal(): void {\r\n        EventQueue._instance = new EventQueue();\r\n    }\r\n\r\n    /**\r\n     * Queued elements\r\n     */\r\n    private _queue: (() => void)[] = [];\r\n\r\n    /**\r\n     * True while flush() or flushOnce() is running\r\n     */\r\n    private _flushing: boolean = false;\r\n\r\n    /**\r\n     * Returns true iff the queue is empty\r\n     */\r\n    public empty(): boolean {\r\n        return this._queue.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Add an element to the queue. The handler is called when one of the flush\r\n     * methods is called.\r\n     */\r\n    public add(handler: () => void): void {\r\n        this._queue.push(handler);\r\n        if (this._queue.length === 1 && !this._flushing) {\r\n            this.evtFilled.post(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls all handlers currently in the queue. Does not call any handlers added\r\n     * as a result of the flush\r\n     */\r\n    public flushOnce(): void {\r\n        const empty = (this._queue.length === 0);\r\n        const flushing = this._flushing;\r\n        this._flushing = true;\r\n        try {\r\n            const queue = this._queue;\r\n            this._queue = [];\r\n            for (let i = 0; i < queue.length; ++i) {\r\n                queue[i]();\r\n            }\r\n        } finally {\r\n            this._flushing = flushing;\r\n            if (!empty && !flushing && this._queue.length === 0) {\r\n                this.evtDrained.post(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Flushes the QueuedEvents, calling all events currently in the queue and those\r\n     * put into the queue as a result of the flush.\r\n     * @param maxRounds Optional, default 10. Number of iterations after which to throw an error because\r\n     *                  the queue keeps filling up. Set to null to disable this.\r\n     */\r\n    public flush(maxRounds: number | null = 10): void {\r\n        const empty = (this._queue.length === 0);\r\n        const flushing = this._flushing;\r\n        this._flushing = true;\r\n        try {\r\n            let i = 0;\r\n            while (this._queue.length > 0) {\r\n                if (typeof maxRounds === 'number' && i >= maxRounds) {\r\n                    this._queue = [];\r\n                    throw new Error('unable to flush the queue due to recursively added event. Clearing queue now');\r\n                }\r\n                this.flushOnce();\r\n                ++i;\r\n            }\r\n        } finally {\r\n            this._flushing = flushing;\r\n            if (!empty && !flushing && this._queue.length === 0) {\r\n                this.evtDrained.post(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventQueue;\r\n","export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hoistNonReactStatics$1 from 'hoist-non-react-statics';\n\n// this file isolates this package that is not tree-shakeable\n// and if this module doesn't actually contain any logic of its own\n// then Rollup just use 'hoist-non-react-statics' directly in other chunks\n\nvar hoistNonReactStatics = (function (targetComponent, sourceComponent) {\n  return hoistNonReactStatics$1(targetComponent, sourceComponent);\n});\n\nexport default hoistNonReactStatics;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","import React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  var theme = React.useContext(ThemeContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme\n  });\n}","import getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n","import { unstable_capitalize as capitalize } from '@mui/utils';\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nexport function getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n}\n\nfunction getValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\n  let value;\n\n  if (typeof themeMapping === 'function') {\n    value = themeMapping(propValueFinal);\n  } else if (Array.isArray(themeMapping)) {\n    value = themeMapping[propValueFinal] || userValue;\n  } else {\n    value = getPath(themeMapping, propValueFinal) || userValue;\n  }\n\n  if (transform) {\n    value = transform(value);\n  }\n\n  return value;\n}\n\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return {\n        [cssProperty]: value\n      };\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\n    [prop]: responsivePropType\n  } : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport React from 'react';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  var theme = useThemeWithoutDefault() || defaultTheme;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import ownerDocument from './ownerDocument';\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nexport * from './base-event';\r\nexport * from './sync-event';\r\nexport * from './queued-event';\r\nexport * from './async-event';\r\nexport * from './any-event';\r\n\r\nimport {default as EventQueue} from './EventQueue';\r\nexport {default as EventQueue} from './EventQueue';\r\n\r\n/**\r\n * The global event queue for QueuedEvents\r\n */\r\nexport function queue(): EventQueue {\r\n    return EventQueue.global();\r\n}\r\n\r\n/**\r\n * Convenience function, same as EventQueue.global().flushOnce().\r\n * Flushes the QueuedEvents, calling all events currently in the queue but not\r\n * any events put into the queue as a result of the flush.\r\n */\r\nexport function flushOnce(): void {\r\n    EventQueue.global().flushOnce();\r\n}\r\n\r\n/**\r\n * Convenience function, same as EventQueue.global().flush().\r\n * Flushes the QueuedEvents, calling all handlers currently in the queue and those\r\n * put into the queue as a result of the flush.\r\n * @param maxRounds Optional, default 10. Number of iterations after which to throw an error because\r\n *                  the queue keeps filling up. Set to undefined or null to disable this.\r\n */\r\nexport function flush(maxRounds: number | null = 10): void {\r\n    EventQueue.global().flush(maxRounds);\r\n}\r\n","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"duration\", \"easing\", \"delay\"];\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\n\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  const constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nexport default function createTransitions(inputTransitions) {\n  const mergedEasing = _extends({}, easing, inputTransitions.easing);\n\n  const mergedDuration = _extends({}, duration, inputTransitions.duration);\n\n  const create = (props = ['all'], options = {}) => {\n    const {\n      duration: durationOption = mergedDuration.standard,\n      easing: easingOption = mergedEasing.easeInOut,\n      delay = 0\n    } = options,\n          other = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const isString = value => typeof value === 'string'; // IE11 support, replace with Number.isNaN\n      // eslint-disable-next-line no-restricted-globals\n\n\n      const isNumber = value => !isNaN(parseFloat(value));\n\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(`MUI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n      }\n\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n\n  return _extends({\n    getAutoHeightDuration,\n    create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}","import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY'];\nconst paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  const themeSpacing = getPath(theme, themeKey) || defaultValue;\n\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return () => undefined;\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return `-${transformed}`;\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\n\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\n\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\n\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  const cache = {};\n  return arg => {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nvar zIndex = {\n  mobileStepper: 1000,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\nexport default zIndex;","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nimport {BaseEvent, Postable, Listener} from './base-event';\r\nimport {default as EventQueue} from './EventQueue';\r\nimport {VoidSyncEvent} from './sync-event';\r\n\r\n/**\r\n * Options for the QueuedEvent constructor\r\n */\r\nexport interface QueuedEventOpts {\r\n    /**\r\n     * Condense multiple calls to post() into one.\r\n     */\r\n    condensed?: boolean;\r\n    /**\r\n     * Specific event queue to use. If not provided, the global instance is used.\r\n     */\r\n    queue?: EventQueue;\r\n}\r\n\r\n/**\r\n * Event that stays in a queue until you process the queue. Allows fine-grained\r\n * control over when events happen.\r\n * - Optionally condenses multiple post() calls into one.\r\n * - Handlers are called only for events posted after they were attached.\r\n * - Handlers are not called anymore when they are detached, even if a post() is in progress\r\n */\r\nexport class QueuedEvent<T> extends BaseEvent<T> implements Postable<T> {\r\n    /**\r\n     * Sent when someone attaches or detaches\r\n     */\r\n    public get evtListenersChanged(): VoidSyncEvent {\r\n        if (!this._listenersChanged) {\r\n            // need to delay-load to avoid stack overflow in constructor\r\n            this._listenersChanged = new VoidSyncEvent();\r\n        }\r\n        return this._listenersChanged;\r\n    }\r\n\r\n    /**\r\n     * Event for listening to listener count\r\n     */\r\n    private _listenersChanged?: VoidSyncEvent;\r\n\r\n    /**\r\n     * Used internally - the exact options object given to constructor\r\n     */\r\n    public options: QueuedEventOpts;\r\n\r\n    private _condensed: boolean;\r\n    private _queue: EventQueue;\r\n    private _queued: boolean = false;\r\n    private _queuedListeners: Listener<T>[];\r\n    private _queuedData: any[];\r\n\r\n    /**\r\n     * Constructor\r\n     * @param opts Optional, an object with the following members:\r\n     *             - condensed: a Boolean indicating whether to condense multiple calls to post() into one (default false)\r\n     *             - queue: a specific event queue to use. The global EventQueue instance is used if not given.\r\n     */\r\n    constructor(opts: QueuedEventOpts = {}) {\r\n        super();\r\n        this.options = opts;\r\n        if (typeof opts.condensed === 'boolean') {\r\n            this._condensed = opts.condensed;\r\n        } else {\r\n            this._condensed = false;\r\n        }\r\n        if (typeof opts.queue === 'object' && opts.queue !== null) {\r\n            this._queue = opts.queue;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Send the event. Events are queued in the event queue until flushed out.\r\n    * If the 'condensed' option was given in the constructor, multiple posts()\r\n    * between queue flushes are condensed into one call with the data from the\r\n    * last post() call.\r\n    */\r\n    public post(data: T): void;\r\n    public post(...args: any[]): void {\r\n        if (!this._listeners || this._listeners.length === 0) {\r\n            return;\r\n        }\r\n        const queue = (this._queue ? this._queue : EventQueue.global());\r\n        if (this._condensed) {\r\n            this._queuedData = args;\r\n            this._queuedListeners = this._listeners;\r\n            if (this._queued) {\r\n                return;\r\n            } else {\r\n                this._queued = true;\r\n                queue.add((): void => {\r\n                    // immediately mark non-queued to allow new AsyncEvent to happen as result\r\n                    // of calling handlers\r\n                    this._queued = false;\r\n                    // cache listeners and data because they might change while calling event handlers\r\n                    const data = this._queuedData;\r\n                    const listeners = this._queuedListeners;\r\n                    for (let i = 0; i < listeners.length; ++i) {\r\n                        const listener = listeners[i];\r\n                        this._call(listener, data);\r\n                    }\r\n                });\r\n            }\r\n        } else { // not condensed\r\n            const listeners = this._listeners;\r\n            queue.add((): void => {\r\n                for (let i = 0; i < listeners.length; ++i) {\r\n                    const listener = listeners[i];\r\n                    this._call(listener, args);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    protected _attach(a: ((data: T) => void) | Object | Postable<T>, b: ((data: T) => void) | undefined, once: boolean): () => void {\r\n        const count = this._listeners?.length ?? 0;\r\n        const result = super._attach(a, b, once);\r\n        if (this.evtListenersChanged && count !== (this._listeners?.length ?? 0)) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    protected _detach(...args: any[]): void {\r\n        const count = this._listeners?.length ?? 0;\r\n        const result = super._detach(...args);\r\n        if (this.evtListenersChanged && count !== (this._listeners?.length ?? 0)) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Convenience class for events without data\r\n */\r\nexport class VoidQueuedEvent extends QueuedEvent<void> {\r\n\r\n    /**\r\n     * Send the event.\r\n     */\r\n    public post(): void {\r\n        super.post(undefined);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Similar to 'error' event on EventEmitter: throws when a post() occurs while no handlers set.\r\n */\r\nexport class ErrorQueuedEvent extends QueuedEvent<Error> {\r\n\r\n    public post(data: Error): void {\r\n        if (!this._listeners || this._listeners.length === 0) {\r\n            throw new Error(`error event posted while no listeners attached. Error: ${data.message}`);\r\n        }\r\n        super.post(data);\r\n    }\r\n}\r\n","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nimport {BaseEvent, Postable, Listener} from './base-event';\r\nimport {VoidSyncEvent} from './sync-event';\r\n\r\n/**\r\n * Options for the AsyncEvent constructor\r\n */\r\nexport interface AsyncEventOpts {\r\n    /**\r\n     * Condense multiple calls to post() into one while the previous one\r\n     * has not been handled yet.\r\n     */\r\n    condensed?: boolean;\r\n}\r\n\r\n/**\r\n * A-synchronous event. Handlers are called in the next Node.JS cycle.\r\n * - Optionally condenses multiple post() calls into one (the last post() gets through)\r\n * - Handlers are called only for events posted after they were attached.\r\n * - Handlers are not called anymore when they are detached, even if a post() is in progress\r\n */\r\nexport class AsyncEvent<T> extends BaseEvent<T> implements Postable<T> {\r\n    /**\r\n     * Sent when someone attaches or detaches\r\n     */\r\n    public get evtListenersChanged(): VoidSyncEvent {\r\n        if (!this._listenersChanged) {\r\n            // need to delay-load to avoid stack overflow in constructor\r\n            this._listenersChanged = new VoidSyncEvent();\r\n        }\r\n        return this._listenersChanged;\r\n    }\r\n\r\n    /**\r\n     * Event for listening to listener count\r\n     */\r\n    private _listenersChanged?: VoidSyncEvent;\r\n\r\n    /**\r\n     * Used internally - the exact options object given to constructor\r\n     */\r\n    public options: AsyncEventOpts;\r\n\r\n    private _condensed: boolean;\r\n    private _queued: boolean = false;\r\n    private _queuedListeners: Listener<T>[];\r\n    private _queuedData: any[];\r\n\r\n    /**\r\n     * The default scheduler uses setImmediate() or setTimeout(..., 0) if setImmediate is not available.\r\n     */\r\n    public static defaultScheduler(callback: () => void): void {\r\n        /* istanbul ignore else  */\r\n        if (typeof window !== 'undefined') {\r\n            // browsers don't always support setImmediate()\r\n            setTimeout(callback, 0);\r\n        } else {\r\n            // node.js\r\n            setImmediate(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The current scheduler\r\n     */\r\n    private static _scheduler: (callback: () => void) => void = AsyncEvent.defaultScheduler;\r\n\r\n    /**\r\n     * By default, AsyncEvent uses setImmediate() to schedule event handler invocation.\r\n     * You can change this for e.g. setTimeout(..., 0) by calling this static method once.\r\n     * @param scheduler A function that takes a callback and executes it in the next Node.JS cycle.\r\n     */\r\n    public static setScheduler(scheduler: (callback: () => void) => void): void {\r\n        AsyncEvent._scheduler = scheduler;\r\n    }\r\n\r\n    /**\r\n     * Constructor\r\n     * @param opts Optional. Various settings:\r\n     *             - condensed: a Boolean indicating whether to condense multiple post() calls within the same cycle.\r\n     */\r\n    constructor(opts: AsyncEventOpts = {}) {\r\n        super();\r\n        this.options = opts;\r\n        if (typeof opts.condensed === 'boolean') {\r\n            this._condensed = opts.condensed;\r\n        } else {\r\n            this._condensed = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send the AsyncEvent. Handlers are called in the next Node.JS cycle.\r\n     */\r\n    public post(data: T): void;\r\n    public post(...args: any[]): void {\r\n        if (!this._listeners || this._listeners.length === 0) {\r\n            return;\r\n        }\r\n        if (this._condensed) {\r\n            this._queuedData = args;\r\n            this._queuedListeners = this._listeners;\r\n            if (this._queued) {\r\n                return;\r\n            } else {\r\n                this._queued = true;\r\n                AsyncEvent._scheduler((): void => {\r\n                    // immediately mark non-queued to allow new AsyncEvent to happen as result\r\n                    // of calling handlers\r\n                    this._queued = false;\r\n                    // cache listeners and data because they might change while calling event handlers\r\n                    const data = this._queuedData;\r\n                    const listeners = this._queuedListeners;\r\n                    for (let i = 0; i < listeners.length; ++i) {\r\n                        const listener = listeners[i];\r\n                        this._call(listener, data);\r\n                    }\r\n                });\r\n            }\r\n        } else { // not condensed\r\n            const listeners = this._listeners;\r\n            AsyncEvent._scheduler((): void => {\r\n                for (let i = 0; i < listeners.length; ++i) {\r\n                    const listener = listeners[i];\r\n                    this._call(listener, args);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // inherited\r\n    protected _call(listener: Listener<T>, args: any[]): void {\r\n        // performance optimization: don't use consecutive nodejs cycles\r\n        // for asyncevents attached to asyncevents\r\n        if (listener.event && listener.event instanceof AsyncEvent) {\r\n            (<AsyncEvent<T>>listener.event)._postDirect(args);\r\n        } else {\r\n            super._call(listener, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performance optimization: if this async signal is attached to another\r\n     * async signal, we're already a the next cycle and we can call listeners\r\n     * directly\r\n     */\r\n    protected _postDirect(args: any[]): void {\r\n        if (!this._listeners || this._listeners.length === 0) {\r\n            return;\r\n        }\r\n        // copy a reference to the array because this._listeners might be replaced during\r\n        // the handler calls\r\n        const listeners = this._listeners;\r\n        for (let i = 0; i < listeners.length; ++i) {\r\n            const listener = listeners[i];\r\n            this._call(listener, args);\r\n        }\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    protected _attach(a: ((data: T) => void) | Object | Postable<T>, b: ((data: T) => void) | undefined, once: boolean): () => void {\r\n        const count = this._listeners?.length ?? 0;\r\n        const result = super._attach(a, b, once);\r\n        if (this.evtListenersChanged && count !== (this._listeners?.length ?? 0)) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    protected _detach(...args: any[]): void {\r\n        const count = this._listeners?.length ?? 0;\r\n        const result = super._detach(...args);\r\n        if (this.evtListenersChanged && count !== (this._listeners?.length ?? 0)) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Convenience class for AsyncEvents without data\r\n */\r\nexport class VoidAsyncEvent extends AsyncEvent<void> {\r\n\r\n    /**\r\n     * Send the AsyncEvent.\r\n     */\r\n    public post(): void {\r\n        super.post(undefined);\r\n    }\r\n}\r\n\r\n/**\r\n * Similar to 'error' event on EventEmitter: throws when a post() occurs while no handlers set.\r\n */\r\nexport class ErrorAsyncEvent extends AsyncEvent<Error> {\r\n\r\n    public post(data: Error): void {\r\n        if (this.listenerCount() === 0) {\r\n            throw new Error(`error event posted while no listeners attached. Error: ${data.message}`);\r\n        }\r\n        super.post(data);\r\n    }\r\n}\r\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { useTheme as muiUseTheme } from '@mui/private-theming';\n\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = muiUseTheme();\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\n\nexport default useTheme;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-restricted-syntax */\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n\n  const output = _extends({}, props); // Resolve default props, code borrow from React source.\n  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221\n\n\n  const defaultProps = theme.components[name].defaultProps;\n  let propName;\n\n  for (propName in defaultProps) {\n    if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  }\n\n  return output;\n}","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar rtl = require(\"rtl-css-js\");\r\nvar convert = rtl['default'] || rtl;\r\nfunction jssRTL(_a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.enabled, enabled = _c === void 0 ? true : _c, _d = _b.opt, opt = _d === void 0 ? 'out' : _d;\r\n    return {\r\n        onProcessStyle: function (style, rule, sheet) {\r\n            if (rule.type === 'font-face') {\r\n                return style;\r\n            }\r\n            if (!enabled) {\r\n                if (typeof style.flip === 'boolean') {\r\n                    delete style.flip;\r\n                }\r\n                return style;\r\n            }\r\n            var flip = opt === 'out'; // If it's set to opt-out, then it should flip by default\r\n            if (typeof sheet.options.flip === 'boolean') {\r\n                flip = sheet.options.flip;\r\n            }\r\n            if (typeof style.flip === 'boolean') {\r\n                flip = style.flip;\r\n                delete style.flip;\r\n            }\r\n            if (!flip) {\r\n                return style;\r\n            }\r\n            return convert(typeof rule.toJSON === 'function' ? rule.toJSON() : style);\r\n        },\r\n    };\r\n}\r\nexports.default = jssRTL;\r\n","import cssjanus from 'cssjanus';\nimport { COMMENT, compile, DECLARATION, IMPORT, RULESET, serialize, strlen, KEYFRAMES, MEDIA, SUPPORTS, } from 'stylis';\nfunction stringifyPreserveComments(element, index, children) {\n    switch (element.type) {\n        case IMPORT:\n        case DECLARATION:\n        case COMMENT:\n            return (element.return = element.return || element.value);\n        case RULESET: {\n            element.value = Array.isArray(element.props) ? element.props.join(',') : element.props;\n            if (Array.isArray(element.children)) {\n                element.children.forEach(function (x) {\n                    if (x.type === COMMENT)\n                        x.children = x.value;\n                });\n            }\n        }\n    }\n    var serializedChildren = serialize(Array.prototype.concat(element.children), stringifyPreserveComments);\n    return strlen(serializedChildren) ? (element.return = element.value + '{' + serializedChildren + '}') : '';\n}\nfunction stylisRTLPlugin(element, index, children, callback) {\n    if (element.type === KEYFRAMES ||\n        element.type === SUPPORTS ||\n        (element.type === RULESET && (!element.parent || element.parent.type === MEDIA || element.parent.type === RULESET))) {\n        var stringified = cssjanus.transform(stringifyPreserveComments(element, index, children));\n        element.children = stringified ? compile(stringified)[0].children : [];\n        element.return = '';\n    }\n}\n// stable identifier that will not be dropped by minification unless the whole module\n// is unused\nObject.defineProperty(stylisRTLPlugin, 'name', { value: 'stylisRTLPlugin' });\nexport default stylisRTLPlugin;\n//# sourceMappingURL=stylis-rtl.js.map","/*!\n * CSSJanus. https://github.com/cssjanus/cssjanus\n *\n * Copyright 2014 Trevor Parscal\n * Copyright 2010 Roan Kattouw\n * Copyright 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar cssjanus;\n\n/**\n * Create a tokenizer object.\n *\n * This utility class is used by CSSJanus to protect strings by replacing them temporarily with\n * tokens and later transforming them back.\n *\n * @class\n * @constructor\n * @param {RegExp} regex Regular expression whose matches to replace by a token\n * @param {string} token Placeholder text\n */\nfunction Tokenizer( regex, token ) {\n\n\tvar matches = [],\n\t\tindex = 0;\n\n\t/**\n\t * Add a match.\n\t *\n\t * @private\n\t * @param {string} match Matched string\n\t * @return {string} Token to leave in the matched string's place\n\t */\n\tfunction tokenizeCallback( match ) {\n\t\tmatches.push( match );\n\t\treturn token;\n\t}\n\n\t/**\n\t * Get a match.\n\t *\n\t * @private\n\t * @return {string} Original matched string to restore\n\t */\n\tfunction detokenizeCallback() {\n\t\treturn matches[ index++ ];\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Replace matching strings with tokens.\n\t\t *\n\t\t * @param {string} str String to tokenize\n\t\t * @return {string} Tokenized string\n\t\t */\n\t\ttokenize: function ( str ) {\n\t\t\treturn str.replace( regex, tokenizeCallback );\n\t\t},\n\n\t\t/**\n\t\t * Restores tokens to their original values.\n\t\t *\n\t\t * @param {string} str String previously run through tokenize()\n\t\t * @return {string} Original string\n\t\t */\n\t\tdetokenize: function ( str ) {\n\t\t\treturn str.replace( new RegExp( '(' + token + ')', 'g' ), detokenizeCallback );\n\t\t}\n\t};\n}\n\n/**\n * Create a CSSJanus object.\n *\n * CSSJanus transforms CSS rules with horizontal relevance so that a left-to-right stylesheet can\n * become a right-to-left stylesheet automatically. Processing can be bypassed for an entire rule\n * or a single property by adding a / * @noflip * / comment above the rule or property.\n *\n * @class\n * @constructor\n */\nfunction CSSJanus() {\n\n\tvar\n\t\t// Tokens\n\t\ttemporaryToken = '`TMP`',\n\t\tnoFlipSingleToken = '`NOFLIP_SINGLE`',\n\t\tnoFlipClassToken = '`NOFLIP_CLASS`',\n\t\tcommentToken = '`COMMENT`',\n\t\t// Patterns\n\t\tnonAsciiPattern = '[^\\\\u0020-\\\\u007e]',\n\t\tunicodePattern = '(?:(?:\\\\\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)',\n\t\tnumPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)',\n\t\tunitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)',\n\t\tdirectionPattern = 'direction\\\\s*:\\\\s*',\n\t\turlSpecialCharsPattern = '[!#$%&*-~]',\n\t\tvalidAfterUriCharsPattern = '[\\'\"]?\\\\s*',\n\t\tnonLetterPattern = '(^|[^a-zA-Z])',\n\t\tcharsWithinSelectorPattern = '[^\\\\}]*?',\n\t\tnoFlipPattern = '\\\\/\\\\*\\\\!?\\\\s*@noflip\\\\s*\\\\*\\\\/',\n\t\tcommentPattern = '\\\\/\\\\*[^*]*\\\\*+([^\\\\/*][^*]*\\\\*+)*\\\\/',\n\t\tescapePattern = '(?:' + unicodePattern + '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])',\n\t\tnmstartPattern = '(?:[_a-z]|' + nonAsciiPattern + '|' + escapePattern + ')',\n\t\tnmcharPattern = '(?:[_a-z0-9-]|' + nonAsciiPattern + '|' + escapePattern + ')',\n\t\tidentPattern = '-?' + nmstartPattern + nmcharPattern + '*',\n\t\tquantPattern = numPattern + '(?:\\\\s*' + unitPattern + '|' + identPattern + ')?',\n\t\tsignedQuantPattern = '((?:-?' + quantPattern + ')|(?:inherit|auto))',\n\t\tfourNotationQuantPropsPattern = '((?:margin|padding|border-width)\\\\s*:\\\\s*)',\n\t\tfourNotationColorPropsPattern = '((?:-color|border-style)\\\\s*:\\\\s*)',\n\t\tcolorPattern = '(#?' + nmcharPattern + '+|(?:rgba?|hsla?)\\\\([ \\\\d.,%-]+\\\\))',\n\t\t// The use of a lazy match (\"*?\") may cause a backtrack limit to be exceeded before finding\n\t\t// the intended match. This affects 'urlCharsPattern' and 'lookAheadNotOpenBracePattern'.\n\t\t// We have not yet found this problem on Node.js, but we have on PHP 7, where it was\n\t\t// mitigated by using a possessive quantifier (\"*+\"), which are not supported in JS.\n\t\t// See <https://github.com/cssjanus/php-cssjanus/issues/14> and <https://phabricator.wikimedia.org/T215746#4944830>.\n\t\turlCharsPattern = '(?:' + urlSpecialCharsPattern + '|' + nonAsciiPattern + '|' + escapePattern + ')*?',\n\t\tlookAheadNotLetterPattern = '(?![a-zA-Z])',\n\t\tlookAheadNotOpenBracePattern = '(?!(' + nmcharPattern + '|\\\\r?\\\\n|\\\\s|#|\\\\:|\\\\.|\\\\,|\\\\+|>|~|\\\\(|\\\\)|\\\\[|\\\\]|=|\\\\*=|~=|\\\\^=|\\'[^\\']*\\'|\"[^\"]*\"|' + commentToken + ')*?{)',\n\t\tlookAheadNotClosingParenPattern = '(?!' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n\t\tlookAheadForClosingParenPattern = '(?=' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n\t\tsuffixPattern = '(\\\\s*(?:!important\\\\s*)?[;}])',\n\t\t// Regular expressions\n\t\ttemporaryTokenRegExp = /`TMP`/g,\n\t\tcommentRegExp = new RegExp( commentPattern, 'gi' ),\n\t\tnoFlipSingleRegExp = new RegExp( '(' + noFlipPattern + lookAheadNotOpenBracePattern + '[^;}]+;?)', 'gi' ),\n\t\tnoFlipClassRegExp = new RegExp( '(' + noFlipPattern + charsWithinSelectorPattern + '})', 'gi' ),\n\t\tdirectionLtrRegExp = new RegExp( '(' + directionPattern + ')ltr', 'gi' ),\n\t\tdirectionRtlRegExp = new RegExp( '(' + directionPattern + ')rtl', 'gi' ),\n\t\tleftRegExp = new RegExp( nonLetterPattern + '(left)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi' ),\n\t\trightRegExp = new RegExp( nonLetterPattern + '(right)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi' ),\n\t\tleftInUrlRegExp = new RegExp( nonLetterPattern + '(left)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\trightInUrlRegExp = new RegExp( nonLetterPattern + '(right)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\tltrInUrlRegExp = new RegExp( nonLetterPattern + '(ltr)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\trtlInUrlRegExp = new RegExp( nonLetterPattern + '(rtl)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\tcursorEastRegExp = new RegExp( nonLetterPattern + '([ns]?)e-resize', 'gi' ),\n\t\tcursorWestRegExp = new RegExp( nonLetterPattern + '([ns]?)w-resize', 'gi' ),\n\t\tfourNotationQuantRegExp = new RegExp( fourNotationQuantPropsPattern + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + suffixPattern, 'gi' ),\n\t\tfourNotationColorRegExp = new RegExp( fourNotationColorPropsPattern + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + suffixPattern, 'gi' ),\n\t\tbgHorizontalPercentageRegExp = new RegExp( '(background(?:-position)?\\\\s*:\\\\s*(?:[^:;}\\\\s]+\\\\s+)*?)(' + quantPattern + ')', 'gi' ),\n\t\tbgHorizontalPercentageXRegExp = new RegExp( '(background-position-x\\\\s*:\\\\s*)(-?' + numPattern + '%)', 'gi' ),\n\t\t// border-radius: <length or percentage>{1,4} [optional: / <length or percentage>{1,4} ]\n\t\tborderRadiusRegExp = new RegExp( '(border-radius\\\\s*:\\\\s*)' + signedQuantPattern + '(?:(?:\\\\s+' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' +\n\t\t\t'(?:(?:(?:\\\\s*\\\\/\\\\s*)' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + suffixPattern, 'gi' ),\n\t\tboxShadowRegExp = new RegExp( '(box-shadow\\\\s*:\\\\s*(?:inset\\\\s*)?)' + signedQuantPattern, 'gi' ),\n\t\ttextShadow1RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern + '(\\\\s*)' + colorPattern, 'gi' ),\n\t\ttextShadow2RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + colorPattern + '(\\\\s*)' + signedQuantPattern, 'gi' ),\n\t\ttextShadow3RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern, 'gi' ),\n\t\ttranslateXRegExp = new RegExp( '(transform\\\\s*:[^;}]*)(translateX\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '(\\\\s*\\\\))', 'gi' ),\n\t\ttranslateRegExp = new RegExp( '(transform\\\\s*:[^;}]*)(translate\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '((?:\\\\s*,\\\\s*' + signedQuantPattern + '){0,2}\\\\s*\\\\))', 'gi' );\n\n\t/**\n\t * Invert the horizontal value of a background position property.\n\t *\n\t * @private\n\t * @param {string} match Matched property\n\t * @param {string} pre Text before value\n\t * @param {string} value Horizontal value\n\t * @return {string} Inverted property\n\t */\n\tfunction calculateNewBackgroundPosition( match, pre, value ) {\n\t\tvar idx, len;\n\t\tif ( value.slice( -1 ) === '%' ) {\n\t\t\tidx = value.indexOf( '.' );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\t// Two off, one for the \"%\" at the end, one for the dot itself\n\t\t\t\tlen = value.length - idx - 2;\n\t\t\t\tvalue = 100 - parseFloat( value );\n\t\t\t\tvalue = value.toFixed( len ) + '%';\n\t\t\t} else {\n\t\t\t\tvalue = 100 - parseFloat( value ) + '%';\n\t\t\t}\n\t\t}\n\t\treturn pre + value;\n\t}\n\n\t/**\n\t * Invert a set of border radius values.\n\t *\n\t * @private\n\t * @param {Array} values Matched values\n\t * @return {string} Inverted values\n\t */\n\tfunction flipBorderRadiusValues( values ) {\n\t\tswitch ( values.length ) {\n\t\t\tcase 4:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ], values[ 3 ], values[ 2 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ], values[ 1 ], values[ 2 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvalues = [ values[ 0 ] ];\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn values.join( ' ' );\n\t}\n\n\t/**\n\t * Invert a set of border radius values.\n\t *\n\t * @private\n\t * @param {string} match Matched property\n\t * @param {string} pre Text before value\n\t * @param {string} [firstGroup1]\n\t * @param {string} [firstGroup2]\n\t * @param {string} [firstGroup3]\n\t * @param {string} [firstGroup4]\n\t * @param {string} [secondGroup1]\n\t * @param {string} [secondGroup2]\n\t * @param {string} [secondGroup3]\n\t * @param {string} [secondGroup4]\n\t * @param {string} [post] Text after value\n\t * @return {string} Inverted property\n\t */\n\tfunction calculateNewBorderRadius( match, pre ) {\n\t\tvar values,\n\t\t\targs = [].slice.call( arguments ),\n\t\t\tfirstGroup = args.slice( 2, 6 ).filter( function ( val ) { return val; } ),\n\t\t\tsecondGroup = args.slice( 6, 10 ).filter( function ( val ) { return val; } ),\n\t\t\tpost = args[ 10 ] || '';\n\n\t\tif ( secondGroup.length ) {\n\t\t\tvalues = flipBorderRadiusValues( firstGroup ) + ' / ' + flipBorderRadiusValues( secondGroup );\n\t\t} else {\n\t\t\tvalues = flipBorderRadiusValues( firstGroup );\n\t\t}\n\n\t\treturn pre + values + post;\n\t}\n\n\t/**\n\t * Flip the sign of a CSS value, possibly with a unit.\n\t *\n\t * We can't just negate the value with unary minus due to the units.\n\t *\n\t * @private\n\t * @param {string} value\n\t * @return {string}\n\t */\n\tfunction flipSign( value ) {\n\t\tif ( parseFloat( value ) === 0 ) {\n\t\t\t// Don't mangle zeroes\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( value[ 0 ] === '-' ) {\n\t\t\treturn value.slice( 1 );\n\t\t}\n\n\t\treturn '-' + value;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} offset\n\t * @return {string}\n\t */\n\tfunction calculateNewShadow( match, property, offset ) {\n\t\treturn property + flipSign( offset );\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} prefix\n\t * @param {string} offset\n\t * @param {string} suffix\n\t * @return {string}\n\t */\n\tfunction calculateNewTranslate( match, property, prefix, offset, suffix ) {\n\t\treturn property + prefix + flipSign( offset ) + suffix;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} color\n\t * @param {string} space\n\t * @param {string} offset\n\t * @return {string}\n\t */\n\tfunction calculateNewFourTextShadow( match, property, color, space, offset ) {\n\t\treturn property + color + space + flipSign( offset );\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Transform a left-to-right stylesheet to right-to-left.\n\t\t *\n\t\t * @param {string} css Stylesheet to transform\n\t\t * @param {Object} options Options\n\t\t * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n\t\t * (e.g. 'ltr', 'rtl')\n\t\t * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n\t\t * (e.g. 'left', 'right')\n\t\t * @return {string} Transformed stylesheet\n\t\t */\n\t\t'transform': function ( css, options ) { // eslint-disable-line quote-props\n\t\t\t// Use single quotes in this object literal key for closure compiler.\n\t\t\t// Tokenizers\n\t\t\tvar noFlipSingleTokenizer = new Tokenizer( noFlipSingleRegExp, noFlipSingleToken ),\n\t\t\t\tnoFlipClassTokenizer = new Tokenizer( noFlipClassRegExp, noFlipClassToken ),\n\t\t\t\tcommentTokenizer = new Tokenizer( commentRegExp, commentToken );\n\n\t\t\t// Tokenize\n\t\t\tcss = commentTokenizer.tokenize(\n\t\t\t\tnoFlipClassTokenizer.tokenize(\n\t\t\t\t\tnoFlipSingleTokenizer.tokenize(\n\t\t\t\t\t\t// We wrap tokens in ` , not ~ like the original implementation does.\n\t\t\t\t\t\t// This was done because ` is not a legal character in CSS and can only\n\t\t\t\t\t\t// occur in URLs, where we escape it to %60 before inserting our tokens.\n\t\t\t\t\t\tcss.replace( '`', '%60' )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// Transform URLs\n\t\t\tif ( options.transformDirInUrl ) {\n\t\t\t\t// Replace 'ltr' with 'rtl' and vice versa in background URLs\n\t\t\t\tcss = css\n\t\t\t\t\t.replace( ltrInUrlRegExp, '$1' + temporaryToken )\n\t\t\t\t\t.replace( rtlInUrlRegExp, '$1ltr' )\n\t\t\t\t\t.replace( temporaryTokenRegExp, 'rtl' );\n\t\t\t}\n\t\t\tif ( options.transformEdgeInUrl ) {\n\t\t\t\t// Replace 'left' with 'right' and vice versa in background URLs\n\t\t\t\tcss = css\n\t\t\t\t\t.replace( leftInUrlRegExp, '$1' + temporaryToken )\n\t\t\t\t\t.replace( rightInUrlRegExp, '$1left' )\n\t\t\t\t\t.replace( temporaryTokenRegExp, 'right' );\n\t\t\t}\n\n\t\t\t// Transform rules\n\t\t\tcss = css\n\t\t\t\t// Replace direction: ltr; with direction: rtl; and vice versa.\n\t\t\t\t.replace( directionLtrRegExp, '$1' + temporaryToken )\n\t\t\t\t.replace( directionRtlRegExp, '$1ltr' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'rtl' )\n\t\t\t\t// Flip rules like left: , padding-right: , etc.\n\t\t\t\t.replace( leftRegExp, '$1' + temporaryToken )\n\t\t\t\t.replace( rightRegExp, '$1left' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'right' )\n\t\t\t\t// Flip East and West in rules like cursor: nw-resize;\n\t\t\t\t.replace( cursorEastRegExp, '$1$2' + temporaryToken )\n\t\t\t\t.replace( cursorWestRegExp, '$1$2e-resize' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'w-resize' )\n\t\t\t\t// Border radius\n\t\t\t\t.replace( borderRadiusRegExp, calculateNewBorderRadius )\n\t\t\t\t// Shadows\n\t\t\t\t.replace( boxShadowRegExp, calculateNewShadow )\n\t\t\t\t.replace( textShadow1RegExp, calculateNewFourTextShadow )\n\t\t\t\t.replace( textShadow2RegExp, calculateNewFourTextShadow )\n\t\t\t\t.replace( textShadow3RegExp, calculateNewShadow )\n\t\t\t\t// Translate\n\t\t\t\t.replace( translateXRegExp, calculateNewTranslate )\n\t\t\t\t.replace( translateRegExp, calculateNewTranslate )\n\t\t\t\t// Swap the second and fourth parts in four-part notation rules\n\t\t\t\t// like padding: 1px 2px 3px 4px;\n\t\t\t\t.replace( fourNotationQuantRegExp, '$1$2$3$8$5$6$7$4$9' )\n\t\t\t\t.replace( fourNotationColorRegExp, '$1$2$3$8$5$6$7$4$9' )\n\t\t\t\t// Flip horizontal background percentages\n\t\t\t\t.replace( bgHorizontalPercentageRegExp, calculateNewBackgroundPosition )\n\t\t\t\t.replace( bgHorizontalPercentageXRegExp, calculateNewBackgroundPosition );\n\n\t\t\t// Detokenize\n\t\t\tcss = noFlipSingleTokenizer.detokenize(\n\t\t\t\tnoFlipClassTokenizer.detokenize(\n\t\t\t\t\tcommentTokenizer.detokenize( css )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\treturn css;\n\t\t}\n\t};\n}\n\n/* Initialization */\n\ncssjanus = new CSSJanus();\n\n/* Exports */\n\nif ( typeof module !== 'undefined' && module.exports ) {\n\t/**\n\t * Transform a left-to-right stylesheet to right-to-left.\n\t *\n\t * This function is a static wrapper around the transform method of an instance of CSSJanus.\n\t *\n\t * @param {string} css Stylesheet to transform\n\t * @param {Object|boolean} [options] Options object, or transformDirInUrl option (back-compat)\n\t * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n\t * (e.g. 'ltr', 'rtl')\n\t * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n\t * (e.g. 'left', 'right')\n\t * @param {boolean} [transformEdgeInUrl] Back-compat parameter\n\t * @return {string} Transformed stylesheet\n\t */\n\texports.transform = function ( css, options, transformEdgeInUrl ) {\n\t\tvar norm;\n\t\tif ( typeof options === 'object' ) {\n\t\t\tnorm = options;\n\t\t} else {\n\t\t\tnorm = {};\n\t\t\tif ( typeof options === 'boolean' ) {\n\t\t\t\tnorm.transformDirInUrl = options;\n\t\t\t}\n\t\t\tif ( typeof transformEdgeInUrl === 'boolean' ) {\n\t\t\t\tnorm.transformEdgeInUrl = transformEdgeInUrl;\n\t\t\t}\n\t\t}\n\t\treturn cssjanus.transform( css, norm );\n\t};\n} else if ( typeof window !== 'undefined' ) {\n\t/* global window */\n\t// Allow cssjanus to be used in a browser.\n\t// eslint-disable-next-line dot-notation\n\twindow[ 'cssjanus' ] = cssjanus;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nexport var keys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.\n\nexport default function createBreakpoints(breakpoints) {\n  var _breakpoints$values = breakpoints.values,\n      values = _breakpoints$values === void 0 ? {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920\n  } : _breakpoints$values,\n      _breakpoints$unit = breakpoints.unit,\n      unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,\n      _breakpoints$step = breakpoints.step,\n      step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,\n      other = _objectWithoutProperties(breakpoints, [\"values\", \"unit\", \"step\"]);\n\n  function up(key) {\n    var value = typeof values[key] === 'number' ? values[key] : key;\n    return \"@media (min-width:\".concat(value).concat(unit, \")\");\n  }\n\n  function down(key) {\n    var endIndex = keys.indexOf(key) + 1;\n    var upperbound = values[keys[endIndex]];\n\n    if (endIndex === keys.length) {\n      // xl down applies to all sizes\n      return up('xs');\n    }\n\n    var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;\n    return \"@media (max-width:\".concat(value - step / 100).concat(unit, \")\");\n  }\n\n  function between(start, end) {\n    var endIndex = keys.indexOf(end);\n\n    if (endIndex === keys.length - 1) {\n      return up(start);\n    }\n\n    return \"@media (min-width:\".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, \") and \") + \"(max-width:\".concat((endIndex !== -1 && typeof values[keys[endIndex + 1]] === 'number' ? values[keys[endIndex + 1]] : end) - step / 100).concat(unit, \")\");\n  }\n\n  function only(key) {\n    return between(key, key);\n  }\n\n  var warnedOnce = false;\n\n  function width(key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!warnedOnce) {\n        warnedOnce = true;\n        console.warn([\"Material-UI: The `theme.breakpoints.width` utility is deprecated because it's redundant.\", 'Use the `theme.breakpoints.values` instead.'].join('\\n'));\n      }\n    }\n\n    return values[key];\n  }\n\n  return _extends({\n    keys: keys,\n    values: values,\n    up: up,\n    down: down,\n    between: between,\n    only: only,\n    width: width\n  }, other);\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function createMixins(breakpoints, spacing, mixins) {\n  var _toolbar;\n\n  return _extends({\n    gutters: function gutters() {\n      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      console.warn(['Material-UI: theme.mixins.gutters() is deprecated.', 'You can use the source of the mixin directly:', \"\\n      paddingLeft: theme.spacing(2),\\n      paddingRight: theme.spacing(2),\\n      [theme.breakpoints.up('sm')]: {\\n        paddingLeft: theme.spacing(3),\\n        paddingRight: theme.spacing(3),\\n      },\\n      \"].join('\\n'));\n      return _extends({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, _defineProperty({}, breakpoints.up('sm'), _extends({\n        paddingLeft: spacing(3),\n        paddingRight: spacing(3)\n      }, styles[breakpoints.up('sm')])));\n    },\n    toolbar: (_toolbar = {\n      minHeight: 56\n    }, _defineProperty(_toolbar, \"\".concat(breakpoints.up('xs'), \" and (orientation: landscape)\"), {\n      minHeight: 48\n    }), _defineProperty(_toolbar, breakpoints.up('sm'), {\n      minHeight: 64\n    }), _toolbar)\n  }, mixins);\n}","var common = {\n  black: '#000',\n  white: '#fff'\n};\nexport default common;","var grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nexport default grey;","var indigo = {\n  50: '#e8eaf6',\n  100: '#c5cae9',\n  200: '#9fa8da',\n  300: '#7986cb',\n  400: '#5c6bc0',\n  500: '#3f51b5',\n  600: '#3949ab',\n  700: '#303f9f',\n  800: '#283593',\n  900: '#1a237e',\n  A100: '#8c9eff',\n  A200: '#536dfe',\n  A400: '#3d5afe',\n  A700: '#304ffe'\n};\nexport default indigo;","var pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;","var red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nexport default red;","var orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","var blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","var green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { deepmerge } from '@material-ui/utils';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport indigo from '../colors/indigo';\nimport pink from '../colors/pink';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport green from '../colors/green';\nimport { darken, getContrastRatio, lighten } from './colorManipulator';\nexport var light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.54)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)',\n    // Text hints.\n    hint: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: grey[50]\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport var dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    hint: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: grey[800],\n    default: '#303030'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  var tonalOffsetLight = tonalOffset.light || tonalOffset;\n  var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nexport default function createPalette(palette) {\n  var _palette$primary = palette.primary,\n      primary = _palette$primary === void 0 ? {\n    light: indigo[300],\n    main: indigo[500],\n    dark: indigo[700]\n  } : _palette$primary,\n      _palette$secondary = palette.secondary,\n      secondary = _palette$secondary === void 0 ? {\n    light: pink.A200,\n    main: pink.A400,\n    dark: pink.A700\n  } : _palette$secondary,\n      _palette$error = palette.error,\n      error = _palette$error === void 0 ? {\n    light: red[300],\n    main: red[500],\n    dark: red[700]\n  } : _palette$error,\n      _palette$warning = palette.warning,\n      warning = _palette$warning === void 0 ? {\n    light: orange[300],\n    main: orange[500],\n    dark: orange[700]\n  } : _palette$warning,\n      _palette$info = palette.info,\n      info = _palette$info === void 0 ? {\n    light: blue[300],\n    main: blue[500],\n    dark: blue[700]\n  } : _palette$info,\n      _palette$success = palette.success,\n      success = _palette$success === void 0 ? {\n    light: green[300],\n    main: green[500],\n    dark: green[700]\n  } : _palette$success,\n      _palette$type = palette.type,\n      type = _palette$type === void 0 ? 'light' : _palette$type,\n      _palette$contrastThre = palette.contrastThreshold,\n      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,\n      _palette$tonalOffset = palette.tonalOffset,\n      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,\n      other = _objectWithoutProperties(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"type\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n\n  function getContrastText(background) {\n    var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var contrast = getContrastRatio(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([\"Material-UI: The contrast ratio of \".concat(contrast, \":1 for \").concat(contrastText, \" on \").concat(background), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  var augmentColor = function augmentColor(color) {\n    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;\n    color = _extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.main) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: The color provided to augmentColor(color) is invalid.\\nThe color object needs to have a `main` property or a `\".concat(mainShade, \"` property.\") : _formatMuiErrorMessage(4, mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: The color provided to augmentColor(color) is invalid.\\n`color.main` should be a string, but `\".concat(JSON.stringify(color.main), \"` was provided instead.\\n\\nDid you intend to use one of the following approaches?\\n\\nimport {\\xA0green } from \\\"@material-ui/core/colors\\\";\\n\\nconst theme1 = createTheme({ palette: {\\n  primary: green,\\n} });\\n\\nconst theme2 = createTheme({ palette: {\\n  primary: { main: green[500] },\\n} });\") : _formatMuiErrorMessage(5, JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  var types = {\n    dark: dark,\n    light: light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!types[type]) {\n      console.error(\"Material-UI: The palette type `\".concat(type, \"` is not supported.\"));\n    }\n  }\n\n  var paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: common,\n    // The palette type, can be light or dark.\n    type: type,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor(primary),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor(error),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor(warning),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor(info),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor(success),\n    // The grey colors.\n    grey: grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText: getContrastText,\n    // Generate a rich color object.\n    augmentColor: augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: tonalOffset\n  }, types[type]), other);\n  return paletteOutput;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { deepmerge } from '@material-ui/utils';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nvar warnedOnce = false;\n\nfunction roundWithDeprecationWarning(value) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      console.warn(['Material-UI: The `theme.typography.round` helper is deprecated.', 'Head to https://material-ui.com/r/migration-v4/#theme for a migration path.'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n\n  return round(value);\n}\n\nvar caseAllCaps = {\n  textTransform: 'uppercase'\n};\nvar defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nexport default function createTypography(palette, typography) {\n  var _ref = typeof typography === 'function' ? typography(palette) : typography,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n      _ref$fontWeightLight = _ref.fontWeightLight,\n      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n      _ref$fontWeightRegula = _ref.fontWeightRegular,\n      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n      _ref$fontWeightMedium = _ref.fontWeightMedium,\n      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n      _ref$fontWeightBold = _ref.fontWeightBold,\n      fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,\n      _ref$htmlFontSize = _ref.htmlFontSize,\n      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n      allVariants = _ref.allVariants,\n      pxToRem2 = _ref.pxToRem,\n      other = _objectWithoutProperties(_ref, [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('Material-UI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('Material-UI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  var coef = fontSize / 14;\n\n  var pxToRem = pxToRem2 || function (size) {\n    return \"\".concat(size / htmlFontSize * coef, \"rem\");\n  };\n\n  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {\n    return _extends({\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontSize: pxToRem(size),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight: lineHeight\n    }, fontFamily === defaultFontFamily ? {\n      letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n    } : {}, casing, allVariants);\n  };\n\n  var variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return deepmerge(_extends({\n    htmlFontSize: htmlFontSize,\n    pxToRem: pxToRem,\n    round: roundWithDeprecationWarning,\n    // TODO v5: remove\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeightLight: fontWeightLight,\n    fontWeightRegular: fontWeightRegular,\n    fontWeightMedium: fontWeightMedium,\n    fontWeightBold: fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}","var shadowKeyUmbraOpacity = 0.2;\nvar shadowKeyPenumbraOpacity = 0.14;\nvar shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow() {\n  return [\"\".concat(arguments.length <= 0 ? undefined : arguments[0], \"px \").concat(arguments.length <= 1 ? undefined : arguments[1], \"px \").concat(arguments.length <= 2 ? undefined : arguments[2], \"px \").concat(arguments.length <= 3 ? undefined : arguments[3], \"px rgba(0,0,0,\").concat(shadowKeyUmbraOpacity, \")\"), \"\".concat(arguments.length <= 4 ? undefined : arguments[4], \"px \").concat(arguments.length <= 5 ? undefined : arguments[5], \"px \").concat(arguments.length <= 6 ? undefined : arguments[6], \"px \").concat(arguments.length <= 7 ? undefined : arguments[7], \"px rgba(0,0,0,\").concat(shadowKeyPenumbraOpacity, \")\"), \"\".concat(arguments.length <= 8 ? undefined : arguments[8], \"px \").concat(arguments.length <= 9 ? undefined : arguments[9], \"px \").concat(arguments.length <= 10 ? undefined : arguments[10], \"px \").concat(arguments.length <= 11 ? undefined : arguments[11], \"px rgba(0,0,0,\").concat(shadowAmbientShadowOpacity, \")\")].join(',');\n} // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\n\n\nvar shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\nexport default shadows;","var shape = {\n  borderRadius: 4\n};\nexport default shape;","import { createUnarySpacing } from '@material-ui/system';\nvar warnOnce;\nexport default function createSpacing() {\n  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons and type, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  var transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  var spacing = function spacing() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(\"Material-UI: Too many arguments provided, expected between 0 and 4, got \".concat(args.length));\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(function (argument) {\n      if (typeof argument === 'string') {\n        return argument;\n      }\n\n      var output = transform(argument);\n      return typeof output === 'number' ? \"\".concat(output, \"px\") : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: function get() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { deepmerge } from '@material-ui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport transitions from './transitions';\nimport zIndex from './zIndex';\n\nfunction createTheme() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _options$breakpoints = options.breakpoints,\n      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,\n      _options$mixins = options.mixins,\n      mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,\n      _options$palette = options.palette,\n      paletteInput = _options$palette === void 0 ? {} : _options$palette,\n      spacingInput = options.spacing,\n      _options$typography = options.typography,\n      typographyInput = _options$typography === void 0 ? {} : _options$typography,\n      other = _objectWithoutProperties(options, [\"breakpoints\", \"mixins\", \"palette\", \"spacing\", \"typography\"]);\n\n  var palette = createPalette(paletteInput);\n  var breakpoints = createBreakpoints(breakpointsInput);\n  var spacing = createSpacing(spacingInput);\n  var muiTheme = deepmerge({\n    breakpoints: breakpoints,\n    direction: 'ltr',\n    mixins: createMixins(breakpoints, spacing, mixinsInput),\n    overrides: {},\n    // Inject custom styles\n    palette: palette,\n    props: {},\n    // Provide default props\n    shadows: shadows,\n    typography: createTypography(palette, typographyInput),\n    spacing: spacing,\n    shape: shape,\n    transitions: transitions,\n    zIndex: zIndex\n  }, other);\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  muiTheme = args.reduce(function (acc, argument) {\n    return deepmerge(acc, argument);\n  }, muiTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];\n\n    var traverse = function traverse(node, parentKey) {\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        var child = node[key];\n\n        if (depth === 1) {\n          if (key.indexOf('Mui') === 0 && child) {\n            traverse(child, key, depth + 1);\n          }\n        } else if (pseudoClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error([\"Material-UI: The `\".concat(parentKey, \"` component increases \") + \"the CSS specificity of the `\".concat(key, \"` internal state.\"), 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify({\n              root: _defineProperty({}, \"&$\".concat(key), child)\n            }, null, 2), '', 'https://material-ui.com/r/pseudo-classes-guide'].join('\\n'));\n          } // Remove the style to prevent global conflicts.\n\n\n          node[key] = {};\n        }\n      }\n    };\n\n    traverse(muiTheme.overrides);\n  }\n\n  return muiTheme;\n}\n\nvar warnedOnce = false;\nexport function createMuiTheme() {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the createMuiTheme function was renamed to createTheme.', '', \"You should use `import { createTheme } from '@material-ui/core/styles'`\"].join('\\n'));\n    }\n  }\n\n  return createTheme.apply(void 0, arguments);\n}\nexport default createTheme;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function createMixins(breakpoints, spacing, mixins) {\n  return _extends({\n    toolbar: {\n      minHeight: 56,\n      [`${breakpoints.up('xs')} and (orientation: landscape)`]: {\n        minHeight: 48\n      },\n      [breakpoints.up('sm')]: {\n        minHeight: 64\n      }\n    }\n  }, mixins);\n}","const common = {\n  black: '#000',\n  white: '#fff'\n};\nexport default common;","const grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#f5f5f5',\n  A200: '#eeeeee',\n  A400: '#bdbdbd',\n  A700: '#616161'\n};\nexport default grey;","const purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","const red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nexport default red;","const orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","const blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","const lightBlue = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\nexport default lightBlue;","const green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nimport { deepmerge } from '@mui/utils';\nimport { darken, getContrastRatio, lighten } from '@mui/system';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport purple from '../colors/purple';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport lightBlue from '../colors/lightBlue';\nimport green from '../colors/green';\nexport const light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport const dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: blue[200],\n      light: blue[50],\n      dark: blue[400]\n    };\n  }\n\n  return {\n    main: blue[700],\n    light: blue[400],\n    dark: blue[800]\n  };\n}\n\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: purple[200],\n      light: purple[50],\n      dark: purple[400]\n    };\n  }\n\n  return {\n    main: purple[500],\n    light: purple[300],\n    dark: purple[700]\n  };\n}\n\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: red[500],\n      light: red[300],\n      dark: red[700]\n    };\n  }\n\n  return {\n    main: red[700],\n    light: red[400],\n    dark: red[800]\n  };\n}\n\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: lightBlue[400],\n      light: lightBlue[300],\n      dark: lightBlue[700]\n    };\n  }\n\n  return {\n    main: lightBlue[700],\n    light: lightBlue[500],\n    dark: lightBlue[900]\n  };\n}\n\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: green[400],\n      light: green[300],\n      dark: green[700]\n    };\n  }\n\n  return {\n    main: green[800],\n    light: green[500],\n    dark: green[900]\n  };\n}\n\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: orange[400],\n      light: orange[300],\n      dark: orange[700]\n    };\n  }\n\n  return {\n    main: '#ED6C02',\n    // closest to orange[800] that pass 3:1.\n    light: orange[500],\n    dark: orange[900]\n  };\n}\n\nexport default function createPalette(palette) {\n  const {\n    mode = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = _objectWithoutPropertiesLoose(palette, _excluded);\n\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = _extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : _formatMuiErrorMessage(11, name ? ` (${name})` : '', mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : _formatMuiErrorMessage(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const modes = {\n    dark,\n    light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n\n  const paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common,\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport { deepmerge } from '@mui/utils';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nexport default function createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n        {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14,\n    // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell MUI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16,\n    // Apply the CSS properties to all the variants.\n    allVariants,\n    pxToRem: pxToRem2\n  } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  const coef = fontSize / 14;\n\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return deepmerge(_extends({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}","const shadowKeyUmbraOpacity = 0.2;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow(...px) {\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');\n} // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\n\n\nconst shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\nexport default shadows;","// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nconst zIndex = {\n  mobileStepper: 1000,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\nexport default zIndex;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"breakpoints\", \"mixins\", \"spacing\", \"palette\", \"transitions\", \"typography\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport { generateUtilityClass } from '@mui/core';\nimport { createTheme as systemCreateTheme } from '@mui/system';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport createTransitions from './createTransitions';\nimport zIndex from './zIndex';\n\nfunction createTheme(options = {}, ...args) {\n  const {\n    mixins: mixinsInput = {},\n    palette: paletteInput = {},\n    transitions: transitionsInput = {},\n    typography: typographyInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const palette = createPalette(paletteInput);\n  const systemTheme = systemCreateTheme(options);\n  let muiTheme = deepmerge(systemTheme, {\n    mixins: createMixins(systemTheme.breakpoints, systemTheme.spacing, mixinsInput),\n    palette,\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\n    shadows: shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    transitions: createTransitions(transitionsInput),\n    zIndex: _extends({}, zIndex)\n  });\n  muiTheme = deepmerge(muiTheme, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];\n\n    const traverse = (node, component) => {\n      let key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        const child = node[key];\n\n        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            const stateClass = generateUtilityClass('', key);\n            console.error([`MUI: The \\`${component}\\` component increases ` + `the CSS specificity of the \\`${key}\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({\n              root: {\n                [`&.${stateClass}`]: child\n              }\n            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\\n'));\n          } // Remove the style to prevent global conflicts.\n\n\n          node[key] = {};\n        }\n      }\n    };\n\n    Object.keys(muiTheme.components).forEach(component => {\n      const styleOverrides = muiTheme.components[component].styleOverrides;\n\n      if (styleOverrides && component.indexOf('Mui') === 0) {\n        traverse(styleOverrides, component);\n      }\n    });\n  }\n\n  return muiTheme;\n}\n\nlet warnedOnce = false;\nexport function createMuiTheme(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['MUI: the createMuiTheme function was renamed to createTheme.', '', \"You should use `import { createTheme } from '@mui/material/styles'`\"].join('\\n'));\n    }\n  }\n\n  return createTheme(...args);\n}\nexport default createTheme;","import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\n\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\n\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Logger);\n\n    this.init(concreteLogger, options);\n  }\n\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }, this.options));\n    }\n  }]);\n\n  return Logger;\n}();\n\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\n\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath.obj,\n      k = _getLastOfPath.k;\n\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath2.obj,\n      k = _getLastOfPath2.k;\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n      obj = _getLastOfPath3.obj,\n      k = _getLastOfPath3.k;\n\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (var prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\n\nfunction deepFind(obj, path) {\n  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  var paths = path.split(keySeparator);\n  var current = obj;\n\n  for (var i = 0; i < paths.length; ++i) {\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n\n    if (current[paths[i]] === undefined) {\n      var j = 2;\n      var p = paths.slice(i, i + j).join(keySeparator);\n      var mix = current[p];\n\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n\n      if (mix === undefined) return undefined;\n      if (typeof mix === 'string') return mix;\n      if (p && typeof mix[p] === 'string') return mix[p];\n      var joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n\n    current = current[paths[i]];\n  }\n\n  return current;\n}\n\nvar ResourceStore = function (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n\n  function ResourceStore(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n\n    _classCallCheck(this, ResourceStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStore).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.data = data || {};\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    if (_this.options.ignoreJSONStructure === undefined) {\n      _this.options.ignoreJSONStructure = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n\n      var result = getPath(this.data, path);\n      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread({}, pack, resources);\n      }\n\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread({}, {}, this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nvar checkedLoadedFor = {};\n\nvar Translator = function (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n\n  function Translator(services) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Translator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Translator).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n\n      if (key === undefined || key === null) {\n        return false;\n      }\n\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS;\n\n      if (nsSeparator && key.indexOf(nsSeparator) > -1) {\n        var m = key.match(this.interpolator.nestingRegexp);\n\n        if (m && m.length > 0) {\n          return {\n            key: key,\n            namespaces: namespaces\n          };\n        }\n\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options, lastKey) {\n      var _this2 = this;\n\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n\n      if (!options) options = {};\n      if (keys === undefined || keys === null) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n          key = _this$extractFromKey.key,\n          namespaces = _this$extractFromKey.namespaces;\n\n      var namespace = namespaces[namespaces.length - 1];\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          return namespace + nsSeparator + key;\n        }\n\n        return key;\n      }\n\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n\n          return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, _objectSpread({}, options, {\n            ns: namespaces\n          })) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n        }\n\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy = resTypeIsArray ? [] : {};\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy[m] = this.translate(deepKey, _objectSpread({}, options, {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy[m] === deepKey) copy[m] = res[m];\n            }\n          }\n\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options, lastKey);\n      } else {\n        var usedDefault = false;\n        var usedKey = false;\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var hasDefaultValue = Translator.hasDefaultValue(options);\n        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count) : '';\n        var defaultValue = options[\"defaultValue\".concat(defaultValueSuffix)] || options.defaultValue;\n\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n\n        var missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n        var resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n\n          if (keySeparator) {\n            var fk = this.resolve(key, _objectSpread({}, options, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n\n          var send = function send(l, k, fallbackValue) {\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? fallbackValue : resForMissing, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? fallbackValue : resForMissing, updateMissing, options);\n            }\n\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (language) {\n                _this2.pluralResolver.getSuffixes(language).forEach(function (suffix) {\n                  send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n\n        res = this.extendTranslation(res, keys, options, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved, lastKey) {\n      var _this3 = this;\n\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        if (options.interpolation) this.interpolator.init(_objectSpread({}, options, {\n          interpolation: _objectSpread({}, this.options.interpolation, options.interpolation)\n        }));\n        var skipOnVariables = options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;\n        var nestBef;\n\n        if (skipOnVariables) {\n          var nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread({}, this.options.interpolation.defaultVariables, data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n\n        if (skipOnVariables) {\n          var na = res.match(this.interpolator.nestingRegexp);\n          var nestAft = na && na.length;\n          if (nestBef < nestAft) options.nest = false;\n        }\n\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          if (lastKey && lastKey[0] === args[0] && !options.context) {\n            _this3.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n\n            return null;\n          }\n\n          return _this3.translate.apply(_this3, args.concat([key]));\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      }\n\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey;\n      var exactUsedKey;\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys];\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n\n        var extracted = _this4.extractFromKey(k, options);\n\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKey = key;\n            var finalKeys = [finalKey];\n\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count);\n              if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);\n              if (needsContextHandling) finalKeys.push(finalKey += \"\".concat(_this4.options.contextSeparator).concat(options.context));\n              if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);\n            }\n\n            var possibleKey;\n\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }], [{\n    key: \"hasDefaultValue\",\n    value: function hasDefaultValue(options) {\n      var prefix = 'defaultValue';\n\n      for (var option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.supportedLngs || false;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase();\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      this.logger.deprecate('languageUtils.isWhitelisted', 'function \"isWhitelisted\" will be renamed to \"isSupportedCode\" in the next major - please make sure to rename it\\'s usage asap.');\n      return this.isSupportedCode(code);\n    }\n  }, {\n    key: \"isSupportedCode\",\n    value: function isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getBestMatchFromCodes\",\n    value: function getBestMatchFromCodes(codes) {\n      var _this = this;\n\n      if (!codes) return null;\n      var found;\n      codes.forEach(function (code) {\n        if (found) return;\n\n        var cleanedLng = _this.formatLanguageCode(code);\n\n        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(function (code) {\n          if (found) return;\n\n          var lngOnly = _this.getLanguagePartFromCode(code);\n\n          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = _this.options.supportedLngs.find(function (supportedLng) {\n            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n          });\n        });\n      }\n\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || [];\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this2 = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this2.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          _this2.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\n\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PluralResolver);\n\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.rules = createRules();\n  }\n\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var rule = this.getRule(code);\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      return this.getSuffixes(code).map(function (suffix) {\n        return key + suffix;\n      });\n    }\n  }, {\n    key: \"getSuffixes\",\n    value: function getSuffixes(code) {\n      var _this = this;\n\n      var rule = this.getRule(code);\n\n      if (!rule) {\n        return [];\n      }\n\n      return rule.numbers.map(function (number) {\n        return _this.getSuffix(code, number);\n      });\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var _this2 = this;\n\n      var rule = this.getRule(code);\n\n      if (rule) {\n        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n        var suffix = rule.numbers[idx];\n\n        if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          if (suffix === 2) {\n            suffix = 'plural';\n          } else if (suffix === 1) {\n            suffix = '';\n          }\n        }\n\n        var returnSuffix = function returnSuffix() {\n          return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n        };\n\n        if (this.options.compatibilityJSON === 'v1') {\n          if (suffix === 1) return '';\n          if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n          return returnSuffix();\n        } else if (this.options.compatibilityJSON === 'v2') {\n          return returnSuffix();\n        } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          return returnSuffix();\n        }\n\n        return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n      }\n\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }]);\n\n  return PluralResolver;\n}();\n\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n\n    this.init(options);\n  }\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread({}, options, data, {\n            interpolationkey: key\n          })) : path;\n        }\n\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread({}, options, data, {\n          interpolationkey: k\n        }));\n      };\n\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;\n      var todos = [{\n        regex: this.regexpUnescape,\n        safeValue: function safeValue(val) {\n          return regexSafe(val);\n        }\n      }, {\n        regex: this.regexp,\n        safeValue: function safeValue(val) {\n          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);\n        }\n      }];\n      todos.forEach(function (todo) {\n        replaces = 0;\n\n        while (match = todo.regex.exec(str)) {\n          value = handleFormat(match[1].trim());\n\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              var temp = missingInterpolationHandler(str, match, options);\n              value = typeof temp === 'string' ? temp : '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              _this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n\n              value = '';\n            }\n          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n\n          var safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n\n          if (skipOnVariables) {\n            todo.regex.lastIndex += safeValue.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n\n          replaces++;\n\n          if (replaces >= _this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n\n      var clonedOptions = _objectSpread({}, options);\n\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        }\n\n        delete clonedOptions.defaultValue;\n        return key;\n      }\n\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        var doReduce = false;\n\n        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n          var r = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n          match[1] = r.shift();\n          formatters = r;\n          doReduce = true;\n        }\n\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && typeof value !== 'string') return value;\n        if (typeof value !== 'string') value = makeString(value);\n\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n\n        if (doReduce) {\n          value = formatters.reduce(function (v, f) {\n            return _this2.format(v, f, options.lng, _objectSpread({}, options, {\n              interpolationkey: match[1].trim()\n            }));\n          }, value.trim());\n        }\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n\n      return str;\n    }\n  }]);\n\n  return Interpolator;\n}();\n\nfunction remove(arr, what) {\n  var found = arr.indexOf(what);\n\n  while (found !== -1) {\n    arr.splice(found, 1);\n    found = arr.indexOf(what);\n  }\n}\n\nvar Connector = function (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n\n  function Connector(backend, store, services) {\n    var _this;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, Connector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.state = {};\n    _this.queue = [];\n\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n\n    return _this;\n  }\n\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n\n      var toLoad = [];\n      var pending = [];\n      var toLoadLanguages = [];\n      var toLoadNamespaces = [];\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2;\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending.indexOf(name) < 0) pending.push(name);\n          } else {\n            _this2.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending.indexOf(name) < 0) pending.push(name);\n            if (toLoad.indexOf(name) < 0) toLoad.push(name);\n            if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages.push(lng);\n      });\n\n      if (toLoad.length || pending.length) {\n        this.queue.push({\n          pending: pending,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n\n      return {\n        toLoad: toLoad,\n        pending: pending,\n        toLoadLanguages: toLoadLanguages,\n        toLoadNamespaces: toLoadNamespaces\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      }\n\n      this.state[name] = err ? -1 : 2;\n      var loaded = {};\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        remove(q.pending, name);\n        if (err) q.errors.push(err);\n\n        if (q.pending.length === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = [];\n\n            if (q.loaded[l].length) {\n              q.loaded[l].forEach(function (ns) {\n                if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);\n              });\n            }\n          });\n          q.done = true;\n\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {});\n      return this.backend[fcName](lng, ns, function (err, data) {\n        if (err && data && tried < 5) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n\n        callback(err, data);\n      });\n    }\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n\n      if (key === undefined || key === null || key === '') return;\n\n      if (this.backend && this.backend.create) {\n        this.backend.create(languages, namespace, key, fallbackValue, null, _objectSpread({}, options, {\n          isUpdate: isUpdate\n        }));\n      }\n\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    whitelist: false,\n    nonExplicitWhitelist: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: true,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: false\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n\n  if (options.whitelist) {\n    if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n      options.whitelist = options.whitelist.concat(['cimode']);\n    }\n\n    options.supportedLngs = options.whitelist;\n  }\n\n  if (options.nonExplicitWhitelist) {\n    options.nonExplicitSupportedLngs = options.nonExplicitWhitelist;\n  }\n\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n\n  return options;\n}\n\nfunction noop() {}\n\nvar I18n = function (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n\n  function I18n() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, I18n);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(I18n).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n\n    if (callback && !_this.isInitialized && !options.isClone) {\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n\n    return _this;\n  }\n\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      if (options.whitelist && !options.supportedLngs) {\n        this.logger.deprecate('whitelist', 'option \"whitelist\" will be renamed to \"supportedLngs\" in the next major - please make sure to rename this option asap.');\n      }\n\n      if (options.nonExplicitWhitelist && !options.nonExplicitSupportedLngs) {\n        this.logger.deprecate('whitelist', 'options \"nonExplicitWhitelist\" will be renamed to \"nonExplicitSupportedLngs\" in the next major - please make sure to rename this option asap.');\n      }\n\n      this.options = _objectSpread({}, get(), this.options, transformOptions(options));\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      }\n\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          s.languageDetector.init(s, this.options.detection, this.options);\n        }\n\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n\n      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store2;\n\n          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);\n\n          return _this2;\n        };\n      });\n      var deferred = defer();\n\n      var load = function load() {\n        var finish = function finish(err, t) {\n          if (_this2.isInitialized && !_this2.initializedStoreOnce) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');\n          _this2.isInitialized = true;\n          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);\n\n          _this2.emit('initialized', _this2.options);\n\n          deferred.resolve(t);\n          callback(err, t);\n        };\n\n        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));\n\n        _this2.changeLanguage(_this2.options.lng, finish);\n      };\n\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();\n        var toLoad = [];\n\n        var append = function append(lng) {\n          if (!lng) return;\n\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n\n        if (!usedLng) {\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n\n        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n\n      var done = function done(err, l) {\n        if (l) {\n          _this4.language = l;\n          _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n\n          _this4.translator.changeLanguage(l);\n\n          _this4.isLanguageChangingTo = undefined;\n\n          _this4.emit('languageChanged', l);\n\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n\n      var setLng = function setLng(lngs) {\n        if (!lng && !lngs && _this4.services.languageDetector) lngs = [];\n        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);\n\n        if (l) {\n          if (!_this4.language) {\n            _this4.language = l;\n            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n          }\n\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        this.services.languageDetector.detect(setLng);\n      } else {\n        setLng(lng);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns, keyPrefix) {\n      var _this5 = this;\n\n      var fixedT = function fixedT(key, opts) {\n        var options;\n\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        var keySeparator = _this5.options.keySeparator || '.';\n        var resultKey = keyPrefix ? \"\".concat(keyPrefix).concat(keySeparator).concat(key) : key;\n        return _this5.t(resultKey, options);\n      };\n\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n\n      fixedT.ns = ns;\n      fixedT.keyPrefix = keyPrefix;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n\n      var lng = this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n\n        return loadState === -1 || loadState === 2;\n      };\n\n      if (options.precheck) {\n        var preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n\n      var deferred = defer();\n\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      });\n\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];\n      return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"createInstance\",\n    value: function createInstance() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      return new I18n(options, callback);\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n      var mergedOptions = _objectSpread({}, this.options, options, {\n        isClone: true\n      });\n\n      var clone = new I18n(mergedOptions);\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages\n      };\n    }\n  }]);\n\n  return I18n;\n}(EventEmitter);\n\nvar i18next = new I18n();\n\nexport default i18next;\n","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@material-ui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n\n  /* eslint-disable prefer-template */\n  var url = 'https://material-ui.com/production-error/?code=' + code;\n\n  for (var i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n\n  return 'Minified Material-UI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), function (props) {\n    var fontSize = props.fontSize;\n\n    if (fontSize === 'default') {\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && // TS thinks `item is possibly null` even though this was our first guard.\n  // @ts-expect-error\n  item.constructor === Object;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nimport {shallowEquals} from './objects';\r\n\r\nimport {BaseEvent, Postable} from './base-event';\r\nimport {SyncEvent, VoidSyncEvent} from './sync-event';\r\nimport {AsyncEvent, AsyncEventOpts} from './async-event';\r\nimport {QueuedEvent, QueuedEventOpts} from './queued-event';\r\n\r\nexport enum EventType {\r\n    Sync,\r\n    Async,\r\n    Queued\r\n}\r\n\r\nexport interface AnyEventOpts {\r\n    /**\r\n     * Create evtFirstAttached and evtLastDetached so you can monitor when someone is subscribed\r\n     */\r\n    monitorAttach?: boolean;\r\n}\r\n\r\n/**\r\n * An event that behaves like a Sync/Async/Queued event depending on how\r\n * you subscribe.\r\n */\r\nexport class AnyEvent<T> implements Postable<T> {\r\n    /**\r\n     * Sent when someone attaches or detaches\r\n     */\r\n    public get evtListenersChanged(): VoidSyncEvent {\r\n        if (!this._listenersChanged) {\r\n            // need to delay-load to avoid stack overflow in constructor\r\n            this._listenersChanged = new VoidSyncEvent();\r\n        }\r\n        return this._listenersChanged;\r\n    }\r\n\r\n    /**\r\n     * Event for listening to listener count\r\n     */\r\n    private _listenersChanged?: VoidSyncEvent;\r\n\r\n    /**\r\n     * Triggered whenever someone attaches and nobody was attached.\r\n     * Note: you must call the constructor with monitorAttach set to true to create this event!\r\n     */\r\n    public evtFirstAttached: VoidAnyEvent;\r\n    /**\r\n     * Triggered whenever someone detaches and nobody is attached anymore\r\n     * Note: you must call the constructor with monitorAttach set to true to create this event!\r\n     */\r\n    public evtLastDetached: VoidAnyEvent;\r\n\r\n    /**\r\n     * Underlying event implementations; one for every attach type + opts combination\r\n     */\r\n    private _events: BaseEvent<T>[] = [];\r\n\r\n    constructor(opts?: AnyEventOpts) {\r\n        if (opts && opts.monitorAttach) {\r\n            this.evtFirstAttached = new VoidAnyEvent();\r\n            this.evtLastDetached = new VoidAnyEvent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Legacy method\r\n     * same as attachSync/attachAsync/attachQueued; based on the given enum\r\n     * @param mode determines whether to attach sync/async/queued\r\n     */\r\n    public attach(handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public attach(boundTo: Object, handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public attach(event: Postable<T>, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public attach(mode: EventType, handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public attach(mode: EventType, boundTo: Object, handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public attach(mode: EventType, event: Postable<T>, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public attach(...args: any[]): () => void {\r\n        let mode = EventType.Sync;\r\n        if (args.length > 0 && typeof args[0] === 'number') {\r\n            mode = args.shift() as EventType;\r\n        }\r\n        let boundTo: Object = this; // add ourselves as default 'boundTo' argument\r\n        let handler: ((data: T) => void) | undefined;\r\n        let opts: AsyncEventOpts | QueuedEventOpts;\r\n        let postable: Postable<T> | undefined;\r\n        if (typeof args[0] === 'function' || (args[0] && typeof args[0] === 'object' && typeof args[0].post === 'function')) {\r\n            if (typeof args[0] === 'function') {\r\n                handler = args[0];\r\n            } else {\r\n                postable = args[0];\r\n            }\r\n            opts = args[1];\r\n        } else {\r\n            boundTo = args[0];\r\n            handler = args[1];\r\n            opts = args[2];\r\n        }\r\n        return this._attach(mode, boundTo, handler, postable, opts, false);\r\n    }\r\n\r\n    /**\r\n     * Legacy method\r\n     * same as onceSync/onceAsync/onceQueued; based on the given enum\r\n     * @param mode determines whether to once sync/async/queued\r\n     */\r\n    public once(handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public once(boundTo: Object, handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public once(event: Postable<T>, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public once(mode: EventType, handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public once(mode: EventType, boundTo: Object, handler: (data: T) => void, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public once(mode: EventType, event: Postable<T>, opts?: AsyncEventOpts | QueuedEventOpts): () => void;\r\n    public once(...args: any[]): () => void {\r\n        let mode = EventType.Sync;\r\n        if (args.length > 0 && typeof args[0] === 'number') {\r\n            mode = args.shift() as EventType;\r\n        }\r\n        let boundTo: object = this; // add ourselves as default 'boundTo' argument\r\n        let handler: ((data: T) => void) | undefined;\r\n        let opts: AsyncEventOpts | QueuedEventOpts;\r\n        let postable: Postable<T> | undefined;\r\n        if (typeof args[0] === 'function' || (args[0] && typeof args[0] === 'object' && typeof args[0].post === 'function')) {\r\n            if (typeof args[0] === 'function') {\r\n                handler = args[0];\r\n            } else {\r\n                postable = args[0];\r\n            }\r\n            opts = args[1];\r\n        } else {\r\n            boundTo = args[0];\r\n            handler = args[1];\r\n            opts = args[2];\r\n        }\r\n        return this._attach(mode, boundTo, handler, postable, opts, true);\r\n    }\r\n\r\n    private _attach(\r\n        mode: EventType,\r\n        boundTo: Object | undefined,\r\n        handler: ((data: T) => void) | undefined,\r\n        postable: Postable<T> | undefined,\r\n        opts: AsyncEventOpts | QueuedEventOpts | undefined,\r\n        once: boolean\r\n    ): () => void {\r\n        const prevCount = (!!this.evtFirstAttached ? this.listenerCount() : 0);\r\n        let event: BaseEvent<T> | undefined;\r\n        switch (mode) {\r\n            case EventType.Sync: {\r\n                for (const evt of this._events) {\r\n                    if (evt instanceof SyncEvent) {\r\n                        event = evt;\r\n                    }\r\n                }\r\n                if (!event) {\r\n                    event = new SyncEvent<T>();\r\n                    this._events.push(event);\r\n                }\r\n            } break;\r\n            case EventType.Async: {\r\n                for (const evt of this._events) {\r\n                    if (evt instanceof AsyncEvent && shallowEquals((<AsyncEvent<T>>evt).options, opts)) {\r\n                        event = evt;\r\n                    }\r\n                }\r\n                if (!event) {\r\n                    event = new AsyncEvent<T>(opts);\r\n                    this._events.push(event);\r\n                }\r\n            } break;\r\n            case EventType.Queued: {\r\n                for (const evt of this._events) {\r\n                    if (evt instanceof QueuedEvent && shallowEquals((<QueuedEvent<T>>evt).options, opts)) {\r\n                        event = evt;\r\n                    }\r\n                }\r\n                if (!event) {\r\n                    event = new QueuedEvent<T>(opts);\r\n                    this._events.push(event);\r\n                }\r\n            } break;\r\n            default:\r\n                throw new Error('unknown EventType');\r\n        }\r\n        let detacher: () => void;\r\n        if (once) {\r\n            if (postable) {\r\n                detacher = event.once(postable);\r\n            } else {\r\n                detacher = event.once(boundTo!, handler!);\r\n            }\r\n        } else {\r\n            if (postable) {\r\n                detacher = event.attach(postable);\r\n            } else {\r\n                detacher = event.attach(boundTo!, handler!);\r\n            }\r\n        }\r\n        if (this.evtFirstAttached && prevCount === 0) {\r\n            this.evtFirstAttached.post();\r\n        }\r\n        if (this.evtListenersChanged && prevCount !== this.listenerCount()) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        return (): void => {\r\n            const prevCount = (!!this.evtLastDetached ? this.listenerCount() : 0);\r\n            detacher();\r\n            if (!!this.evtLastDetached && prevCount > 0 && this.listenerCount() === 0) {\r\n                this.evtLastDetached.post();\r\n            }\r\n            if (this.evtListenersChanged && prevCount !== this.listenerCount()) {\r\n                this.evtListenersChanged.post();\r\n            }\r\n        };\r\n    }\r\n\r\n    public attachSync(handler: (data: T) => void): () => void;\r\n    public attachSync(boundTo: Object, handler: (data: T) => void): () => void;\r\n    public attachSync(event: Postable<T>): () => void;\r\n    public attachSync(...args: any[]): () => void {\r\n        args.unshift(EventType.Sync);\r\n        return this.attach.apply(this, args);\r\n    }\r\n\r\n    public onceSync(handler: (data: T) => void): () => void;\r\n    public onceSync(boundTo: Object, handler: (data: T) => void): () => void;\r\n    public onceSync(event: Postable<T>): () => void;\r\n    public onceSync(...args: any[]): () => void {\r\n        args.unshift(EventType.Sync);\r\n        return this.once.apply(this, args);\r\n    }\r\n\r\n    public attachAsync(handler: (data: T) => void, opts?: AsyncEventOpts): () => void;\r\n    public attachAsync(boundTo: Object, handler: (data: T) => void, opts?: AsyncEventOpts): () => void;\r\n    public attachAsync(event: Postable<T>, opts?: AsyncEventOpts): () => void;\r\n    public attachAsync(...args: any[]): () => void {\r\n        args.unshift(EventType.Async);\r\n        return this.attach.apply(this, args);\r\n    }\r\n\r\n    public onceAsync(handler: (data: T) => void, opts?: AsyncEventOpts): () => void;\r\n    public onceAsync(boundTo: Object, handler: (data: T) => void, opts?: AsyncEventOpts): () => void;\r\n    public onceAsync(event: Postable<T>, opts?: AsyncEventOpts): () => void;\r\n    public onceAsync(...args: any[]): () => void {\r\n        args.unshift(EventType.Async);\r\n        return this.once.apply(this, args);\r\n    }\r\n\r\n    public attachQueued(handler: (data: T) => void, opts?: QueuedEventOpts): () => void;\r\n    public attachQueued(boundTo: Object, handler: (data: T) => void, opts?: QueuedEventOpts): () => void;\r\n    public attachQueued(event: Postable<T>, opts?: QueuedEventOpts): () => void;\r\n    public attachQueued(...args: any[]): () => void {\r\n        args.unshift(EventType.Queued);\r\n        return this.attach.apply(this, args);\r\n    }\r\n\r\n    public onceQueued(handler: (data: T) => void, opts?: QueuedEventOpts): () => void;\r\n    public onceQueued(boundTo: Object, handler: (data: T) => void, opts?: QueuedEventOpts): () => void;\r\n    public onceQueued(event: Postable<T>, opts?: QueuedEventOpts): () => void;\r\n    public onceQueued(...args: any[]): () => void {\r\n        args.unshift(EventType.Queued);\r\n        return this.once.apply(this, args);\r\n    }\r\n\r\n    public detach(handler: (data: T) => void): void;\r\n    public detach(boundTo: Object, handler: (data: T) => void): void;\r\n    public detach(boundTo: Object): void;\r\n    public detach(event: Postable<T>): void;\r\n    public detach(): void;\r\n    /**\r\n     * Detach event handlers regardless of type\r\n     */\r\n    public detach(...args: any[]): void {\r\n        const prevCount = this.listenerCount();\r\n        for (let i = 0; i < this._events.length; ++i) {\r\n            this._events[i].detach.apply(this._events[i], args);\r\n        }\r\n        if (this.evtListenersChanged && prevCount !== this.listenerCount()) {\r\n            this.evtListenersChanged.post();\r\n        }\r\n        if (!!this.evtLastDetached && prevCount > 0 && this.listenerCount() === 0) {\r\n            this.evtLastDetached.post();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Post an event to all current listeners\r\n     */\r\n    public post(data: T): void {\r\n        // make a copy of the array first to cover the case where event handlers\r\n        // are attached during the post\r\n        const events: BaseEvent<T>[] = [];\r\n        for (let i = 0; i < this._events.length; ++i) {\r\n            events.push(this._events[i]);\r\n        }\r\n        for (let i = 0; i < events.length; ++i) {\r\n            events[i].post(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The number of attached listeners\r\n     */\r\n    public listenerCount(): number {\r\n        let result = 0;\r\n        for (let i = 0; i < this._events.length; ++i) {\r\n            result += this._events[i].listenerCount();\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Convenience class for AnyEvents without data\r\n */\r\nexport class VoidAnyEvent extends AnyEvent<void> {\r\n\r\n    /**\r\n     * Send the AsyncEvent.\r\n     */\r\n    public post(): void {\r\n        super.post(undefined);\r\n    }\r\n}\r\n\r\n/**\r\n * Similar to 'error' event on EventEmitter: throws when a post() occurs while no handlers set.\r\n */\r\nexport class ErrorAnyEvent extends AnyEvent<Error> {\r\n\r\n    public post(data: Error): void {\r\n        if (this.listenerCount() === 0) {\r\n            throw new Error(`error event posted while no listeners attached. Error: ${data.message}`);\r\n        }\r\n        super.post(data);\r\n    }\r\n}\r\n","// Copyright © 2015 Rogier Schouten<github@workingcode.ninja>\r\n// License: ISC\r\n\r\n'use strict';\r\n\r\nexport function shallowEquals(a: any, b: any): boolean {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (typeof a !== typeof b) {\r\n        return false;\r\n    }\r\n    switch (typeof a) {\r\n        case 'boolean':\r\n        case 'number':\r\n        case 'string':\r\n        case 'function':\r\n        case 'symbol':\r\n        case 'undefined':\r\n            // already did === compare\r\n            return false;\r\n        case 'object':\r\n            if (a === null || b === null) {\r\n                return false; // already compared ===\r\n            }\r\n            if (Array.isArray(a) || Array.isArray(b)) {\r\n                if (!Array.isArray(a) || !Array.isArray(b)) {\r\n                    return false;\r\n                }\r\n                if (a.length !== b.length) {\r\n                    return false;\r\n                }\r\n                for (let i = 0; i < a.length; ++i) {\r\n                    if (a[i] !== b[i]) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            const namesA: string[] = [];\r\n            const namesB: string[] = [];\r\n            for (const name in a) {\r\n                if (a.hasOwnProperty(name)) {\r\n                    namesA.push(name);\r\n                }\r\n            }\r\n            for (const name in b) {\r\n                if (b.hasOwnProperty(name)) {\r\n                    namesB.push(name);\r\n                }\r\n            }\r\n            namesA.sort();\r\n            namesB.sort();\r\n            if (namesA.join(',') !== namesB.join(',')) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < namesA.length; ++i) {\r\n                if (a[namesA[i]] !== b[namesA[i]]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Acceleration = exports.AccelerationUnits = void 0;\r\n/** AccelerationUnits enumeration */\r\nvar AccelerationUnits;\r\n(function (AccelerationUnits) {\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"MetersPerSecondSquared\"] = 0] = \"MetersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"InchesPerSecondSquared\"] = 1] = \"InchesPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"FeetPerSecondSquared\"] = 2] = \"FeetPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"KnotsPerSecond\"] = 3] = \"KnotsPerSecond\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"KnotsPerMinute\"] = 4] = \"KnotsPerMinute\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"KnotsPerHour\"] = 5] = \"KnotsPerHour\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"StandardGravity\"] = 6] = \"StandardGravity\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"NanometersPerSecondSquared\"] = 7] = \"NanometersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"MicrometersPerSecondSquared\"] = 8] = \"MicrometersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"MillimetersPerSecondSquared\"] = 9] = \"MillimetersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"CentimetersPerSecondSquared\"] = 10] = \"CentimetersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"DecimetersPerSecondSquared\"] = 11] = \"DecimetersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"KilometersPerSecondSquared\"] = 12] = \"KilometersPerSecondSquared\";\r\n    /** */\r\n    AccelerationUnits[AccelerationUnits[\"MillistandardGravity\"] = 13] = \"MillistandardGravity\";\r\n})(AccelerationUnits = exports.AccelerationUnits || (exports.AccelerationUnits = {}));\r\n/** Acceleration, in physics, is the rate at which the velocity of an object changes over time. An object's acceleration is the net result of any and all forces acting on the object, as described by Newton's Second Law. The SI unit for acceleration is the Meter per second squared (m/s²). Accelerations are vector quantities (they have magnitude and direction) and add according to the parallelogram law. As a vector, the calculated net force is equal to the product of the object's mass (a scalar quantity) and the acceleration. */\r\nclass Acceleration {\r\n    /**\r\n     * Create a new Acceleration.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Acceleration’ unit to create from.\r\n     * The default unit is MetersPerSecondSquared\r\n     */\r\n    constructor(value, fromUnit = AccelerationUnits.MetersPerSecondSquared) {\r\n        this.meterspersecondsquaredLazy = null;\r\n        this.inchespersecondsquaredLazy = null;\r\n        this.feetpersecondsquaredLazy = null;\r\n        this.knotspersecondLazy = null;\r\n        this.knotsperminuteLazy = null;\r\n        this.knotsperhourLazy = null;\r\n        this.standardgravityLazy = null;\r\n        this.nanometerspersecondsquaredLazy = null;\r\n        this.micrometerspersecondsquaredLazy = null;\r\n        this.millimeterspersecondsquaredLazy = null;\r\n        this.centimeterspersecondsquaredLazy = null;\r\n        this.decimeterspersecondsquaredLazy = null;\r\n        this.kilometerspersecondsquaredLazy = null;\r\n        this.millistandardgravityLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Acceleration is MetersPerSecondSquared.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get MetersPerSecondSquared() {\r\n        if (this.meterspersecondsquaredLazy !== null) {\r\n            return this.meterspersecondsquaredLazy;\r\n        }\r\n        return this.meterspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.MetersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get InchesPerSecondSquared() {\r\n        if (this.inchespersecondsquaredLazy !== null) {\r\n            return this.inchespersecondsquaredLazy;\r\n        }\r\n        return this.inchespersecondsquaredLazy = this.convertFromBase(AccelerationUnits.InchesPerSecondSquared);\r\n    }\r\n    /** */\r\n    get FeetPerSecondSquared() {\r\n        if (this.feetpersecondsquaredLazy !== null) {\r\n            return this.feetpersecondsquaredLazy;\r\n        }\r\n        return this.feetpersecondsquaredLazy = this.convertFromBase(AccelerationUnits.FeetPerSecondSquared);\r\n    }\r\n    /** */\r\n    get KnotsPerSecond() {\r\n        if (this.knotspersecondLazy !== null) {\r\n            return this.knotspersecondLazy;\r\n        }\r\n        return this.knotspersecondLazy = this.convertFromBase(AccelerationUnits.KnotsPerSecond);\r\n    }\r\n    /** */\r\n    get KnotsPerMinute() {\r\n        if (this.knotsperminuteLazy !== null) {\r\n            return this.knotsperminuteLazy;\r\n        }\r\n        return this.knotsperminuteLazy = this.convertFromBase(AccelerationUnits.KnotsPerMinute);\r\n    }\r\n    /** */\r\n    get KnotsPerHour() {\r\n        if (this.knotsperhourLazy !== null) {\r\n            return this.knotsperhourLazy;\r\n        }\r\n        return this.knotsperhourLazy = this.convertFromBase(AccelerationUnits.KnotsPerHour);\r\n    }\r\n    /** */\r\n    get StandardGravity() {\r\n        if (this.standardgravityLazy !== null) {\r\n            return this.standardgravityLazy;\r\n        }\r\n        return this.standardgravityLazy = this.convertFromBase(AccelerationUnits.StandardGravity);\r\n    }\r\n    /** */\r\n    get NanometersPerSecondSquared() {\r\n        if (this.nanometerspersecondsquaredLazy !== null) {\r\n            return this.nanometerspersecondsquaredLazy;\r\n        }\r\n        return this.nanometerspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.NanometersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get MicrometersPerSecondSquared() {\r\n        if (this.micrometerspersecondsquaredLazy !== null) {\r\n            return this.micrometerspersecondsquaredLazy;\r\n        }\r\n        return this.micrometerspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.MicrometersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get MillimetersPerSecondSquared() {\r\n        if (this.millimeterspersecondsquaredLazy !== null) {\r\n            return this.millimeterspersecondsquaredLazy;\r\n        }\r\n        return this.millimeterspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.MillimetersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get CentimetersPerSecondSquared() {\r\n        if (this.centimeterspersecondsquaredLazy !== null) {\r\n            return this.centimeterspersecondsquaredLazy;\r\n        }\r\n        return this.centimeterspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.CentimetersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get DecimetersPerSecondSquared() {\r\n        if (this.decimeterspersecondsquaredLazy !== null) {\r\n            return this.decimeterspersecondsquaredLazy;\r\n        }\r\n        return this.decimeterspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.DecimetersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get KilometersPerSecondSquared() {\r\n        if (this.kilometerspersecondsquaredLazy !== null) {\r\n            return this.kilometerspersecondsquaredLazy;\r\n        }\r\n        return this.kilometerspersecondsquaredLazy = this.convertFromBase(AccelerationUnits.KilometersPerSecondSquared);\r\n    }\r\n    /** */\r\n    get MillistandardGravity() {\r\n        if (this.millistandardgravityLazy !== null) {\r\n            return this.millistandardgravityLazy;\r\n        }\r\n        return this.millistandardgravityLazy = this.convertFromBase(AccelerationUnits.MillistandardGravity);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a MetersPerSecondSquared\r\n     *\r\n     * @param value The unit as MetersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromMetersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.MetersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a InchesPerSecondSquared\r\n     *\r\n     * @param value The unit as InchesPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromInchesPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.InchesPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a FeetPerSecondSquared\r\n     *\r\n     * @param value The unit as FeetPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromFeetPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.FeetPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a KnotsPerSecond\r\n     *\r\n     * @param value The unit as KnotsPerSecond to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromKnotsPerSecond(value) {\r\n        return new Acceleration(value, AccelerationUnits.KnotsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a KnotsPerMinute\r\n     *\r\n     * @param value The unit as KnotsPerMinute to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromKnotsPerMinute(value) {\r\n        return new Acceleration(value, AccelerationUnits.KnotsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a KnotsPerHour\r\n     *\r\n     * @param value The unit as KnotsPerHour to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromKnotsPerHour(value) {\r\n        return new Acceleration(value, AccelerationUnits.KnotsPerHour);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a StandardGravity\r\n     *\r\n     * @param value The unit as StandardGravity to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromStandardGravity(value) {\r\n        return new Acceleration(value, AccelerationUnits.StandardGravity);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a NanometersPerSecondSquared\r\n     *\r\n     * @param value The unit as NanometersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromNanometersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.NanometersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a MicrometersPerSecondSquared\r\n     *\r\n     * @param value The unit as MicrometersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromMicrometersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.MicrometersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a MillimetersPerSecondSquared\r\n     *\r\n     * @param value The unit as MillimetersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromMillimetersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.MillimetersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a CentimetersPerSecondSquared\r\n     *\r\n     * @param value The unit as CentimetersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromCentimetersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.CentimetersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a DecimetersPerSecondSquared\r\n     *\r\n     * @param value The unit as DecimetersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromDecimetersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.DecimetersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a KilometersPerSecondSquared\r\n     *\r\n     * @param value The unit as KilometersPerSecondSquared to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromKilometersPerSecondSquared(value) {\r\n        return new Acceleration(value, AccelerationUnits.KilometersPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Acceleration instance from a MillistandardGravity\r\n     *\r\n     * @param value The unit as MillistandardGravity to create a new Acceleration from.\r\n     * @returns The new Acceleration instance.\r\n     */\r\n    static FromMillistandardGravity(value) {\r\n        return new Acceleration(value, AccelerationUnits.MillistandardGravity);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AccelerationUnits.MetersPerSecondSquared:\r\n                return this.value;\r\n            case AccelerationUnits.InchesPerSecondSquared:\r\n                return this.value / 0.0254;\r\n            case AccelerationUnits.FeetPerSecondSquared:\r\n                return this.value / 0.304800;\r\n            case AccelerationUnits.KnotsPerSecond:\r\n                return this.value / 0.5144444444444;\r\n            case AccelerationUnits.KnotsPerMinute:\r\n                return this.value / 0.5144444444444 * 60;\r\n            case AccelerationUnits.KnotsPerHour:\r\n                return this.value / 0.5144444444444 * 3600;\r\n            case AccelerationUnits.StandardGravity:\r\n                return this.value / 9.80665;\r\n            case AccelerationUnits.NanometersPerSecondSquared:\r\n                return (this.value) / 1e-9;\r\n            case AccelerationUnits.MicrometersPerSecondSquared:\r\n                return (this.value) / 0.000001;\r\n            case AccelerationUnits.MillimetersPerSecondSquared:\r\n                return (this.value) / 0.001;\r\n            case AccelerationUnits.CentimetersPerSecondSquared:\r\n                return (this.value) / 0.01;\r\n            case AccelerationUnits.DecimetersPerSecondSquared:\r\n                return (this.value) / 0.1;\r\n            case AccelerationUnits.KilometersPerSecondSquared:\r\n                return (this.value) / 1000;\r\n            case AccelerationUnits.MillistandardGravity:\r\n                return (this.value / 9.80665) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AccelerationUnits.MetersPerSecondSquared:\r\n                return value;\r\n            case AccelerationUnits.InchesPerSecondSquared:\r\n                return value * 0.0254;\r\n            case AccelerationUnits.FeetPerSecondSquared:\r\n                return value * 0.304800;\r\n            case AccelerationUnits.KnotsPerSecond:\r\n                return value * 0.5144444444444;\r\n            case AccelerationUnits.KnotsPerMinute:\r\n                return value * 0.5144444444444 / 60;\r\n            case AccelerationUnits.KnotsPerHour:\r\n                return value * 0.5144444444444 / 3600;\r\n            case AccelerationUnits.StandardGravity:\r\n                return value * 9.80665;\r\n            case AccelerationUnits.NanometersPerSecondSquared:\r\n                return (value) * 1e-9;\r\n            case AccelerationUnits.MicrometersPerSecondSquared:\r\n                return (value) * 0.000001;\r\n            case AccelerationUnits.MillimetersPerSecondSquared:\r\n                return (value) * 0.001;\r\n            case AccelerationUnits.CentimetersPerSecondSquared:\r\n                return (value) * 0.01;\r\n            case AccelerationUnits.DecimetersPerSecondSquared:\r\n                return (value) * 0.1;\r\n            case AccelerationUnits.KilometersPerSecondSquared:\r\n                return (value) * 1000;\r\n            case AccelerationUnits.MillistandardGravity:\r\n                return (value * 9.80665) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Acceleration to string.\r\n     * Note! the default format for Acceleration is MetersPerSecondSquared.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Acceleration.\r\n     * @returns The string format of the Acceleration.\r\n     */\r\n    toString(toUnit = AccelerationUnits.MetersPerSecondSquared) {\r\n        switch (toUnit) {\r\n            case AccelerationUnits.MetersPerSecondSquared:\r\n                return this.MetersPerSecondSquared + ` m/s²`;\r\n            case AccelerationUnits.InchesPerSecondSquared:\r\n                return this.InchesPerSecondSquared + ` in/s²`;\r\n            case AccelerationUnits.FeetPerSecondSquared:\r\n                return this.FeetPerSecondSquared + ` ft/s²`;\r\n            case AccelerationUnits.KnotsPerSecond:\r\n                return this.KnotsPerSecond + ` kn/s`;\r\n            case AccelerationUnits.KnotsPerMinute:\r\n                return this.KnotsPerMinute + ` kn/min`;\r\n            case AccelerationUnits.KnotsPerHour:\r\n                return this.KnotsPerHour + ` kn/h`;\r\n            case AccelerationUnits.StandardGravity:\r\n                return this.StandardGravity + ` g`;\r\n            case AccelerationUnits.NanometersPerSecondSquared:\r\n                return this.NanometersPerSecondSquared + ` `;\r\n            case AccelerationUnits.MicrometersPerSecondSquared:\r\n                return this.MicrometersPerSecondSquared + ` `;\r\n            case AccelerationUnits.MillimetersPerSecondSquared:\r\n                return this.MillimetersPerSecondSquared + ` `;\r\n            case AccelerationUnits.CentimetersPerSecondSquared:\r\n                return this.CentimetersPerSecondSquared + ` `;\r\n            case AccelerationUnits.DecimetersPerSecondSquared:\r\n                return this.DecimetersPerSecondSquared + ` `;\r\n            case AccelerationUnits.KilometersPerSecondSquared:\r\n                return this.KilometersPerSecondSquared + ` `;\r\n            case AccelerationUnits.MillistandardGravity:\r\n                return this.MillistandardGravity + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Acceleration are equals to the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns True if the given Acceleration are equal to the current Acceleration.\r\n     */\r\n    equals(acceleration) {\r\n        return this.value === acceleration.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Acceleration against the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns 0 if they are equal, -1 if the current Acceleration is less then other, 1 if the current Acceleration is greater then other.\r\n     */\r\n    compareTo(acceleration) {\r\n        if (this.value > acceleration.BaseValue)\r\n            return 1;\r\n        if (this.value < acceleration.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Acceleration with the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns A new Acceleration instance with the results.\r\n     */\r\n    add(acceleration) {\r\n        return new Acceleration(this.value + acceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Acceleration with the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns A new Acceleration instance with the results.\r\n     */\r\n    subtract(acceleration) {\r\n        return new Acceleration(this.value - acceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Acceleration with the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns A new Acceleration instance with the results.\r\n     */\r\n    multiply(acceleration) {\r\n        return new Acceleration(this.value * acceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Acceleration with the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns A new Acceleration instance with the results.\r\n     */\r\n    divide(acceleration) {\r\n        return new Acceleration(this.value / acceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Acceleration with the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns A new Acceleration instance with the results.\r\n     */\r\n    modulo(acceleration) {\r\n        return new Acceleration(this.value % acceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Acceleration with the current Acceleration.\r\n     * @param acceleration The other Acceleration.\r\n     * @returns A new Acceleration instance with the results.\r\n     */\r\n    pow(acceleration) {\r\n        return new Acceleration(this.value ** acceleration.BaseValue);\r\n    }\r\n}\r\nexports.Acceleration = Acceleration;\r\n//# sourceMappingURL=acceleration.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AmountOfSubstance = exports.AmountOfSubstanceUnits = void 0;\r\n/** AmountOfSubstanceUnits enumeration */\r\nvar AmountOfSubstanceUnits;\r\n(function (AmountOfSubstanceUnits) {\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Moles\"] = 0] = \"Moles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"PoundMoles\"] = 1] = \"PoundMoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Nanomoles\"] = 2] = \"Nanomoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Micromoles\"] = 3] = \"Micromoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Millimoles\"] = 4] = \"Millimoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Centimoles\"] = 5] = \"Centimoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Decimoles\"] = 6] = \"Decimoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Kilomoles\"] = 7] = \"Kilomoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"Megamoles\"] = 8] = \"Megamoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"NanopoundMoles\"] = 9] = \"NanopoundMoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"MicropoundMoles\"] = 10] = \"MicropoundMoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"MillipoundMoles\"] = 11] = \"MillipoundMoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"CentipoundMoles\"] = 12] = \"CentipoundMoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"DecipoundMoles\"] = 13] = \"DecipoundMoles\";\r\n    /** */\r\n    AmountOfSubstanceUnits[AmountOfSubstanceUnits[\"KilopoundMoles\"] = 14] = \"KilopoundMoles\";\r\n})(AmountOfSubstanceUnits = exports.AmountOfSubstanceUnits || (exports.AmountOfSubstanceUnits = {}));\r\n/** Mole is the amount of substance containing Avagadro's Number (6.02 x 10 ^ 23) of real particles such as molecules,atoms, ions or radicals. */\r\nclass AmountOfSubstance {\r\n    /**\r\n     * Create a new AmountOfSubstance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘AmountOfSubstance’ unit to create from.\r\n     * The default unit is Moles\r\n     */\r\n    constructor(value, fromUnit = AmountOfSubstanceUnits.Moles) {\r\n        this.molesLazy = null;\r\n        this.poundmolesLazy = null;\r\n        this.nanomolesLazy = null;\r\n        this.micromolesLazy = null;\r\n        this.millimolesLazy = null;\r\n        this.centimolesLazy = null;\r\n        this.decimolesLazy = null;\r\n        this.kilomolesLazy = null;\r\n        this.megamolesLazy = null;\r\n        this.nanopoundmolesLazy = null;\r\n        this.micropoundmolesLazy = null;\r\n        this.millipoundmolesLazy = null;\r\n        this.centipoundmolesLazy = null;\r\n        this.decipoundmolesLazy = null;\r\n        this.kilopoundmolesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of AmountOfSubstance is Moles.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Moles() {\r\n        if (this.molesLazy !== null) {\r\n            return this.molesLazy;\r\n        }\r\n        return this.molesLazy = this.convertFromBase(AmountOfSubstanceUnits.Moles);\r\n    }\r\n    /** */\r\n    get PoundMoles() {\r\n        if (this.poundmolesLazy !== null) {\r\n            return this.poundmolesLazy;\r\n        }\r\n        return this.poundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.PoundMoles);\r\n    }\r\n    /** */\r\n    get Nanomoles() {\r\n        if (this.nanomolesLazy !== null) {\r\n            return this.nanomolesLazy;\r\n        }\r\n        return this.nanomolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Nanomoles);\r\n    }\r\n    /** */\r\n    get Micromoles() {\r\n        if (this.micromolesLazy !== null) {\r\n            return this.micromolesLazy;\r\n        }\r\n        return this.micromolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Micromoles);\r\n    }\r\n    /** */\r\n    get Millimoles() {\r\n        if (this.millimolesLazy !== null) {\r\n            return this.millimolesLazy;\r\n        }\r\n        return this.millimolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Millimoles);\r\n    }\r\n    /** */\r\n    get Centimoles() {\r\n        if (this.centimolesLazy !== null) {\r\n            return this.centimolesLazy;\r\n        }\r\n        return this.centimolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Centimoles);\r\n    }\r\n    /** */\r\n    get Decimoles() {\r\n        if (this.decimolesLazy !== null) {\r\n            return this.decimolesLazy;\r\n        }\r\n        return this.decimolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Decimoles);\r\n    }\r\n    /** */\r\n    get Kilomoles() {\r\n        if (this.kilomolesLazy !== null) {\r\n            return this.kilomolesLazy;\r\n        }\r\n        return this.kilomolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Kilomoles);\r\n    }\r\n    /** */\r\n    get Megamoles() {\r\n        if (this.megamolesLazy !== null) {\r\n            return this.megamolesLazy;\r\n        }\r\n        return this.megamolesLazy = this.convertFromBase(AmountOfSubstanceUnits.Megamoles);\r\n    }\r\n    /** */\r\n    get NanopoundMoles() {\r\n        if (this.nanopoundmolesLazy !== null) {\r\n            return this.nanopoundmolesLazy;\r\n        }\r\n        return this.nanopoundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.NanopoundMoles);\r\n    }\r\n    /** */\r\n    get MicropoundMoles() {\r\n        if (this.micropoundmolesLazy !== null) {\r\n            return this.micropoundmolesLazy;\r\n        }\r\n        return this.micropoundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.MicropoundMoles);\r\n    }\r\n    /** */\r\n    get MillipoundMoles() {\r\n        if (this.millipoundmolesLazy !== null) {\r\n            return this.millipoundmolesLazy;\r\n        }\r\n        return this.millipoundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.MillipoundMoles);\r\n    }\r\n    /** */\r\n    get CentipoundMoles() {\r\n        if (this.centipoundmolesLazy !== null) {\r\n            return this.centipoundmolesLazy;\r\n        }\r\n        return this.centipoundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.CentipoundMoles);\r\n    }\r\n    /** */\r\n    get DecipoundMoles() {\r\n        if (this.decipoundmolesLazy !== null) {\r\n            return this.decipoundmolesLazy;\r\n        }\r\n        return this.decipoundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.DecipoundMoles);\r\n    }\r\n    /** */\r\n    get KilopoundMoles() {\r\n        if (this.kilopoundmolesLazy !== null) {\r\n            return this.kilopoundmolesLazy;\r\n        }\r\n        return this.kilopoundmolesLazy = this.convertFromBase(AmountOfSubstanceUnits.KilopoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Moles\r\n     *\r\n     * @param value The unit as Moles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Moles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a PoundMoles\r\n     *\r\n     * @param value The unit as PoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromPoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.PoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Nanomoles\r\n     *\r\n     * @param value The unit as Nanomoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromNanomoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Nanomoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Micromoles\r\n     *\r\n     * @param value The unit as Micromoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromMicromoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Micromoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Millimoles\r\n     *\r\n     * @param value The unit as Millimoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromMillimoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Millimoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Centimoles\r\n     *\r\n     * @param value The unit as Centimoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromCentimoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Centimoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Decimoles\r\n     *\r\n     * @param value The unit as Decimoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromDecimoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Decimoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Kilomoles\r\n     *\r\n     * @param value The unit as Kilomoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromKilomoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Kilomoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a Megamoles\r\n     *\r\n     * @param value The unit as Megamoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromMegamoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.Megamoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a NanopoundMoles\r\n     *\r\n     * @param value The unit as NanopoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromNanopoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.NanopoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a MicropoundMoles\r\n     *\r\n     * @param value The unit as MicropoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromMicropoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.MicropoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a MillipoundMoles\r\n     *\r\n     * @param value The unit as MillipoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromMillipoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.MillipoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a CentipoundMoles\r\n     *\r\n     * @param value The unit as CentipoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromCentipoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.CentipoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a DecipoundMoles\r\n     *\r\n     * @param value The unit as DecipoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromDecipoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.DecipoundMoles);\r\n    }\r\n    /**\r\n     * Create a new AmountOfSubstance instance from a KilopoundMoles\r\n     *\r\n     * @param value The unit as KilopoundMoles to create a new AmountOfSubstance from.\r\n     * @returns The new AmountOfSubstance instance.\r\n     */\r\n    static FromKilopoundMoles(value) {\r\n        return new AmountOfSubstance(value, AmountOfSubstanceUnits.KilopoundMoles);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AmountOfSubstanceUnits.Moles:\r\n                return this.value;\r\n            case AmountOfSubstanceUnits.PoundMoles:\r\n                return this.value / 453.59237;\r\n            case AmountOfSubstanceUnits.Nanomoles:\r\n                return (this.value) / 1e-9;\r\n            case AmountOfSubstanceUnits.Micromoles:\r\n                return (this.value) / 0.000001;\r\n            case AmountOfSubstanceUnits.Millimoles:\r\n                return (this.value) / 0.001;\r\n            case AmountOfSubstanceUnits.Centimoles:\r\n                return (this.value) / 0.01;\r\n            case AmountOfSubstanceUnits.Decimoles:\r\n                return (this.value) / 0.1;\r\n            case AmountOfSubstanceUnits.Kilomoles:\r\n                return (this.value) / 1000;\r\n            case AmountOfSubstanceUnits.Megamoles:\r\n                return (this.value) / 1000000;\r\n            case AmountOfSubstanceUnits.NanopoundMoles:\r\n                return (this.value / 453.59237) / 1e-9;\r\n            case AmountOfSubstanceUnits.MicropoundMoles:\r\n                return (this.value / 453.59237) / 0.000001;\r\n            case AmountOfSubstanceUnits.MillipoundMoles:\r\n                return (this.value / 453.59237) / 0.001;\r\n            case AmountOfSubstanceUnits.CentipoundMoles:\r\n                return (this.value / 453.59237) / 0.01;\r\n            case AmountOfSubstanceUnits.DecipoundMoles:\r\n                return (this.value / 453.59237) / 0.1;\r\n            case AmountOfSubstanceUnits.KilopoundMoles:\r\n                return (this.value / 453.59237) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AmountOfSubstanceUnits.Moles:\r\n                return value;\r\n            case AmountOfSubstanceUnits.PoundMoles:\r\n                return value * 453.59237;\r\n            case AmountOfSubstanceUnits.Nanomoles:\r\n                return (value) * 1e-9;\r\n            case AmountOfSubstanceUnits.Micromoles:\r\n                return (value) * 0.000001;\r\n            case AmountOfSubstanceUnits.Millimoles:\r\n                return (value) * 0.001;\r\n            case AmountOfSubstanceUnits.Centimoles:\r\n                return (value) * 0.01;\r\n            case AmountOfSubstanceUnits.Decimoles:\r\n                return (value) * 0.1;\r\n            case AmountOfSubstanceUnits.Kilomoles:\r\n                return (value) * 1000;\r\n            case AmountOfSubstanceUnits.Megamoles:\r\n                return (value) * 1000000;\r\n            case AmountOfSubstanceUnits.NanopoundMoles:\r\n                return (value * 453.59237) * 1e-9;\r\n            case AmountOfSubstanceUnits.MicropoundMoles:\r\n                return (value * 453.59237) * 0.000001;\r\n            case AmountOfSubstanceUnits.MillipoundMoles:\r\n                return (value * 453.59237) * 0.001;\r\n            case AmountOfSubstanceUnits.CentipoundMoles:\r\n                return (value * 453.59237) * 0.01;\r\n            case AmountOfSubstanceUnits.DecipoundMoles:\r\n                return (value * 453.59237) * 0.1;\r\n            case AmountOfSubstanceUnits.KilopoundMoles:\r\n                return (value * 453.59237) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the AmountOfSubstance to string.\r\n     * Note! the default format for AmountOfSubstance is Moles.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the AmountOfSubstance.\r\n     * @returns The string format of the AmountOfSubstance.\r\n     */\r\n    toString(toUnit = AmountOfSubstanceUnits.Moles) {\r\n        switch (toUnit) {\r\n            case AmountOfSubstanceUnits.Moles:\r\n                return this.Moles + ` mol`;\r\n            case AmountOfSubstanceUnits.PoundMoles:\r\n                return this.PoundMoles + ` lbmol`;\r\n            case AmountOfSubstanceUnits.Nanomoles:\r\n                return this.Nanomoles + ` `;\r\n            case AmountOfSubstanceUnits.Micromoles:\r\n                return this.Micromoles + ` `;\r\n            case AmountOfSubstanceUnits.Millimoles:\r\n                return this.Millimoles + ` `;\r\n            case AmountOfSubstanceUnits.Centimoles:\r\n                return this.Centimoles + ` `;\r\n            case AmountOfSubstanceUnits.Decimoles:\r\n                return this.Decimoles + ` `;\r\n            case AmountOfSubstanceUnits.Kilomoles:\r\n                return this.Kilomoles + ` `;\r\n            case AmountOfSubstanceUnits.Megamoles:\r\n                return this.Megamoles + ` `;\r\n            case AmountOfSubstanceUnits.NanopoundMoles:\r\n                return this.NanopoundMoles + ` `;\r\n            case AmountOfSubstanceUnits.MicropoundMoles:\r\n                return this.MicropoundMoles + ` `;\r\n            case AmountOfSubstanceUnits.MillipoundMoles:\r\n                return this.MillipoundMoles + ` `;\r\n            case AmountOfSubstanceUnits.CentipoundMoles:\r\n                return this.CentipoundMoles + ` `;\r\n            case AmountOfSubstanceUnits.DecipoundMoles:\r\n                return this.DecipoundMoles + ` `;\r\n            case AmountOfSubstanceUnits.KilopoundMoles:\r\n                return this.KilopoundMoles + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given AmountOfSubstance are equals to the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns True if the given AmountOfSubstance are equal to the current AmountOfSubstance.\r\n     */\r\n    equals(amountOfSubstance) {\r\n        return this.value === amountOfSubstance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given AmountOfSubstance against the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns 0 if they are equal, -1 if the current AmountOfSubstance is less then other, 1 if the current AmountOfSubstance is greater then other.\r\n     */\r\n    compareTo(amountOfSubstance) {\r\n        if (this.value > amountOfSubstance.BaseValue)\r\n            return 1;\r\n        if (this.value < amountOfSubstance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given AmountOfSubstance with the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns A new AmountOfSubstance instance with the results.\r\n     */\r\n    add(amountOfSubstance) {\r\n        return new AmountOfSubstance(this.value + amountOfSubstance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given AmountOfSubstance with the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns A new AmountOfSubstance instance with the results.\r\n     */\r\n    subtract(amountOfSubstance) {\r\n        return new AmountOfSubstance(this.value - amountOfSubstance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given AmountOfSubstance with the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns A new AmountOfSubstance instance with the results.\r\n     */\r\n    multiply(amountOfSubstance) {\r\n        return new AmountOfSubstance(this.value * amountOfSubstance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given AmountOfSubstance with the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns A new AmountOfSubstance instance with the results.\r\n     */\r\n    divide(amountOfSubstance) {\r\n        return new AmountOfSubstance(this.value / amountOfSubstance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given AmountOfSubstance with the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns A new AmountOfSubstance instance with the results.\r\n     */\r\n    modulo(amountOfSubstance) {\r\n        return new AmountOfSubstance(this.value % amountOfSubstance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given AmountOfSubstance with the current AmountOfSubstance.\r\n     * @param amountOfSubstance The other AmountOfSubstance.\r\n     * @returns A new AmountOfSubstance instance with the results.\r\n     */\r\n    pow(amountOfSubstance) {\r\n        return new AmountOfSubstance(this.value ** amountOfSubstance.BaseValue);\r\n    }\r\n}\r\nexports.AmountOfSubstance = AmountOfSubstance;\r\n//# sourceMappingURL=amountofsubstance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AmplitudeRatio = exports.AmplitudeRatioUnits = void 0;\r\n/** AmplitudeRatioUnits enumeration */\r\nvar AmplitudeRatioUnits;\r\n(function (AmplitudeRatioUnits) {\r\n    /** */\r\n    AmplitudeRatioUnits[AmplitudeRatioUnits[\"DecibelVolts\"] = 0] = \"DecibelVolts\";\r\n    /** */\r\n    AmplitudeRatioUnits[AmplitudeRatioUnits[\"DecibelMicrovolts\"] = 1] = \"DecibelMicrovolts\";\r\n    /** */\r\n    AmplitudeRatioUnits[AmplitudeRatioUnits[\"DecibelMillivolts\"] = 2] = \"DecibelMillivolts\";\r\n    /** */\r\n    AmplitudeRatioUnits[AmplitudeRatioUnits[\"DecibelsUnloaded\"] = 3] = \"DecibelsUnloaded\";\r\n})(AmplitudeRatioUnits = exports.AmplitudeRatioUnits || (exports.AmplitudeRatioUnits = {}));\r\n/** The strength of a signal expressed in decibels (dB) relative to one volt RMS. */\r\nclass AmplitudeRatio {\r\n    /**\r\n     * Create a new AmplitudeRatio.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘AmplitudeRatio’ unit to create from.\r\n     * The default unit is DecibelVolts\r\n     */\r\n    constructor(value, fromUnit = AmplitudeRatioUnits.DecibelVolts) {\r\n        this.decibelvoltsLazy = null;\r\n        this.decibelmicrovoltsLazy = null;\r\n        this.decibelmillivoltsLazy = null;\r\n        this.decibelsunloadedLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of AmplitudeRatio is DecibelVolts.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DecibelVolts() {\r\n        if (this.decibelvoltsLazy !== null) {\r\n            return this.decibelvoltsLazy;\r\n        }\r\n        return this.decibelvoltsLazy = this.convertFromBase(AmplitudeRatioUnits.DecibelVolts);\r\n    }\r\n    /** */\r\n    get DecibelMicrovolts() {\r\n        if (this.decibelmicrovoltsLazy !== null) {\r\n            return this.decibelmicrovoltsLazy;\r\n        }\r\n        return this.decibelmicrovoltsLazy = this.convertFromBase(AmplitudeRatioUnits.DecibelMicrovolts);\r\n    }\r\n    /** */\r\n    get DecibelMillivolts() {\r\n        if (this.decibelmillivoltsLazy !== null) {\r\n            return this.decibelmillivoltsLazy;\r\n        }\r\n        return this.decibelmillivoltsLazy = this.convertFromBase(AmplitudeRatioUnits.DecibelMillivolts);\r\n    }\r\n    /** */\r\n    get DecibelsUnloaded() {\r\n        if (this.decibelsunloadedLazy !== null) {\r\n            return this.decibelsunloadedLazy;\r\n        }\r\n        return this.decibelsunloadedLazy = this.convertFromBase(AmplitudeRatioUnits.DecibelsUnloaded);\r\n    }\r\n    /**\r\n     * Create a new AmplitudeRatio instance from a DecibelVolts\r\n     *\r\n     * @param value The unit as DecibelVolts to create a new AmplitudeRatio from.\r\n     * @returns The new AmplitudeRatio instance.\r\n     */\r\n    static FromDecibelVolts(value) {\r\n        return new AmplitudeRatio(value, AmplitudeRatioUnits.DecibelVolts);\r\n    }\r\n    /**\r\n     * Create a new AmplitudeRatio instance from a DecibelMicrovolts\r\n     *\r\n     * @param value The unit as DecibelMicrovolts to create a new AmplitudeRatio from.\r\n     * @returns The new AmplitudeRatio instance.\r\n     */\r\n    static FromDecibelMicrovolts(value) {\r\n        return new AmplitudeRatio(value, AmplitudeRatioUnits.DecibelMicrovolts);\r\n    }\r\n    /**\r\n     * Create a new AmplitudeRatio instance from a DecibelMillivolts\r\n     *\r\n     * @param value The unit as DecibelMillivolts to create a new AmplitudeRatio from.\r\n     * @returns The new AmplitudeRatio instance.\r\n     */\r\n    static FromDecibelMillivolts(value) {\r\n        return new AmplitudeRatio(value, AmplitudeRatioUnits.DecibelMillivolts);\r\n    }\r\n    /**\r\n     * Create a new AmplitudeRatio instance from a DecibelsUnloaded\r\n     *\r\n     * @param value The unit as DecibelsUnloaded to create a new AmplitudeRatio from.\r\n     * @returns The new AmplitudeRatio instance.\r\n     */\r\n    static FromDecibelsUnloaded(value) {\r\n        return new AmplitudeRatio(value, AmplitudeRatioUnits.DecibelsUnloaded);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AmplitudeRatioUnits.DecibelVolts:\r\n                return this.value;\r\n            case AmplitudeRatioUnits.DecibelMicrovolts:\r\n                return this.value + 120;\r\n            case AmplitudeRatioUnits.DecibelMillivolts:\r\n                return this.value + 60;\r\n            case AmplitudeRatioUnits.DecibelsUnloaded:\r\n                return this.value + 2.218487499;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AmplitudeRatioUnits.DecibelVolts:\r\n                return value;\r\n            case AmplitudeRatioUnits.DecibelMicrovolts:\r\n                return value - 120;\r\n            case AmplitudeRatioUnits.DecibelMillivolts:\r\n                return value - 60;\r\n            case AmplitudeRatioUnits.DecibelsUnloaded:\r\n                return value - 2.218487499;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the AmplitudeRatio to string.\r\n     * Note! the default format for AmplitudeRatio is DecibelVolts.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the AmplitudeRatio.\r\n     * @returns The string format of the AmplitudeRatio.\r\n     */\r\n    toString(toUnit = AmplitudeRatioUnits.DecibelVolts) {\r\n        switch (toUnit) {\r\n            case AmplitudeRatioUnits.DecibelVolts:\r\n                return this.DecibelVolts + ` dBV`;\r\n            case AmplitudeRatioUnits.DecibelMicrovolts:\r\n                return this.DecibelMicrovolts + ` dBµV`;\r\n            case AmplitudeRatioUnits.DecibelMillivolts:\r\n                return this.DecibelMillivolts + ` dBmV`;\r\n            case AmplitudeRatioUnits.DecibelsUnloaded:\r\n                return this.DecibelsUnloaded + ` dBu`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given AmplitudeRatio are equals to the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns True if the given AmplitudeRatio are equal to the current AmplitudeRatio.\r\n     */\r\n    equals(amplitudeRatio) {\r\n        return this.value === amplitudeRatio.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given AmplitudeRatio against the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns 0 if they are equal, -1 if the current AmplitudeRatio is less then other, 1 if the current AmplitudeRatio is greater then other.\r\n     */\r\n    compareTo(amplitudeRatio) {\r\n        if (this.value > amplitudeRatio.BaseValue)\r\n            return 1;\r\n        if (this.value < amplitudeRatio.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given AmplitudeRatio with the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns A new AmplitudeRatio instance with the results.\r\n     */\r\n    add(amplitudeRatio) {\r\n        return new AmplitudeRatio(this.value + amplitudeRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given AmplitudeRatio with the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns A new AmplitudeRatio instance with the results.\r\n     */\r\n    subtract(amplitudeRatio) {\r\n        return new AmplitudeRatio(this.value - amplitudeRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given AmplitudeRatio with the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns A new AmplitudeRatio instance with the results.\r\n     */\r\n    multiply(amplitudeRatio) {\r\n        return new AmplitudeRatio(this.value * amplitudeRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given AmplitudeRatio with the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns A new AmplitudeRatio instance with the results.\r\n     */\r\n    divide(amplitudeRatio) {\r\n        return new AmplitudeRatio(this.value / amplitudeRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given AmplitudeRatio with the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns A new AmplitudeRatio instance with the results.\r\n     */\r\n    modulo(amplitudeRatio) {\r\n        return new AmplitudeRatio(this.value % amplitudeRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given AmplitudeRatio with the current AmplitudeRatio.\r\n     * @param amplitudeRatio The other AmplitudeRatio.\r\n     * @returns A new AmplitudeRatio instance with the results.\r\n     */\r\n    pow(amplitudeRatio) {\r\n        return new AmplitudeRatio(this.value ** amplitudeRatio.BaseValue);\r\n    }\r\n}\r\nexports.AmplitudeRatio = AmplitudeRatio;\r\n//# sourceMappingURL=amplituderatio.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Angle = exports.AngleUnits = void 0;\r\n/** AngleUnits enumeration */\r\nvar AngleUnits;\r\n(function (AngleUnits) {\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Radians\"] = 0] = \"Radians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Degrees\"] = 1] = \"Degrees\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Arcminutes\"] = 2] = \"Arcminutes\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Arcseconds\"] = 3] = \"Arcseconds\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Gradians\"] = 4] = \"Gradians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Revolutions\"] = 5] = \"Revolutions\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Tilt\"] = 6] = \"Tilt\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Nanoradians\"] = 7] = \"Nanoradians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Microradians\"] = 8] = \"Microradians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Milliradians\"] = 9] = \"Milliradians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Centiradians\"] = 10] = \"Centiradians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Deciradians\"] = 11] = \"Deciradians\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Nanodegrees\"] = 12] = \"Nanodegrees\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Microdegrees\"] = 13] = \"Microdegrees\";\r\n    /** */\r\n    AngleUnits[AngleUnits[\"Millidegrees\"] = 14] = \"Millidegrees\";\r\n})(AngleUnits = exports.AngleUnits || (exports.AngleUnits = {}));\r\n/** In geometry, an angle is the figure formed by two rays, called the sides of the angle, sharing a common endpoint, called the vertex of the angle. */\r\nclass Angle {\r\n    /**\r\n     * Create a new Angle.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Angle’ unit to create from.\r\n     * The default unit is Degrees\r\n     */\r\n    constructor(value, fromUnit = AngleUnits.Degrees) {\r\n        this.radiansLazy = null;\r\n        this.degreesLazy = null;\r\n        this.arcminutesLazy = null;\r\n        this.arcsecondsLazy = null;\r\n        this.gradiansLazy = null;\r\n        this.revolutionsLazy = null;\r\n        this.tiltLazy = null;\r\n        this.nanoradiansLazy = null;\r\n        this.microradiansLazy = null;\r\n        this.milliradiansLazy = null;\r\n        this.centiradiansLazy = null;\r\n        this.deciradiansLazy = null;\r\n        this.nanodegreesLazy = null;\r\n        this.microdegreesLazy = null;\r\n        this.millidegreesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Angle is Degrees.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Radians() {\r\n        if (this.radiansLazy !== null) {\r\n            return this.radiansLazy;\r\n        }\r\n        return this.radiansLazy = this.convertFromBase(AngleUnits.Radians);\r\n    }\r\n    /** */\r\n    get Degrees() {\r\n        if (this.degreesLazy !== null) {\r\n            return this.degreesLazy;\r\n        }\r\n        return this.degreesLazy = this.convertFromBase(AngleUnits.Degrees);\r\n    }\r\n    /** */\r\n    get Arcminutes() {\r\n        if (this.arcminutesLazy !== null) {\r\n            return this.arcminutesLazy;\r\n        }\r\n        return this.arcminutesLazy = this.convertFromBase(AngleUnits.Arcminutes);\r\n    }\r\n    /** */\r\n    get Arcseconds() {\r\n        if (this.arcsecondsLazy !== null) {\r\n            return this.arcsecondsLazy;\r\n        }\r\n        return this.arcsecondsLazy = this.convertFromBase(AngleUnits.Arcseconds);\r\n    }\r\n    /** */\r\n    get Gradians() {\r\n        if (this.gradiansLazy !== null) {\r\n            return this.gradiansLazy;\r\n        }\r\n        return this.gradiansLazy = this.convertFromBase(AngleUnits.Gradians);\r\n    }\r\n    /** */\r\n    get Revolutions() {\r\n        if (this.revolutionsLazy !== null) {\r\n            return this.revolutionsLazy;\r\n        }\r\n        return this.revolutionsLazy = this.convertFromBase(AngleUnits.Revolutions);\r\n    }\r\n    /** */\r\n    get Tilt() {\r\n        if (this.tiltLazy !== null) {\r\n            return this.tiltLazy;\r\n        }\r\n        return this.tiltLazy = this.convertFromBase(AngleUnits.Tilt);\r\n    }\r\n    /** */\r\n    get Nanoradians() {\r\n        if (this.nanoradiansLazy !== null) {\r\n            return this.nanoradiansLazy;\r\n        }\r\n        return this.nanoradiansLazy = this.convertFromBase(AngleUnits.Nanoradians);\r\n    }\r\n    /** */\r\n    get Microradians() {\r\n        if (this.microradiansLazy !== null) {\r\n            return this.microradiansLazy;\r\n        }\r\n        return this.microradiansLazy = this.convertFromBase(AngleUnits.Microradians);\r\n    }\r\n    /** */\r\n    get Milliradians() {\r\n        if (this.milliradiansLazy !== null) {\r\n            return this.milliradiansLazy;\r\n        }\r\n        return this.milliradiansLazy = this.convertFromBase(AngleUnits.Milliradians);\r\n    }\r\n    /** */\r\n    get Centiradians() {\r\n        if (this.centiradiansLazy !== null) {\r\n            return this.centiradiansLazy;\r\n        }\r\n        return this.centiradiansLazy = this.convertFromBase(AngleUnits.Centiradians);\r\n    }\r\n    /** */\r\n    get Deciradians() {\r\n        if (this.deciradiansLazy !== null) {\r\n            return this.deciradiansLazy;\r\n        }\r\n        return this.deciradiansLazy = this.convertFromBase(AngleUnits.Deciradians);\r\n    }\r\n    /** */\r\n    get Nanodegrees() {\r\n        if (this.nanodegreesLazy !== null) {\r\n            return this.nanodegreesLazy;\r\n        }\r\n        return this.nanodegreesLazy = this.convertFromBase(AngleUnits.Nanodegrees);\r\n    }\r\n    /** */\r\n    get Microdegrees() {\r\n        if (this.microdegreesLazy !== null) {\r\n            return this.microdegreesLazy;\r\n        }\r\n        return this.microdegreesLazy = this.convertFromBase(AngleUnits.Microdegrees);\r\n    }\r\n    /** */\r\n    get Millidegrees() {\r\n        if (this.millidegreesLazy !== null) {\r\n            return this.millidegreesLazy;\r\n        }\r\n        return this.millidegreesLazy = this.convertFromBase(AngleUnits.Millidegrees);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Radians\r\n     *\r\n     * @param value The unit as Radians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromRadians(value) {\r\n        return new Angle(value, AngleUnits.Radians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Degrees\r\n     *\r\n     * @param value The unit as Degrees to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromDegrees(value) {\r\n        return new Angle(value, AngleUnits.Degrees);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Arcminutes\r\n     *\r\n     * @param value The unit as Arcminutes to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromArcminutes(value) {\r\n        return new Angle(value, AngleUnits.Arcminutes);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Arcseconds\r\n     *\r\n     * @param value The unit as Arcseconds to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromArcseconds(value) {\r\n        return new Angle(value, AngleUnits.Arcseconds);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Gradians\r\n     *\r\n     * @param value The unit as Gradians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromGradians(value) {\r\n        return new Angle(value, AngleUnits.Gradians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Revolutions\r\n     *\r\n     * @param value The unit as Revolutions to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromRevolutions(value) {\r\n        return new Angle(value, AngleUnits.Revolutions);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Tilt\r\n     *\r\n     * @param value The unit as Tilt to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromTilt(value) {\r\n        return new Angle(value, AngleUnits.Tilt);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Nanoradians\r\n     *\r\n     * @param value The unit as Nanoradians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromNanoradians(value) {\r\n        return new Angle(value, AngleUnits.Nanoradians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Microradians\r\n     *\r\n     * @param value The unit as Microradians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromMicroradians(value) {\r\n        return new Angle(value, AngleUnits.Microradians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Milliradians\r\n     *\r\n     * @param value The unit as Milliradians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromMilliradians(value) {\r\n        return new Angle(value, AngleUnits.Milliradians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Centiradians\r\n     *\r\n     * @param value The unit as Centiradians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromCentiradians(value) {\r\n        return new Angle(value, AngleUnits.Centiradians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Deciradians\r\n     *\r\n     * @param value The unit as Deciradians to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromDeciradians(value) {\r\n        return new Angle(value, AngleUnits.Deciradians);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Nanodegrees\r\n     *\r\n     * @param value The unit as Nanodegrees to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromNanodegrees(value) {\r\n        return new Angle(value, AngleUnits.Nanodegrees);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Microdegrees\r\n     *\r\n     * @param value The unit as Microdegrees to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromMicrodegrees(value) {\r\n        return new Angle(value, AngleUnits.Microdegrees);\r\n    }\r\n    /**\r\n     * Create a new Angle instance from a Millidegrees\r\n     *\r\n     * @param value The unit as Millidegrees to create a new Angle from.\r\n     * @returns The new Angle instance.\r\n     */\r\n    static FromMillidegrees(value) {\r\n        return new Angle(value, AngleUnits.Millidegrees);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AngleUnits.Radians:\r\n                return this.value / 180 * Math.PI;\r\n            case AngleUnits.Degrees:\r\n                return this.value;\r\n            case AngleUnits.Arcminutes:\r\n                return this.value * 60;\r\n            case AngleUnits.Arcseconds:\r\n                return this.value * 3600;\r\n            case AngleUnits.Gradians:\r\n                return this.value / 0.9;\r\n            case AngleUnits.Revolutions:\r\n                return this.value / 360;\r\n            case AngleUnits.Tilt:\r\n                return Math.sin(this.value / 180 * Math.PI);\r\n            case AngleUnits.Nanoradians:\r\n                return (this.value / 180 * Math.PI) / 1e-9;\r\n            case AngleUnits.Microradians:\r\n                return (this.value / 180 * Math.PI) / 0.000001;\r\n            case AngleUnits.Milliradians:\r\n                return (this.value / 180 * Math.PI) / 0.001;\r\n            case AngleUnits.Centiradians:\r\n                return (this.value / 180 * Math.PI) / 0.01;\r\n            case AngleUnits.Deciradians:\r\n                return (this.value / 180 * Math.PI) / 0.1;\r\n            case AngleUnits.Nanodegrees:\r\n                return (this.value) / 1e-9;\r\n            case AngleUnits.Microdegrees:\r\n                return (this.value) / 0.000001;\r\n            case AngleUnits.Millidegrees:\r\n                return (this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AngleUnits.Radians:\r\n                return value * 180 / Math.PI;\r\n            case AngleUnits.Degrees:\r\n                return value;\r\n            case AngleUnits.Arcminutes:\r\n                return value / 60;\r\n            case AngleUnits.Arcseconds:\r\n                return value / 3600;\r\n            case AngleUnits.Gradians:\r\n                return value * 0.9;\r\n            case AngleUnits.Revolutions:\r\n                return value * 360;\r\n            case AngleUnits.Tilt:\r\n                return Math.asin(value) * 180 / Math.PI;\r\n            case AngleUnits.Nanoradians:\r\n                return (value * 180 / Math.PI) * 1e-9;\r\n            case AngleUnits.Microradians:\r\n                return (value * 180 / Math.PI) * 0.000001;\r\n            case AngleUnits.Milliradians:\r\n                return (value * 180 / Math.PI) * 0.001;\r\n            case AngleUnits.Centiradians:\r\n                return (value * 180 / Math.PI) * 0.01;\r\n            case AngleUnits.Deciradians:\r\n                return (value * 180 / Math.PI) * 0.1;\r\n            case AngleUnits.Nanodegrees:\r\n                return (value) * 1e-9;\r\n            case AngleUnits.Microdegrees:\r\n                return (value) * 0.000001;\r\n            case AngleUnits.Millidegrees:\r\n                return (value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Angle to string.\r\n     * Note! the default format for Angle is Degrees.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Angle.\r\n     * @returns The string format of the Angle.\r\n     */\r\n    toString(toUnit = AngleUnits.Degrees) {\r\n        switch (toUnit) {\r\n            case AngleUnits.Radians:\r\n                return this.Radians + ` rad`;\r\n            case AngleUnits.Degrees:\r\n                return this.Degrees + ` °`;\r\n            case AngleUnits.Arcminutes:\r\n                return this.Arcminutes + ` '`;\r\n            case AngleUnits.Arcseconds:\r\n                return this.Arcseconds + ` ″`;\r\n            case AngleUnits.Gradians:\r\n                return this.Gradians + ` g`;\r\n            case AngleUnits.Revolutions:\r\n                return this.Revolutions + ` r`;\r\n            case AngleUnits.Tilt:\r\n                return this.Tilt + ` sin(θ)`;\r\n            case AngleUnits.Nanoradians:\r\n                return this.Nanoradians + ` `;\r\n            case AngleUnits.Microradians:\r\n                return this.Microradians + ` `;\r\n            case AngleUnits.Milliradians:\r\n                return this.Milliradians + ` `;\r\n            case AngleUnits.Centiradians:\r\n                return this.Centiradians + ` `;\r\n            case AngleUnits.Deciradians:\r\n                return this.Deciradians + ` `;\r\n            case AngleUnits.Nanodegrees:\r\n                return this.Nanodegrees + ` `;\r\n            case AngleUnits.Microdegrees:\r\n                return this.Microdegrees + ` `;\r\n            case AngleUnits.Millidegrees:\r\n                return this.Millidegrees + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Angle are equals to the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns True if the given Angle are equal to the current Angle.\r\n     */\r\n    equals(angle) {\r\n        return this.value === angle.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Angle against the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns 0 if they are equal, -1 if the current Angle is less then other, 1 if the current Angle is greater then other.\r\n     */\r\n    compareTo(angle) {\r\n        if (this.value > angle.BaseValue)\r\n            return 1;\r\n        if (this.value < angle.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Angle with the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns A new Angle instance with the results.\r\n     */\r\n    add(angle) {\r\n        return new Angle(this.value + angle.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Angle with the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns A new Angle instance with the results.\r\n     */\r\n    subtract(angle) {\r\n        return new Angle(this.value - angle.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Angle with the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns A new Angle instance with the results.\r\n     */\r\n    multiply(angle) {\r\n        return new Angle(this.value * angle.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Angle with the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns A new Angle instance with the results.\r\n     */\r\n    divide(angle) {\r\n        return new Angle(this.value / angle.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Angle with the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns A new Angle instance with the results.\r\n     */\r\n    modulo(angle) {\r\n        return new Angle(this.value % angle.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Angle with the current Angle.\r\n     * @param angle The other Angle.\r\n     * @returns A new Angle instance with the results.\r\n     */\r\n    pow(angle) {\r\n        return new Angle(this.value ** angle.BaseValue);\r\n    }\r\n}\r\nexports.Angle = Angle;\r\n//# sourceMappingURL=angle.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ApparentEnergy = exports.ApparentEnergyUnits = void 0;\r\n/** ApparentEnergyUnits enumeration */\r\nvar ApparentEnergyUnits;\r\n(function (ApparentEnergyUnits) {\r\n    /** */\r\n    ApparentEnergyUnits[ApparentEnergyUnits[\"VoltampereHours\"] = 0] = \"VoltampereHours\";\r\n    /** */\r\n    ApparentEnergyUnits[ApparentEnergyUnits[\"KilovoltampereHours\"] = 1] = \"KilovoltampereHours\";\r\n    /** */\r\n    ApparentEnergyUnits[ApparentEnergyUnits[\"MegavoltampereHours\"] = 2] = \"MegavoltampereHours\";\r\n})(ApparentEnergyUnits = exports.ApparentEnergyUnits || (exports.ApparentEnergyUnits = {}));\r\n/** A unit for expressing the integral of apparent power over time, equal to the product of 1 volt-ampere and 1 hour, or to 3600 joules. */\r\nclass ApparentEnergy {\r\n    /**\r\n     * Create a new ApparentEnergy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ApparentEnergy’ unit to create from.\r\n     * The default unit is VoltampereHours\r\n     */\r\n    constructor(value, fromUnit = ApparentEnergyUnits.VoltampereHours) {\r\n        this.voltamperehoursLazy = null;\r\n        this.kilovoltamperehoursLazy = null;\r\n        this.megavoltamperehoursLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ApparentEnergy is VoltampereHours.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltampereHours() {\r\n        if (this.voltamperehoursLazy !== null) {\r\n            return this.voltamperehoursLazy;\r\n        }\r\n        return this.voltamperehoursLazy = this.convertFromBase(ApparentEnergyUnits.VoltampereHours);\r\n    }\r\n    /** */\r\n    get KilovoltampereHours() {\r\n        if (this.kilovoltamperehoursLazy !== null) {\r\n            return this.kilovoltamperehoursLazy;\r\n        }\r\n        return this.kilovoltamperehoursLazy = this.convertFromBase(ApparentEnergyUnits.KilovoltampereHours);\r\n    }\r\n    /** */\r\n    get MegavoltampereHours() {\r\n        if (this.megavoltamperehoursLazy !== null) {\r\n            return this.megavoltamperehoursLazy;\r\n        }\r\n        return this.megavoltamperehoursLazy = this.convertFromBase(ApparentEnergyUnits.MegavoltampereHours);\r\n    }\r\n    /**\r\n     * Create a new ApparentEnergy instance from a VoltampereHours\r\n     *\r\n     * @param value The unit as VoltampereHours to create a new ApparentEnergy from.\r\n     * @returns The new ApparentEnergy instance.\r\n     */\r\n    static FromVoltampereHours(value) {\r\n        return new ApparentEnergy(value, ApparentEnergyUnits.VoltampereHours);\r\n    }\r\n    /**\r\n     * Create a new ApparentEnergy instance from a KilovoltampereHours\r\n     *\r\n     * @param value The unit as KilovoltampereHours to create a new ApparentEnergy from.\r\n     * @returns The new ApparentEnergy instance.\r\n     */\r\n    static FromKilovoltampereHours(value) {\r\n        return new ApparentEnergy(value, ApparentEnergyUnits.KilovoltampereHours);\r\n    }\r\n    /**\r\n     * Create a new ApparentEnergy instance from a MegavoltampereHours\r\n     *\r\n     * @param value The unit as MegavoltampereHours to create a new ApparentEnergy from.\r\n     * @returns The new ApparentEnergy instance.\r\n     */\r\n    static FromMegavoltampereHours(value) {\r\n        return new ApparentEnergy(value, ApparentEnergyUnits.MegavoltampereHours);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ApparentEnergyUnits.VoltampereHours:\r\n                return this.value;\r\n            case ApparentEnergyUnits.KilovoltampereHours:\r\n                return (this.value) / 1000;\r\n            case ApparentEnergyUnits.MegavoltampereHours:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ApparentEnergyUnits.VoltampereHours:\r\n                return value;\r\n            case ApparentEnergyUnits.KilovoltampereHours:\r\n                return (value) * 1000;\r\n            case ApparentEnergyUnits.MegavoltampereHours:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ApparentEnergy to string.\r\n     * Note! the default format for ApparentEnergy is VoltampereHours.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ApparentEnergy.\r\n     * @returns The string format of the ApparentEnergy.\r\n     */\r\n    toString(toUnit = ApparentEnergyUnits.VoltampereHours) {\r\n        switch (toUnit) {\r\n            case ApparentEnergyUnits.VoltampereHours:\r\n                return this.VoltampereHours + ` VAh`;\r\n            case ApparentEnergyUnits.KilovoltampereHours:\r\n                return this.KilovoltampereHours + ` `;\r\n            case ApparentEnergyUnits.MegavoltampereHours:\r\n                return this.MegavoltampereHours + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ApparentEnergy are equals to the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns True if the given ApparentEnergy are equal to the current ApparentEnergy.\r\n     */\r\n    equals(apparentEnergy) {\r\n        return this.value === apparentEnergy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ApparentEnergy against the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns 0 if they are equal, -1 if the current ApparentEnergy is less then other, 1 if the current ApparentEnergy is greater then other.\r\n     */\r\n    compareTo(apparentEnergy) {\r\n        if (this.value > apparentEnergy.BaseValue)\r\n            return 1;\r\n        if (this.value < apparentEnergy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ApparentEnergy with the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns A new ApparentEnergy instance with the results.\r\n     */\r\n    add(apparentEnergy) {\r\n        return new ApparentEnergy(this.value + apparentEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ApparentEnergy with the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns A new ApparentEnergy instance with the results.\r\n     */\r\n    subtract(apparentEnergy) {\r\n        return new ApparentEnergy(this.value - apparentEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ApparentEnergy with the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns A new ApparentEnergy instance with the results.\r\n     */\r\n    multiply(apparentEnergy) {\r\n        return new ApparentEnergy(this.value * apparentEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ApparentEnergy with the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns A new ApparentEnergy instance with the results.\r\n     */\r\n    divide(apparentEnergy) {\r\n        return new ApparentEnergy(this.value / apparentEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ApparentEnergy with the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns A new ApparentEnergy instance with the results.\r\n     */\r\n    modulo(apparentEnergy) {\r\n        return new ApparentEnergy(this.value % apparentEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ApparentEnergy with the current ApparentEnergy.\r\n     * @param apparentEnergy The other ApparentEnergy.\r\n     * @returns A new ApparentEnergy instance with the results.\r\n     */\r\n    pow(apparentEnergy) {\r\n        return new ApparentEnergy(this.value ** apparentEnergy.BaseValue);\r\n    }\r\n}\r\nexports.ApparentEnergy = ApparentEnergy;\r\n//# sourceMappingURL=apparentenergy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ApparentPower = exports.ApparentPowerUnits = void 0;\r\n/** ApparentPowerUnits enumeration */\r\nvar ApparentPowerUnits;\r\n(function (ApparentPowerUnits) {\r\n    /** */\r\n    ApparentPowerUnits[ApparentPowerUnits[\"Voltamperes\"] = 0] = \"Voltamperes\";\r\n    /** */\r\n    ApparentPowerUnits[ApparentPowerUnits[\"Kilovoltamperes\"] = 1] = \"Kilovoltamperes\";\r\n    /** */\r\n    ApparentPowerUnits[ApparentPowerUnits[\"Megavoltamperes\"] = 2] = \"Megavoltamperes\";\r\n    /** */\r\n    ApparentPowerUnits[ApparentPowerUnits[\"Gigavoltamperes\"] = 3] = \"Gigavoltamperes\";\r\n})(ApparentPowerUnits = exports.ApparentPowerUnits || (exports.ApparentPowerUnits = {}));\r\n/** Power engineers measure apparent power as the magnitude of the vector sum of active and reactive power. Apparent power is the product of the root-mean-square of voltage and current. */\r\nclass ApparentPower {\r\n    /**\r\n     * Create a new ApparentPower.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ApparentPower’ unit to create from.\r\n     * The default unit is Voltamperes\r\n     */\r\n    constructor(value, fromUnit = ApparentPowerUnits.Voltamperes) {\r\n        this.voltamperesLazy = null;\r\n        this.kilovoltamperesLazy = null;\r\n        this.megavoltamperesLazy = null;\r\n        this.gigavoltamperesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ApparentPower is Voltamperes.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Voltamperes() {\r\n        if (this.voltamperesLazy !== null) {\r\n            return this.voltamperesLazy;\r\n        }\r\n        return this.voltamperesLazy = this.convertFromBase(ApparentPowerUnits.Voltamperes);\r\n    }\r\n    /** */\r\n    get Kilovoltamperes() {\r\n        if (this.kilovoltamperesLazy !== null) {\r\n            return this.kilovoltamperesLazy;\r\n        }\r\n        return this.kilovoltamperesLazy = this.convertFromBase(ApparentPowerUnits.Kilovoltamperes);\r\n    }\r\n    /** */\r\n    get Megavoltamperes() {\r\n        if (this.megavoltamperesLazy !== null) {\r\n            return this.megavoltamperesLazy;\r\n        }\r\n        return this.megavoltamperesLazy = this.convertFromBase(ApparentPowerUnits.Megavoltamperes);\r\n    }\r\n    /** */\r\n    get Gigavoltamperes() {\r\n        if (this.gigavoltamperesLazy !== null) {\r\n            return this.gigavoltamperesLazy;\r\n        }\r\n        return this.gigavoltamperesLazy = this.convertFromBase(ApparentPowerUnits.Gigavoltamperes);\r\n    }\r\n    /**\r\n     * Create a new ApparentPower instance from a Voltamperes\r\n     *\r\n     * @param value The unit as Voltamperes to create a new ApparentPower from.\r\n     * @returns The new ApparentPower instance.\r\n     */\r\n    static FromVoltamperes(value) {\r\n        return new ApparentPower(value, ApparentPowerUnits.Voltamperes);\r\n    }\r\n    /**\r\n     * Create a new ApparentPower instance from a Kilovoltamperes\r\n     *\r\n     * @param value The unit as Kilovoltamperes to create a new ApparentPower from.\r\n     * @returns The new ApparentPower instance.\r\n     */\r\n    static FromKilovoltamperes(value) {\r\n        return new ApparentPower(value, ApparentPowerUnits.Kilovoltamperes);\r\n    }\r\n    /**\r\n     * Create a new ApparentPower instance from a Megavoltamperes\r\n     *\r\n     * @param value The unit as Megavoltamperes to create a new ApparentPower from.\r\n     * @returns The new ApparentPower instance.\r\n     */\r\n    static FromMegavoltamperes(value) {\r\n        return new ApparentPower(value, ApparentPowerUnits.Megavoltamperes);\r\n    }\r\n    /**\r\n     * Create a new ApparentPower instance from a Gigavoltamperes\r\n     *\r\n     * @param value The unit as Gigavoltamperes to create a new ApparentPower from.\r\n     * @returns The new ApparentPower instance.\r\n     */\r\n    static FromGigavoltamperes(value) {\r\n        return new ApparentPower(value, ApparentPowerUnits.Gigavoltamperes);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ApparentPowerUnits.Voltamperes:\r\n                return this.value;\r\n            case ApparentPowerUnits.Kilovoltamperes:\r\n                return (this.value) / 1000;\r\n            case ApparentPowerUnits.Megavoltamperes:\r\n                return (this.value) / 1000000;\r\n            case ApparentPowerUnits.Gigavoltamperes:\r\n                return (this.value) / 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ApparentPowerUnits.Voltamperes:\r\n                return value;\r\n            case ApparentPowerUnits.Kilovoltamperes:\r\n                return (value) * 1000;\r\n            case ApparentPowerUnits.Megavoltamperes:\r\n                return (value) * 1000000;\r\n            case ApparentPowerUnits.Gigavoltamperes:\r\n                return (value) * 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ApparentPower to string.\r\n     * Note! the default format for ApparentPower is Voltamperes.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ApparentPower.\r\n     * @returns The string format of the ApparentPower.\r\n     */\r\n    toString(toUnit = ApparentPowerUnits.Voltamperes) {\r\n        switch (toUnit) {\r\n            case ApparentPowerUnits.Voltamperes:\r\n                return this.Voltamperes + ` VA`;\r\n            case ApparentPowerUnits.Kilovoltamperes:\r\n                return this.Kilovoltamperes + ` `;\r\n            case ApparentPowerUnits.Megavoltamperes:\r\n                return this.Megavoltamperes + ` `;\r\n            case ApparentPowerUnits.Gigavoltamperes:\r\n                return this.Gigavoltamperes + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ApparentPower are equals to the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns True if the given ApparentPower are equal to the current ApparentPower.\r\n     */\r\n    equals(apparentPower) {\r\n        return this.value === apparentPower.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ApparentPower against the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns 0 if they are equal, -1 if the current ApparentPower is less then other, 1 if the current ApparentPower is greater then other.\r\n     */\r\n    compareTo(apparentPower) {\r\n        if (this.value > apparentPower.BaseValue)\r\n            return 1;\r\n        if (this.value < apparentPower.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ApparentPower with the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns A new ApparentPower instance with the results.\r\n     */\r\n    add(apparentPower) {\r\n        return new ApparentPower(this.value + apparentPower.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ApparentPower with the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns A new ApparentPower instance with the results.\r\n     */\r\n    subtract(apparentPower) {\r\n        return new ApparentPower(this.value - apparentPower.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ApparentPower with the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns A new ApparentPower instance with the results.\r\n     */\r\n    multiply(apparentPower) {\r\n        return new ApparentPower(this.value * apparentPower.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ApparentPower with the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns A new ApparentPower instance with the results.\r\n     */\r\n    divide(apparentPower) {\r\n        return new ApparentPower(this.value / apparentPower.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ApparentPower with the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns A new ApparentPower instance with the results.\r\n     */\r\n    modulo(apparentPower) {\r\n        return new ApparentPower(this.value % apparentPower.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ApparentPower with the current ApparentPower.\r\n     * @param apparentPower The other ApparentPower.\r\n     * @returns A new ApparentPower instance with the results.\r\n     */\r\n    pow(apparentPower) {\r\n        return new ApparentPower(this.value ** apparentPower.BaseValue);\r\n    }\r\n}\r\nexports.ApparentPower = ApparentPower;\r\n//# sourceMappingURL=apparentpower.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Area = exports.AreaUnits = void 0;\r\n/** AreaUnits enumeration */\r\nvar AreaUnits;\r\n(function (AreaUnits) {\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareKilometers\"] = 0] = \"SquareKilometers\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareMeters\"] = 1] = \"SquareMeters\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareDecimeters\"] = 2] = \"SquareDecimeters\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareCentimeters\"] = 3] = \"SquareCentimeters\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareMillimeters\"] = 4] = \"SquareMillimeters\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareMicrometers\"] = 5] = \"SquareMicrometers\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareMiles\"] = 6] = \"SquareMiles\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareYards\"] = 7] = \"SquareYards\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareFeet\"] = 8] = \"SquareFeet\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"UsSurveySquareFeet\"] = 9] = \"UsSurveySquareFeet\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareInches\"] = 10] = \"SquareInches\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"Acres\"] = 11] = \"Acres\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"Hectares\"] = 12] = \"Hectares\";\r\n    /** */\r\n    AreaUnits[AreaUnits[\"SquareNauticalMiles\"] = 13] = \"SquareNauticalMiles\";\r\n})(AreaUnits = exports.AreaUnits || (exports.AreaUnits = {}));\r\n/** Area is a quantity that expresses the extent of a two-dimensional surface or shape, or planar lamina, in the plane. Area can be understood as the amount of material with a given thickness that would be necessary to fashion a model of the shape, or the amount of paint necessary to cover the surface with a single coat.[1] It is the two-dimensional analog of the length of a curve (a one-dimensional concept) or the volume of a solid (a three-dimensional concept). */\r\nclass Area {\r\n    /**\r\n     * Create a new Area.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Area’ unit to create from.\r\n     * The default unit is SquareMeters\r\n     */\r\n    constructor(value, fromUnit = AreaUnits.SquareMeters) {\r\n        this.squarekilometersLazy = null;\r\n        this.squaremetersLazy = null;\r\n        this.squaredecimetersLazy = null;\r\n        this.squarecentimetersLazy = null;\r\n        this.squaremillimetersLazy = null;\r\n        this.squaremicrometersLazy = null;\r\n        this.squaremilesLazy = null;\r\n        this.squareyardsLazy = null;\r\n        this.squarefeetLazy = null;\r\n        this.ussurveysquarefeetLazy = null;\r\n        this.squareinchesLazy = null;\r\n        this.acresLazy = null;\r\n        this.hectaresLazy = null;\r\n        this.squarenauticalmilesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Area is SquareMeters.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get SquareKilometers() {\r\n        if (this.squarekilometersLazy !== null) {\r\n            return this.squarekilometersLazy;\r\n        }\r\n        return this.squarekilometersLazy = this.convertFromBase(AreaUnits.SquareKilometers);\r\n    }\r\n    /** */\r\n    get SquareMeters() {\r\n        if (this.squaremetersLazy !== null) {\r\n            return this.squaremetersLazy;\r\n        }\r\n        return this.squaremetersLazy = this.convertFromBase(AreaUnits.SquareMeters);\r\n    }\r\n    /** */\r\n    get SquareDecimeters() {\r\n        if (this.squaredecimetersLazy !== null) {\r\n            return this.squaredecimetersLazy;\r\n        }\r\n        return this.squaredecimetersLazy = this.convertFromBase(AreaUnits.SquareDecimeters);\r\n    }\r\n    /** */\r\n    get SquareCentimeters() {\r\n        if (this.squarecentimetersLazy !== null) {\r\n            return this.squarecentimetersLazy;\r\n        }\r\n        return this.squarecentimetersLazy = this.convertFromBase(AreaUnits.SquareCentimeters);\r\n    }\r\n    /** */\r\n    get SquareMillimeters() {\r\n        if (this.squaremillimetersLazy !== null) {\r\n            return this.squaremillimetersLazy;\r\n        }\r\n        return this.squaremillimetersLazy = this.convertFromBase(AreaUnits.SquareMillimeters);\r\n    }\r\n    /** */\r\n    get SquareMicrometers() {\r\n        if (this.squaremicrometersLazy !== null) {\r\n            return this.squaremicrometersLazy;\r\n        }\r\n        return this.squaremicrometersLazy = this.convertFromBase(AreaUnits.SquareMicrometers);\r\n    }\r\n    /** */\r\n    get SquareMiles() {\r\n        if (this.squaremilesLazy !== null) {\r\n            return this.squaremilesLazy;\r\n        }\r\n        return this.squaremilesLazy = this.convertFromBase(AreaUnits.SquareMiles);\r\n    }\r\n    /** */\r\n    get SquareYards() {\r\n        if (this.squareyardsLazy !== null) {\r\n            return this.squareyardsLazy;\r\n        }\r\n        return this.squareyardsLazy = this.convertFromBase(AreaUnits.SquareYards);\r\n    }\r\n    /** */\r\n    get SquareFeet() {\r\n        if (this.squarefeetLazy !== null) {\r\n            return this.squarefeetLazy;\r\n        }\r\n        return this.squarefeetLazy = this.convertFromBase(AreaUnits.SquareFeet);\r\n    }\r\n    /** */\r\n    get UsSurveySquareFeet() {\r\n        if (this.ussurveysquarefeetLazy !== null) {\r\n            return this.ussurveysquarefeetLazy;\r\n        }\r\n        return this.ussurveysquarefeetLazy = this.convertFromBase(AreaUnits.UsSurveySquareFeet);\r\n    }\r\n    /** */\r\n    get SquareInches() {\r\n        if (this.squareinchesLazy !== null) {\r\n            return this.squareinchesLazy;\r\n        }\r\n        return this.squareinchesLazy = this.convertFromBase(AreaUnits.SquareInches);\r\n    }\r\n    /** */\r\n    get Acres() {\r\n        if (this.acresLazy !== null) {\r\n            return this.acresLazy;\r\n        }\r\n        return this.acresLazy = this.convertFromBase(AreaUnits.Acres);\r\n    }\r\n    /** */\r\n    get Hectares() {\r\n        if (this.hectaresLazy !== null) {\r\n            return this.hectaresLazy;\r\n        }\r\n        return this.hectaresLazy = this.convertFromBase(AreaUnits.Hectares);\r\n    }\r\n    /** */\r\n    get SquareNauticalMiles() {\r\n        if (this.squarenauticalmilesLazy !== null) {\r\n            return this.squarenauticalmilesLazy;\r\n        }\r\n        return this.squarenauticalmilesLazy = this.convertFromBase(AreaUnits.SquareNauticalMiles);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareKilometers\r\n     *\r\n     * @param value The unit as SquareKilometers to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareKilometers(value) {\r\n        return new Area(value, AreaUnits.SquareKilometers);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareMeters\r\n     *\r\n     * @param value The unit as SquareMeters to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareMeters(value) {\r\n        return new Area(value, AreaUnits.SquareMeters);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareDecimeters\r\n     *\r\n     * @param value The unit as SquareDecimeters to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareDecimeters(value) {\r\n        return new Area(value, AreaUnits.SquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareCentimeters\r\n     *\r\n     * @param value The unit as SquareCentimeters to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareCentimeters(value) {\r\n        return new Area(value, AreaUnits.SquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareMillimeters\r\n     *\r\n     * @param value The unit as SquareMillimeters to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareMillimeters(value) {\r\n        return new Area(value, AreaUnits.SquareMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareMicrometers\r\n     *\r\n     * @param value The unit as SquareMicrometers to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareMicrometers(value) {\r\n        return new Area(value, AreaUnits.SquareMicrometers);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareMiles\r\n     *\r\n     * @param value The unit as SquareMiles to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareMiles(value) {\r\n        return new Area(value, AreaUnits.SquareMiles);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareYards\r\n     *\r\n     * @param value The unit as SquareYards to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareYards(value) {\r\n        return new Area(value, AreaUnits.SquareYards);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareFeet\r\n     *\r\n     * @param value The unit as SquareFeet to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareFeet(value) {\r\n        return new Area(value, AreaUnits.SquareFeet);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a UsSurveySquareFeet\r\n     *\r\n     * @param value The unit as UsSurveySquareFeet to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromUsSurveySquareFeet(value) {\r\n        return new Area(value, AreaUnits.UsSurveySquareFeet);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareInches\r\n     *\r\n     * @param value The unit as SquareInches to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareInches(value) {\r\n        return new Area(value, AreaUnits.SquareInches);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a Acres\r\n     *\r\n     * @param value The unit as Acres to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromAcres(value) {\r\n        return new Area(value, AreaUnits.Acres);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a Hectares\r\n     *\r\n     * @param value The unit as Hectares to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromHectares(value) {\r\n        return new Area(value, AreaUnits.Hectares);\r\n    }\r\n    /**\r\n     * Create a new Area instance from a SquareNauticalMiles\r\n     *\r\n     * @param value The unit as SquareNauticalMiles to create a new Area from.\r\n     * @returns The new Area instance.\r\n     */\r\n    static FromSquareNauticalMiles(value) {\r\n        return new Area(value, AreaUnits.SquareNauticalMiles);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AreaUnits.SquareKilometers:\r\n                return this.value / 1e6;\r\n            case AreaUnits.SquareMeters:\r\n                return this.value;\r\n            case AreaUnits.SquareDecimeters:\r\n                return this.value / 1e-2;\r\n            case AreaUnits.SquareCentimeters:\r\n                return this.value / 1e-4;\r\n            case AreaUnits.SquareMillimeters:\r\n                return this.value / 1e-6;\r\n            case AreaUnits.SquareMicrometers:\r\n                return this.value / 1e-12;\r\n            case AreaUnits.SquareMiles:\r\n                return this.value / 2.59e6;\r\n            case AreaUnits.SquareYards:\r\n                return this.value / 0.836127;\r\n            case AreaUnits.SquareFeet:\r\n                return this.value / 0.092903;\r\n            case AreaUnits.UsSurveySquareFeet:\r\n                return this.value / 0.09290341161;\r\n            case AreaUnits.SquareInches:\r\n                return this.value / 0.00064516;\r\n            case AreaUnits.Acres:\r\n                return this.value / 4046.85642;\r\n            case AreaUnits.Hectares:\r\n                return this.value / 1e4;\r\n            case AreaUnits.SquareNauticalMiles:\r\n                return this.value / 3429904;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AreaUnits.SquareKilometers:\r\n                return value * 1e6;\r\n            case AreaUnits.SquareMeters:\r\n                return value;\r\n            case AreaUnits.SquareDecimeters:\r\n                return value * 1e-2;\r\n            case AreaUnits.SquareCentimeters:\r\n                return value * 1e-4;\r\n            case AreaUnits.SquareMillimeters:\r\n                return value * 1e-6;\r\n            case AreaUnits.SquareMicrometers:\r\n                return value * 1e-12;\r\n            case AreaUnits.SquareMiles:\r\n                return value * 2.59e6;\r\n            case AreaUnits.SquareYards:\r\n                return value * 0.836127;\r\n            case AreaUnits.SquareFeet:\r\n                return value * 0.092903;\r\n            case AreaUnits.UsSurveySquareFeet:\r\n                return value * 0.09290341161;\r\n            case AreaUnits.SquareInches:\r\n                return value * 0.00064516;\r\n            case AreaUnits.Acres:\r\n                return value * 4046.85642;\r\n            case AreaUnits.Hectares:\r\n                return value * 1e4;\r\n            case AreaUnits.SquareNauticalMiles:\r\n                return value * 3429904;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Area to string.\r\n     * Note! the default format for Area is SquareMeters.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Area.\r\n     * @returns The string format of the Area.\r\n     */\r\n    toString(toUnit = AreaUnits.SquareMeters) {\r\n        switch (toUnit) {\r\n            case AreaUnits.SquareKilometers:\r\n                return this.SquareKilometers + ` km²`;\r\n            case AreaUnits.SquareMeters:\r\n                return this.SquareMeters + ` m²`;\r\n            case AreaUnits.SquareDecimeters:\r\n                return this.SquareDecimeters + ` dm²`;\r\n            case AreaUnits.SquareCentimeters:\r\n                return this.SquareCentimeters + ` cm²`;\r\n            case AreaUnits.SquareMillimeters:\r\n                return this.SquareMillimeters + ` mm²`;\r\n            case AreaUnits.SquareMicrometers:\r\n                return this.SquareMicrometers + ` µm²`;\r\n            case AreaUnits.SquareMiles:\r\n                return this.SquareMiles + ` mi²`;\r\n            case AreaUnits.SquareYards:\r\n                return this.SquareYards + ` yd²`;\r\n            case AreaUnits.SquareFeet:\r\n                return this.SquareFeet + ` ft²`;\r\n            case AreaUnits.UsSurveySquareFeet:\r\n                return this.UsSurveySquareFeet + ` ft² (US)`;\r\n            case AreaUnits.SquareInches:\r\n                return this.SquareInches + ` in²`;\r\n            case AreaUnits.Acres:\r\n                return this.Acres + ` ac`;\r\n            case AreaUnits.Hectares:\r\n                return this.Hectares + ` ha`;\r\n            case AreaUnits.SquareNauticalMiles:\r\n                return this.SquareNauticalMiles + ` nmi²`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Area are equals to the current Area.\r\n     * @param area The other Area.\r\n     * @returns True if the given Area are equal to the current Area.\r\n     */\r\n    equals(area) {\r\n        return this.value === area.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Area against the current Area.\r\n     * @param area The other Area.\r\n     * @returns 0 if they are equal, -1 if the current Area is less then other, 1 if the current Area is greater then other.\r\n     */\r\n    compareTo(area) {\r\n        if (this.value > area.BaseValue)\r\n            return 1;\r\n        if (this.value < area.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Area with the current Area.\r\n     * @param area The other Area.\r\n     * @returns A new Area instance with the results.\r\n     */\r\n    add(area) {\r\n        return new Area(this.value + area.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Area with the current Area.\r\n     * @param area The other Area.\r\n     * @returns A new Area instance with the results.\r\n     */\r\n    subtract(area) {\r\n        return new Area(this.value - area.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Area with the current Area.\r\n     * @param area The other Area.\r\n     * @returns A new Area instance with the results.\r\n     */\r\n    multiply(area) {\r\n        return new Area(this.value * area.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Area with the current Area.\r\n     * @param area The other Area.\r\n     * @returns A new Area instance with the results.\r\n     */\r\n    divide(area) {\r\n        return new Area(this.value / area.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Area with the current Area.\r\n     * @param area The other Area.\r\n     * @returns A new Area instance with the results.\r\n     */\r\n    modulo(area) {\r\n        return new Area(this.value % area.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Area with the current Area.\r\n     * @param area The other Area.\r\n     * @returns A new Area instance with the results.\r\n     */\r\n    pow(area) {\r\n        return new Area(this.value ** area.BaseValue);\r\n    }\r\n}\r\nexports.Area = Area;\r\n//# sourceMappingURL=area.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AreaDensity = exports.AreaDensityUnits = void 0;\r\n/** AreaDensityUnits enumeration */\r\nvar AreaDensityUnits;\r\n(function (AreaDensityUnits) {\r\n    /** */\r\n    AreaDensityUnits[AreaDensityUnits[\"KilogramsPerSquareMeter\"] = 0] = \"KilogramsPerSquareMeter\";\r\n})(AreaDensityUnits = exports.AreaDensityUnits || (exports.AreaDensityUnits = {}));\r\n/** The area density of a two-dimensional object is calculated as the mass per unit area. */\r\nclass AreaDensity {\r\n    /**\r\n     * Create a new AreaDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘AreaDensity’ unit to create from.\r\n     * The default unit is KilogramsPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = AreaDensityUnits.KilogramsPerSquareMeter) {\r\n        this.kilogramspersquaremeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of AreaDensity is KilogramsPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get KilogramsPerSquareMeter() {\r\n        if (this.kilogramspersquaremeterLazy !== null) {\r\n            return this.kilogramspersquaremeterLazy;\r\n        }\r\n        return this.kilogramspersquaremeterLazy = this.convertFromBase(AreaDensityUnits.KilogramsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new AreaDensity instance from a KilogramsPerSquareMeter\r\n     *\r\n     * @param value The unit as KilogramsPerSquareMeter to create a new AreaDensity from.\r\n     * @returns The new AreaDensity instance.\r\n     */\r\n    static FromKilogramsPerSquareMeter(value) {\r\n        return new AreaDensity(value, AreaDensityUnits.KilogramsPerSquareMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AreaDensityUnits.KilogramsPerSquareMeter:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AreaDensityUnits.KilogramsPerSquareMeter:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the AreaDensity to string.\r\n     * Note! the default format for AreaDensity is KilogramsPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the AreaDensity.\r\n     * @returns The string format of the AreaDensity.\r\n     */\r\n    toString(toUnit = AreaDensityUnits.KilogramsPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case AreaDensityUnits.KilogramsPerSquareMeter:\r\n                return this.KilogramsPerSquareMeter + ` kg/m²`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given AreaDensity are equals to the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns True if the given AreaDensity are equal to the current AreaDensity.\r\n     */\r\n    equals(areaDensity) {\r\n        return this.value === areaDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given AreaDensity against the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns 0 if they are equal, -1 if the current AreaDensity is less then other, 1 if the current AreaDensity is greater then other.\r\n     */\r\n    compareTo(areaDensity) {\r\n        if (this.value > areaDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < areaDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given AreaDensity with the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns A new AreaDensity instance with the results.\r\n     */\r\n    add(areaDensity) {\r\n        return new AreaDensity(this.value + areaDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given AreaDensity with the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns A new AreaDensity instance with the results.\r\n     */\r\n    subtract(areaDensity) {\r\n        return new AreaDensity(this.value - areaDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given AreaDensity with the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns A new AreaDensity instance with the results.\r\n     */\r\n    multiply(areaDensity) {\r\n        return new AreaDensity(this.value * areaDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given AreaDensity with the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns A new AreaDensity instance with the results.\r\n     */\r\n    divide(areaDensity) {\r\n        return new AreaDensity(this.value / areaDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given AreaDensity with the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns A new AreaDensity instance with the results.\r\n     */\r\n    modulo(areaDensity) {\r\n        return new AreaDensity(this.value % areaDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given AreaDensity with the current AreaDensity.\r\n     * @param areaDensity The other AreaDensity.\r\n     * @returns A new AreaDensity instance with the results.\r\n     */\r\n    pow(areaDensity) {\r\n        return new AreaDensity(this.value ** areaDensity.BaseValue);\r\n    }\r\n}\r\nexports.AreaDensity = AreaDensity;\r\n//# sourceMappingURL=areadensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AreaMomentOfInertia = exports.AreaMomentOfInertiaUnits = void 0;\r\n/** AreaMomentOfInertiaUnits enumeration */\r\nvar AreaMomentOfInertiaUnits;\r\n(function (AreaMomentOfInertiaUnits) {\r\n    /** */\r\n    AreaMomentOfInertiaUnits[AreaMomentOfInertiaUnits[\"MetersToTheFourth\"] = 0] = \"MetersToTheFourth\";\r\n    /** */\r\n    AreaMomentOfInertiaUnits[AreaMomentOfInertiaUnits[\"DecimetersToTheFourth\"] = 1] = \"DecimetersToTheFourth\";\r\n    /** */\r\n    AreaMomentOfInertiaUnits[AreaMomentOfInertiaUnits[\"CentimetersToTheFourth\"] = 2] = \"CentimetersToTheFourth\";\r\n    /** */\r\n    AreaMomentOfInertiaUnits[AreaMomentOfInertiaUnits[\"MillimetersToTheFourth\"] = 3] = \"MillimetersToTheFourth\";\r\n    /** */\r\n    AreaMomentOfInertiaUnits[AreaMomentOfInertiaUnits[\"FeetToTheFourth\"] = 4] = \"FeetToTheFourth\";\r\n    /** */\r\n    AreaMomentOfInertiaUnits[AreaMomentOfInertiaUnits[\"InchesToTheFourth\"] = 5] = \"InchesToTheFourth\";\r\n})(AreaMomentOfInertiaUnits = exports.AreaMomentOfInertiaUnits || (exports.AreaMomentOfInertiaUnits = {}));\r\n/** A geometric property of an area that reflects how its points are distributed with regard to an axis. */\r\nclass AreaMomentOfInertia {\r\n    /**\r\n     * Create a new AreaMomentOfInertia.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘AreaMomentOfInertia’ unit to create from.\r\n     * The default unit is MetersToTheFourth\r\n     */\r\n    constructor(value, fromUnit = AreaMomentOfInertiaUnits.MetersToTheFourth) {\r\n        this.meterstothefourthLazy = null;\r\n        this.decimeterstothefourthLazy = null;\r\n        this.centimeterstothefourthLazy = null;\r\n        this.millimeterstothefourthLazy = null;\r\n        this.feettothefourthLazy = null;\r\n        this.inchestothefourthLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of AreaMomentOfInertia is MetersToTheFourth.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get MetersToTheFourth() {\r\n        if (this.meterstothefourthLazy !== null) {\r\n            return this.meterstothefourthLazy;\r\n        }\r\n        return this.meterstothefourthLazy = this.convertFromBase(AreaMomentOfInertiaUnits.MetersToTheFourth);\r\n    }\r\n    /** */\r\n    get DecimetersToTheFourth() {\r\n        if (this.decimeterstothefourthLazy !== null) {\r\n            return this.decimeterstothefourthLazy;\r\n        }\r\n        return this.decimeterstothefourthLazy = this.convertFromBase(AreaMomentOfInertiaUnits.DecimetersToTheFourth);\r\n    }\r\n    /** */\r\n    get CentimetersToTheFourth() {\r\n        if (this.centimeterstothefourthLazy !== null) {\r\n            return this.centimeterstothefourthLazy;\r\n        }\r\n        return this.centimeterstothefourthLazy = this.convertFromBase(AreaMomentOfInertiaUnits.CentimetersToTheFourth);\r\n    }\r\n    /** */\r\n    get MillimetersToTheFourth() {\r\n        if (this.millimeterstothefourthLazy !== null) {\r\n            return this.millimeterstothefourthLazy;\r\n        }\r\n        return this.millimeterstothefourthLazy = this.convertFromBase(AreaMomentOfInertiaUnits.MillimetersToTheFourth);\r\n    }\r\n    /** */\r\n    get FeetToTheFourth() {\r\n        if (this.feettothefourthLazy !== null) {\r\n            return this.feettothefourthLazy;\r\n        }\r\n        return this.feettothefourthLazy = this.convertFromBase(AreaMomentOfInertiaUnits.FeetToTheFourth);\r\n    }\r\n    /** */\r\n    get InchesToTheFourth() {\r\n        if (this.inchestothefourthLazy !== null) {\r\n            return this.inchestothefourthLazy;\r\n        }\r\n        return this.inchestothefourthLazy = this.convertFromBase(AreaMomentOfInertiaUnits.InchesToTheFourth);\r\n    }\r\n    /**\r\n     * Create a new AreaMomentOfInertia instance from a MetersToTheFourth\r\n     *\r\n     * @param value The unit as MetersToTheFourth to create a new AreaMomentOfInertia from.\r\n     * @returns The new AreaMomentOfInertia instance.\r\n     */\r\n    static FromMetersToTheFourth(value) {\r\n        return new AreaMomentOfInertia(value, AreaMomentOfInertiaUnits.MetersToTheFourth);\r\n    }\r\n    /**\r\n     * Create a new AreaMomentOfInertia instance from a DecimetersToTheFourth\r\n     *\r\n     * @param value The unit as DecimetersToTheFourth to create a new AreaMomentOfInertia from.\r\n     * @returns The new AreaMomentOfInertia instance.\r\n     */\r\n    static FromDecimetersToTheFourth(value) {\r\n        return new AreaMomentOfInertia(value, AreaMomentOfInertiaUnits.DecimetersToTheFourth);\r\n    }\r\n    /**\r\n     * Create a new AreaMomentOfInertia instance from a CentimetersToTheFourth\r\n     *\r\n     * @param value The unit as CentimetersToTheFourth to create a new AreaMomentOfInertia from.\r\n     * @returns The new AreaMomentOfInertia instance.\r\n     */\r\n    static FromCentimetersToTheFourth(value) {\r\n        return new AreaMomentOfInertia(value, AreaMomentOfInertiaUnits.CentimetersToTheFourth);\r\n    }\r\n    /**\r\n     * Create a new AreaMomentOfInertia instance from a MillimetersToTheFourth\r\n     *\r\n     * @param value The unit as MillimetersToTheFourth to create a new AreaMomentOfInertia from.\r\n     * @returns The new AreaMomentOfInertia instance.\r\n     */\r\n    static FromMillimetersToTheFourth(value) {\r\n        return new AreaMomentOfInertia(value, AreaMomentOfInertiaUnits.MillimetersToTheFourth);\r\n    }\r\n    /**\r\n     * Create a new AreaMomentOfInertia instance from a FeetToTheFourth\r\n     *\r\n     * @param value The unit as FeetToTheFourth to create a new AreaMomentOfInertia from.\r\n     * @returns The new AreaMomentOfInertia instance.\r\n     */\r\n    static FromFeetToTheFourth(value) {\r\n        return new AreaMomentOfInertia(value, AreaMomentOfInertiaUnits.FeetToTheFourth);\r\n    }\r\n    /**\r\n     * Create a new AreaMomentOfInertia instance from a InchesToTheFourth\r\n     *\r\n     * @param value The unit as InchesToTheFourth to create a new AreaMomentOfInertia from.\r\n     * @returns The new AreaMomentOfInertia instance.\r\n     */\r\n    static FromInchesToTheFourth(value) {\r\n        return new AreaMomentOfInertia(value, AreaMomentOfInertiaUnits.InchesToTheFourth);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case AreaMomentOfInertiaUnits.MetersToTheFourth:\r\n                return this.value;\r\n            case AreaMomentOfInertiaUnits.DecimetersToTheFourth:\r\n                return this.value * 1e4;\r\n            case AreaMomentOfInertiaUnits.CentimetersToTheFourth:\r\n                return this.value * 1e8;\r\n            case AreaMomentOfInertiaUnits.MillimetersToTheFourth:\r\n                return this.value * 1e12;\r\n            case AreaMomentOfInertiaUnits.FeetToTheFourth:\r\n                return this.value / Math.pow(0.3048, 4);\r\n            case AreaMomentOfInertiaUnits.InchesToTheFourth:\r\n                return this.value / Math.pow(2.54e-2, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case AreaMomentOfInertiaUnits.MetersToTheFourth:\r\n                return value;\r\n            case AreaMomentOfInertiaUnits.DecimetersToTheFourth:\r\n                return value / 1e4;\r\n            case AreaMomentOfInertiaUnits.CentimetersToTheFourth:\r\n                return value / 1e8;\r\n            case AreaMomentOfInertiaUnits.MillimetersToTheFourth:\r\n                return value / 1e12;\r\n            case AreaMomentOfInertiaUnits.FeetToTheFourth:\r\n                return value * Math.pow(0.3048, 4);\r\n            case AreaMomentOfInertiaUnits.InchesToTheFourth:\r\n                return value * Math.pow(2.54e-2, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the AreaMomentOfInertia to string.\r\n     * Note! the default format for AreaMomentOfInertia is MetersToTheFourth.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the AreaMomentOfInertia.\r\n     * @returns The string format of the AreaMomentOfInertia.\r\n     */\r\n    toString(toUnit = AreaMomentOfInertiaUnits.MetersToTheFourth) {\r\n        switch (toUnit) {\r\n            case AreaMomentOfInertiaUnits.MetersToTheFourth:\r\n                return this.MetersToTheFourth + ` m⁴`;\r\n            case AreaMomentOfInertiaUnits.DecimetersToTheFourth:\r\n                return this.DecimetersToTheFourth + ` dm⁴`;\r\n            case AreaMomentOfInertiaUnits.CentimetersToTheFourth:\r\n                return this.CentimetersToTheFourth + ` cm⁴`;\r\n            case AreaMomentOfInertiaUnits.MillimetersToTheFourth:\r\n                return this.MillimetersToTheFourth + ` mm⁴`;\r\n            case AreaMomentOfInertiaUnits.FeetToTheFourth:\r\n                return this.FeetToTheFourth + ` ft⁴`;\r\n            case AreaMomentOfInertiaUnits.InchesToTheFourth:\r\n                return this.InchesToTheFourth + ` in⁴`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given AreaMomentOfInertia are equals to the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns True if the given AreaMomentOfInertia are equal to the current AreaMomentOfInertia.\r\n     */\r\n    equals(areaMomentOfInertia) {\r\n        return this.value === areaMomentOfInertia.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given AreaMomentOfInertia against the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns 0 if they are equal, -1 if the current AreaMomentOfInertia is less then other, 1 if the current AreaMomentOfInertia is greater then other.\r\n     */\r\n    compareTo(areaMomentOfInertia) {\r\n        if (this.value > areaMomentOfInertia.BaseValue)\r\n            return 1;\r\n        if (this.value < areaMomentOfInertia.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given AreaMomentOfInertia with the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns A new AreaMomentOfInertia instance with the results.\r\n     */\r\n    add(areaMomentOfInertia) {\r\n        return new AreaMomentOfInertia(this.value + areaMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given AreaMomentOfInertia with the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns A new AreaMomentOfInertia instance with the results.\r\n     */\r\n    subtract(areaMomentOfInertia) {\r\n        return new AreaMomentOfInertia(this.value - areaMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given AreaMomentOfInertia with the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns A new AreaMomentOfInertia instance with the results.\r\n     */\r\n    multiply(areaMomentOfInertia) {\r\n        return new AreaMomentOfInertia(this.value * areaMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given AreaMomentOfInertia with the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns A new AreaMomentOfInertia instance with the results.\r\n     */\r\n    divide(areaMomentOfInertia) {\r\n        return new AreaMomentOfInertia(this.value / areaMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given AreaMomentOfInertia with the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns A new AreaMomentOfInertia instance with the results.\r\n     */\r\n    modulo(areaMomentOfInertia) {\r\n        return new AreaMomentOfInertia(this.value % areaMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given AreaMomentOfInertia with the current AreaMomentOfInertia.\r\n     * @param areaMomentOfInertia The other AreaMomentOfInertia.\r\n     * @returns A new AreaMomentOfInertia instance with the results.\r\n     */\r\n    pow(areaMomentOfInertia) {\r\n        return new AreaMomentOfInertia(this.value ** areaMomentOfInertia.BaseValue);\r\n    }\r\n}\r\nexports.AreaMomentOfInertia = AreaMomentOfInertia;\r\n//# sourceMappingURL=areamomentofinertia.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BitRate = exports.BitRateUnits = void 0;\r\n/** BitRateUnits enumeration */\r\nvar BitRateUnits;\r\n(function (BitRateUnits) {\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"BitsPerSecond\"] = 0] = \"BitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"BytesPerSecond\"] = 1] = \"BytesPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"KilobitsPerSecond\"] = 2] = \"KilobitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"MegabitsPerSecond\"] = 3] = \"MegabitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"GigabitsPerSecond\"] = 4] = \"GigabitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"TerabitsPerSecond\"] = 5] = \"TerabitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"PetabitsPerSecond\"] = 6] = \"PetabitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"ExabitsPerSecond\"] = 7] = \"ExabitsPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"KilobytesPerSecond\"] = 8] = \"KilobytesPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"MegabytesPerSecond\"] = 9] = \"MegabytesPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"GigabytesPerSecond\"] = 10] = \"GigabytesPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"TerabytesPerSecond\"] = 11] = \"TerabytesPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"PetabytesPerSecond\"] = 12] = \"PetabytesPerSecond\";\r\n    /** */\r\n    BitRateUnits[BitRateUnits[\"ExabytesPerSecond\"] = 13] = \"ExabytesPerSecond\";\r\n})(BitRateUnits = exports.BitRateUnits || (exports.BitRateUnits = {}));\r\n/** In telecommunications and computing, bit rate is the number of bits that are conveyed or processed per unit of time. */\r\nclass BitRate {\r\n    /**\r\n     * Create a new BitRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘BitRate’ unit to create from.\r\n     * The default unit is BitsPerSecond\r\n     */\r\n    constructor(value, fromUnit = BitRateUnits.BitsPerSecond) {\r\n        this.bitspersecondLazy = null;\r\n        this.bytespersecondLazy = null;\r\n        this.kilobitspersecondLazy = null;\r\n        this.megabitspersecondLazy = null;\r\n        this.gigabitspersecondLazy = null;\r\n        this.terabitspersecondLazy = null;\r\n        this.petabitspersecondLazy = null;\r\n        this.exabitspersecondLazy = null;\r\n        this.kilobytespersecondLazy = null;\r\n        this.megabytespersecondLazy = null;\r\n        this.gigabytespersecondLazy = null;\r\n        this.terabytespersecondLazy = null;\r\n        this.petabytespersecondLazy = null;\r\n        this.exabytespersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of BitRate is BitsPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get BitsPerSecond() {\r\n        if (this.bitspersecondLazy !== null) {\r\n            return this.bitspersecondLazy;\r\n        }\r\n        return this.bitspersecondLazy = this.convertFromBase(BitRateUnits.BitsPerSecond);\r\n    }\r\n    /** */\r\n    get BytesPerSecond() {\r\n        if (this.bytespersecondLazy !== null) {\r\n            return this.bytespersecondLazy;\r\n        }\r\n        return this.bytespersecondLazy = this.convertFromBase(BitRateUnits.BytesPerSecond);\r\n    }\r\n    /** */\r\n    get KilobitsPerSecond() {\r\n        if (this.kilobitspersecondLazy !== null) {\r\n            return this.kilobitspersecondLazy;\r\n        }\r\n        return this.kilobitspersecondLazy = this.convertFromBase(BitRateUnits.KilobitsPerSecond);\r\n    }\r\n    /** */\r\n    get MegabitsPerSecond() {\r\n        if (this.megabitspersecondLazy !== null) {\r\n            return this.megabitspersecondLazy;\r\n        }\r\n        return this.megabitspersecondLazy = this.convertFromBase(BitRateUnits.MegabitsPerSecond);\r\n    }\r\n    /** */\r\n    get GigabitsPerSecond() {\r\n        if (this.gigabitspersecondLazy !== null) {\r\n            return this.gigabitspersecondLazy;\r\n        }\r\n        return this.gigabitspersecondLazy = this.convertFromBase(BitRateUnits.GigabitsPerSecond);\r\n    }\r\n    /** */\r\n    get TerabitsPerSecond() {\r\n        if (this.terabitspersecondLazy !== null) {\r\n            return this.terabitspersecondLazy;\r\n        }\r\n        return this.terabitspersecondLazy = this.convertFromBase(BitRateUnits.TerabitsPerSecond);\r\n    }\r\n    /** */\r\n    get PetabitsPerSecond() {\r\n        if (this.petabitspersecondLazy !== null) {\r\n            return this.petabitspersecondLazy;\r\n        }\r\n        return this.petabitspersecondLazy = this.convertFromBase(BitRateUnits.PetabitsPerSecond);\r\n    }\r\n    /** */\r\n    get ExabitsPerSecond() {\r\n        if (this.exabitspersecondLazy !== null) {\r\n            return this.exabitspersecondLazy;\r\n        }\r\n        return this.exabitspersecondLazy = this.convertFromBase(BitRateUnits.ExabitsPerSecond);\r\n    }\r\n    /** */\r\n    get KilobytesPerSecond() {\r\n        if (this.kilobytespersecondLazy !== null) {\r\n            return this.kilobytespersecondLazy;\r\n        }\r\n        return this.kilobytespersecondLazy = this.convertFromBase(BitRateUnits.KilobytesPerSecond);\r\n    }\r\n    /** */\r\n    get MegabytesPerSecond() {\r\n        if (this.megabytespersecondLazy !== null) {\r\n            return this.megabytespersecondLazy;\r\n        }\r\n        return this.megabytespersecondLazy = this.convertFromBase(BitRateUnits.MegabytesPerSecond);\r\n    }\r\n    /** */\r\n    get GigabytesPerSecond() {\r\n        if (this.gigabytespersecondLazy !== null) {\r\n            return this.gigabytespersecondLazy;\r\n        }\r\n        return this.gigabytespersecondLazy = this.convertFromBase(BitRateUnits.GigabytesPerSecond);\r\n    }\r\n    /** */\r\n    get TerabytesPerSecond() {\r\n        if (this.terabytespersecondLazy !== null) {\r\n            return this.terabytespersecondLazy;\r\n        }\r\n        return this.terabytespersecondLazy = this.convertFromBase(BitRateUnits.TerabytesPerSecond);\r\n    }\r\n    /** */\r\n    get PetabytesPerSecond() {\r\n        if (this.petabytespersecondLazy !== null) {\r\n            return this.petabytespersecondLazy;\r\n        }\r\n        return this.petabytespersecondLazy = this.convertFromBase(BitRateUnits.PetabytesPerSecond);\r\n    }\r\n    /** */\r\n    get ExabytesPerSecond() {\r\n        if (this.exabytespersecondLazy !== null) {\r\n            return this.exabytespersecondLazy;\r\n        }\r\n        return this.exabytespersecondLazy = this.convertFromBase(BitRateUnits.ExabytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a BitsPerSecond\r\n     *\r\n     * @param value The unit as BitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromBitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.BitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a BytesPerSecond\r\n     *\r\n     * @param value The unit as BytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromBytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.BytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a KilobitsPerSecond\r\n     *\r\n     * @param value The unit as KilobitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromKilobitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.KilobitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a MegabitsPerSecond\r\n     *\r\n     * @param value The unit as MegabitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromMegabitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.MegabitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a GigabitsPerSecond\r\n     *\r\n     * @param value The unit as GigabitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromGigabitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.GigabitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a TerabitsPerSecond\r\n     *\r\n     * @param value The unit as TerabitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromTerabitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.TerabitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a PetabitsPerSecond\r\n     *\r\n     * @param value The unit as PetabitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromPetabitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.PetabitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a ExabitsPerSecond\r\n     *\r\n     * @param value The unit as ExabitsPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromExabitsPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.ExabitsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a KilobytesPerSecond\r\n     *\r\n     * @param value The unit as KilobytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromKilobytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.KilobytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a MegabytesPerSecond\r\n     *\r\n     * @param value The unit as MegabytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromMegabytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.MegabytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a GigabytesPerSecond\r\n     *\r\n     * @param value The unit as GigabytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromGigabytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.GigabytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a TerabytesPerSecond\r\n     *\r\n     * @param value The unit as TerabytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromTerabytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.TerabytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a PetabytesPerSecond\r\n     *\r\n     * @param value The unit as PetabytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromPetabytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.PetabytesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new BitRate instance from a ExabytesPerSecond\r\n     *\r\n     * @param value The unit as ExabytesPerSecond to create a new BitRate from.\r\n     * @returns The new BitRate instance.\r\n     */\r\n    static FromExabytesPerSecond(value) {\r\n        return new BitRate(value, BitRateUnits.ExabytesPerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case BitRateUnits.BitsPerSecond:\r\n                return this.value;\r\n            case BitRateUnits.BytesPerSecond:\r\n                return this.value / 8;\r\n            case BitRateUnits.KilobitsPerSecond:\r\n                return (this.value) / 1000;\r\n            case BitRateUnits.MegabitsPerSecond:\r\n                return (this.value) / 1000000;\r\n            case BitRateUnits.GigabitsPerSecond:\r\n                return (this.value) / 1000000000;\r\n            case BitRateUnits.TerabitsPerSecond:\r\n                return (this.value) / 1000000000000;\r\n            case BitRateUnits.PetabitsPerSecond:\r\n                return (this.value) / 1000000000000000;\r\n            case BitRateUnits.ExabitsPerSecond:\r\n                return (this.value) / 1000000000000000000;\r\n            case BitRateUnits.KilobytesPerSecond:\r\n                return (this.value / 8) / 1000;\r\n            case BitRateUnits.MegabytesPerSecond:\r\n                return (this.value / 8) / 1000000;\r\n            case BitRateUnits.GigabytesPerSecond:\r\n                return (this.value / 8) / 1000000000;\r\n            case BitRateUnits.TerabytesPerSecond:\r\n                return (this.value / 8) / 1000000000000;\r\n            case BitRateUnits.PetabytesPerSecond:\r\n                return (this.value / 8) / 1000000000000000;\r\n            case BitRateUnits.ExabytesPerSecond:\r\n                return (this.value / 8) / 1000000000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case BitRateUnits.BitsPerSecond:\r\n                return value;\r\n            case BitRateUnits.BytesPerSecond:\r\n                return value * 8;\r\n            case BitRateUnits.KilobitsPerSecond:\r\n                return (value) * 1000;\r\n            case BitRateUnits.MegabitsPerSecond:\r\n                return (value) * 1000000;\r\n            case BitRateUnits.GigabitsPerSecond:\r\n                return (value) * 1000000000;\r\n            case BitRateUnits.TerabitsPerSecond:\r\n                return (value) * 1000000000000;\r\n            case BitRateUnits.PetabitsPerSecond:\r\n                return (value) * 1000000000000000;\r\n            case BitRateUnits.ExabitsPerSecond:\r\n                return (value) * 1000000000000000000;\r\n            case BitRateUnits.KilobytesPerSecond:\r\n                return (value * 8) * 1000;\r\n            case BitRateUnits.MegabytesPerSecond:\r\n                return (value * 8) * 1000000;\r\n            case BitRateUnits.GigabytesPerSecond:\r\n                return (value * 8) * 1000000000;\r\n            case BitRateUnits.TerabytesPerSecond:\r\n                return (value * 8) * 1000000000000;\r\n            case BitRateUnits.PetabytesPerSecond:\r\n                return (value * 8) * 1000000000000000;\r\n            case BitRateUnits.ExabytesPerSecond:\r\n                return (value * 8) * 1000000000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the BitRate to string.\r\n     * Note! the default format for BitRate is BitsPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the BitRate.\r\n     * @returns The string format of the BitRate.\r\n     */\r\n    toString(toUnit = BitRateUnits.BitsPerSecond) {\r\n        switch (toUnit) {\r\n            case BitRateUnits.BitsPerSecond:\r\n                return this.BitsPerSecond + ` bit/s`;\r\n            case BitRateUnits.BytesPerSecond:\r\n                return this.BytesPerSecond + ` B/s`;\r\n            case BitRateUnits.KilobitsPerSecond:\r\n                return this.KilobitsPerSecond + ` `;\r\n            case BitRateUnits.MegabitsPerSecond:\r\n                return this.MegabitsPerSecond + ` `;\r\n            case BitRateUnits.GigabitsPerSecond:\r\n                return this.GigabitsPerSecond + ` `;\r\n            case BitRateUnits.TerabitsPerSecond:\r\n                return this.TerabitsPerSecond + ` `;\r\n            case BitRateUnits.PetabitsPerSecond:\r\n                return this.PetabitsPerSecond + ` `;\r\n            case BitRateUnits.ExabitsPerSecond:\r\n                return this.ExabitsPerSecond + ` `;\r\n            case BitRateUnits.KilobytesPerSecond:\r\n                return this.KilobytesPerSecond + ` `;\r\n            case BitRateUnits.MegabytesPerSecond:\r\n                return this.MegabytesPerSecond + ` `;\r\n            case BitRateUnits.GigabytesPerSecond:\r\n                return this.GigabytesPerSecond + ` `;\r\n            case BitRateUnits.TerabytesPerSecond:\r\n                return this.TerabytesPerSecond + ` `;\r\n            case BitRateUnits.PetabytesPerSecond:\r\n                return this.PetabytesPerSecond + ` `;\r\n            case BitRateUnits.ExabytesPerSecond:\r\n                return this.ExabytesPerSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given BitRate are equals to the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns True if the given BitRate are equal to the current BitRate.\r\n     */\r\n    equals(bitRate) {\r\n        return this.value === bitRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given BitRate against the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns 0 if they are equal, -1 if the current BitRate is less then other, 1 if the current BitRate is greater then other.\r\n     */\r\n    compareTo(bitRate) {\r\n        if (this.value > bitRate.BaseValue)\r\n            return 1;\r\n        if (this.value < bitRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given BitRate with the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns A new BitRate instance with the results.\r\n     */\r\n    add(bitRate) {\r\n        return new BitRate(this.value + bitRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given BitRate with the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns A new BitRate instance with the results.\r\n     */\r\n    subtract(bitRate) {\r\n        return new BitRate(this.value - bitRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given BitRate with the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns A new BitRate instance with the results.\r\n     */\r\n    multiply(bitRate) {\r\n        return new BitRate(this.value * bitRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given BitRate with the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns A new BitRate instance with the results.\r\n     */\r\n    divide(bitRate) {\r\n        return new BitRate(this.value / bitRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given BitRate with the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns A new BitRate instance with the results.\r\n     */\r\n    modulo(bitRate) {\r\n        return new BitRate(this.value % bitRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given BitRate with the current BitRate.\r\n     * @param bitRate The other BitRate.\r\n     * @returns A new BitRate instance with the results.\r\n     */\r\n    pow(bitRate) {\r\n        return new BitRate(this.value ** bitRate.BaseValue);\r\n    }\r\n}\r\nexports.BitRate = BitRate;\r\n//# sourceMappingURL=bitrate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BrakeSpecificFuelConsumption = exports.BrakeSpecificFuelConsumptionUnits = void 0;\r\n/** BrakeSpecificFuelConsumptionUnits enumeration */\r\nvar BrakeSpecificFuelConsumptionUnits;\r\n(function (BrakeSpecificFuelConsumptionUnits) {\r\n    /** */\r\n    BrakeSpecificFuelConsumptionUnits[BrakeSpecificFuelConsumptionUnits[\"GramsPerKiloWattHour\"] = 0] = \"GramsPerKiloWattHour\";\r\n    /** */\r\n    BrakeSpecificFuelConsumptionUnits[BrakeSpecificFuelConsumptionUnits[\"KilogramsPerJoule\"] = 1] = \"KilogramsPerJoule\";\r\n    /** The pound per horse power hour uses mechanical horse power and the imperial pound */\r\n    BrakeSpecificFuelConsumptionUnits[BrakeSpecificFuelConsumptionUnits[\"PoundsPerMechanicalHorsepowerHour\"] = 2] = \"PoundsPerMechanicalHorsepowerHour\";\r\n})(BrakeSpecificFuelConsumptionUnits = exports.BrakeSpecificFuelConsumptionUnits || (exports.BrakeSpecificFuelConsumptionUnits = {}));\r\n/** Brake specific fuel consumption (BSFC) is a measure of the fuel efficiency of any prime mover that burns fuel and produces rotational, or shaft, power. It is typically used for comparing the efficiency of internal combustion engines with a shaft output. */\r\nclass BrakeSpecificFuelConsumption {\r\n    /**\r\n     * Create a new BrakeSpecificFuelConsumption.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘BrakeSpecificFuelConsumption’ unit to create from.\r\n     * The default unit is KilogramsPerJoule\r\n     */\r\n    constructor(value, fromUnit = BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule) {\r\n        this.gramsperkilowatthourLazy = null;\r\n        this.kilogramsperjouleLazy = null;\r\n        this.poundspermechanicalhorsepowerhourLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of BrakeSpecificFuelConsumption is KilogramsPerJoule.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerKiloWattHour() {\r\n        if (this.gramsperkilowatthourLazy !== null) {\r\n            return this.gramsperkilowatthourLazy;\r\n        }\r\n        return this.gramsperkilowatthourLazy = this.convertFromBase(BrakeSpecificFuelConsumptionUnits.GramsPerKiloWattHour);\r\n    }\r\n    /** */\r\n    get KilogramsPerJoule() {\r\n        if (this.kilogramsperjouleLazy !== null) {\r\n            return this.kilogramsperjouleLazy;\r\n        }\r\n        return this.kilogramsperjouleLazy = this.convertFromBase(BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule);\r\n    }\r\n    /** The pound per horse power hour uses mechanical horse power and the imperial pound */\r\n    get PoundsPerMechanicalHorsepowerHour() {\r\n        if (this.poundspermechanicalhorsepowerhourLazy !== null) {\r\n            return this.poundspermechanicalhorsepowerhourLazy;\r\n        }\r\n        return this.poundspermechanicalhorsepowerhourLazy = this.convertFromBase(BrakeSpecificFuelConsumptionUnits.PoundsPerMechanicalHorsepowerHour);\r\n    }\r\n    /**\r\n     * Create a new BrakeSpecificFuelConsumption instance from a GramsPerKiloWattHour\r\n     *\r\n     * @param value The unit as GramsPerKiloWattHour to create a new BrakeSpecificFuelConsumption from.\r\n     * @returns The new BrakeSpecificFuelConsumption instance.\r\n     */\r\n    static FromGramsPerKiloWattHour(value) {\r\n        return new BrakeSpecificFuelConsumption(value, BrakeSpecificFuelConsumptionUnits.GramsPerKiloWattHour);\r\n    }\r\n    /**\r\n     * Create a new BrakeSpecificFuelConsumption instance from a KilogramsPerJoule\r\n     *\r\n     * @param value The unit as KilogramsPerJoule to create a new BrakeSpecificFuelConsumption from.\r\n     * @returns The new BrakeSpecificFuelConsumption instance.\r\n     */\r\n    static FromKilogramsPerJoule(value) {\r\n        return new BrakeSpecificFuelConsumption(value, BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule);\r\n    }\r\n    /**\r\n     * Create a new BrakeSpecificFuelConsumption instance from a PoundsPerMechanicalHorsepowerHour\r\n     * The pound per horse power hour uses mechanical horse power and the imperial pound\r\n     * @param value The unit as PoundsPerMechanicalHorsepowerHour to create a new BrakeSpecificFuelConsumption from.\r\n     * @returns The new BrakeSpecificFuelConsumption instance.\r\n     */\r\n    static FromPoundsPerMechanicalHorsepowerHour(value) {\r\n        return new BrakeSpecificFuelConsumption(value, BrakeSpecificFuelConsumptionUnits.PoundsPerMechanicalHorsepowerHour);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case BrakeSpecificFuelConsumptionUnits.GramsPerKiloWattHour:\r\n                return this.value * 3.6e9;\r\n            case BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule:\r\n                return this.value;\r\n            case BrakeSpecificFuelConsumptionUnits.PoundsPerMechanicalHorsepowerHour:\r\n                return this.value / 1.689659410672e-7;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case BrakeSpecificFuelConsumptionUnits.GramsPerKiloWattHour:\r\n                return value / 3.6e9;\r\n            case BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule:\r\n                return value;\r\n            case BrakeSpecificFuelConsumptionUnits.PoundsPerMechanicalHorsepowerHour:\r\n                return value * 1.689659410672e-7;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the BrakeSpecificFuelConsumption to string.\r\n     * Note! the default format for BrakeSpecificFuelConsumption is KilogramsPerJoule.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the BrakeSpecificFuelConsumption.\r\n     * @returns The string format of the BrakeSpecificFuelConsumption.\r\n     */\r\n    toString(toUnit = BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule) {\r\n        switch (toUnit) {\r\n            case BrakeSpecificFuelConsumptionUnits.GramsPerKiloWattHour:\r\n                return this.GramsPerKiloWattHour + ` g/kWh`;\r\n            case BrakeSpecificFuelConsumptionUnits.KilogramsPerJoule:\r\n                return this.KilogramsPerJoule + ` kg/J`;\r\n            case BrakeSpecificFuelConsumptionUnits.PoundsPerMechanicalHorsepowerHour:\r\n                return this.PoundsPerMechanicalHorsepowerHour + ` lb/hph`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given BrakeSpecificFuelConsumption are equals to the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns True if the given BrakeSpecificFuelConsumption are equal to the current BrakeSpecificFuelConsumption.\r\n     */\r\n    equals(brakeSpecificFuelConsumption) {\r\n        return this.value === brakeSpecificFuelConsumption.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given BrakeSpecificFuelConsumption against the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns 0 if they are equal, -1 if the current BrakeSpecificFuelConsumption is less then other, 1 if the current BrakeSpecificFuelConsumption is greater then other.\r\n     */\r\n    compareTo(brakeSpecificFuelConsumption) {\r\n        if (this.value > brakeSpecificFuelConsumption.BaseValue)\r\n            return 1;\r\n        if (this.value < brakeSpecificFuelConsumption.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given BrakeSpecificFuelConsumption with the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns A new BrakeSpecificFuelConsumption instance with the results.\r\n     */\r\n    add(brakeSpecificFuelConsumption) {\r\n        return new BrakeSpecificFuelConsumption(this.value + brakeSpecificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given BrakeSpecificFuelConsumption with the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns A new BrakeSpecificFuelConsumption instance with the results.\r\n     */\r\n    subtract(brakeSpecificFuelConsumption) {\r\n        return new BrakeSpecificFuelConsumption(this.value - brakeSpecificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given BrakeSpecificFuelConsumption with the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns A new BrakeSpecificFuelConsumption instance with the results.\r\n     */\r\n    multiply(brakeSpecificFuelConsumption) {\r\n        return new BrakeSpecificFuelConsumption(this.value * brakeSpecificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given BrakeSpecificFuelConsumption with the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns A new BrakeSpecificFuelConsumption instance with the results.\r\n     */\r\n    divide(brakeSpecificFuelConsumption) {\r\n        return new BrakeSpecificFuelConsumption(this.value / brakeSpecificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given BrakeSpecificFuelConsumption with the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns A new BrakeSpecificFuelConsumption instance with the results.\r\n     */\r\n    modulo(brakeSpecificFuelConsumption) {\r\n        return new BrakeSpecificFuelConsumption(this.value % brakeSpecificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given BrakeSpecificFuelConsumption with the current BrakeSpecificFuelConsumption.\r\n     * @param brakeSpecificFuelConsumption The other BrakeSpecificFuelConsumption.\r\n     * @returns A new BrakeSpecificFuelConsumption instance with the results.\r\n     */\r\n    pow(brakeSpecificFuelConsumption) {\r\n        return new BrakeSpecificFuelConsumption(this.value ** brakeSpecificFuelConsumption.BaseValue);\r\n    }\r\n}\r\nexports.BrakeSpecificFuelConsumption = BrakeSpecificFuelConsumption;\r\n//# sourceMappingURL=brakespecificfuelconsumption.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Capacitance = exports.CapacitanceUnits = void 0;\r\n/** CapacitanceUnits enumeration */\r\nvar CapacitanceUnits;\r\n(function (CapacitanceUnits) {\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Farads\"] = 0] = \"Farads\";\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Picofarads\"] = 1] = \"Picofarads\";\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Nanofarads\"] = 2] = \"Nanofarads\";\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Microfarads\"] = 3] = \"Microfarads\";\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Millifarads\"] = 4] = \"Millifarads\";\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Kilofarads\"] = 5] = \"Kilofarads\";\r\n    /** */\r\n    CapacitanceUnits[CapacitanceUnits[\"Megafarads\"] = 6] = \"Megafarads\";\r\n})(CapacitanceUnits = exports.CapacitanceUnits || (exports.CapacitanceUnits = {}));\r\n/** Capacitance is the ability of a body to store an electric charge. */\r\nclass Capacitance {\r\n    /**\r\n     * Create a new Capacitance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Capacitance’ unit to create from.\r\n     * The default unit is Farads\r\n     */\r\n    constructor(value, fromUnit = CapacitanceUnits.Farads) {\r\n        this.faradsLazy = null;\r\n        this.picofaradsLazy = null;\r\n        this.nanofaradsLazy = null;\r\n        this.microfaradsLazy = null;\r\n        this.millifaradsLazy = null;\r\n        this.kilofaradsLazy = null;\r\n        this.megafaradsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Capacitance is Farads.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Farads() {\r\n        if (this.faradsLazy !== null) {\r\n            return this.faradsLazy;\r\n        }\r\n        return this.faradsLazy = this.convertFromBase(CapacitanceUnits.Farads);\r\n    }\r\n    /** */\r\n    get Picofarads() {\r\n        if (this.picofaradsLazy !== null) {\r\n            return this.picofaradsLazy;\r\n        }\r\n        return this.picofaradsLazy = this.convertFromBase(CapacitanceUnits.Picofarads);\r\n    }\r\n    /** */\r\n    get Nanofarads() {\r\n        if (this.nanofaradsLazy !== null) {\r\n            return this.nanofaradsLazy;\r\n        }\r\n        return this.nanofaradsLazy = this.convertFromBase(CapacitanceUnits.Nanofarads);\r\n    }\r\n    /** */\r\n    get Microfarads() {\r\n        if (this.microfaradsLazy !== null) {\r\n            return this.microfaradsLazy;\r\n        }\r\n        return this.microfaradsLazy = this.convertFromBase(CapacitanceUnits.Microfarads);\r\n    }\r\n    /** */\r\n    get Millifarads() {\r\n        if (this.millifaradsLazy !== null) {\r\n            return this.millifaradsLazy;\r\n        }\r\n        return this.millifaradsLazy = this.convertFromBase(CapacitanceUnits.Millifarads);\r\n    }\r\n    /** */\r\n    get Kilofarads() {\r\n        if (this.kilofaradsLazy !== null) {\r\n            return this.kilofaradsLazy;\r\n        }\r\n        return this.kilofaradsLazy = this.convertFromBase(CapacitanceUnits.Kilofarads);\r\n    }\r\n    /** */\r\n    get Megafarads() {\r\n        if (this.megafaradsLazy !== null) {\r\n            return this.megafaradsLazy;\r\n        }\r\n        return this.megafaradsLazy = this.convertFromBase(CapacitanceUnits.Megafarads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Farads\r\n     *\r\n     * @param value The unit as Farads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromFarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Farads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Picofarads\r\n     *\r\n     * @param value The unit as Picofarads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromPicofarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Picofarads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Nanofarads\r\n     *\r\n     * @param value The unit as Nanofarads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromNanofarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Nanofarads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Microfarads\r\n     *\r\n     * @param value The unit as Microfarads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromMicrofarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Microfarads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Millifarads\r\n     *\r\n     * @param value The unit as Millifarads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromMillifarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Millifarads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Kilofarads\r\n     *\r\n     * @param value The unit as Kilofarads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromKilofarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Kilofarads);\r\n    }\r\n    /**\r\n     * Create a new Capacitance instance from a Megafarads\r\n     *\r\n     * @param value The unit as Megafarads to create a new Capacitance from.\r\n     * @returns The new Capacitance instance.\r\n     */\r\n    static FromMegafarads(value) {\r\n        return new Capacitance(value, CapacitanceUnits.Megafarads);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case CapacitanceUnits.Farads:\r\n                return this.value;\r\n            case CapacitanceUnits.Picofarads:\r\n                return (this.value) / 1e-12;\r\n            case CapacitanceUnits.Nanofarads:\r\n                return (this.value) / 1e-9;\r\n            case CapacitanceUnits.Microfarads:\r\n                return (this.value) / 0.000001;\r\n            case CapacitanceUnits.Millifarads:\r\n                return (this.value) / 0.001;\r\n            case CapacitanceUnits.Kilofarads:\r\n                return (this.value) / 1000;\r\n            case CapacitanceUnits.Megafarads:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case CapacitanceUnits.Farads:\r\n                return value;\r\n            case CapacitanceUnits.Picofarads:\r\n                return (value) * 1e-12;\r\n            case CapacitanceUnits.Nanofarads:\r\n                return (value) * 1e-9;\r\n            case CapacitanceUnits.Microfarads:\r\n                return (value) * 0.000001;\r\n            case CapacitanceUnits.Millifarads:\r\n                return (value) * 0.001;\r\n            case CapacitanceUnits.Kilofarads:\r\n                return (value) * 1000;\r\n            case CapacitanceUnits.Megafarads:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Capacitance to string.\r\n     * Note! the default format for Capacitance is Farads.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Capacitance.\r\n     * @returns The string format of the Capacitance.\r\n     */\r\n    toString(toUnit = CapacitanceUnits.Farads) {\r\n        switch (toUnit) {\r\n            case CapacitanceUnits.Farads:\r\n                return this.Farads + ` F`;\r\n            case CapacitanceUnits.Picofarads:\r\n                return this.Picofarads + ` `;\r\n            case CapacitanceUnits.Nanofarads:\r\n                return this.Nanofarads + ` `;\r\n            case CapacitanceUnits.Microfarads:\r\n                return this.Microfarads + ` `;\r\n            case CapacitanceUnits.Millifarads:\r\n                return this.Millifarads + ` `;\r\n            case CapacitanceUnits.Kilofarads:\r\n                return this.Kilofarads + ` `;\r\n            case CapacitanceUnits.Megafarads:\r\n                return this.Megafarads + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Capacitance are equals to the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns True if the given Capacitance are equal to the current Capacitance.\r\n     */\r\n    equals(capacitance) {\r\n        return this.value === capacitance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Capacitance against the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns 0 if they are equal, -1 if the current Capacitance is less then other, 1 if the current Capacitance is greater then other.\r\n     */\r\n    compareTo(capacitance) {\r\n        if (this.value > capacitance.BaseValue)\r\n            return 1;\r\n        if (this.value < capacitance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Capacitance with the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns A new Capacitance instance with the results.\r\n     */\r\n    add(capacitance) {\r\n        return new Capacitance(this.value + capacitance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Capacitance with the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns A new Capacitance instance with the results.\r\n     */\r\n    subtract(capacitance) {\r\n        return new Capacitance(this.value - capacitance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Capacitance with the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns A new Capacitance instance with the results.\r\n     */\r\n    multiply(capacitance) {\r\n        return new Capacitance(this.value * capacitance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Capacitance with the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns A new Capacitance instance with the results.\r\n     */\r\n    divide(capacitance) {\r\n        return new Capacitance(this.value / capacitance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Capacitance with the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns A new Capacitance instance with the results.\r\n     */\r\n    modulo(capacitance) {\r\n        return new Capacitance(this.value % capacitance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Capacitance with the current Capacitance.\r\n     * @param capacitance The other Capacitance.\r\n     * @returns A new Capacitance instance with the results.\r\n     */\r\n    pow(capacitance) {\r\n        return new Capacitance(this.value ** capacitance.BaseValue);\r\n    }\r\n}\r\nexports.Capacitance = Capacitance;\r\n//# sourceMappingURL=capacitance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CoefficientOfThermalExpansion = exports.CoefficientOfThermalExpansionUnits = void 0;\r\n/** CoefficientOfThermalExpansionUnits enumeration */\r\nvar CoefficientOfThermalExpansionUnits;\r\n(function (CoefficientOfThermalExpansionUnits) {\r\n    /** */\r\n    CoefficientOfThermalExpansionUnits[CoefficientOfThermalExpansionUnits[\"InverseKelvin\"] = 0] = \"InverseKelvin\";\r\n    /** */\r\n    CoefficientOfThermalExpansionUnits[CoefficientOfThermalExpansionUnits[\"InverseDegreeCelsius\"] = 1] = \"InverseDegreeCelsius\";\r\n    /** */\r\n    CoefficientOfThermalExpansionUnits[CoefficientOfThermalExpansionUnits[\"InverseDegreeFahrenheit\"] = 2] = \"InverseDegreeFahrenheit\";\r\n})(CoefficientOfThermalExpansionUnits = exports.CoefficientOfThermalExpansionUnits || (exports.CoefficientOfThermalExpansionUnits = {}));\r\n/** A unit that represents a fractional change in size in response to a change in temperature. */\r\nclass CoefficientOfThermalExpansion {\r\n    /**\r\n     * Create a new CoefficientOfThermalExpansion.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘CoefficientOfThermalExpansion’ unit to create from.\r\n     * The default unit is InverseKelvin\r\n     */\r\n    constructor(value, fromUnit = CoefficientOfThermalExpansionUnits.InverseKelvin) {\r\n        this.inversekelvinLazy = null;\r\n        this.inversedegreecelsiusLazy = null;\r\n        this.inversedegreefahrenheitLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of CoefficientOfThermalExpansion is InverseKelvin.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get InverseKelvin() {\r\n        if (this.inversekelvinLazy !== null) {\r\n            return this.inversekelvinLazy;\r\n        }\r\n        return this.inversekelvinLazy = this.convertFromBase(CoefficientOfThermalExpansionUnits.InverseKelvin);\r\n    }\r\n    /** */\r\n    get InverseDegreeCelsius() {\r\n        if (this.inversedegreecelsiusLazy !== null) {\r\n            return this.inversedegreecelsiusLazy;\r\n        }\r\n        return this.inversedegreecelsiusLazy = this.convertFromBase(CoefficientOfThermalExpansionUnits.InverseDegreeCelsius);\r\n    }\r\n    /** */\r\n    get InverseDegreeFahrenheit() {\r\n        if (this.inversedegreefahrenheitLazy !== null) {\r\n            return this.inversedegreefahrenheitLazy;\r\n        }\r\n        return this.inversedegreefahrenheitLazy = this.convertFromBase(CoefficientOfThermalExpansionUnits.InverseDegreeFahrenheit);\r\n    }\r\n    /**\r\n     * Create a new CoefficientOfThermalExpansion instance from a InverseKelvin\r\n     *\r\n     * @param value The unit as InverseKelvin to create a new CoefficientOfThermalExpansion from.\r\n     * @returns The new CoefficientOfThermalExpansion instance.\r\n     */\r\n    static FromInverseKelvin(value) {\r\n        return new CoefficientOfThermalExpansion(value, CoefficientOfThermalExpansionUnits.InverseKelvin);\r\n    }\r\n    /**\r\n     * Create a new CoefficientOfThermalExpansion instance from a InverseDegreeCelsius\r\n     *\r\n     * @param value The unit as InverseDegreeCelsius to create a new CoefficientOfThermalExpansion from.\r\n     * @returns The new CoefficientOfThermalExpansion instance.\r\n     */\r\n    static FromInverseDegreeCelsius(value) {\r\n        return new CoefficientOfThermalExpansion(value, CoefficientOfThermalExpansionUnits.InverseDegreeCelsius);\r\n    }\r\n    /**\r\n     * Create a new CoefficientOfThermalExpansion instance from a InverseDegreeFahrenheit\r\n     *\r\n     * @param value The unit as InverseDegreeFahrenheit to create a new CoefficientOfThermalExpansion from.\r\n     * @returns The new CoefficientOfThermalExpansion instance.\r\n     */\r\n    static FromInverseDegreeFahrenheit(value) {\r\n        return new CoefficientOfThermalExpansion(value, CoefficientOfThermalExpansionUnits.InverseDegreeFahrenheit);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case CoefficientOfThermalExpansionUnits.InverseKelvin:\r\n                return this.value;\r\n            case CoefficientOfThermalExpansionUnits.InverseDegreeCelsius:\r\n                return this.value;\r\n            case CoefficientOfThermalExpansionUnits.InverseDegreeFahrenheit:\r\n                return this.value * 5 / 9;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case CoefficientOfThermalExpansionUnits.InverseKelvin:\r\n                return value;\r\n            case CoefficientOfThermalExpansionUnits.InverseDegreeCelsius:\r\n                return value;\r\n            case CoefficientOfThermalExpansionUnits.InverseDegreeFahrenheit:\r\n                return value * 9 / 5;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the CoefficientOfThermalExpansion to string.\r\n     * Note! the default format for CoefficientOfThermalExpansion is InverseKelvin.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the CoefficientOfThermalExpansion.\r\n     * @returns The string format of the CoefficientOfThermalExpansion.\r\n     */\r\n    toString(toUnit = CoefficientOfThermalExpansionUnits.InverseKelvin) {\r\n        switch (toUnit) {\r\n            case CoefficientOfThermalExpansionUnits.InverseKelvin:\r\n                return this.InverseKelvin + ` K⁻¹`;\r\n            case CoefficientOfThermalExpansionUnits.InverseDegreeCelsius:\r\n                return this.InverseDegreeCelsius + ` °C⁻¹`;\r\n            case CoefficientOfThermalExpansionUnits.InverseDegreeFahrenheit:\r\n                return this.InverseDegreeFahrenheit + ` °F⁻¹`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given CoefficientOfThermalExpansion are equals to the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns True if the given CoefficientOfThermalExpansion are equal to the current CoefficientOfThermalExpansion.\r\n     */\r\n    equals(coefficientOfThermalExpansion) {\r\n        return this.value === coefficientOfThermalExpansion.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given CoefficientOfThermalExpansion against the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns 0 if they are equal, -1 if the current CoefficientOfThermalExpansion is less then other, 1 if the current CoefficientOfThermalExpansion is greater then other.\r\n     */\r\n    compareTo(coefficientOfThermalExpansion) {\r\n        if (this.value > coefficientOfThermalExpansion.BaseValue)\r\n            return 1;\r\n        if (this.value < coefficientOfThermalExpansion.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given CoefficientOfThermalExpansion with the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns A new CoefficientOfThermalExpansion instance with the results.\r\n     */\r\n    add(coefficientOfThermalExpansion) {\r\n        return new CoefficientOfThermalExpansion(this.value + coefficientOfThermalExpansion.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given CoefficientOfThermalExpansion with the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns A new CoefficientOfThermalExpansion instance with the results.\r\n     */\r\n    subtract(coefficientOfThermalExpansion) {\r\n        return new CoefficientOfThermalExpansion(this.value - coefficientOfThermalExpansion.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given CoefficientOfThermalExpansion with the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns A new CoefficientOfThermalExpansion instance with the results.\r\n     */\r\n    multiply(coefficientOfThermalExpansion) {\r\n        return new CoefficientOfThermalExpansion(this.value * coefficientOfThermalExpansion.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given CoefficientOfThermalExpansion with the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns A new CoefficientOfThermalExpansion instance with the results.\r\n     */\r\n    divide(coefficientOfThermalExpansion) {\r\n        return new CoefficientOfThermalExpansion(this.value / coefficientOfThermalExpansion.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given CoefficientOfThermalExpansion with the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns A new CoefficientOfThermalExpansion instance with the results.\r\n     */\r\n    modulo(coefficientOfThermalExpansion) {\r\n        return new CoefficientOfThermalExpansion(this.value % coefficientOfThermalExpansion.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given CoefficientOfThermalExpansion with the current CoefficientOfThermalExpansion.\r\n     * @param coefficientOfThermalExpansion The other CoefficientOfThermalExpansion.\r\n     * @returns A new CoefficientOfThermalExpansion instance with the results.\r\n     */\r\n    pow(coefficientOfThermalExpansion) {\r\n        return new CoefficientOfThermalExpansion(this.value ** coefficientOfThermalExpansion.BaseValue);\r\n    }\r\n}\r\nexports.CoefficientOfThermalExpansion = CoefficientOfThermalExpansion;\r\n//# sourceMappingURL=coefficientofthermalexpansion.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Density = exports.DensityUnits = void 0;\r\n/** DensityUnits enumeration */\r\nvar DensityUnits;\r\n(function (DensityUnits) {\r\n    /** */\r\n    DensityUnits[DensityUnits[\"GramsPerCubicMillimeter\"] = 0] = \"GramsPerCubicMillimeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"GramsPerCubicCentimeter\"] = 1] = \"GramsPerCubicCentimeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"GramsPerCubicMeter\"] = 2] = \"GramsPerCubicMeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PoundsPerCubicInch\"] = 3] = \"PoundsPerCubicInch\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PoundsPerCubicFoot\"] = 4] = \"PoundsPerCubicFoot\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"TonnesPerCubicMillimeter\"] = 5] = \"TonnesPerCubicMillimeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"TonnesPerCubicCentimeter\"] = 6] = \"TonnesPerCubicCentimeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"TonnesPerCubicMeter\"] = 7] = \"TonnesPerCubicMeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"SlugsPerCubicFoot\"] = 8] = \"SlugsPerCubicFoot\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"GramsPerLiter\"] = 9] = \"GramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"GramsPerDeciLiter\"] = 10] = \"GramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"GramsPerMilliliter\"] = 11] = \"GramsPerMilliliter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PoundsPerUSGallon\"] = 12] = \"PoundsPerUSGallon\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PoundsPerImperialGallon\"] = 13] = \"PoundsPerImperialGallon\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"KilogramsPerLiter\"] = 14] = \"KilogramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"KilogramsPerCubicMillimeter\"] = 15] = \"KilogramsPerCubicMillimeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"KilogramsPerCubicCentimeter\"] = 16] = \"KilogramsPerCubicCentimeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"KilogramsPerCubicMeter\"] = 17] = \"KilogramsPerCubicMeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MilligramsPerCubicMeter\"] = 18] = \"MilligramsPerCubicMeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MicrogramsPerCubicMeter\"] = 19] = \"MicrogramsPerCubicMeter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"KilopoundsPerCubicInch\"] = 20] = \"KilopoundsPerCubicInch\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"KilopoundsPerCubicFoot\"] = 21] = \"KilopoundsPerCubicFoot\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PicogramsPerLiter\"] = 22] = \"PicogramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"NanogramsPerLiter\"] = 23] = \"NanogramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MicrogramsPerLiter\"] = 24] = \"MicrogramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MilligramsPerLiter\"] = 25] = \"MilligramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"CentigramsPerLiter\"] = 26] = \"CentigramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"DecigramsPerLiter\"] = 27] = \"DecigramsPerLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PicogramsPerDeciLiter\"] = 28] = \"PicogramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"NanogramsPerDeciLiter\"] = 29] = \"NanogramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MicrogramsPerDeciLiter\"] = 30] = \"MicrogramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MilligramsPerDeciLiter\"] = 31] = \"MilligramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"CentigramsPerDeciLiter\"] = 32] = \"CentigramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"DecigramsPerDeciLiter\"] = 33] = \"DecigramsPerDeciLiter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"PicogramsPerMilliliter\"] = 34] = \"PicogramsPerMilliliter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"NanogramsPerMilliliter\"] = 35] = \"NanogramsPerMilliliter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MicrogramsPerMilliliter\"] = 36] = \"MicrogramsPerMilliliter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"MilligramsPerMilliliter\"] = 37] = \"MilligramsPerMilliliter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"CentigramsPerMilliliter\"] = 38] = \"CentigramsPerMilliliter\";\r\n    /** */\r\n    DensityUnits[DensityUnits[\"DecigramsPerMilliliter\"] = 39] = \"DecigramsPerMilliliter\";\r\n})(DensityUnits = exports.DensityUnits || (exports.DensityUnits = {}));\r\n/** The density, or more precisely, the volumetric mass density, of a substance is its mass per unit volume. */\r\nclass Density {\r\n    /**\r\n     * Create a new Density.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Density’ unit to create from.\r\n     * The default unit is KilogramsPerCubicMeter\r\n     */\r\n    constructor(value, fromUnit = DensityUnits.KilogramsPerCubicMeter) {\r\n        this.gramspercubicmillimeterLazy = null;\r\n        this.gramspercubiccentimeterLazy = null;\r\n        this.gramspercubicmeterLazy = null;\r\n        this.poundspercubicinchLazy = null;\r\n        this.poundspercubicfootLazy = null;\r\n        this.tonnespercubicmillimeterLazy = null;\r\n        this.tonnespercubiccentimeterLazy = null;\r\n        this.tonnespercubicmeterLazy = null;\r\n        this.slugspercubicfootLazy = null;\r\n        this.gramsperliterLazy = null;\r\n        this.gramsperdeciliterLazy = null;\r\n        this.gramspermilliliterLazy = null;\r\n        this.poundsperusgallonLazy = null;\r\n        this.poundsperimperialgallonLazy = null;\r\n        this.kilogramsperliterLazy = null;\r\n        this.kilogramspercubicmillimeterLazy = null;\r\n        this.kilogramspercubiccentimeterLazy = null;\r\n        this.kilogramspercubicmeterLazy = null;\r\n        this.milligramspercubicmeterLazy = null;\r\n        this.microgramspercubicmeterLazy = null;\r\n        this.kilopoundspercubicinchLazy = null;\r\n        this.kilopoundspercubicfootLazy = null;\r\n        this.picogramsperliterLazy = null;\r\n        this.nanogramsperliterLazy = null;\r\n        this.microgramsperliterLazy = null;\r\n        this.milligramsperliterLazy = null;\r\n        this.centigramsperliterLazy = null;\r\n        this.decigramsperliterLazy = null;\r\n        this.picogramsperdeciliterLazy = null;\r\n        this.nanogramsperdeciliterLazy = null;\r\n        this.microgramsperdeciliterLazy = null;\r\n        this.milligramsperdeciliterLazy = null;\r\n        this.centigramsperdeciliterLazy = null;\r\n        this.decigramsperdeciliterLazy = null;\r\n        this.picogramspermilliliterLazy = null;\r\n        this.nanogramspermilliliterLazy = null;\r\n        this.microgramspermilliliterLazy = null;\r\n        this.milligramspermilliliterLazy = null;\r\n        this.centigramspermilliliterLazy = null;\r\n        this.decigramspermilliliterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Density is KilogramsPerCubicMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerCubicMillimeter() {\r\n        if (this.gramspercubicmillimeterLazy !== null) {\r\n            return this.gramspercubicmillimeterLazy;\r\n        }\r\n        return this.gramspercubicmillimeterLazy = this.convertFromBase(DensityUnits.GramsPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get GramsPerCubicCentimeter() {\r\n        if (this.gramspercubiccentimeterLazy !== null) {\r\n            return this.gramspercubiccentimeterLazy;\r\n        }\r\n        return this.gramspercubiccentimeterLazy = this.convertFromBase(DensityUnits.GramsPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get GramsPerCubicMeter() {\r\n        if (this.gramspercubicmeterLazy !== null) {\r\n            return this.gramspercubicmeterLazy;\r\n        }\r\n        return this.gramspercubicmeterLazy = this.convertFromBase(DensityUnits.GramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get PoundsPerCubicInch() {\r\n        if (this.poundspercubicinchLazy !== null) {\r\n            return this.poundspercubicinchLazy;\r\n        }\r\n        return this.poundspercubicinchLazy = this.convertFromBase(DensityUnits.PoundsPerCubicInch);\r\n    }\r\n    /** */\r\n    get PoundsPerCubicFoot() {\r\n        if (this.poundspercubicfootLazy !== null) {\r\n            return this.poundspercubicfootLazy;\r\n        }\r\n        return this.poundspercubicfootLazy = this.convertFromBase(DensityUnits.PoundsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get TonnesPerCubicMillimeter() {\r\n        if (this.tonnespercubicmillimeterLazy !== null) {\r\n            return this.tonnespercubicmillimeterLazy;\r\n        }\r\n        return this.tonnespercubicmillimeterLazy = this.convertFromBase(DensityUnits.TonnesPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get TonnesPerCubicCentimeter() {\r\n        if (this.tonnespercubiccentimeterLazy !== null) {\r\n            return this.tonnespercubiccentimeterLazy;\r\n        }\r\n        return this.tonnespercubiccentimeterLazy = this.convertFromBase(DensityUnits.TonnesPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get TonnesPerCubicMeter() {\r\n        if (this.tonnespercubicmeterLazy !== null) {\r\n            return this.tonnespercubicmeterLazy;\r\n        }\r\n        return this.tonnespercubicmeterLazy = this.convertFromBase(DensityUnits.TonnesPerCubicMeter);\r\n    }\r\n    /** */\r\n    get SlugsPerCubicFoot() {\r\n        if (this.slugspercubicfootLazy !== null) {\r\n            return this.slugspercubicfootLazy;\r\n        }\r\n        return this.slugspercubicfootLazy = this.convertFromBase(DensityUnits.SlugsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get GramsPerLiter() {\r\n        if (this.gramsperliterLazy !== null) {\r\n            return this.gramsperliterLazy;\r\n        }\r\n        return this.gramsperliterLazy = this.convertFromBase(DensityUnits.GramsPerLiter);\r\n    }\r\n    /** */\r\n    get GramsPerDeciLiter() {\r\n        if (this.gramsperdeciliterLazy !== null) {\r\n            return this.gramsperdeciliterLazy;\r\n        }\r\n        return this.gramsperdeciliterLazy = this.convertFromBase(DensityUnits.GramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get GramsPerMilliliter() {\r\n        if (this.gramspermilliliterLazy !== null) {\r\n            return this.gramspermilliliterLazy;\r\n        }\r\n        return this.gramspermilliliterLazy = this.convertFromBase(DensityUnits.GramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get PoundsPerUSGallon() {\r\n        if (this.poundsperusgallonLazy !== null) {\r\n            return this.poundsperusgallonLazy;\r\n        }\r\n        return this.poundsperusgallonLazy = this.convertFromBase(DensityUnits.PoundsPerUSGallon);\r\n    }\r\n    /** */\r\n    get PoundsPerImperialGallon() {\r\n        if (this.poundsperimperialgallonLazy !== null) {\r\n            return this.poundsperimperialgallonLazy;\r\n        }\r\n        return this.poundsperimperialgallonLazy = this.convertFromBase(DensityUnits.PoundsPerImperialGallon);\r\n    }\r\n    /** */\r\n    get KilogramsPerLiter() {\r\n        if (this.kilogramsperliterLazy !== null) {\r\n            return this.kilogramsperliterLazy;\r\n        }\r\n        return this.kilogramsperliterLazy = this.convertFromBase(DensityUnits.KilogramsPerLiter);\r\n    }\r\n    /** */\r\n    get KilogramsPerCubicMillimeter() {\r\n        if (this.kilogramspercubicmillimeterLazy !== null) {\r\n            return this.kilogramspercubicmillimeterLazy;\r\n        }\r\n        return this.kilogramspercubicmillimeterLazy = this.convertFromBase(DensityUnits.KilogramsPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerCubicCentimeter() {\r\n        if (this.kilogramspercubiccentimeterLazy !== null) {\r\n            return this.kilogramspercubiccentimeterLazy;\r\n        }\r\n        return this.kilogramspercubiccentimeterLazy = this.convertFromBase(DensityUnits.KilogramsPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerCubicMeter() {\r\n        if (this.kilogramspercubicmeterLazy !== null) {\r\n            return this.kilogramspercubicmeterLazy;\r\n        }\r\n        return this.kilogramspercubicmeterLazy = this.convertFromBase(DensityUnits.KilogramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MilligramsPerCubicMeter() {\r\n        if (this.milligramspercubicmeterLazy !== null) {\r\n            return this.milligramspercubicmeterLazy;\r\n        }\r\n        return this.milligramspercubicmeterLazy = this.convertFromBase(DensityUnits.MilligramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerCubicMeter() {\r\n        if (this.microgramspercubicmeterLazy !== null) {\r\n            return this.microgramspercubicmeterLazy;\r\n        }\r\n        return this.microgramspercubicmeterLazy = this.convertFromBase(DensityUnits.MicrogramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get KilopoundsPerCubicInch() {\r\n        if (this.kilopoundspercubicinchLazy !== null) {\r\n            return this.kilopoundspercubicinchLazy;\r\n        }\r\n        return this.kilopoundspercubicinchLazy = this.convertFromBase(DensityUnits.KilopoundsPerCubicInch);\r\n    }\r\n    /** */\r\n    get KilopoundsPerCubicFoot() {\r\n        if (this.kilopoundspercubicfootLazy !== null) {\r\n            return this.kilopoundspercubicfootLazy;\r\n        }\r\n        return this.kilopoundspercubicfootLazy = this.convertFromBase(DensityUnits.KilopoundsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get PicogramsPerLiter() {\r\n        if (this.picogramsperliterLazy !== null) {\r\n            return this.picogramsperliterLazy;\r\n        }\r\n        return this.picogramsperliterLazy = this.convertFromBase(DensityUnits.PicogramsPerLiter);\r\n    }\r\n    /** */\r\n    get NanogramsPerLiter() {\r\n        if (this.nanogramsperliterLazy !== null) {\r\n            return this.nanogramsperliterLazy;\r\n        }\r\n        return this.nanogramsperliterLazy = this.convertFromBase(DensityUnits.NanogramsPerLiter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerLiter() {\r\n        if (this.microgramsperliterLazy !== null) {\r\n            return this.microgramsperliterLazy;\r\n        }\r\n        return this.microgramsperliterLazy = this.convertFromBase(DensityUnits.MicrogramsPerLiter);\r\n    }\r\n    /** */\r\n    get MilligramsPerLiter() {\r\n        if (this.milligramsperliterLazy !== null) {\r\n            return this.milligramsperliterLazy;\r\n        }\r\n        return this.milligramsperliterLazy = this.convertFromBase(DensityUnits.MilligramsPerLiter);\r\n    }\r\n    /** */\r\n    get CentigramsPerLiter() {\r\n        if (this.centigramsperliterLazy !== null) {\r\n            return this.centigramsperliterLazy;\r\n        }\r\n        return this.centigramsperliterLazy = this.convertFromBase(DensityUnits.CentigramsPerLiter);\r\n    }\r\n    /** */\r\n    get DecigramsPerLiter() {\r\n        if (this.decigramsperliterLazy !== null) {\r\n            return this.decigramsperliterLazy;\r\n        }\r\n        return this.decigramsperliterLazy = this.convertFromBase(DensityUnits.DecigramsPerLiter);\r\n    }\r\n    /** */\r\n    get PicogramsPerDeciLiter() {\r\n        if (this.picogramsperdeciliterLazy !== null) {\r\n            return this.picogramsperdeciliterLazy;\r\n        }\r\n        return this.picogramsperdeciliterLazy = this.convertFromBase(DensityUnits.PicogramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get NanogramsPerDeciLiter() {\r\n        if (this.nanogramsperdeciliterLazy !== null) {\r\n            return this.nanogramsperdeciliterLazy;\r\n        }\r\n        return this.nanogramsperdeciliterLazy = this.convertFromBase(DensityUnits.NanogramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerDeciLiter() {\r\n        if (this.microgramsperdeciliterLazy !== null) {\r\n            return this.microgramsperdeciliterLazy;\r\n        }\r\n        return this.microgramsperdeciliterLazy = this.convertFromBase(DensityUnits.MicrogramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get MilligramsPerDeciLiter() {\r\n        if (this.milligramsperdeciliterLazy !== null) {\r\n            return this.milligramsperdeciliterLazy;\r\n        }\r\n        return this.milligramsperdeciliterLazy = this.convertFromBase(DensityUnits.MilligramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get CentigramsPerDeciLiter() {\r\n        if (this.centigramsperdeciliterLazy !== null) {\r\n            return this.centigramsperdeciliterLazy;\r\n        }\r\n        return this.centigramsperdeciliterLazy = this.convertFromBase(DensityUnits.CentigramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get DecigramsPerDeciLiter() {\r\n        if (this.decigramsperdeciliterLazy !== null) {\r\n            return this.decigramsperdeciliterLazy;\r\n        }\r\n        return this.decigramsperdeciliterLazy = this.convertFromBase(DensityUnits.DecigramsPerDeciLiter);\r\n    }\r\n    /** */\r\n    get PicogramsPerMilliliter() {\r\n        if (this.picogramspermilliliterLazy !== null) {\r\n            return this.picogramspermilliliterLazy;\r\n        }\r\n        return this.picogramspermilliliterLazy = this.convertFromBase(DensityUnits.PicogramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get NanogramsPerMilliliter() {\r\n        if (this.nanogramspermilliliterLazy !== null) {\r\n            return this.nanogramspermilliliterLazy;\r\n        }\r\n        return this.nanogramspermilliliterLazy = this.convertFromBase(DensityUnits.NanogramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerMilliliter() {\r\n        if (this.microgramspermilliliterLazy !== null) {\r\n            return this.microgramspermilliliterLazy;\r\n        }\r\n        return this.microgramspermilliliterLazy = this.convertFromBase(DensityUnits.MicrogramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get MilligramsPerMilliliter() {\r\n        if (this.milligramspermilliliterLazy !== null) {\r\n            return this.milligramspermilliliterLazy;\r\n        }\r\n        return this.milligramspermilliliterLazy = this.convertFromBase(DensityUnits.MilligramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get CentigramsPerMilliliter() {\r\n        if (this.centigramspermilliliterLazy !== null) {\r\n            return this.centigramspermilliliterLazy;\r\n        }\r\n        return this.centigramspermilliliterLazy = this.convertFromBase(DensityUnits.CentigramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get DecigramsPerMilliliter() {\r\n        if (this.decigramspermilliliterLazy !== null) {\r\n            return this.decigramspermilliliterLazy;\r\n        }\r\n        return this.decigramspermilliliterLazy = this.convertFromBase(DensityUnits.DecigramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a GramsPerCubicMillimeter\r\n     *\r\n     * @param value The unit as GramsPerCubicMillimeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromGramsPerCubicMillimeter(value) {\r\n        return new Density(value, DensityUnits.GramsPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a GramsPerCubicCentimeter\r\n     *\r\n     * @param value The unit as GramsPerCubicCentimeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromGramsPerCubicCentimeter(value) {\r\n        return new Density(value, DensityUnits.GramsPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a GramsPerCubicMeter\r\n     *\r\n     * @param value The unit as GramsPerCubicMeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromGramsPerCubicMeter(value) {\r\n        return new Density(value, DensityUnits.GramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PoundsPerCubicInch\r\n     *\r\n     * @param value The unit as PoundsPerCubicInch to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPoundsPerCubicInch(value) {\r\n        return new Density(value, DensityUnits.PoundsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PoundsPerCubicFoot\r\n     *\r\n     * @param value The unit as PoundsPerCubicFoot to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPoundsPerCubicFoot(value) {\r\n        return new Density(value, DensityUnits.PoundsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a TonnesPerCubicMillimeter\r\n     *\r\n     * @param value The unit as TonnesPerCubicMillimeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromTonnesPerCubicMillimeter(value) {\r\n        return new Density(value, DensityUnits.TonnesPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a TonnesPerCubicCentimeter\r\n     *\r\n     * @param value The unit as TonnesPerCubicCentimeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromTonnesPerCubicCentimeter(value) {\r\n        return new Density(value, DensityUnits.TonnesPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a TonnesPerCubicMeter\r\n     *\r\n     * @param value The unit as TonnesPerCubicMeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromTonnesPerCubicMeter(value) {\r\n        return new Density(value, DensityUnits.TonnesPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a SlugsPerCubicFoot\r\n     *\r\n     * @param value The unit as SlugsPerCubicFoot to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromSlugsPerCubicFoot(value) {\r\n        return new Density(value, DensityUnits.SlugsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a GramsPerLiter\r\n     *\r\n     * @param value The unit as GramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromGramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.GramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a GramsPerDeciLiter\r\n     *\r\n     * @param value The unit as GramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromGramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.GramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a GramsPerMilliliter\r\n     *\r\n     * @param value The unit as GramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromGramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.GramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PoundsPerUSGallon\r\n     *\r\n     * @param value The unit as PoundsPerUSGallon to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPoundsPerUSGallon(value) {\r\n        return new Density(value, DensityUnits.PoundsPerUSGallon);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PoundsPerImperialGallon\r\n     *\r\n     * @param value The unit as PoundsPerImperialGallon to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPoundsPerImperialGallon(value) {\r\n        return new Density(value, DensityUnits.PoundsPerImperialGallon);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a KilogramsPerLiter\r\n     *\r\n     * @param value The unit as KilogramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromKilogramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.KilogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a KilogramsPerCubicMillimeter\r\n     *\r\n     * @param value The unit as KilogramsPerCubicMillimeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromKilogramsPerCubicMillimeter(value) {\r\n        return new Density(value, DensityUnits.KilogramsPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a KilogramsPerCubicCentimeter\r\n     *\r\n     * @param value The unit as KilogramsPerCubicCentimeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromKilogramsPerCubicCentimeter(value) {\r\n        return new Density(value, DensityUnits.KilogramsPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a KilogramsPerCubicMeter\r\n     *\r\n     * @param value The unit as KilogramsPerCubicMeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromKilogramsPerCubicMeter(value) {\r\n        return new Density(value, DensityUnits.KilogramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MilligramsPerCubicMeter\r\n     *\r\n     * @param value The unit as MilligramsPerCubicMeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMilligramsPerCubicMeter(value) {\r\n        return new Density(value, DensityUnits.MilligramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MicrogramsPerCubicMeter\r\n     *\r\n     * @param value The unit as MicrogramsPerCubicMeter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMicrogramsPerCubicMeter(value) {\r\n        return new Density(value, DensityUnits.MicrogramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a KilopoundsPerCubicInch\r\n     *\r\n     * @param value The unit as KilopoundsPerCubicInch to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromKilopoundsPerCubicInch(value) {\r\n        return new Density(value, DensityUnits.KilopoundsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a KilopoundsPerCubicFoot\r\n     *\r\n     * @param value The unit as KilopoundsPerCubicFoot to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromKilopoundsPerCubicFoot(value) {\r\n        return new Density(value, DensityUnits.KilopoundsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PicogramsPerLiter\r\n     *\r\n     * @param value The unit as PicogramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPicogramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.PicogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a NanogramsPerLiter\r\n     *\r\n     * @param value The unit as NanogramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromNanogramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.NanogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MicrogramsPerLiter\r\n     *\r\n     * @param value The unit as MicrogramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMicrogramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.MicrogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MilligramsPerLiter\r\n     *\r\n     * @param value The unit as MilligramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMilligramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.MilligramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a CentigramsPerLiter\r\n     *\r\n     * @param value The unit as CentigramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromCentigramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.CentigramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a DecigramsPerLiter\r\n     *\r\n     * @param value The unit as DecigramsPerLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromDecigramsPerLiter(value) {\r\n        return new Density(value, DensityUnits.DecigramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PicogramsPerDeciLiter\r\n     *\r\n     * @param value The unit as PicogramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPicogramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.PicogramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a NanogramsPerDeciLiter\r\n     *\r\n     * @param value The unit as NanogramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromNanogramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.NanogramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MicrogramsPerDeciLiter\r\n     *\r\n     * @param value The unit as MicrogramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMicrogramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.MicrogramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MilligramsPerDeciLiter\r\n     *\r\n     * @param value The unit as MilligramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMilligramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.MilligramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a CentigramsPerDeciLiter\r\n     *\r\n     * @param value The unit as CentigramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromCentigramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.CentigramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a DecigramsPerDeciLiter\r\n     *\r\n     * @param value The unit as DecigramsPerDeciLiter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromDecigramsPerDeciLiter(value) {\r\n        return new Density(value, DensityUnits.DecigramsPerDeciLiter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a PicogramsPerMilliliter\r\n     *\r\n     * @param value The unit as PicogramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromPicogramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.PicogramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a NanogramsPerMilliliter\r\n     *\r\n     * @param value The unit as NanogramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromNanogramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.NanogramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MicrogramsPerMilliliter\r\n     *\r\n     * @param value The unit as MicrogramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMicrogramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.MicrogramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a MilligramsPerMilliliter\r\n     *\r\n     * @param value The unit as MilligramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromMilligramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.MilligramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a CentigramsPerMilliliter\r\n     *\r\n     * @param value The unit as CentigramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromCentigramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.CentigramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new Density instance from a DecigramsPerMilliliter\r\n     *\r\n     * @param value The unit as DecigramsPerMilliliter to create a new Density from.\r\n     * @returns The new Density instance.\r\n     */\r\n    static FromDecigramsPerMilliliter(value) {\r\n        return new Density(value, DensityUnits.DecigramsPerMilliliter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case DensityUnits.GramsPerCubicMillimeter:\r\n                return this.value * 1e-6;\r\n            case DensityUnits.GramsPerCubicCentimeter:\r\n                return this.value * 1e-3;\r\n            case DensityUnits.GramsPerCubicMeter:\r\n                return this.value * 1e3;\r\n            case DensityUnits.PoundsPerCubicInch:\r\n                return this.value * 3.6127298147753e-5;\r\n            case DensityUnits.PoundsPerCubicFoot:\r\n                return this.value * 0.062427961;\r\n            case DensityUnits.TonnesPerCubicMillimeter:\r\n                return this.value * 1e-12;\r\n            case DensityUnits.TonnesPerCubicCentimeter:\r\n                return this.value * 1e-9;\r\n            case DensityUnits.TonnesPerCubicMeter:\r\n                return this.value * 0.001;\r\n            case DensityUnits.SlugsPerCubicFoot:\r\n                return this.value * 0.00194032033;\r\n            case DensityUnits.GramsPerLiter:\r\n                return this.value * 1;\r\n            case DensityUnits.GramsPerDeciLiter:\r\n                return this.value * 1e-1;\r\n            case DensityUnits.GramsPerMilliliter:\r\n                return this.value * 1e-3;\r\n            case DensityUnits.PoundsPerUSGallon:\r\n                return this.value / 1.19826427e2;\r\n            case DensityUnits.PoundsPerImperialGallon:\r\n                return this.value / 9.9776398e1;\r\n            case DensityUnits.KilogramsPerLiter:\r\n                return this.value / 1e3;\r\n            case DensityUnits.KilogramsPerCubicMillimeter:\r\n                return (this.value * 1e-6) / 1000;\r\n            case DensityUnits.KilogramsPerCubicCentimeter:\r\n                return (this.value * 1e-3) / 1000;\r\n            case DensityUnits.KilogramsPerCubicMeter:\r\n                return (this.value * 1e3) / 1000;\r\n            case DensityUnits.MilligramsPerCubicMeter:\r\n                return (this.value * 1e3) / 0.001;\r\n            case DensityUnits.MicrogramsPerCubicMeter:\r\n                return (this.value * 1e3) / 0.000001;\r\n            case DensityUnits.KilopoundsPerCubicInch:\r\n                return (this.value * 3.6127298147753e-5) / 1000;\r\n            case DensityUnits.KilopoundsPerCubicFoot:\r\n                return (this.value * 0.062427961) / 1000;\r\n            case DensityUnits.PicogramsPerLiter:\r\n                return (this.value * 1) / 1e-12;\r\n            case DensityUnits.NanogramsPerLiter:\r\n                return (this.value * 1) / 1e-9;\r\n            case DensityUnits.MicrogramsPerLiter:\r\n                return (this.value * 1) / 0.000001;\r\n            case DensityUnits.MilligramsPerLiter:\r\n                return (this.value * 1) / 0.001;\r\n            case DensityUnits.CentigramsPerLiter:\r\n                return (this.value * 1) / 0.01;\r\n            case DensityUnits.DecigramsPerLiter:\r\n                return (this.value * 1) / 0.1;\r\n            case DensityUnits.PicogramsPerDeciLiter:\r\n                return (this.value * 1e-1) / 1e-12;\r\n            case DensityUnits.NanogramsPerDeciLiter:\r\n                return (this.value * 1e-1) / 1e-9;\r\n            case DensityUnits.MicrogramsPerDeciLiter:\r\n                return (this.value * 1e-1) / 0.000001;\r\n            case DensityUnits.MilligramsPerDeciLiter:\r\n                return (this.value * 1e-1) / 0.001;\r\n            case DensityUnits.CentigramsPerDeciLiter:\r\n                return (this.value * 1e-1) / 0.01;\r\n            case DensityUnits.DecigramsPerDeciLiter:\r\n                return (this.value * 1e-1) / 0.1;\r\n            case DensityUnits.PicogramsPerMilliliter:\r\n                return (this.value * 1e-3) / 1e-12;\r\n            case DensityUnits.NanogramsPerMilliliter:\r\n                return (this.value * 1e-3) / 1e-9;\r\n            case DensityUnits.MicrogramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.000001;\r\n            case DensityUnits.MilligramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.001;\r\n            case DensityUnits.CentigramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.01;\r\n            case DensityUnits.DecigramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case DensityUnits.GramsPerCubicMillimeter:\r\n                return value / 1e-6;\r\n            case DensityUnits.GramsPerCubicCentimeter:\r\n                return value / 1e-3;\r\n            case DensityUnits.GramsPerCubicMeter:\r\n                return value / 1e3;\r\n            case DensityUnits.PoundsPerCubicInch:\r\n                return value / 3.6127298147753e-5;\r\n            case DensityUnits.PoundsPerCubicFoot:\r\n                return value / 0.062427961;\r\n            case DensityUnits.TonnesPerCubicMillimeter:\r\n                return value / 1e-12;\r\n            case DensityUnits.TonnesPerCubicCentimeter:\r\n                return value / 1e-9;\r\n            case DensityUnits.TonnesPerCubicMeter:\r\n                return value / 0.001;\r\n            case DensityUnits.SlugsPerCubicFoot:\r\n                return value * 515.378818;\r\n            case DensityUnits.GramsPerLiter:\r\n                return value / 1;\r\n            case DensityUnits.GramsPerDeciLiter:\r\n                return value / 1e-1;\r\n            case DensityUnits.GramsPerMilliliter:\r\n                return value / 1e-3;\r\n            case DensityUnits.PoundsPerUSGallon:\r\n                return value * 1.19826427e2;\r\n            case DensityUnits.PoundsPerImperialGallon:\r\n                return value * 9.9776398e1;\r\n            case DensityUnits.KilogramsPerLiter:\r\n                return value * 1e3;\r\n            case DensityUnits.KilogramsPerCubicMillimeter:\r\n                return (value / 1e-6) * 1000;\r\n            case DensityUnits.KilogramsPerCubicCentimeter:\r\n                return (value / 1e-3) * 1000;\r\n            case DensityUnits.KilogramsPerCubicMeter:\r\n                return (value / 1e3) * 1000;\r\n            case DensityUnits.MilligramsPerCubicMeter:\r\n                return (value / 1e3) * 0.001;\r\n            case DensityUnits.MicrogramsPerCubicMeter:\r\n                return (value / 1e3) * 0.000001;\r\n            case DensityUnits.KilopoundsPerCubicInch:\r\n                return (value / 3.6127298147753e-5) * 1000;\r\n            case DensityUnits.KilopoundsPerCubicFoot:\r\n                return (value / 0.062427961) * 1000;\r\n            case DensityUnits.PicogramsPerLiter:\r\n                return (value / 1) * 1e-12;\r\n            case DensityUnits.NanogramsPerLiter:\r\n                return (value / 1) * 1e-9;\r\n            case DensityUnits.MicrogramsPerLiter:\r\n                return (value / 1) * 0.000001;\r\n            case DensityUnits.MilligramsPerLiter:\r\n                return (value / 1) * 0.001;\r\n            case DensityUnits.CentigramsPerLiter:\r\n                return (value / 1) * 0.01;\r\n            case DensityUnits.DecigramsPerLiter:\r\n                return (value / 1) * 0.1;\r\n            case DensityUnits.PicogramsPerDeciLiter:\r\n                return (value / 1e-1) * 1e-12;\r\n            case DensityUnits.NanogramsPerDeciLiter:\r\n                return (value / 1e-1) * 1e-9;\r\n            case DensityUnits.MicrogramsPerDeciLiter:\r\n                return (value / 1e-1) * 0.000001;\r\n            case DensityUnits.MilligramsPerDeciLiter:\r\n                return (value / 1e-1) * 0.001;\r\n            case DensityUnits.CentigramsPerDeciLiter:\r\n                return (value / 1e-1) * 0.01;\r\n            case DensityUnits.DecigramsPerDeciLiter:\r\n                return (value / 1e-1) * 0.1;\r\n            case DensityUnits.PicogramsPerMilliliter:\r\n                return (value / 1e-3) * 1e-12;\r\n            case DensityUnits.NanogramsPerMilliliter:\r\n                return (value / 1e-3) * 1e-9;\r\n            case DensityUnits.MicrogramsPerMilliliter:\r\n                return (value / 1e-3) * 0.000001;\r\n            case DensityUnits.MilligramsPerMilliliter:\r\n                return (value / 1e-3) * 0.001;\r\n            case DensityUnits.CentigramsPerMilliliter:\r\n                return (value / 1e-3) * 0.01;\r\n            case DensityUnits.DecigramsPerMilliliter:\r\n                return (value / 1e-3) * 0.1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Density to string.\r\n     * Note! the default format for Density is KilogramsPerCubicMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Density.\r\n     * @returns The string format of the Density.\r\n     */\r\n    toString(toUnit = DensityUnits.KilogramsPerCubicMeter) {\r\n        switch (toUnit) {\r\n            case DensityUnits.GramsPerCubicMillimeter:\r\n                return this.GramsPerCubicMillimeter + ` g/mm³`;\r\n            case DensityUnits.GramsPerCubicCentimeter:\r\n                return this.GramsPerCubicCentimeter + ` g/cm³`;\r\n            case DensityUnits.GramsPerCubicMeter:\r\n                return this.GramsPerCubicMeter + ` g/m³`;\r\n            case DensityUnits.PoundsPerCubicInch:\r\n                return this.PoundsPerCubicInch + ` lb/in³`;\r\n            case DensityUnits.PoundsPerCubicFoot:\r\n                return this.PoundsPerCubicFoot + ` lb/ft³`;\r\n            case DensityUnits.TonnesPerCubicMillimeter:\r\n                return this.TonnesPerCubicMillimeter + ` t/mm³`;\r\n            case DensityUnits.TonnesPerCubicCentimeter:\r\n                return this.TonnesPerCubicCentimeter + ` t/cm³`;\r\n            case DensityUnits.TonnesPerCubicMeter:\r\n                return this.TonnesPerCubicMeter + ` t/m³`;\r\n            case DensityUnits.SlugsPerCubicFoot:\r\n                return this.SlugsPerCubicFoot + ` slug/ft³`;\r\n            case DensityUnits.GramsPerLiter:\r\n                return this.GramsPerLiter + ` g/L`;\r\n            case DensityUnits.GramsPerDeciLiter:\r\n                return this.GramsPerDeciLiter + ` g/dl`;\r\n            case DensityUnits.GramsPerMilliliter:\r\n                return this.GramsPerMilliliter + ` g/ml`;\r\n            case DensityUnits.PoundsPerUSGallon:\r\n                return this.PoundsPerUSGallon + ` ppg (U.S.)`;\r\n            case DensityUnits.PoundsPerImperialGallon:\r\n                return this.PoundsPerImperialGallon + ` ppg (imp.)`;\r\n            case DensityUnits.KilogramsPerLiter:\r\n                return this.KilogramsPerLiter + ` kg/l`;\r\n            case DensityUnits.KilogramsPerCubicMillimeter:\r\n                return this.KilogramsPerCubicMillimeter + ` `;\r\n            case DensityUnits.KilogramsPerCubicCentimeter:\r\n                return this.KilogramsPerCubicCentimeter + ` `;\r\n            case DensityUnits.KilogramsPerCubicMeter:\r\n                return this.KilogramsPerCubicMeter + ` `;\r\n            case DensityUnits.MilligramsPerCubicMeter:\r\n                return this.MilligramsPerCubicMeter + ` `;\r\n            case DensityUnits.MicrogramsPerCubicMeter:\r\n                return this.MicrogramsPerCubicMeter + ` `;\r\n            case DensityUnits.KilopoundsPerCubicInch:\r\n                return this.KilopoundsPerCubicInch + ` `;\r\n            case DensityUnits.KilopoundsPerCubicFoot:\r\n                return this.KilopoundsPerCubicFoot + ` `;\r\n            case DensityUnits.PicogramsPerLiter:\r\n                return this.PicogramsPerLiter + ` `;\r\n            case DensityUnits.NanogramsPerLiter:\r\n                return this.NanogramsPerLiter + ` `;\r\n            case DensityUnits.MicrogramsPerLiter:\r\n                return this.MicrogramsPerLiter + ` `;\r\n            case DensityUnits.MilligramsPerLiter:\r\n                return this.MilligramsPerLiter + ` `;\r\n            case DensityUnits.CentigramsPerLiter:\r\n                return this.CentigramsPerLiter + ` `;\r\n            case DensityUnits.DecigramsPerLiter:\r\n                return this.DecigramsPerLiter + ` `;\r\n            case DensityUnits.PicogramsPerDeciLiter:\r\n                return this.PicogramsPerDeciLiter + ` `;\r\n            case DensityUnits.NanogramsPerDeciLiter:\r\n                return this.NanogramsPerDeciLiter + ` `;\r\n            case DensityUnits.MicrogramsPerDeciLiter:\r\n                return this.MicrogramsPerDeciLiter + ` `;\r\n            case DensityUnits.MilligramsPerDeciLiter:\r\n                return this.MilligramsPerDeciLiter + ` `;\r\n            case DensityUnits.CentigramsPerDeciLiter:\r\n                return this.CentigramsPerDeciLiter + ` `;\r\n            case DensityUnits.DecigramsPerDeciLiter:\r\n                return this.DecigramsPerDeciLiter + ` `;\r\n            case DensityUnits.PicogramsPerMilliliter:\r\n                return this.PicogramsPerMilliliter + ` `;\r\n            case DensityUnits.NanogramsPerMilliliter:\r\n                return this.NanogramsPerMilliliter + ` `;\r\n            case DensityUnits.MicrogramsPerMilliliter:\r\n                return this.MicrogramsPerMilliliter + ` `;\r\n            case DensityUnits.MilligramsPerMilliliter:\r\n                return this.MilligramsPerMilliliter + ` `;\r\n            case DensityUnits.CentigramsPerMilliliter:\r\n                return this.CentigramsPerMilliliter + ` `;\r\n            case DensityUnits.DecigramsPerMilliliter:\r\n                return this.DecigramsPerMilliliter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Density are equals to the current Density.\r\n     * @param density The other Density.\r\n     * @returns True if the given Density are equal to the current Density.\r\n     */\r\n    equals(density) {\r\n        return this.value === density.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Density against the current Density.\r\n     * @param density The other Density.\r\n     * @returns 0 if they are equal, -1 if the current Density is less then other, 1 if the current Density is greater then other.\r\n     */\r\n    compareTo(density) {\r\n        if (this.value > density.BaseValue)\r\n            return 1;\r\n        if (this.value < density.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Density with the current Density.\r\n     * @param density The other Density.\r\n     * @returns A new Density instance with the results.\r\n     */\r\n    add(density) {\r\n        return new Density(this.value + density.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Density with the current Density.\r\n     * @param density The other Density.\r\n     * @returns A new Density instance with the results.\r\n     */\r\n    subtract(density) {\r\n        return new Density(this.value - density.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Density with the current Density.\r\n     * @param density The other Density.\r\n     * @returns A new Density instance with the results.\r\n     */\r\n    multiply(density) {\r\n        return new Density(this.value * density.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Density with the current Density.\r\n     * @param density The other Density.\r\n     * @returns A new Density instance with the results.\r\n     */\r\n    divide(density) {\r\n        return new Density(this.value / density.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Density with the current Density.\r\n     * @param density The other Density.\r\n     * @returns A new Density instance with the results.\r\n     */\r\n    modulo(density) {\r\n        return new Density(this.value % density.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Density with the current Density.\r\n     * @param density The other Density.\r\n     * @returns A new Density instance with the results.\r\n     */\r\n    pow(density) {\r\n        return new Density(this.value ** density.BaseValue);\r\n    }\r\n}\r\nexports.Density = Density;\r\n//# sourceMappingURL=density.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Duration = exports.DurationUnits = void 0;\r\n/** DurationUnits enumeration */\r\nvar DurationUnits;\r\n(function (DurationUnits) {\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Years365\"] = 0] = \"Years365\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Months30\"] = 1] = \"Months30\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Weeks\"] = 2] = \"Weeks\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Days\"] = 3] = \"Days\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Hours\"] = 4] = \"Hours\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Minutes\"] = 5] = \"Minutes\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Seconds\"] = 6] = \"Seconds\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Nanoseconds\"] = 7] = \"Nanoseconds\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Microseconds\"] = 8] = \"Microseconds\";\r\n    /** */\r\n    DurationUnits[DurationUnits[\"Milliseconds\"] = 9] = \"Milliseconds\";\r\n})(DurationUnits = exports.DurationUnits || (exports.DurationUnits = {}));\r\n/** Time is a dimension in which events can be ordered from the past through the present into the future, and also the measure of durations of events and the intervals between them. */\r\nclass Duration {\r\n    /**\r\n     * Create a new Duration.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Duration’ unit to create from.\r\n     * The default unit is Seconds\r\n     */\r\n    constructor(value, fromUnit = DurationUnits.Seconds) {\r\n        this.years365Lazy = null;\r\n        this.months30Lazy = null;\r\n        this.weeksLazy = null;\r\n        this.daysLazy = null;\r\n        this.hoursLazy = null;\r\n        this.minutesLazy = null;\r\n        this.secondsLazy = null;\r\n        this.nanosecondsLazy = null;\r\n        this.microsecondsLazy = null;\r\n        this.millisecondsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Duration is Seconds.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Years365() {\r\n        if (this.years365Lazy !== null) {\r\n            return this.years365Lazy;\r\n        }\r\n        return this.years365Lazy = this.convertFromBase(DurationUnits.Years365);\r\n    }\r\n    /** */\r\n    get Months30() {\r\n        if (this.months30Lazy !== null) {\r\n            return this.months30Lazy;\r\n        }\r\n        return this.months30Lazy = this.convertFromBase(DurationUnits.Months30);\r\n    }\r\n    /** */\r\n    get Weeks() {\r\n        if (this.weeksLazy !== null) {\r\n            return this.weeksLazy;\r\n        }\r\n        return this.weeksLazy = this.convertFromBase(DurationUnits.Weeks);\r\n    }\r\n    /** */\r\n    get Days() {\r\n        if (this.daysLazy !== null) {\r\n            return this.daysLazy;\r\n        }\r\n        return this.daysLazy = this.convertFromBase(DurationUnits.Days);\r\n    }\r\n    /** */\r\n    get Hours() {\r\n        if (this.hoursLazy !== null) {\r\n            return this.hoursLazy;\r\n        }\r\n        return this.hoursLazy = this.convertFromBase(DurationUnits.Hours);\r\n    }\r\n    /** */\r\n    get Minutes() {\r\n        if (this.minutesLazy !== null) {\r\n            return this.minutesLazy;\r\n        }\r\n        return this.minutesLazy = this.convertFromBase(DurationUnits.Minutes);\r\n    }\r\n    /** */\r\n    get Seconds() {\r\n        if (this.secondsLazy !== null) {\r\n            return this.secondsLazy;\r\n        }\r\n        return this.secondsLazy = this.convertFromBase(DurationUnits.Seconds);\r\n    }\r\n    /** */\r\n    get Nanoseconds() {\r\n        if (this.nanosecondsLazy !== null) {\r\n            return this.nanosecondsLazy;\r\n        }\r\n        return this.nanosecondsLazy = this.convertFromBase(DurationUnits.Nanoseconds);\r\n    }\r\n    /** */\r\n    get Microseconds() {\r\n        if (this.microsecondsLazy !== null) {\r\n            return this.microsecondsLazy;\r\n        }\r\n        return this.microsecondsLazy = this.convertFromBase(DurationUnits.Microseconds);\r\n    }\r\n    /** */\r\n    get Milliseconds() {\r\n        if (this.millisecondsLazy !== null) {\r\n            return this.millisecondsLazy;\r\n        }\r\n        return this.millisecondsLazy = this.convertFromBase(DurationUnits.Milliseconds);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Years365\r\n     *\r\n     * @param value The unit as Years365 to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromYears365(value) {\r\n        return new Duration(value, DurationUnits.Years365);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Months30\r\n     *\r\n     * @param value The unit as Months30 to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromMonths30(value) {\r\n        return new Duration(value, DurationUnits.Months30);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Weeks\r\n     *\r\n     * @param value The unit as Weeks to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromWeeks(value) {\r\n        return new Duration(value, DurationUnits.Weeks);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Days\r\n     *\r\n     * @param value The unit as Days to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromDays(value) {\r\n        return new Duration(value, DurationUnits.Days);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Hours\r\n     *\r\n     * @param value The unit as Hours to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromHours(value) {\r\n        return new Duration(value, DurationUnits.Hours);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Minutes\r\n     *\r\n     * @param value The unit as Minutes to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromMinutes(value) {\r\n        return new Duration(value, DurationUnits.Minutes);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Seconds\r\n     *\r\n     * @param value The unit as Seconds to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromSeconds(value) {\r\n        return new Duration(value, DurationUnits.Seconds);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Nanoseconds\r\n     *\r\n     * @param value The unit as Nanoseconds to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromNanoseconds(value) {\r\n        return new Duration(value, DurationUnits.Nanoseconds);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Microseconds\r\n     *\r\n     * @param value The unit as Microseconds to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromMicroseconds(value) {\r\n        return new Duration(value, DurationUnits.Microseconds);\r\n    }\r\n    /**\r\n     * Create a new Duration instance from a Milliseconds\r\n     *\r\n     * @param value The unit as Milliseconds to create a new Duration from.\r\n     * @returns The new Duration instance.\r\n     */\r\n    static FromMilliseconds(value) {\r\n        return new Duration(value, DurationUnits.Milliseconds);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case DurationUnits.Years365:\r\n                return this.value / (365 * 24 * 3600);\r\n            case DurationUnits.Months30:\r\n                return this.value / (30 * 24 * 3600);\r\n            case DurationUnits.Weeks:\r\n                return this.value / (7 * 24 * 3600);\r\n            case DurationUnits.Days:\r\n                return this.value / (24 * 3600);\r\n            case DurationUnits.Hours:\r\n                return this.value / 3600;\r\n            case DurationUnits.Minutes:\r\n                return this.value / 60;\r\n            case DurationUnits.Seconds:\r\n                return this.value;\r\n            case DurationUnits.Nanoseconds:\r\n                return (this.value) / 1e-9;\r\n            case DurationUnits.Microseconds:\r\n                return (this.value) / 0.000001;\r\n            case DurationUnits.Milliseconds:\r\n                return (this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case DurationUnits.Years365:\r\n                return value * 365 * 24 * 3600;\r\n            case DurationUnits.Months30:\r\n                return value * 30 * 24 * 3600;\r\n            case DurationUnits.Weeks:\r\n                return value * 7 * 24 * 3600;\r\n            case DurationUnits.Days:\r\n                return value * 24 * 3600;\r\n            case DurationUnits.Hours:\r\n                return value * 3600;\r\n            case DurationUnits.Minutes:\r\n                return value * 60;\r\n            case DurationUnits.Seconds:\r\n                return value;\r\n            case DurationUnits.Nanoseconds:\r\n                return (value) * 1e-9;\r\n            case DurationUnits.Microseconds:\r\n                return (value) * 0.000001;\r\n            case DurationUnits.Milliseconds:\r\n                return (value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Duration to string.\r\n     * Note! the default format for Duration is Seconds.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Duration.\r\n     * @returns The string format of the Duration.\r\n     */\r\n    toString(toUnit = DurationUnits.Seconds) {\r\n        switch (toUnit) {\r\n            case DurationUnits.Years365:\r\n                return this.Years365 + ` yr`;\r\n            case DurationUnits.Months30:\r\n                return this.Months30 + ` mo`;\r\n            case DurationUnits.Weeks:\r\n                return this.Weeks + ` wk`;\r\n            case DurationUnits.Days:\r\n                return this.Days + ` d`;\r\n            case DurationUnits.Hours:\r\n                return this.Hours + ` h`;\r\n            case DurationUnits.Minutes:\r\n                return this.Minutes + ` m`;\r\n            case DurationUnits.Seconds:\r\n                return this.Seconds + ` s`;\r\n            case DurationUnits.Nanoseconds:\r\n                return this.Nanoseconds + ` `;\r\n            case DurationUnits.Microseconds:\r\n                return this.Microseconds + ` `;\r\n            case DurationUnits.Milliseconds:\r\n                return this.Milliseconds + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Duration are equals to the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns True if the given Duration are equal to the current Duration.\r\n     */\r\n    equals(duration) {\r\n        return this.value === duration.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Duration against the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns 0 if they are equal, -1 if the current Duration is less then other, 1 if the current Duration is greater then other.\r\n     */\r\n    compareTo(duration) {\r\n        if (this.value > duration.BaseValue)\r\n            return 1;\r\n        if (this.value < duration.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Duration with the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns A new Duration instance with the results.\r\n     */\r\n    add(duration) {\r\n        return new Duration(this.value + duration.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Duration with the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns A new Duration instance with the results.\r\n     */\r\n    subtract(duration) {\r\n        return new Duration(this.value - duration.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Duration with the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns A new Duration instance with the results.\r\n     */\r\n    multiply(duration) {\r\n        return new Duration(this.value * duration.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Duration with the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns A new Duration instance with the results.\r\n     */\r\n    divide(duration) {\r\n        return new Duration(this.value / duration.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Duration with the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns A new Duration instance with the results.\r\n     */\r\n    modulo(duration) {\r\n        return new Duration(this.value % duration.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Duration with the current Duration.\r\n     * @param duration The other Duration.\r\n     * @returns A new Duration instance with the results.\r\n     */\r\n    pow(duration) {\r\n        return new Duration(this.value ** duration.BaseValue);\r\n    }\r\n}\r\nexports.Duration = Duration;\r\n//# sourceMappingURL=duration.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DynamicViscosity = exports.DynamicViscosityUnits = void 0;\r\n/** DynamicViscosityUnits enumeration */\r\nvar DynamicViscosityUnits;\r\n(function (DynamicViscosityUnits) {\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"NewtonSecondsPerMeterSquared\"] = 0] = \"NewtonSecondsPerMeterSquared\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"PascalSeconds\"] = 1] = \"PascalSeconds\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"Poise\"] = 2] = \"Poise\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"Reyns\"] = 3] = \"Reyns\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"PoundsForceSecondPerSquareInch\"] = 4] = \"PoundsForceSecondPerSquareInch\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"PoundsForceSecondPerSquareFoot\"] = 5] = \"PoundsForceSecondPerSquareFoot\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"PoundsPerFootSecond\"] = 6] = \"PoundsPerFootSecond\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"MillipascalSeconds\"] = 7] = \"MillipascalSeconds\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"MicropascalSeconds\"] = 8] = \"MicropascalSeconds\";\r\n    /** */\r\n    DynamicViscosityUnits[DynamicViscosityUnits[\"Centipoise\"] = 9] = \"Centipoise\";\r\n})(DynamicViscosityUnits = exports.DynamicViscosityUnits || (exports.DynamicViscosityUnits = {}));\r\n/** The dynamic (shear) viscosity of a fluid expresses its resistance to shearing flows, where adjacent layers move parallel to each other with different speeds */\r\nclass DynamicViscosity {\r\n    /**\r\n     * Create a new DynamicViscosity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘DynamicViscosity’ unit to create from.\r\n     * The default unit is NewtonSecondsPerMeterSquared\r\n     */\r\n    constructor(value, fromUnit = DynamicViscosityUnits.NewtonSecondsPerMeterSquared) {\r\n        this.newtonsecondspermetersquaredLazy = null;\r\n        this.pascalsecondsLazy = null;\r\n        this.poiseLazy = null;\r\n        this.reynsLazy = null;\r\n        this.poundsforcesecondpersquareinchLazy = null;\r\n        this.poundsforcesecondpersquarefootLazy = null;\r\n        this.poundsperfootsecondLazy = null;\r\n        this.millipascalsecondsLazy = null;\r\n        this.micropascalsecondsLazy = null;\r\n        this.centipoiseLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of DynamicViscosity is NewtonSecondsPerMeterSquared.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonSecondsPerMeterSquared() {\r\n        if (this.newtonsecondspermetersquaredLazy !== null) {\r\n            return this.newtonsecondspermetersquaredLazy;\r\n        }\r\n        return this.newtonsecondspermetersquaredLazy = this.convertFromBase(DynamicViscosityUnits.NewtonSecondsPerMeterSquared);\r\n    }\r\n    /** */\r\n    get PascalSeconds() {\r\n        if (this.pascalsecondsLazy !== null) {\r\n            return this.pascalsecondsLazy;\r\n        }\r\n        return this.pascalsecondsLazy = this.convertFromBase(DynamicViscosityUnits.PascalSeconds);\r\n    }\r\n    /** */\r\n    get Poise() {\r\n        if (this.poiseLazy !== null) {\r\n            return this.poiseLazy;\r\n        }\r\n        return this.poiseLazy = this.convertFromBase(DynamicViscosityUnits.Poise);\r\n    }\r\n    /** */\r\n    get Reyns() {\r\n        if (this.reynsLazy !== null) {\r\n            return this.reynsLazy;\r\n        }\r\n        return this.reynsLazy = this.convertFromBase(DynamicViscosityUnits.Reyns);\r\n    }\r\n    /** */\r\n    get PoundsForceSecondPerSquareInch() {\r\n        if (this.poundsforcesecondpersquareinchLazy !== null) {\r\n            return this.poundsforcesecondpersquareinchLazy;\r\n        }\r\n        return this.poundsforcesecondpersquareinchLazy = this.convertFromBase(DynamicViscosityUnits.PoundsForceSecondPerSquareInch);\r\n    }\r\n    /** */\r\n    get PoundsForceSecondPerSquareFoot() {\r\n        if (this.poundsforcesecondpersquarefootLazy !== null) {\r\n            return this.poundsforcesecondpersquarefootLazy;\r\n        }\r\n        return this.poundsforcesecondpersquarefootLazy = this.convertFromBase(DynamicViscosityUnits.PoundsForceSecondPerSquareFoot);\r\n    }\r\n    /** */\r\n    get PoundsPerFootSecond() {\r\n        if (this.poundsperfootsecondLazy !== null) {\r\n            return this.poundsperfootsecondLazy;\r\n        }\r\n        return this.poundsperfootsecondLazy = this.convertFromBase(DynamicViscosityUnits.PoundsPerFootSecond);\r\n    }\r\n    /** */\r\n    get MillipascalSeconds() {\r\n        if (this.millipascalsecondsLazy !== null) {\r\n            return this.millipascalsecondsLazy;\r\n        }\r\n        return this.millipascalsecondsLazy = this.convertFromBase(DynamicViscosityUnits.MillipascalSeconds);\r\n    }\r\n    /** */\r\n    get MicropascalSeconds() {\r\n        if (this.micropascalsecondsLazy !== null) {\r\n            return this.micropascalsecondsLazy;\r\n        }\r\n        return this.micropascalsecondsLazy = this.convertFromBase(DynamicViscosityUnits.MicropascalSeconds);\r\n    }\r\n    /** */\r\n    get Centipoise() {\r\n        if (this.centipoiseLazy !== null) {\r\n            return this.centipoiseLazy;\r\n        }\r\n        return this.centipoiseLazy = this.convertFromBase(DynamicViscosityUnits.Centipoise);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a NewtonSecondsPerMeterSquared\r\n     *\r\n     * @param value The unit as NewtonSecondsPerMeterSquared to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromNewtonSecondsPerMeterSquared(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.NewtonSecondsPerMeterSquared);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a PascalSeconds\r\n     *\r\n     * @param value The unit as PascalSeconds to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromPascalSeconds(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.PascalSeconds);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a Poise\r\n     *\r\n     * @param value The unit as Poise to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromPoise(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.Poise);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a Reyns\r\n     *\r\n     * @param value The unit as Reyns to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromReyns(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.Reyns);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a PoundsForceSecondPerSquareInch\r\n     *\r\n     * @param value The unit as PoundsForceSecondPerSquareInch to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromPoundsForceSecondPerSquareInch(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.PoundsForceSecondPerSquareInch);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a PoundsForceSecondPerSquareFoot\r\n     *\r\n     * @param value The unit as PoundsForceSecondPerSquareFoot to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromPoundsForceSecondPerSquareFoot(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.PoundsForceSecondPerSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a PoundsPerFootSecond\r\n     *\r\n     * @param value The unit as PoundsPerFootSecond to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromPoundsPerFootSecond(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.PoundsPerFootSecond);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a MillipascalSeconds\r\n     *\r\n     * @param value The unit as MillipascalSeconds to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromMillipascalSeconds(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.MillipascalSeconds);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a MicropascalSeconds\r\n     *\r\n     * @param value The unit as MicropascalSeconds to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromMicropascalSeconds(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.MicropascalSeconds);\r\n    }\r\n    /**\r\n     * Create a new DynamicViscosity instance from a Centipoise\r\n     *\r\n     * @param value The unit as Centipoise to create a new DynamicViscosity from.\r\n     * @returns The new DynamicViscosity instance.\r\n     */\r\n    static FromCentipoise(value) {\r\n        return new DynamicViscosity(value, DynamicViscosityUnits.Centipoise);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case DynamicViscosityUnits.NewtonSecondsPerMeterSquared:\r\n                return this.value;\r\n            case DynamicViscosityUnits.PascalSeconds:\r\n                return this.value;\r\n            case DynamicViscosityUnits.Poise:\r\n                return this.value * 10;\r\n            case DynamicViscosityUnits.Reyns:\r\n                return this.value / 6.8947572931683613e3;\r\n            case DynamicViscosityUnits.PoundsForceSecondPerSquareInch:\r\n                return this.value / 6.8947572931683613e3;\r\n            case DynamicViscosityUnits.PoundsForceSecondPerSquareFoot:\r\n                return this.value / 4.7880258980335843e1;\r\n            case DynamicViscosityUnits.PoundsPerFootSecond:\r\n                return this.value / 1.4881639;\r\n            case DynamicViscosityUnits.MillipascalSeconds:\r\n                return (this.value) / 0.001;\r\n            case DynamicViscosityUnits.MicropascalSeconds:\r\n                return (this.value) / 0.000001;\r\n            case DynamicViscosityUnits.Centipoise:\r\n                return (this.value * 10) / 0.01;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case DynamicViscosityUnits.NewtonSecondsPerMeterSquared:\r\n                return value;\r\n            case DynamicViscosityUnits.PascalSeconds:\r\n                return value;\r\n            case DynamicViscosityUnits.Poise:\r\n                return value / 10;\r\n            case DynamicViscosityUnits.Reyns:\r\n                return value * 6.8947572931683613e3;\r\n            case DynamicViscosityUnits.PoundsForceSecondPerSquareInch:\r\n                return value * 6.8947572931683613e3;\r\n            case DynamicViscosityUnits.PoundsForceSecondPerSquareFoot:\r\n                return value * 4.7880258980335843e1;\r\n            case DynamicViscosityUnits.PoundsPerFootSecond:\r\n                return value * 1.4881639;\r\n            case DynamicViscosityUnits.MillipascalSeconds:\r\n                return (value) * 0.001;\r\n            case DynamicViscosityUnits.MicropascalSeconds:\r\n                return (value) * 0.000001;\r\n            case DynamicViscosityUnits.Centipoise:\r\n                return (value / 10) * 0.01;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the DynamicViscosity to string.\r\n     * Note! the default format for DynamicViscosity is NewtonSecondsPerMeterSquared.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the DynamicViscosity.\r\n     * @returns The string format of the DynamicViscosity.\r\n     */\r\n    toString(toUnit = DynamicViscosityUnits.NewtonSecondsPerMeterSquared) {\r\n        switch (toUnit) {\r\n            case DynamicViscosityUnits.NewtonSecondsPerMeterSquared:\r\n                return this.NewtonSecondsPerMeterSquared + ` Ns/m²`;\r\n            case DynamicViscosityUnits.PascalSeconds:\r\n                return this.PascalSeconds + ` Pa·s`;\r\n            case DynamicViscosityUnits.Poise:\r\n                return this.Poise + ` P`;\r\n            case DynamicViscosityUnits.Reyns:\r\n                return this.Reyns + ` reyn`;\r\n            case DynamicViscosityUnits.PoundsForceSecondPerSquareInch:\r\n                return this.PoundsForceSecondPerSquareInch + ` lbf·s/in²`;\r\n            case DynamicViscosityUnits.PoundsForceSecondPerSquareFoot:\r\n                return this.PoundsForceSecondPerSquareFoot + ` lbf·s/ft²`;\r\n            case DynamicViscosityUnits.PoundsPerFootSecond:\r\n                return this.PoundsPerFootSecond + ` lb/ft·s`;\r\n            case DynamicViscosityUnits.MillipascalSeconds:\r\n                return this.MillipascalSeconds + ` `;\r\n            case DynamicViscosityUnits.MicropascalSeconds:\r\n                return this.MicropascalSeconds + ` `;\r\n            case DynamicViscosityUnits.Centipoise:\r\n                return this.Centipoise + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given DynamicViscosity are equals to the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns True if the given DynamicViscosity are equal to the current DynamicViscosity.\r\n     */\r\n    equals(dynamicViscosity) {\r\n        return this.value === dynamicViscosity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given DynamicViscosity against the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns 0 if they are equal, -1 if the current DynamicViscosity is less then other, 1 if the current DynamicViscosity is greater then other.\r\n     */\r\n    compareTo(dynamicViscosity) {\r\n        if (this.value > dynamicViscosity.BaseValue)\r\n            return 1;\r\n        if (this.value < dynamicViscosity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given DynamicViscosity with the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns A new DynamicViscosity instance with the results.\r\n     */\r\n    add(dynamicViscosity) {\r\n        return new DynamicViscosity(this.value + dynamicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given DynamicViscosity with the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns A new DynamicViscosity instance with the results.\r\n     */\r\n    subtract(dynamicViscosity) {\r\n        return new DynamicViscosity(this.value - dynamicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given DynamicViscosity with the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns A new DynamicViscosity instance with the results.\r\n     */\r\n    multiply(dynamicViscosity) {\r\n        return new DynamicViscosity(this.value * dynamicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given DynamicViscosity with the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns A new DynamicViscosity instance with the results.\r\n     */\r\n    divide(dynamicViscosity) {\r\n        return new DynamicViscosity(this.value / dynamicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given DynamicViscosity with the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns A new DynamicViscosity instance with the results.\r\n     */\r\n    modulo(dynamicViscosity) {\r\n        return new DynamicViscosity(this.value % dynamicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given DynamicViscosity with the current DynamicViscosity.\r\n     * @param dynamicViscosity The other DynamicViscosity.\r\n     * @returns A new DynamicViscosity instance with the results.\r\n     */\r\n    pow(dynamicViscosity) {\r\n        return new DynamicViscosity(this.value ** dynamicViscosity.BaseValue);\r\n    }\r\n}\r\nexports.DynamicViscosity = DynamicViscosity;\r\n//# sourceMappingURL=dynamicviscosity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricAdmittance = exports.ElectricAdmittanceUnits = void 0;\r\n/** ElectricAdmittanceUnits enumeration */\r\nvar ElectricAdmittanceUnits;\r\n(function (ElectricAdmittanceUnits) {\r\n    /** */\r\n    ElectricAdmittanceUnits[ElectricAdmittanceUnits[\"Siemens\"] = 0] = \"Siemens\";\r\n    /** */\r\n    ElectricAdmittanceUnits[ElectricAdmittanceUnits[\"Nanosiemens\"] = 1] = \"Nanosiemens\";\r\n    /** */\r\n    ElectricAdmittanceUnits[ElectricAdmittanceUnits[\"Microsiemens\"] = 2] = \"Microsiemens\";\r\n    /** */\r\n    ElectricAdmittanceUnits[ElectricAdmittanceUnits[\"Millisiemens\"] = 3] = \"Millisiemens\";\r\n})(ElectricAdmittanceUnits = exports.ElectricAdmittanceUnits || (exports.ElectricAdmittanceUnits = {}));\r\n/** Electric admittance is a measure of how easily a circuit or device will allow a current to flow. It is defined as the inverse of impedance. The SI unit of admittance is the siemens (symbol S). */\r\nclass ElectricAdmittance {\r\n    /**\r\n     * Create a new ElectricAdmittance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricAdmittance’ unit to create from.\r\n     * The default unit is Siemens\r\n     */\r\n    constructor(value, fromUnit = ElectricAdmittanceUnits.Siemens) {\r\n        this.siemensLazy = null;\r\n        this.nanosiemensLazy = null;\r\n        this.microsiemensLazy = null;\r\n        this.millisiemensLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricAdmittance is Siemens.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Siemens() {\r\n        if (this.siemensLazy !== null) {\r\n            return this.siemensLazy;\r\n        }\r\n        return this.siemensLazy = this.convertFromBase(ElectricAdmittanceUnits.Siemens);\r\n    }\r\n    /** */\r\n    get Nanosiemens() {\r\n        if (this.nanosiemensLazy !== null) {\r\n            return this.nanosiemensLazy;\r\n        }\r\n        return this.nanosiemensLazy = this.convertFromBase(ElectricAdmittanceUnits.Nanosiemens);\r\n    }\r\n    /** */\r\n    get Microsiemens() {\r\n        if (this.microsiemensLazy !== null) {\r\n            return this.microsiemensLazy;\r\n        }\r\n        return this.microsiemensLazy = this.convertFromBase(ElectricAdmittanceUnits.Microsiemens);\r\n    }\r\n    /** */\r\n    get Millisiemens() {\r\n        if (this.millisiemensLazy !== null) {\r\n            return this.millisiemensLazy;\r\n        }\r\n        return this.millisiemensLazy = this.convertFromBase(ElectricAdmittanceUnits.Millisiemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricAdmittance instance from a Siemens\r\n     *\r\n     * @param value The unit as Siemens to create a new ElectricAdmittance from.\r\n     * @returns The new ElectricAdmittance instance.\r\n     */\r\n    static FromSiemens(value) {\r\n        return new ElectricAdmittance(value, ElectricAdmittanceUnits.Siemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricAdmittance instance from a Nanosiemens\r\n     *\r\n     * @param value The unit as Nanosiemens to create a new ElectricAdmittance from.\r\n     * @returns The new ElectricAdmittance instance.\r\n     */\r\n    static FromNanosiemens(value) {\r\n        return new ElectricAdmittance(value, ElectricAdmittanceUnits.Nanosiemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricAdmittance instance from a Microsiemens\r\n     *\r\n     * @param value The unit as Microsiemens to create a new ElectricAdmittance from.\r\n     * @returns The new ElectricAdmittance instance.\r\n     */\r\n    static FromMicrosiemens(value) {\r\n        return new ElectricAdmittance(value, ElectricAdmittanceUnits.Microsiemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricAdmittance instance from a Millisiemens\r\n     *\r\n     * @param value The unit as Millisiemens to create a new ElectricAdmittance from.\r\n     * @returns The new ElectricAdmittance instance.\r\n     */\r\n    static FromMillisiemens(value) {\r\n        return new ElectricAdmittance(value, ElectricAdmittanceUnits.Millisiemens);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricAdmittanceUnits.Siemens:\r\n                return this.value;\r\n            case ElectricAdmittanceUnits.Nanosiemens:\r\n                return (this.value) / 1e-9;\r\n            case ElectricAdmittanceUnits.Microsiemens:\r\n                return (this.value) / 0.000001;\r\n            case ElectricAdmittanceUnits.Millisiemens:\r\n                return (this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricAdmittanceUnits.Siemens:\r\n                return value;\r\n            case ElectricAdmittanceUnits.Nanosiemens:\r\n                return (value) * 1e-9;\r\n            case ElectricAdmittanceUnits.Microsiemens:\r\n                return (value) * 0.000001;\r\n            case ElectricAdmittanceUnits.Millisiemens:\r\n                return (value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricAdmittance to string.\r\n     * Note! the default format for ElectricAdmittance is Siemens.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricAdmittance.\r\n     * @returns The string format of the ElectricAdmittance.\r\n     */\r\n    toString(toUnit = ElectricAdmittanceUnits.Siemens) {\r\n        switch (toUnit) {\r\n            case ElectricAdmittanceUnits.Siemens:\r\n                return this.Siemens + ` S`;\r\n            case ElectricAdmittanceUnits.Nanosiemens:\r\n                return this.Nanosiemens + ` `;\r\n            case ElectricAdmittanceUnits.Microsiemens:\r\n                return this.Microsiemens + ` `;\r\n            case ElectricAdmittanceUnits.Millisiemens:\r\n                return this.Millisiemens + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricAdmittance are equals to the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns True if the given ElectricAdmittance are equal to the current ElectricAdmittance.\r\n     */\r\n    equals(electricAdmittance) {\r\n        return this.value === electricAdmittance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricAdmittance against the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns 0 if they are equal, -1 if the current ElectricAdmittance is less then other, 1 if the current ElectricAdmittance is greater then other.\r\n     */\r\n    compareTo(electricAdmittance) {\r\n        if (this.value > electricAdmittance.BaseValue)\r\n            return 1;\r\n        if (this.value < electricAdmittance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricAdmittance with the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns A new ElectricAdmittance instance with the results.\r\n     */\r\n    add(electricAdmittance) {\r\n        return new ElectricAdmittance(this.value + electricAdmittance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricAdmittance with the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns A new ElectricAdmittance instance with the results.\r\n     */\r\n    subtract(electricAdmittance) {\r\n        return new ElectricAdmittance(this.value - electricAdmittance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricAdmittance with the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns A new ElectricAdmittance instance with the results.\r\n     */\r\n    multiply(electricAdmittance) {\r\n        return new ElectricAdmittance(this.value * electricAdmittance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricAdmittance with the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns A new ElectricAdmittance instance with the results.\r\n     */\r\n    divide(electricAdmittance) {\r\n        return new ElectricAdmittance(this.value / electricAdmittance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricAdmittance with the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns A new ElectricAdmittance instance with the results.\r\n     */\r\n    modulo(electricAdmittance) {\r\n        return new ElectricAdmittance(this.value % electricAdmittance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricAdmittance with the current ElectricAdmittance.\r\n     * @param electricAdmittance The other ElectricAdmittance.\r\n     * @returns A new ElectricAdmittance instance with the results.\r\n     */\r\n    pow(electricAdmittance) {\r\n        return new ElectricAdmittance(this.value ** electricAdmittance.BaseValue);\r\n    }\r\n}\r\nexports.ElectricAdmittance = ElectricAdmittance;\r\n//# sourceMappingURL=electricadmittance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricCharge = exports.ElectricChargeUnits = void 0;\r\n/** ElectricChargeUnits enumeration */\r\nvar ElectricChargeUnits;\r\n(function (ElectricChargeUnits) {\r\n    /** */\r\n    ElectricChargeUnits[ElectricChargeUnits[\"Coulombs\"] = 0] = \"Coulombs\";\r\n    /** */\r\n    ElectricChargeUnits[ElectricChargeUnits[\"AmpereHours\"] = 1] = \"AmpereHours\";\r\n    /** */\r\n    ElectricChargeUnits[ElectricChargeUnits[\"MilliampereHours\"] = 2] = \"MilliampereHours\";\r\n    /** */\r\n    ElectricChargeUnits[ElectricChargeUnits[\"KiloampereHours\"] = 3] = \"KiloampereHours\";\r\n    /** */\r\n    ElectricChargeUnits[ElectricChargeUnits[\"MegaampereHours\"] = 4] = \"MegaampereHours\";\r\n})(ElectricChargeUnits = exports.ElectricChargeUnits || (exports.ElectricChargeUnits = {}));\r\n/** Electric charge is the physical property of matter that causes it to experience a force when placed in an electromagnetic field. */\r\nclass ElectricCharge {\r\n    /**\r\n     * Create a new ElectricCharge.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricCharge’ unit to create from.\r\n     * The default unit is Coulombs\r\n     */\r\n    constructor(value, fromUnit = ElectricChargeUnits.Coulombs) {\r\n        this.coulombsLazy = null;\r\n        this.amperehoursLazy = null;\r\n        this.milliamperehoursLazy = null;\r\n        this.kiloamperehoursLazy = null;\r\n        this.megaamperehoursLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricCharge is Coulombs.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Coulombs() {\r\n        if (this.coulombsLazy !== null) {\r\n            return this.coulombsLazy;\r\n        }\r\n        return this.coulombsLazy = this.convertFromBase(ElectricChargeUnits.Coulombs);\r\n    }\r\n    /** */\r\n    get AmpereHours() {\r\n        if (this.amperehoursLazy !== null) {\r\n            return this.amperehoursLazy;\r\n        }\r\n        return this.amperehoursLazy = this.convertFromBase(ElectricChargeUnits.AmpereHours);\r\n    }\r\n    /** */\r\n    get MilliampereHours() {\r\n        if (this.milliamperehoursLazy !== null) {\r\n            return this.milliamperehoursLazy;\r\n        }\r\n        return this.milliamperehoursLazy = this.convertFromBase(ElectricChargeUnits.MilliampereHours);\r\n    }\r\n    /** */\r\n    get KiloampereHours() {\r\n        if (this.kiloamperehoursLazy !== null) {\r\n            return this.kiloamperehoursLazy;\r\n        }\r\n        return this.kiloamperehoursLazy = this.convertFromBase(ElectricChargeUnits.KiloampereHours);\r\n    }\r\n    /** */\r\n    get MegaampereHours() {\r\n        if (this.megaamperehoursLazy !== null) {\r\n            return this.megaamperehoursLazy;\r\n        }\r\n        return this.megaamperehoursLazy = this.convertFromBase(ElectricChargeUnits.MegaampereHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricCharge instance from a Coulombs\r\n     *\r\n     * @param value The unit as Coulombs to create a new ElectricCharge from.\r\n     * @returns The new ElectricCharge instance.\r\n     */\r\n    static FromCoulombs(value) {\r\n        return new ElectricCharge(value, ElectricChargeUnits.Coulombs);\r\n    }\r\n    /**\r\n     * Create a new ElectricCharge instance from a AmpereHours\r\n     *\r\n     * @param value The unit as AmpereHours to create a new ElectricCharge from.\r\n     * @returns The new ElectricCharge instance.\r\n     */\r\n    static FromAmpereHours(value) {\r\n        return new ElectricCharge(value, ElectricChargeUnits.AmpereHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricCharge instance from a MilliampereHours\r\n     *\r\n     * @param value The unit as MilliampereHours to create a new ElectricCharge from.\r\n     * @returns The new ElectricCharge instance.\r\n     */\r\n    static FromMilliampereHours(value) {\r\n        return new ElectricCharge(value, ElectricChargeUnits.MilliampereHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricCharge instance from a KiloampereHours\r\n     *\r\n     * @param value The unit as KiloampereHours to create a new ElectricCharge from.\r\n     * @returns The new ElectricCharge instance.\r\n     */\r\n    static FromKiloampereHours(value) {\r\n        return new ElectricCharge(value, ElectricChargeUnits.KiloampereHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricCharge instance from a MegaampereHours\r\n     *\r\n     * @param value The unit as MegaampereHours to create a new ElectricCharge from.\r\n     * @returns The new ElectricCharge instance.\r\n     */\r\n    static FromMegaampereHours(value) {\r\n        return new ElectricCharge(value, ElectricChargeUnits.MegaampereHours);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricChargeUnits.Coulombs:\r\n                return this.value;\r\n            case ElectricChargeUnits.AmpereHours:\r\n                return this.value * 2.77777777777e-4;\r\n            case ElectricChargeUnits.MilliampereHours:\r\n                return (this.value * 2.77777777777e-4) / 0.001;\r\n            case ElectricChargeUnits.KiloampereHours:\r\n                return (this.value * 2.77777777777e-4) / 1000;\r\n            case ElectricChargeUnits.MegaampereHours:\r\n                return (this.value * 2.77777777777e-4) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricChargeUnits.Coulombs:\r\n                return value;\r\n            case ElectricChargeUnits.AmpereHours:\r\n                return value / 2.77777777777e-4;\r\n            case ElectricChargeUnits.MilliampereHours:\r\n                return (value / 2.77777777777e-4) * 0.001;\r\n            case ElectricChargeUnits.KiloampereHours:\r\n                return (value / 2.77777777777e-4) * 1000;\r\n            case ElectricChargeUnits.MegaampereHours:\r\n                return (value / 2.77777777777e-4) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricCharge to string.\r\n     * Note! the default format for ElectricCharge is Coulombs.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricCharge.\r\n     * @returns The string format of the ElectricCharge.\r\n     */\r\n    toString(toUnit = ElectricChargeUnits.Coulombs) {\r\n        switch (toUnit) {\r\n            case ElectricChargeUnits.Coulombs:\r\n                return this.Coulombs + ` C`;\r\n            case ElectricChargeUnits.AmpereHours:\r\n                return this.AmpereHours + ` A-h`;\r\n            case ElectricChargeUnits.MilliampereHours:\r\n                return this.MilliampereHours + ` `;\r\n            case ElectricChargeUnits.KiloampereHours:\r\n                return this.KiloampereHours + ` `;\r\n            case ElectricChargeUnits.MegaampereHours:\r\n                return this.MegaampereHours + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricCharge are equals to the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns True if the given ElectricCharge are equal to the current ElectricCharge.\r\n     */\r\n    equals(electricCharge) {\r\n        return this.value === electricCharge.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricCharge against the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns 0 if they are equal, -1 if the current ElectricCharge is less then other, 1 if the current ElectricCharge is greater then other.\r\n     */\r\n    compareTo(electricCharge) {\r\n        if (this.value > electricCharge.BaseValue)\r\n            return 1;\r\n        if (this.value < electricCharge.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricCharge with the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns A new ElectricCharge instance with the results.\r\n     */\r\n    add(electricCharge) {\r\n        return new ElectricCharge(this.value + electricCharge.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricCharge with the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns A new ElectricCharge instance with the results.\r\n     */\r\n    subtract(electricCharge) {\r\n        return new ElectricCharge(this.value - electricCharge.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricCharge with the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns A new ElectricCharge instance with the results.\r\n     */\r\n    multiply(electricCharge) {\r\n        return new ElectricCharge(this.value * electricCharge.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricCharge with the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns A new ElectricCharge instance with the results.\r\n     */\r\n    divide(electricCharge) {\r\n        return new ElectricCharge(this.value / electricCharge.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricCharge with the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns A new ElectricCharge instance with the results.\r\n     */\r\n    modulo(electricCharge) {\r\n        return new ElectricCharge(this.value % electricCharge.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricCharge with the current ElectricCharge.\r\n     * @param electricCharge The other ElectricCharge.\r\n     * @returns A new ElectricCharge instance with the results.\r\n     */\r\n    pow(electricCharge) {\r\n        return new ElectricCharge(this.value ** electricCharge.BaseValue);\r\n    }\r\n}\r\nexports.ElectricCharge = ElectricCharge;\r\n//# sourceMappingURL=electriccharge.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricChargeDensity = exports.ElectricChargeDensityUnits = void 0;\r\n/** ElectricChargeDensityUnits enumeration */\r\nvar ElectricChargeDensityUnits;\r\n(function (ElectricChargeDensityUnits) {\r\n    /** */\r\n    ElectricChargeDensityUnits[ElectricChargeDensityUnits[\"CoulombsPerCubicMeter\"] = 0] = \"CoulombsPerCubicMeter\";\r\n})(ElectricChargeDensityUnits = exports.ElectricChargeDensityUnits || (exports.ElectricChargeDensityUnits = {}));\r\n/** In electromagnetism, charge density is a measure of the amount of electric charge per volume. */\r\nclass ElectricChargeDensity {\r\n    /**\r\n     * Create a new ElectricChargeDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricChargeDensity’ unit to create from.\r\n     * The default unit is CoulombsPerCubicMeter\r\n     */\r\n    constructor(value, fromUnit = ElectricChargeDensityUnits.CoulombsPerCubicMeter) {\r\n        this.coulombspercubicmeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricChargeDensity is CoulombsPerCubicMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get CoulombsPerCubicMeter() {\r\n        if (this.coulombspercubicmeterLazy !== null) {\r\n            return this.coulombspercubicmeterLazy;\r\n        }\r\n        return this.coulombspercubicmeterLazy = this.convertFromBase(ElectricChargeDensityUnits.CoulombsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricChargeDensity instance from a CoulombsPerCubicMeter\r\n     *\r\n     * @param value The unit as CoulombsPerCubicMeter to create a new ElectricChargeDensity from.\r\n     * @returns The new ElectricChargeDensity instance.\r\n     */\r\n    static FromCoulombsPerCubicMeter(value) {\r\n        return new ElectricChargeDensity(value, ElectricChargeDensityUnits.CoulombsPerCubicMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricChargeDensityUnits.CoulombsPerCubicMeter:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricChargeDensityUnits.CoulombsPerCubicMeter:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricChargeDensity to string.\r\n     * Note! the default format for ElectricChargeDensity is CoulombsPerCubicMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricChargeDensity.\r\n     * @returns The string format of the ElectricChargeDensity.\r\n     */\r\n    toString(toUnit = ElectricChargeDensityUnits.CoulombsPerCubicMeter) {\r\n        switch (toUnit) {\r\n            case ElectricChargeDensityUnits.CoulombsPerCubicMeter:\r\n                return this.CoulombsPerCubicMeter + ` C/m³`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricChargeDensity are equals to the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns True if the given ElectricChargeDensity are equal to the current ElectricChargeDensity.\r\n     */\r\n    equals(electricChargeDensity) {\r\n        return this.value === electricChargeDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricChargeDensity against the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns 0 if they are equal, -1 if the current ElectricChargeDensity is less then other, 1 if the current ElectricChargeDensity is greater then other.\r\n     */\r\n    compareTo(electricChargeDensity) {\r\n        if (this.value > electricChargeDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < electricChargeDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricChargeDensity with the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns A new ElectricChargeDensity instance with the results.\r\n     */\r\n    add(electricChargeDensity) {\r\n        return new ElectricChargeDensity(this.value + electricChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricChargeDensity with the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns A new ElectricChargeDensity instance with the results.\r\n     */\r\n    subtract(electricChargeDensity) {\r\n        return new ElectricChargeDensity(this.value - electricChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricChargeDensity with the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns A new ElectricChargeDensity instance with the results.\r\n     */\r\n    multiply(electricChargeDensity) {\r\n        return new ElectricChargeDensity(this.value * electricChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricChargeDensity with the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns A new ElectricChargeDensity instance with the results.\r\n     */\r\n    divide(electricChargeDensity) {\r\n        return new ElectricChargeDensity(this.value / electricChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricChargeDensity with the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns A new ElectricChargeDensity instance with the results.\r\n     */\r\n    modulo(electricChargeDensity) {\r\n        return new ElectricChargeDensity(this.value % electricChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricChargeDensity with the current ElectricChargeDensity.\r\n     * @param electricChargeDensity The other ElectricChargeDensity.\r\n     * @returns A new ElectricChargeDensity instance with the results.\r\n     */\r\n    pow(electricChargeDensity) {\r\n        return new ElectricChargeDensity(this.value ** electricChargeDensity.BaseValue);\r\n    }\r\n}\r\nexports.ElectricChargeDensity = ElectricChargeDensity;\r\n//# sourceMappingURL=electricchargedensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricConductance = exports.ElectricConductanceUnits = void 0;\r\n/** ElectricConductanceUnits enumeration */\r\nvar ElectricConductanceUnits;\r\n(function (ElectricConductanceUnits) {\r\n    /** */\r\n    ElectricConductanceUnits[ElectricConductanceUnits[\"Siemens\"] = 0] = \"Siemens\";\r\n    /** */\r\n    ElectricConductanceUnits[ElectricConductanceUnits[\"Millisiemens\"] = 1] = \"Millisiemens\";\r\n    /** */\r\n    ElectricConductanceUnits[ElectricConductanceUnits[\"Microsiemens\"] = 2] = \"Microsiemens\";\r\n})(ElectricConductanceUnits = exports.ElectricConductanceUnits || (exports.ElectricConductanceUnits = {}));\r\n/** The electrical conductance of an electrical conductor is a measure of the easeness to pass an electric current through that conductor. */\r\nclass ElectricConductance {\r\n    /**\r\n     * Create a new ElectricConductance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricConductance’ unit to create from.\r\n     * The default unit is Siemens\r\n     */\r\n    constructor(value, fromUnit = ElectricConductanceUnits.Siemens) {\r\n        this.siemensLazy = null;\r\n        this.millisiemensLazy = null;\r\n        this.microsiemensLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricConductance is Siemens.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Siemens() {\r\n        if (this.siemensLazy !== null) {\r\n            return this.siemensLazy;\r\n        }\r\n        return this.siemensLazy = this.convertFromBase(ElectricConductanceUnits.Siemens);\r\n    }\r\n    /** */\r\n    get Millisiemens() {\r\n        if (this.millisiemensLazy !== null) {\r\n            return this.millisiemensLazy;\r\n        }\r\n        return this.millisiemensLazy = this.convertFromBase(ElectricConductanceUnits.Millisiemens);\r\n    }\r\n    /** */\r\n    get Microsiemens() {\r\n        if (this.microsiemensLazy !== null) {\r\n            return this.microsiemensLazy;\r\n        }\r\n        return this.microsiemensLazy = this.convertFromBase(ElectricConductanceUnits.Microsiemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricConductance instance from a Siemens\r\n     *\r\n     * @param value The unit as Siemens to create a new ElectricConductance from.\r\n     * @returns The new ElectricConductance instance.\r\n     */\r\n    static FromSiemens(value) {\r\n        return new ElectricConductance(value, ElectricConductanceUnits.Siemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricConductance instance from a Millisiemens\r\n     *\r\n     * @param value The unit as Millisiemens to create a new ElectricConductance from.\r\n     * @returns The new ElectricConductance instance.\r\n     */\r\n    static FromMillisiemens(value) {\r\n        return new ElectricConductance(value, ElectricConductanceUnits.Millisiemens);\r\n    }\r\n    /**\r\n     * Create a new ElectricConductance instance from a Microsiemens\r\n     *\r\n     * @param value The unit as Microsiemens to create a new ElectricConductance from.\r\n     * @returns The new ElectricConductance instance.\r\n     */\r\n    static FromMicrosiemens(value) {\r\n        return new ElectricConductance(value, ElectricConductanceUnits.Microsiemens);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricConductanceUnits.Siemens:\r\n                return this.value;\r\n            case ElectricConductanceUnits.Millisiemens:\r\n                return (this.value) / 0.001;\r\n            case ElectricConductanceUnits.Microsiemens:\r\n                return (this.value) / 0.000001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricConductanceUnits.Siemens:\r\n                return value;\r\n            case ElectricConductanceUnits.Millisiemens:\r\n                return (value) * 0.001;\r\n            case ElectricConductanceUnits.Microsiemens:\r\n                return (value) * 0.000001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricConductance to string.\r\n     * Note! the default format for ElectricConductance is Siemens.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricConductance.\r\n     * @returns The string format of the ElectricConductance.\r\n     */\r\n    toString(toUnit = ElectricConductanceUnits.Siemens) {\r\n        switch (toUnit) {\r\n            case ElectricConductanceUnits.Siemens:\r\n                return this.Siemens + ` S`;\r\n            case ElectricConductanceUnits.Millisiemens:\r\n                return this.Millisiemens + ` `;\r\n            case ElectricConductanceUnits.Microsiemens:\r\n                return this.Microsiemens + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricConductance are equals to the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns True if the given ElectricConductance are equal to the current ElectricConductance.\r\n     */\r\n    equals(electricConductance) {\r\n        return this.value === electricConductance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricConductance against the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns 0 if they are equal, -1 if the current ElectricConductance is less then other, 1 if the current ElectricConductance is greater then other.\r\n     */\r\n    compareTo(electricConductance) {\r\n        if (this.value > electricConductance.BaseValue)\r\n            return 1;\r\n        if (this.value < electricConductance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricConductance with the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns A new ElectricConductance instance with the results.\r\n     */\r\n    add(electricConductance) {\r\n        return new ElectricConductance(this.value + electricConductance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricConductance with the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns A new ElectricConductance instance with the results.\r\n     */\r\n    subtract(electricConductance) {\r\n        return new ElectricConductance(this.value - electricConductance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricConductance with the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns A new ElectricConductance instance with the results.\r\n     */\r\n    multiply(electricConductance) {\r\n        return new ElectricConductance(this.value * electricConductance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricConductance with the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns A new ElectricConductance instance with the results.\r\n     */\r\n    divide(electricConductance) {\r\n        return new ElectricConductance(this.value / electricConductance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricConductance with the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns A new ElectricConductance instance with the results.\r\n     */\r\n    modulo(electricConductance) {\r\n        return new ElectricConductance(this.value % electricConductance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricConductance with the current ElectricConductance.\r\n     * @param electricConductance The other ElectricConductance.\r\n     * @returns A new ElectricConductance instance with the results.\r\n     */\r\n    pow(electricConductance) {\r\n        return new ElectricConductance(this.value ** electricConductance.BaseValue);\r\n    }\r\n}\r\nexports.ElectricConductance = ElectricConductance;\r\n//# sourceMappingURL=electricconductance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricConductivity = exports.ElectricConductivityUnits = void 0;\r\n/** ElectricConductivityUnits enumeration */\r\nvar ElectricConductivityUnits;\r\n(function (ElectricConductivityUnits) {\r\n    /** */\r\n    ElectricConductivityUnits[ElectricConductivityUnits[\"SiemensPerMeter\"] = 0] = \"SiemensPerMeter\";\r\n    /** */\r\n    ElectricConductivityUnits[ElectricConductivityUnits[\"SiemensPerInch\"] = 1] = \"SiemensPerInch\";\r\n    /** */\r\n    ElectricConductivityUnits[ElectricConductivityUnits[\"SiemensPerFoot\"] = 2] = \"SiemensPerFoot\";\r\n})(ElectricConductivityUnits = exports.ElectricConductivityUnits || (exports.ElectricConductivityUnits = {}));\r\n/** Electrical conductivity or specific conductance is the reciprocal of electrical resistivity, and measures a material's ability to conduct an electric current. */\r\nclass ElectricConductivity {\r\n    /**\r\n     * Create a new ElectricConductivity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricConductivity’ unit to create from.\r\n     * The default unit is SiemensPerMeter\r\n     */\r\n    constructor(value, fromUnit = ElectricConductivityUnits.SiemensPerMeter) {\r\n        this.siemenspermeterLazy = null;\r\n        this.siemensperinchLazy = null;\r\n        this.siemensperfootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricConductivity is SiemensPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get SiemensPerMeter() {\r\n        if (this.siemenspermeterLazy !== null) {\r\n            return this.siemenspermeterLazy;\r\n        }\r\n        return this.siemenspermeterLazy = this.convertFromBase(ElectricConductivityUnits.SiemensPerMeter);\r\n    }\r\n    /** */\r\n    get SiemensPerInch() {\r\n        if (this.siemensperinchLazy !== null) {\r\n            return this.siemensperinchLazy;\r\n        }\r\n        return this.siemensperinchLazy = this.convertFromBase(ElectricConductivityUnits.SiemensPerInch);\r\n    }\r\n    /** */\r\n    get SiemensPerFoot() {\r\n        if (this.siemensperfootLazy !== null) {\r\n            return this.siemensperfootLazy;\r\n        }\r\n        return this.siemensperfootLazy = this.convertFromBase(ElectricConductivityUnits.SiemensPerFoot);\r\n    }\r\n    /**\r\n     * Create a new ElectricConductivity instance from a SiemensPerMeter\r\n     *\r\n     * @param value The unit as SiemensPerMeter to create a new ElectricConductivity from.\r\n     * @returns The new ElectricConductivity instance.\r\n     */\r\n    static FromSiemensPerMeter(value) {\r\n        return new ElectricConductivity(value, ElectricConductivityUnits.SiemensPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricConductivity instance from a SiemensPerInch\r\n     *\r\n     * @param value The unit as SiemensPerInch to create a new ElectricConductivity from.\r\n     * @returns The new ElectricConductivity instance.\r\n     */\r\n    static FromSiemensPerInch(value) {\r\n        return new ElectricConductivity(value, ElectricConductivityUnits.SiemensPerInch);\r\n    }\r\n    /**\r\n     * Create a new ElectricConductivity instance from a SiemensPerFoot\r\n     *\r\n     * @param value The unit as SiemensPerFoot to create a new ElectricConductivity from.\r\n     * @returns The new ElectricConductivity instance.\r\n     */\r\n    static FromSiemensPerFoot(value) {\r\n        return new ElectricConductivity(value, ElectricConductivityUnits.SiemensPerFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricConductivityUnits.SiemensPerMeter:\r\n                return this.value;\r\n            case ElectricConductivityUnits.SiemensPerInch:\r\n                return this.value / 3.937007874015748e1;\r\n            case ElectricConductivityUnits.SiemensPerFoot:\r\n                return this.value / 3.2808398950131234;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricConductivityUnits.SiemensPerMeter:\r\n                return value;\r\n            case ElectricConductivityUnits.SiemensPerInch:\r\n                return value * 3.937007874015748e1;\r\n            case ElectricConductivityUnits.SiemensPerFoot:\r\n                return value * 3.2808398950131234;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricConductivity to string.\r\n     * Note! the default format for ElectricConductivity is SiemensPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricConductivity.\r\n     * @returns The string format of the ElectricConductivity.\r\n     */\r\n    toString(toUnit = ElectricConductivityUnits.SiemensPerMeter) {\r\n        switch (toUnit) {\r\n            case ElectricConductivityUnits.SiemensPerMeter:\r\n                return this.SiemensPerMeter + ` S/m`;\r\n            case ElectricConductivityUnits.SiemensPerInch:\r\n                return this.SiemensPerInch + ` S/in`;\r\n            case ElectricConductivityUnits.SiemensPerFoot:\r\n                return this.SiemensPerFoot + ` S/ft`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricConductivity are equals to the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns True if the given ElectricConductivity are equal to the current ElectricConductivity.\r\n     */\r\n    equals(electricConductivity) {\r\n        return this.value === electricConductivity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricConductivity against the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns 0 if they are equal, -1 if the current ElectricConductivity is less then other, 1 if the current ElectricConductivity is greater then other.\r\n     */\r\n    compareTo(electricConductivity) {\r\n        if (this.value > electricConductivity.BaseValue)\r\n            return 1;\r\n        if (this.value < electricConductivity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricConductivity with the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns A new ElectricConductivity instance with the results.\r\n     */\r\n    add(electricConductivity) {\r\n        return new ElectricConductivity(this.value + electricConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricConductivity with the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns A new ElectricConductivity instance with the results.\r\n     */\r\n    subtract(electricConductivity) {\r\n        return new ElectricConductivity(this.value - electricConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricConductivity with the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns A new ElectricConductivity instance with the results.\r\n     */\r\n    multiply(electricConductivity) {\r\n        return new ElectricConductivity(this.value * electricConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricConductivity with the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns A new ElectricConductivity instance with the results.\r\n     */\r\n    divide(electricConductivity) {\r\n        return new ElectricConductivity(this.value / electricConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricConductivity with the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns A new ElectricConductivity instance with the results.\r\n     */\r\n    modulo(electricConductivity) {\r\n        return new ElectricConductivity(this.value % electricConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricConductivity with the current ElectricConductivity.\r\n     * @param electricConductivity The other ElectricConductivity.\r\n     * @returns A new ElectricConductivity instance with the results.\r\n     */\r\n    pow(electricConductivity) {\r\n        return new ElectricConductivity(this.value ** electricConductivity.BaseValue);\r\n    }\r\n}\r\nexports.ElectricConductivity = ElectricConductivity;\r\n//# sourceMappingURL=electricconductivity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricCurrent = exports.ElectricCurrentUnits = void 0;\r\n/** ElectricCurrentUnits enumeration */\r\nvar ElectricCurrentUnits;\r\n(function (ElectricCurrentUnits) {\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Amperes\"] = 0] = \"Amperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Picoamperes\"] = 1] = \"Picoamperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Nanoamperes\"] = 2] = \"Nanoamperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Microamperes\"] = 3] = \"Microamperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Milliamperes\"] = 4] = \"Milliamperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Centiamperes\"] = 5] = \"Centiamperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Kiloamperes\"] = 6] = \"Kiloamperes\";\r\n    /** */\r\n    ElectricCurrentUnits[ElectricCurrentUnits[\"Megaamperes\"] = 7] = \"Megaamperes\";\r\n})(ElectricCurrentUnits = exports.ElectricCurrentUnits || (exports.ElectricCurrentUnits = {}));\r\n/** An electric current is a flow of electric charge. In electric circuits this charge is often carried by moving electrons in a wire. It can also be carried by ions in an electrolyte, or by both ions and electrons such as in a plasma. */\r\nclass ElectricCurrent {\r\n    /**\r\n     * Create a new ElectricCurrent.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricCurrent’ unit to create from.\r\n     * The default unit is Amperes\r\n     */\r\n    constructor(value, fromUnit = ElectricCurrentUnits.Amperes) {\r\n        this.amperesLazy = null;\r\n        this.picoamperesLazy = null;\r\n        this.nanoamperesLazy = null;\r\n        this.microamperesLazy = null;\r\n        this.milliamperesLazy = null;\r\n        this.centiamperesLazy = null;\r\n        this.kiloamperesLazy = null;\r\n        this.megaamperesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricCurrent is Amperes.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Amperes() {\r\n        if (this.amperesLazy !== null) {\r\n            return this.amperesLazy;\r\n        }\r\n        return this.amperesLazy = this.convertFromBase(ElectricCurrentUnits.Amperes);\r\n    }\r\n    /** */\r\n    get Picoamperes() {\r\n        if (this.picoamperesLazy !== null) {\r\n            return this.picoamperesLazy;\r\n        }\r\n        return this.picoamperesLazy = this.convertFromBase(ElectricCurrentUnits.Picoamperes);\r\n    }\r\n    /** */\r\n    get Nanoamperes() {\r\n        if (this.nanoamperesLazy !== null) {\r\n            return this.nanoamperesLazy;\r\n        }\r\n        return this.nanoamperesLazy = this.convertFromBase(ElectricCurrentUnits.Nanoamperes);\r\n    }\r\n    /** */\r\n    get Microamperes() {\r\n        if (this.microamperesLazy !== null) {\r\n            return this.microamperesLazy;\r\n        }\r\n        return this.microamperesLazy = this.convertFromBase(ElectricCurrentUnits.Microamperes);\r\n    }\r\n    /** */\r\n    get Milliamperes() {\r\n        if (this.milliamperesLazy !== null) {\r\n            return this.milliamperesLazy;\r\n        }\r\n        return this.milliamperesLazy = this.convertFromBase(ElectricCurrentUnits.Milliamperes);\r\n    }\r\n    /** */\r\n    get Centiamperes() {\r\n        if (this.centiamperesLazy !== null) {\r\n            return this.centiamperesLazy;\r\n        }\r\n        return this.centiamperesLazy = this.convertFromBase(ElectricCurrentUnits.Centiamperes);\r\n    }\r\n    /** */\r\n    get Kiloamperes() {\r\n        if (this.kiloamperesLazy !== null) {\r\n            return this.kiloamperesLazy;\r\n        }\r\n        return this.kiloamperesLazy = this.convertFromBase(ElectricCurrentUnits.Kiloamperes);\r\n    }\r\n    /** */\r\n    get Megaamperes() {\r\n        if (this.megaamperesLazy !== null) {\r\n            return this.megaamperesLazy;\r\n        }\r\n        return this.megaamperesLazy = this.convertFromBase(ElectricCurrentUnits.Megaamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Amperes\r\n     *\r\n     * @param value The unit as Amperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromAmperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Amperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Picoamperes\r\n     *\r\n     * @param value The unit as Picoamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromPicoamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Picoamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Nanoamperes\r\n     *\r\n     * @param value The unit as Nanoamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromNanoamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Nanoamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Microamperes\r\n     *\r\n     * @param value The unit as Microamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromMicroamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Microamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Milliamperes\r\n     *\r\n     * @param value The unit as Milliamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromMilliamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Milliamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Centiamperes\r\n     *\r\n     * @param value The unit as Centiamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromCentiamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Centiamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Kiloamperes\r\n     *\r\n     * @param value The unit as Kiloamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromKiloamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Kiloamperes);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrent instance from a Megaamperes\r\n     *\r\n     * @param value The unit as Megaamperes to create a new ElectricCurrent from.\r\n     * @returns The new ElectricCurrent instance.\r\n     */\r\n    static FromMegaamperes(value) {\r\n        return new ElectricCurrent(value, ElectricCurrentUnits.Megaamperes);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricCurrentUnits.Amperes:\r\n                return this.value;\r\n            case ElectricCurrentUnits.Picoamperes:\r\n                return (this.value) / 1e-12;\r\n            case ElectricCurrentUnits.Nanoamperes:\r\n                return (this.value) / 1e-9;\r\n            case ElectricCurrentUnits.Microamperes:\r\n                return (this.value) / 0.000001;\r\n            case ElectricCurrentUnits.Milliamperes:\r\n                return (this.value) / 0.001;\r\n            case ElectricCurrentUnits.Centiamperes:\r\n                return (this.value) / 0.01;\r\n            case ElectricCurrentUnits.Kiloamperes:\r\n                return (this.value) / 1000;\r\n            case ElectricCurrentUnits.Megaamperes:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricCurrentUnits.Amperes:\r\n                return value;\r\n            case ElectricCurrentUnits.Picoamperes:\r\n                return (value) * 1e-12;\r\n            case ElectricCurrentUnits.Nanoamperes:\r\n                return (value) * 1e-9;\r\n            case ElectricCurrentUnits.Microamperes:\r\n                return (value) * 0.000001;\r\n            case ElectricCurrentUnits.Milliamperes:\r\n                return (value) * 0.001;\r\n            case ElectricCurrentUnits.Centiamperes:\r\n                return (value) * 0.01;\r\n            case ElectricCurrentUnits.Kiloamperes:\r\n                return (value) * 1000;\r\n            case ElectricCurrentUnits.Megaamperes:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricCurrent to string.\r\n     * Note! the default format for ElectricCurrent is Amperes.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricCurrent.\r\n     * @returns The string format of the ElectricCurrent.\r\n     */\r\n    toString(toUnit = ElectricCurrentUnits.Amperes) {\r\n        switch (toUnit) {\r\n            case ElectricCurrentUnits.Amperes:\r\n                return this.Amperes + ` A`;\r\n            case ElectricCurrentUnits.Picoamperes:\r\n                return this.Picoamperes + ` `;\r\n            case ElectricCurrentUnits.Nanoamperes:\r\n                return this.Nanoamperes + ` `;\r\n            case ElectricCurrentUnits.Microamperes:\r\n                return this.Microamperes + ` `;\r\n            case ElectricCurrentUnits.Milliamperes:\r\n                return this.Milliamperes + ` `;\r\n            case ElectricCurrentUnits.Centiamperes:\r\n                return this.Centiamperes + ` `;\r\n            case ElectricCurrentUnits.Kiloamperes:\r\n                return this.Kiloamperes + ` `;\r\n            case ElectricCurrentUnits.Megaamperes:\r\n                return this.Megaamperes + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricCurrent are equals to the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns True if the given ElectricCurrent are equal to the current ElectricCurrent.\r\n     */\r\n    equals(electricCurrent) {\r\n        return this.value === electricCurrent.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricCurrent against the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns 0 if they are equal, -1 if the current ElectricCurrent is less then other, 1 if the current ElectricCurrent is greater then other.\r\n     */\r\n    compareTo(electricCurrent) {\r\n        if (this.value > electricCurrent.BaseValue)\r\n            return 1;\r\n        if (this.value < electricCurrent.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricCurrent with the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns A new ElectricCurrent instance with the results.\r\n     */\r\n    add(electricCurrent) {\r\n        return new ElectricCurrent(this.value + electricCurrent.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricCurrent with the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns A new ElectricCurrent instance with the results.\r\n     */\r\n    subtract(electricCurrent) {\r\n        return new ElectricCurrent(this.value - electricCurrent.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricCurrent with the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns A new ElectricCurrent instance with the results.\r\n     */\r\n    multiply(electricCurrent) {\r\n        return new ElectricCurrent(this.value * electricCurrent.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricCurrent with the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns A new ElectricCurrent instance with the results.\r\n     */\r\n    divide(electricCurrent) {\r\n        return new ElectricCurrent(this.value / electricCurrent.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricCurrent with the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns A new ElectricCurrent instance with the results.\r\n     */\r\n    modulo(electricCurrent) {\r\n        return new ElectricCurrent(this.value % electricCurrent.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricCurrent with the current ElectricCurrent.\r\n     * @param electricCurrent The other ElectricCurrent.\r\n     * @returns A new ElectricCurrent instance with the results.\r\n     */\r\n    pow(electricCurrent) {\r\n        return new ElectricCurrent(this.value ** electricCurrent.BaseValue);\r\n    }\r\n}\r\nexports.ElectricCurrent = ElectricCurrent;\r\n//# sourceMappingURL=electriccurrent.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricCurrentDensity = exports.ElectricCurrentDensityUnits = void 0;\r\n/** ElectricCurrentDensityUnits enumeration */\r\nvar ElectricCurrentDensityUnits;\r\n(function (ElectricCurrentDensityUnits) {\r\n    /** */\r\n    ElectricCurrentDensityUnits[ElectricCurrentDensityUnits[\"AmperesPerSquareMeter\"] = 0] = \"AmperesPerSquareMeter\";\r\n    /** */\r\n    ElectricCurrentDensityUnits[ElectricCurrentDensityUnits[\"AmperesPerSquareInch\"] = 1] = \"AmperesPerSquareInch\";\r\n    /** */\r\n    ElectricCurrentDensityUnits[ElectricCurrentDensityUnits[\"AmperesPerSquareFoot\"] = 2] = \"AmperesPerSquareFoot\";\r\n})(ElectricCurrentDensityUnits = exports.ElectricCurrentDensityUnits || (exports.ElectricCurrentDensityUnits = {}));\r\n/** In electromagnetism, current density is the electric current per unit area of cross section. */\r\nclass ElectricCurrentDensity {\r\n    /**\r\n     * Create a new ElectricCurrentDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricCurrentDensity’ unit to create from.\r\n     * The default unit is AmperesPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = ElectricCurrentDensityUnits.AmperesPerSquareMeter) {\r\n        this.amperespersquaremeterLazy = null;\r\n        this.amperespersquareinchLazy = null;\r\n        this.amperespersquarefootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricCurrentDensity is AmperesPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get AmperesPerSquareMeter() {\r\n        if (this.amperespersquaremeterLazy !== null) {\r\n            return this.amperespersquaremeterLazy;\r\n        }\r\n        return this.amperespersquaremeterLazy = this.convertFromBase(ElectricCurrentDensityUnits.AmperesPerSquareMeter);\r\n    }\r\n    /** */\r\n    get AmperesPerSquareInch() {\r\n        if (this.amperespersquareinchLazy !== null) {\r\n            return this.amperespersquareinchLazy;\r\n        }\r\n        return this.amperespersquareinchLazy = this.convertFromBase(ElectricCurrentDensityUnits.AmperesPerSquareInch);\r\n    }\r\n    /** */\r\n    get AmperesPerSquareFoot() {\r\n        if (this.amperespersquarefootLazy !== null) {\r\n            return this.amperespersquarefootLazy;\r\n        }\r\n        return this.amperespersquarefootLazy = this.convertFromBase(ElectricCurrentDensityUnits.AmperesPerSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentDensity instance from a AmperesPerSquareMeter\r\n     *\r\n     * @param value The unit as AmperesPerSquareMeter to create a new ElectricCurrentDensity from.\r\n     * @returns The new ElectricCurrentDensity instance.\r\n     */\r\n    static FromAmperesPerSquareMeter(value) {\r\n        return new ElectricCurrentDensity(value, ElectricCurrentDensityUnits.AmperesPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentDensity instance from a AmperesPerSquareInch\r\n     *\r\n     * @param value The unit as AmperesPerSquareInch to create a new ElectricCurrentDensity from.\r\n     * @returns The new ElectricCurrentDensity instance.\r\n     */\r\n    static FromAmperesPerSquareInch(value) {\r\n        return new ElectricCurrentDensity(value, ElectricCurrentDensityUnits.AmperesPerSquareInch);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentDensity instance from a AmperesPerSquareFoot\r\n     *\r\n     * @param value The unit as AmperesPerSquareFoot to create a new ElectricCurrentDensity from.\r\n     * @returns The new ElectricCurrentDensity instance.\r\n     */\r\n    static FromAmperesPerSquareFoot(value) {\r\n        return new ElectricCurrentDensity(value, ElectricCurrentDensityUnits.AmperesPerSquareFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareMeter:\r\n                return this.value;\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareInch:\r\n                return this.value / 1.5500031000062000e3;\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareFoot:\r\n                return this.value / 1.0763910416709722e1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareMeter:\r\n                return value;\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareInch:\r\n                return value * 1.5500031000062000e3;\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareFoot:\r\n                return value * 1.0763910416709722e1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricCurrentDensity to string.\r\n     * Note! the default format for ElectricCurrentDensity is AmperesPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricCurrentDensity.\r\n     * @returns The string format of the ElectricCurrentDensity.\r\n     */\r\n    toString(toUnit = ElectricCurrentDensityUnits.AmperesPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareMeter:\r\n                return this.AmperesPerSquareMeter + ` A/m²`;\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareInch:\r\n                return this.AmperesPerSquareInch + ` A/in²`;\r\n            case ElectricCurrentDensityUnits.AmperesPerSquareFoot:\r\n                return this.AmperesPerSquareFoot + ` A/ft²`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricCurrentDensity are equals to the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns True if the given ElectricCurrentDensity are equal to the current ElectricCurrentDensity.\r\n     */\r\n    equals(electricCurrentDensity) {\r\n        return this.value === electricCurrentDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricCurrentDensity against the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns 0 if they are equal, -1 if the current ElectricCurrentDensity is less then other, 1 if the current ElectricCurrentDensity is greater then other.\r\n     */\r\n    compareTo(electricCurrentDensity) {\r\n        if (this.value > electricCurrentDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < electricCurrentDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricCurrentDensity with the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns A new ElectricCurrentDensity instance with the results.\r\n     */\r\n    add(electricCurrentDensity) {\r\n        return new ElectricCurrentDensity(this.value + electricCurrentDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricCurrentDensity with the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns A new ElectricCurrentDensity instance with the results.\r\n     */\r\n    subtract(electricCurrentDensity) {\r\n        return new ElectricCurrentDensity(this.value - electricCurrentDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricCurrentDensity with the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns A new ElectricCurrentDensity instance with the results.\r\n     */\r\n    multiply(electricCurrentDensity) {\r\n        return new ElectricCurrentDensity(this.value * electricCurrentDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricCurrentDensity with the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns A new ElectricCurrentDensity instance with the results.\r\n     */\r\n    divide(electricCurrentDensity) {\r\n        return new ElectricCurrentDensity(this.value / electricCurrentDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricCurrentDensity with the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns A new ElectricCurrentDensity instance with the results.\r\n     */\r\n    modulo(electricCurrentDensity) {\r\n        return new ElectricCurrentDensity(this.value % electricCurrentDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricCurrentDensity with the current ElectricCurrentDensity.\r\n     * @param electricCurrentDensity The other ElectricCurrentDensity.\r\n     * @returns A new ElectricCurrentDensity instance with the results.\r\n     */\r\n    pow(electricCurrentDensity) {\r\n        return new ElectricCurrentDensity(this.value ** electricCurrentDensity.BaseValue);\r\n    }\r\n}\r\nexports.ElectricCurrentDensity = ElectricCurrentDensity;\r\n//# sourceMappingURL=electriccurrentdensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricCurrentGradient = exports.ElectricCurrentGradientUnits = void 0;\r\n/** ElectricCurrentGradientUnits enumeration */\r\nvar ElectricCurrentGradientUnits;\r\n(function (ElectricCurrentGradientUnits) {\r\n    /** */\r\n    ElectricCurrentGradientUnits[ElectricCurrentGradientUnits[\"AmperesPerSecond\"] = 0] = \"AmperesPerSecond\";\r\n    /** */\r\n    ElectricCurrentGradientUnits[ElectricCurrentGradientUnits[\"AmperesPerMillisecond\"] = 1] = \"AmperesPerMillisecond\";\r\n    /** */\r\n    ElectricCurrentGradientUnits[ElectricCurrentGradientUnits[\"AmperesPerMicrosecond\"] = 2] = \"AmperesPerMicrosecond\";\r\n    /** */\r\n    ElectricCurrentGradientUnits[ElectricCurrentGradientUnits[\"AmperesPerNanosecond\"] = 3] = \"AmperesPerNanosecond\";\r\n})(ElectricCurrentGradientUnits = exports.ElectricCurrentGradientUnits || (exports.ElectricCurrentGradientUnits = {}));\r\n/** In electromagnetism, the current gradient describes how the current changes in time. */\r\nclass ElectricCurrentGradient {\r\n    /**\r\n     * Create a new ElectricCurrentGradient.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricCurrentGradient’ unit to create from.\r\n     * The default unit is AmperesPerSecond\r\n     */\r\n    constructor(value, fromUnit = ElectricCurrentGradientUnits.AmperesPerSecond) {\r\n        this.amperespersecondLazy = null;\r\n        this.amperespermillisecondLazy = null;\r\n        this.amperespermicrosecondLazy = null;\r\n        this.amperespernanosecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricCurrentGradient is AmperesPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get AmperesPerSecond() {\r\n        if (this.amperespersecondLazy !== null) {\r\n            return this.amperespersecondLazy;\r\n        }\r\n        return this.amperespersecondLazy = this.convertFromBase(ElectricCurrentGradientUnits.AmperesPerSecond);\r\n    }\r\n    /** */\r\n    get AmperesPerMillisecond() {\r\n        if (this.amperespermillisecondLazy !== null) {\r\n            return this.amperespermillisecondLazy;\r\n        }\r\n        return this.amperespermillisecondLazy = this.convertFromBase(ElectricCurrentGradientUnits.AmperesPerMillisecond);\r\n    }\r\n    /** */\r\n    get AmperesPerMicrosecond() {\r\n        if (this.amperespermicrosecondLazy !== null) {\r\n            return this.amperespermicrosecondLazy;\r\n        }\r\n        return this.amperespermicrosecondLazy = this.convertFromBase(ElectricCurrentGradientUnits.AmperesPerMicrosecond);\r\n    }\r\n    /** */\r\n    get AmperesPerNanosecond() {\r\n        if (this.amperespernanosecondLazy !== null) {\r\n            return this.amperespernanosecondLazy;\r\n        }\r\n        return this.amperespernanosecondLazy = this.convertFromBase(ElectricCurrentGradientUnits.AmperesPerNanosecond);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentGradient instance from a AmperesPerSecond\r\n     *\r\n     * @param value The unit as AmperesPerSecond to create a new ElectricCurrentGradient from.\r\n     * @returns The new ElectricCurrentGradient instance.\r\n     */\r\n    static FromAmperesPerSecond(value) {\r\n        return new ElectricCurrentGradient(value, ElectricCurrentGradientUnits.AmperesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentGradient instance from a AmperesPerMillisecond\r\n     *\r\n     * @param value The unit as AmperesPerMillisecond to create a new ElectricCurrentGradient from.\r\n     * @returns The new ElectricCurrentGradient instance.\r\n     */\r\n    static FromAmperesPerMillisecond(value) {\r\n        return new ElectricCurrentGradient(value, ElectricCurrentGradientUnits.AmperesPerMillisecond);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentGradient instance from a AmperesPerMicrosecond\r\n     *\r\n     * @param value The unit as AmperesPerMicrosecond to create a new ElectricCurrentGradient from.\r\n     * @returns The new ElectricCurrentGradient instance.\r\n     */\r\n    static FromAmperesPerMicrosecond(value) {\r\n        return new ElectricCurrentGradient(value, ElectricCurrentGradientUnits.AmperesPerMicrosecond);\r\n    }\r\n    /**\r\n     * Create a new ElectricCurrentGradient instance from a AmperesPerNanosecond\r\n     *\r\n     * @param value The unit as AmperesPerNanosecond to create a new ElectricCurrentGradient from.\r\n     * @returns The new ElectricCurrentGradient instance.\r\n     */\r\n    static FromAmperesPerNanosecond(value) {\r\n        return new ElectricCurrentGradient(value, ElectricCurrentGradientUnits.AmperesPerNanosecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricCurrentGradientUnits.AmperesPerSecond:\r\n                return this.value;\r\n            case ElectricCurrentGradientUnits.AmperesPerMillisecond:\r\n                return this.value / 1E3;\r\n            case ElectricCurrentGradientUnits.AmperesPerMicrosecond:\r\n                return this.value / 1E6;\r\n            case ElectricCurrentGradientUnits.AmperesPerNanosecond:\r\n                return this.value / 1E9;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricCurrentGradientUnits.AmperesPerSecond:\r\n                return value;\r\n            case ElectricCurrentGradientUnits.AmperesPerMillisecond:\r\n                return value * 1E3;\r\n            case ElectricCurrentGradientUnits.AmperesPerMicrosecond:\r\n                return value * 1E6;\r\n            case ElectricCurrentGradientUnits.AmperesPerNanosecond:\r\n                return value * 1E9;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricCurrentGradient to string.\r\n     * Note! the default format for ElectricCurrentGradient is AmperesPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricCurrentGradient.\r\n     * @returns The string format of the ElectricCurrentGradient.\r\n     */\r\n    toString(toUnit = ElectricCurrentGradientUnits.AmperesPerSecond) {\r\n        switch (toUnit) {\r\n            case ElectricCurrentGradientUnits.AmperesPerSecond:\r\n                return this.AmperesPerSecond + ` A/s`;\r\n            case ElectricCurrentGradientUnits.AmperesPerMillisecond:\r\n                return this.AmperesPerMillisecond + ` A/ms`;\r\n            case ElectricCurrentGradientUnits.AmperesPerMicrosecond:\r\n                return this.AmperesPerMicrosecond + ` A/μs`;\r\n            case ElectricCurrentGradientUnits.AmperesPerNanosecond:\r\n                return this.AmperesPerNanosecond + ` A/ns`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricCurrentGradient are equals to the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns True if the given ElectricCurrentGradient are equal to the current ElectricCurrentGradient.\r\n     */\r\n    equals(electricCurrentGradient) {\r\n        return this.value === electricCurrentGradient.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricCurrentGradient against the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns 0 if they are equal, -1 if the current ElectricCurrentGradient is less then other, 1 if the current ElectricCurrentGradient is greater then other.\r\n     */\r\n    compareTo(electricCurrentGradient) {\r\n        if (this.value > electricCurrentGradient.BaseValue)\r\n            return 1;\r\n        if (this.value < electricCurrentGradient.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricCurrentGradient with the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns A new ElectricCurrentGradient instance with the results.\r\n     */\r\n    add(electricCurrentGradient) {\r\n        return new ElectricCurrentGradient(this.value + electricCurrentGradient.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricCurrentGradient with the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns A new ElectricCurrentGradient instance with the results.\r\n     */\r\n    subtract(electricCurrentGradient) {\r\n        return new ElectricCurrentGradient(this.value - electricCurrentGradient.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricCurrentGradient with the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns A new ElectricCurrentGradient instance with the results.\r\n     */\r\n    multiply(electricCurrentGradient) {\r\n        return new ElectricCurrentGradient(this.value * electricCurrentGradient.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricCurrentGradient with the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns A new ElectricCurrentGradient instance with the results.\r\n     */\r\n    divide(electricCurrentGradient) {\r\n        return new ElectricCurrentGradient(this.value / electricCurrentGradient.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricCurrentGradient with the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns A new ElectricCurrentGradient instance with the results.\r\n     */\r\n    modulo(electricCurrentGradient) {\r\n        return new ElectricCurrentGradient(this.value % electricCurrentGradient.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricCurrentGradient with the current ElectricCurrentGradient.\r\n     * @param electricCurrentGradient The other ElectricCurrentGradient.\r\n     * @returns A new ElectricCurrentGradient instance with the results.\r\n     */\r\n    pow(electricCurrentGradient) {\r\n        return new ElectricCurrentGradient(this.value ** electricCurrentGradient.BaseValue);\r\n    }\r\n}\r\nexports.ElectricCurrentGradient = ElectricCurrentGradient;\r\n//# sourceMappingURL=electriccurrentgradient.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricField = exports.ElectricFieldUnits = void 0;\r\n/** ElectricFieldUnits enumeration */\r\nvar ElectricFieldUnits;\r\n(function (ElectricFieldUnits) {\r\n    /** */\r\n    ElectricFieldUnits[ElectricFieldUnits[\"VoltsPerMeter\"] = 0] = \"VoltsPerMeter\";\r\n})(ElectricFieldUnits = exports.ElectricFieldUnits || (exports.ElectricFieldUnits = {}));\r\n/** An electric field is a force field that surrounds electric charges that attracts or repels other electric charges. */\r\nclass ElectricField {\r\n    /**\r\n     * Create a new ElectricField.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricField’ unit to create from.\r\n     * The default unit is VoltsPerMeter\r\n     */\r\n    constructor(value, fromUnit = ElectricFieldUnits.VoltsPerMeter) {\r\n        this.voltspermeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricField is VoltsPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltsPerMeter() {\r\n        if (this.voltspermeterLazy !== null) {\r\n            return this.voltspermeterLazy;\r\n        }\r\n        return this.voltspermeterLazy = this.convertFromBase(ElectricFieldUnits.VoltsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricField instance from a VoltsPerMeter\r\n     *\r\n     * @param value The unit as VoltsPerMeter to create a new ElectricField from.\r\n     * @returns The new ElectricField instance.\r\n     */\r\n    static FromVoltsPerMeter(value) {\r\n        return new ElectricField(value, ElectricFieldUnits.VoltsPerMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricFieldUnits.VoltsPerMeter:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricFieldUnits.VoltsPerMeter:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricField to string.\r\n     * Note! the default format for ElectricField is VoltsPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricField.\r\n     * @returns The string format of the ElectricField.\r\n     */\r\n    toString(toUnit = ElectricFieldUnits.VoltsPerMeter) {\r\n        switch (toUnit) {\r\n            case ElectricFieldUnits.VoltsPerMeter:\r\n                return this.VoltsPerMeter + ` V/m`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricField are equals to the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns True if the given ElectricField are equal to the current ElectricField.\r\n     */\r\n    equals(electricField) {\r\n        return this.value === electricField.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricField against the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns 0 if they are equal, -1 if the current ElectricField is less then other, 1 if the current ElectricField is greater then other.\r\n     */\r\n    compareTo(electricField) {\r\n        if (this.value > electricField.BaseValue)\r\n            return 1;\r\n        if (this.value < electricField.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricField with the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns A new ElectricField instance with the results.\r\n     */\r\n    add(electricField) {\r\n        return new ElectricField(this.value + electricField.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricField with the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns A new ElectricField instance with the results.\r\n     */\r\n    subtract(electricField) {\r\n        return new ElectricField(this.value - electricField.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricField with the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns A new ElectricField instance with the results.\r\n     */\r\n    multiply(electricField) {\r\n        return new ElectricField(this.value * electricField.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricField with the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns A new ElectricField instance with the results.\r\n     */\r\n    divide(electricField) {\r\n        return new ElectricField(this.value / electricField.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricField with the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns A new ElectricField instance with the results.\r\n     */\r\n    modulo(electricField) {\r\n        return new ElectricField(this.value % electricField.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricField with the current ElectricField.\r\n     * @param electricField The other ElectricField.\r\n     * @returns A new ElectricField instance with the results.\r\n     */\r\n    pow(electricField) {\r\n        return new ElectricField(this.value ** electricField.BaseValue);\r\n    }\r\n}\r\nexports.ElectricField = ElectricField;\r\n//# sourceMappingURL=electricfield.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricInductance = exports.ElectricInductanceUnits = void 0;\r\n/** ElectricInductanceUnits enumeration */\r\nvar ElectricInductanceUnits;\r\n(function (ElectricInductanceUnits) {\r\n    /** */\r\n    ElectricInductanceUnits[ElectricInductanceUnits[\"Henries\"] = 0] = \"Henries\";\r\n    /** */\r\n    ElectricInductanceUnits[ElectricInductanceUnits[\"Nanohenries\"] = 1] = \"Nanohenries\";\r\n    /** */\r\n    ElectricInductanceUnits[ElectricInductanceUnits[\"Microhenries\"] = 2] = \"Microhenries\";\r\n    /** */\r\n    ElectricInductanceUnits[ElectricInductanceUnits[\"Millihenries\"] = 3] = \"Millihenries\";\r\n})(ElectricInductanceUnits = exports.ElectricInductanceUnits || (exports.ElectricInductanceUnits = {}));\r\n/** Inductance is a property of an electrical conductor which opposes a change in current. */\r\nclass ElectricInductance {\r\n    /**\r\n     * Create a new ElectricInductance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricInductance’ unit to create from.\r\n     * The default unit is Henries\r\n     */\r\n    constructor(value, fromUnit = ElectricInductanceUnits.Henries) {\r\n        this.henriesLazy = null;\r\n        this.nanohenriesLazy = null;\r\n        this.microhenriesLazy = null;\r\n        this.millihenriesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricInductance is Henries.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Henries() {\r\n        if (this.henriesLazy !== null) {\r\n            return this.henriesLazy;\r\n        }\r\n        return this.henriesLazy = this.convertFromBase(ElectricInductanceUnits.Henries);\r\n    }\r\n    /** */\r\n    get Nanohenries() {\r\n        if (this.nanohenriesLazy !== null) {\r\n            return this.nanohenriesLazy;\r\n        }\r\n        return this.nanohenriesLazy = this.convertFromBase(ElectricInductanceUnits.Nanohenries);\r\n    }\r\n    /** */\r\n    get Microhenries() {\r\n        if (this.microhenriesLazy !== null) {\r\n            return this.microhenriesLazy;\r\n        }\r\n        return this.microhenriesLazy = this.convertFromBase(ElectricInductanceUnits.Microhenries);\r\n    }\r\n    /** */\r\n    get Millihenries() {\r\n        if (this.millihenriesLazy !== null) {\r\n            return this.millihenriesLazy;\r\n        }\r\n        return this.millihenriesLazy = this.convertFromBase(ElectricInductanceUnits.Millihenries);\r\n    }\r\n    /**\r\n     * Create a new ElectricInductance instance from a Henries\r\n     *\r\n     * @param value The unit as Henries to create a new ElectricInductance from.\r\n     * @returns The new ElectricInductance instance.\r\n     */\r\n    static FromHenries(value) {\r\n        return new ElectricInductance(value, ElectricInductanceUnits.Henries);\r\n    }\r\n    /**\r\n     * Create a new ElectricInductance instance from a Nanohenries\r\n     *\r\n     * @param value The unit as Nanohenries to create a new ElectricInductance from.\r\n     * @returns The new ElectricInductance instance.\r\n     */\r\n    static FromNanohenries(value) {\r\n        return new ElectricInductance(value, ElectricInductanceUnits.Nanohenries);\r\n    }\r\n    /**\r\n     * Create a new ElectricInductance instance from a Microhenries\r\n     *\r\n     * @param value The unit as Microhenries to create a new ElectricInductance from.\r\n     * @returns The new ElectricInductance instance.\r\n     */\r\n    static FromMicrohenries(value) {\r\n        return new ElectricInductance(value, ElectricInductanceUnits.Microhenries);\r\n    }\r\n    /**\r\n     * Create a new ElectricInductance instance from a Millihenries\r\n     *\r\n     * @param value The unit as Millihenries to create a new ElectricInductance from.\r\n     * @returns The new ElectricInductance instance.\r\n     */\r\n    static FromMillihenries(value) {\r\n        return new ElectricInductance(value, ElectricInductanceUnits.Millihenries);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricInductanceUnits.Henries:\r\n                return this.value;\r\n            case ElectricInductanceUnits.Nanohenries:\r\n                return (this.value) / 1e-9;\r\n            case ElectricInductanceUnits.Microhenries:\r\n                return (this.value) / 0.000001;\r\n            case ElectricInductanceUnits.Millihenries:\r\n                return (this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricInductanceUnits.Henries:\r\n                return value;\r\n            case ElectricInductanceUnits.Nanohenries:\r\n                return (value) * 1e-9;\r\n            case ElectricInductanceUnits.Microhenries:\r\n                return (value) * 0.000001;\r\n            case ElectricInductanceUnits.Millihenries:\r\n                return (value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricInductance to string.\r\n     * Note! the default format for ElectricInductance is Henries.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricInductance.\r\n     * @returns The string format of the ElectricInductance.\r\n     */\r\n    toString(toUnit = ElectricInductanceUnits.Henries) {\r\n        switch (toUnit) {\r\n            case ElectricInductanceUnits.Henries:\r\n                return this.Henries + ` H`;\r\n            case ElectricInductanceUnits.Nanohenries:\r\n                return this.Nanohenries + ` `;\r\n            case ElectricInductanceUnits.Microhenries:\r\n                return this.Microhenries + ` `;\r\n            case ElectricInductanceUnits.Millihenries:\r\n                return this.Millihenries + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricInductance are equals to the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns True if the given ElectricInductance are equal to the current ElectricInductance.\r\n     */\r\n    equals(electricInductance) {\r\n        return this.value === electricInductance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricInductance against the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns 0 if they are equal, -1 if the current ElectricInductance is less then other, 1 if the current ElectricInductance is greater then other.\r\n     */\r\n    compareTo(electricInductance) {\r\n        if (this.value > electricInductance.BaseValue)\r\n            return 1;\r\n        if (this.value < electricInductance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricInductance with the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns A new ElectricInductance instance with the results.\r\n     */\r\n    add(electricInductance) {\r\n        return new ElectricInductance(this.value + electricInductance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricInductance with the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns A new ElectricInductance instance with the results.\r\n     */\r\n    subtract(electricInductance) {\r\n        return new ElectricInductance(this.value - electricInductance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricInductance with the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns A new ElectricInductance instance with the results.\r\n     */\r\n    multiply(electricInductance) {\r\n        return new ElectricInductance(this.value * electricInductance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricInductance with the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns A new ElectricInductance instance with the results.\r\n     */\r\n    divide(electricInductance) {\r\n        return new ElectricInductance(this.value / electricInductance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricInductance with the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns A new ElectricInductance instance with the results.\r\n     */\r\n    modulo(electricInductance) {\r\n        return new ElectricInductance(this.value % electricInductance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricInductance with the current ElectricInductance.\r\n     * @param electricInductance The other ElectricInductance.\r\n     * @returns A new ElectricInductance instance with the results.\r\n     */\r\n    pow(electricInductance) {\r\n        return new ElectricInductance(this.value ** electricInductance.BaseValue);\r\n    }\r\n}\r\nexports.ElectricInductance = ElectricInductance;\r\n//# sourceMappingURL=electricinductance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricPotential = exports.ElectricPotentialUnits = void 0;\r\n/** ElectricPotentialUnits enumeration */\r\nvar ElectricPotentialUnits;\r\n(function (ElectricPotentialUnits) {\r\n    /** */\r\n    ElectricPotentialUnits[ElectricPotentialUnits[\"Volts\"] = 0] = \"Volts\";\r\n    /** */\r\n    ElectricPotentialUnits[ElectricPotentialUnits[\"Microvolts\"] = 1] = \"Microvolts\";\r\n    /** */\r\n    ElectricPotentialUnits[ElectricPotentialUnits[\"Millivolts\"] = 2] = \"Millivolts\";\r\n    /** */\r\n    ElectricPotentialUnits[ElectricPotentialUnits[\"Kilovolts\"] = 3] = \"Kilovolts\";\r\n    /** */\r\n    ElectricPotentialUnits[ElectricPotentialUnits[\"Megavolts\"] = 4] = \"Megavolts\";\r\n})(ElectricPotentialUnits = exports.ElectricPotentialUnits || (exports.ElectricPotentialUnits = {}));\r\n/** In classical electromagnetism, the electric potential (a scalar quantity denoted by Φ, ΦE or V and also called the electric field potential or the electrostatic potential) at a point is the amount of electric potential energy that a unitary point charge would have when located at that point. */\r\nclass ElectricPotential {\r\n    /**\r\n     * Create a new ElectricPotential.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricPotential’ unit to create from.\r\n     * The default unit is Volts\r\n     */\r\n    constructor(value, fromUnit = ElectricPotentialUnits.Volts) {\r\n        this.voltsLazy = null;\r\n        this.microvoltsLazy = null;\r\n        this.millivoltsLazy = null;\r\n        this.kilovoltsLazy = null;\r\n        this.megavoltsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricPotential is Volts.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Volts() {\r\n        if (this.voltsLazy !== null) {\r\n            return this.voltsLazy;\r\n        }\r\n        return this.voltsLazy = this.convertFromBase(ElectricPotentialUnits.Volts);\r\n    }\r\n    /** */\r\n    get Microvolts() {\r\n        if (this.microvoltsLazy !== null) {\r\n            return this.microvoltsLazy;\r\n        }\r\n        return this.microvoltsLazy = this.convertFromBase(ElectricPotentialUnits.Microvolts);\r\n    }\r\n    /** */\r\n    get Millivolts() {\r\n        if (this.millivoltsLazy !== null) {\r\n            return this.millivoltsLazy;\r\n        }\r\n        return this.millivoltsLazy = this.convertFromBase(ElectricPotentialUnits.Millivolts);\r\n    }\r\n    /** */\r\n    get Kilovolts() {\r\n        if (this.kilovoltsLazy !== null) {\r\n            return this.kilovoltsLazy;\r\n        }\r\n        return this.kilovoltsLazy = this.convertFromBase(ElectricPotentialUnits.Kilovolts);\r\n    }\r\n    /** */\r\n    get Megavolts() {\r\n        if (this.megavoltsLazy !== null) {\r\n            return this.megavoltsLazy;\r\n        }\r\n        return this.megavoltsLazy = this.convertFromBase(ElectricPotentialUnits.Megavolts);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotential instance from a Volts\r\n     *\r\n     * @param value The unit as Volts to create a new ElectricPotential from.\r\n     * @returns The new ElectricPotential instance.\r\n     */\r\n    static FromVolts(value) {\r\n        return new ElectricPotential(value, ElectricPotentialUnits.Volts);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotential instance from a Microvolts\r\n     *\r\n     * @param value The unit as Microvolts to create a new ElectricPotential from.\r\n     * @returns The new ElectricPotential instance.\r\n     */\r\n    static FromMicrovolts(value) {\r\n        return new ElectricPotential(value, ElectricPotentialUnits.Microvolts);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotential instance from a Millivolts\r\n     *\r\n     * @param value The unit as Millivolts to create a new ElectricPotential from.\r\n     * @returns The new ElectricPotential instance.\r\n     */\r\n    static FromMillivolts(value) {\r\n        return new ElectricPotential(value, ElectricPotentialUnits.Millivolts);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotential instance from a Kilovolts\r\n     *\r\n     * @param value The unit as Kilovolts to create a new ElectricPotential from.\r\n     * @returns The new ElectricPotential instance.\r\n     */\r\n    static FromKilovolts(value) {\r\n        return new ElectricPotential(value, ElectricPotentialUnits.Kilovolts);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotential instance from a Megavolts\r\n     *\r\n     * @param value The unit as Megavolts to create a new ElectricPotential from.\r\n     * @returns The new ElectricPotential instance.\r\n     */\r\n    static FromMegavolts(value) {\r\n        return new ElectricPotential(value, ElectricPotentialUnits.Megavolts);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialUnits.Volts:\r\n                return this.value;\r\n            case ElectricPotentialUnits.Microvolts:\r\n                return (this.value) / 0.000001;\r\n            case ElectricPotentialUnits.Millivolts:\r\n                return (this.value) / 0.001;\r\n            case ElectricPotentialUnits.Kilovolts:\r\n                return (this.value) / 1000;\r\n            case ElectricPotentialUnits.Megavolts:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricPotentialUnits.Volts:\r\n                return value;\r\n            case ElectricPotentialUnits.Microvolts:\r\n                return (value) * 0.000001;\r\n            case ElectricPotentialUnits.Millivolts:\r\n                return (value) * 0.001;\r\n            case ElectricPotentialUnits.Kilovolts:\r\n                return (value) * 1000;\r\n            case ElectricPotentialUnits.Megavolts:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricPotential to string.\r\n     * Note! the default format for ElectricPotential is Volts.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricPotential.\r\n     * @returns The string format of the ElectricPotential.\r\n     */\r\n    toString(toUnit = ElectricPotentialUnits.Volts) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialUnits.Volts:\r\n                return this.Volts + ` V`;\r\n            case ElectricPotentialUnits.Microvolts:\r\n                return this.Microvolts + ` `;\r\n            case ElectricPotentialUnits.Millivolts:\r\n                return this.Millivolts + ` `;\r\n            case ElectricPotentialUnits.Kilovolts:\r\n                return this.Kilovolts + ` `;\r\n            case ElectricPotentialUnits.Megavolts:\r\n                return this.Megavolts + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricPotential are equals to the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns True if the given ElectricPotential are equal to the current ElectricPotential.\r\n     */\r\n    equals(electricPotential) {\r\n        return this.value === electricPotential.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricPotential against the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns 0 if they are equal, -1 if the current ElectricPotential is less then other, 1 if the current ElectricPotential is greater then other.\r\n     */\r\n    compareTo(electricPotential) {\r\n        if (this.value > electricPotential.BaseValue)\r\n            return 1;\r\n        if (this.value < electricPotential.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricPotential with the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns A new ElectricPotential instance with the results.\r\n     */\r\n    add(electricPotential) {\r\n        return new ElectricPotential(this.value + electricPotential.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricPotential with the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns A new ElectricPotential instance with the results.\r\n     */\r\n    subtract(electricPotential) {\r\n        return new ElectricPotential(this.value - electricPotential.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricPotential with the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns A new ElectricPotential instance with the results.\r\n     */\r\n    multiply(electricPotential) {\r\n        return new ElectricPotential(this.value * electricPotential.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricPotential with the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns A new ElectricPotential instance with the results.\r\n     */\r\n    divide(electricPotential) {\r\n        return new ElectricPotential(this.value / electricPotential.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricPotential with the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns A new ElectricPotential instance with the results.\r\n     */\r\n    modulo(electricPotential) {\r\n        return new ElectricPotential(this.value % electricPotential.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricPotential with the current ElectricPotential.\r\n     * @param electricPotential The other ElectricPotential.\r\n     * @returns A new ElectricPotential instance with the results.\r\n     */\r\n    pow(electricPotential) {\r\n        return new ElectricPotential(this.value ** electricPotential.BaseValue);\r\n    }\r\n}\r\nexports.ElectricPotential = ElectricPotential;\r\n//# sourceMappingURL=electricpotential.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricPotentialAc = exports.ElectricPotentialAcUnits = void 0;\r\n/** ElectricPotentialAcUnits enumeration */\r\nvar ElectricPotentialAcUnits;\r\n(function (ElectricPotentialAcUnits) {\r\n    /** */\r\n    ElectricPotentialAcUnits[ElectricPotentialAcUnits[\"VoltsAc\"] = 0] = \"VoltsAc\";\r\n    /** */\r\n    ElectricPotentialAcUnits[ElectricPotentialAcUnits[\"MicrovoltsAc\"] = 1] = \"MicrovoltsAc\";\r\n    /** */\r\n    ElectricPotentialAcUnits[ElectricPotentialAcUnits[\"MillivoltsAc\"] = 2] = \"MillivoltsAc\";\r\n    /** */\r\n    ElectricPotentialAcUnits[ElectricPotentialAcUnits[\"KilovoltsAc\"] = 3] = \"KilovoltsAc\";\r\n    /** */\r\n    ElectricPotentialAcUnits[ElectricPotentialAcUnits[\"MegavoltsAc\"] = 4] = \"MegavoltsAc\";\r\n})(ElectricPotentialAcUnits = exports.ElectricPotentialAcUnits || (exports.ElectricPotentialAcUnits = {}));\r\n/** The Electric Potential of a system known to use Alternating Current. */\r\nclass ElectricPotentialAc {\r\n    /**\r\n     * Create a new ElectricPotentialAc.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricPotentialAc’ unit to create from.\r\n     * The default unit is VoltsAc\r\n     */\r\n    constructor(value, fromUnit = ElectricPotentialAcUnits.VoltsAc) {\r\n        this.voltsacLazy = null;\r\n        this.microvoltsacLazy = null;\r\n        this.millivoltsacLazy = null;\r\n        this.kilovoltsacLazy = null;\r\n        this.megavoltsacLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricPotentialAc is VoltsAc.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltsAc() {\r\n        if (this.voltsacLazy !== null) {\r\n            return this.voltsacLazy;\r\n        }\r\n        return this.voltsacLazy = this.convertFromBase(ElectricPotentialAcUnits.VoltsAc);\r\n    }\r\n    /** */\r\n    get MicrovoltsAc() {\r\n        if (this.microvoltsacLazy !== null) {\r\n            return this.microvoltsacLazy;\r\n        }\r\n        return this.microvoltsacLazy = this.convertFromBase(ElectricPotentialAcUnits.MicrovoltsAc);\r\n    }\r\n    /** */\r\n    get MillivoltsAc() {\r\n        if (this.millivoltsacLazy !== null) {\r\n            return this.millivoltsacLazy;\r\n        }\r\n        return this.millivoltsacLazy = this.convertFromBase(ElectricPotentialAcUnits.MillivoltsAc);\r\n    }\r\n    /** */\r\n    get KilovoltsAc() {\r\n        if (this.kilovoltsacLazy !== null) {\r\n            return this.kilovoltsacLazy;\r\n        }\r\n        return this.kilovoltsacLazy = this.convertFromBase(ElectricPotentialAcUnits.KilovoltsAc);\r\n    }\r\n    /** */\r\n    get MegavoltsAc() {\r\n        if (this.megavoltsacLazy !== null) {\r\n            return this.megavoltsacLazy;\r\n        }\r\n        return this.megavoltsacLazy = this.convertFromBase(ElectricPotentialAcUnits.MegavoltsAc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialAc instance from a VoltsAc\r\n     *\r\n     * @param value The unit as VoltsAc to create a new ElectricPotentialAc from.\r\n     * @returns The new ElectricPotentialAc instance.\r\n     */\r\n    static FromVoltsAc(value) {\r\n        return new ElectricPotentialAc(value, ElectricPotentialAcUnits.VoltsAc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialAc instance from a MicrovoltsAc\r\n     *\r\n     * @param value The unit as MicrovoltsAc to create a new ElectricPotentialAc from.\r\n     * @returns The new ElectricPotentialAc instance.\r\n     */\r\n    static FromMicrovoltsAc(value) {\r\n        return new ElectricPotentialAc(value, ElectricPotentialAcUnits.MicrovoltsAc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialAc instance from a MillivoltsAc\r\n     *\r\n     * @param value The unit as MillivoltsAc to create a new ElectricPotentialAc from.\r\n     * @returns The new ElectricPotentialAc instance.\r\n     */\r\n    static FromMillivoltsAc(value) {\r\n        return new ElectricPotentialAc(value, ElectricPotentialAcUnits.MillivoltsAc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialAc instance from a KilovoltsAc\r\n     *\r\n     * @param value The unit as KilovoltsAc to create a new ElectricPotentialAc from.\r\n     * @returns The new ElectricPotentialAc instance.\r\n     */\r\n    static FromKilovoltsAc(value) {\r\n        return new ElectricPotentialAc(value, ElectricPotentialAcUnits.KilovoltsAc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialAc instance from a MegavoltsAc\r\n     *\r\n     * @param value The unit as MegavoltsAc to create a new ElectricPotentialAc from.\r\n     * @returns The new ElectricPotentialAc instance.\r\n     */\r\n    static FromMegavoltsAc(value) {\r\n        return new ElectricPotentialAc(value, ElectricPotentialAcUnits.MegavoltsAc);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialAcUnits.VoltsAc:\r\n                return this.value;\r\n            case ElectricPotentialAcUnits.MicrovoltsAc:\r\n                return (this.value) / 0.000001;\r\n            case ElectricPotentialAcUnits.MillivoltsAc:\r\n                return (this.value) / 0.001;\r\n            case ElectricPotentialAcUnits.KilovoltsAc:\r\n                return (this.value) / 1000;\r\n            case ElectricPotentialAcUnits.MegavoltsAc:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricPotentialAcUnits.VoltsAc:\r\n                return value;\r\n            case ElectricPotentialAcUnits.MicrovoltsAc:\r\n                return (value) * 0.000001;\r\n            case ElectricPotentialAcUnits.MillivoltsAc:\r\n                return (value) * 0.001;\r\n            case ElectricPotentialAcUnits.KilovoltsAc:\r\n                return (value) * 1000;\r\n            case ElectricPotentialAcUnits.MegavoltsAc:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricPotentialAc to string.\r\n     * Note! the default format for ElectricPotentialAc is VoltsAc.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricPotentialAc.\r\n     * @returns The string format of the ElectricPotentialAc.\r\n     */\r\n    toString(toUnit = ElectricPotentialAcUnits.VoltsAc) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialAcUnits.VoltsAc:\r\n                return this.VoltsAc + ` Vac`;\r\n            case ElectricPotentialAcUnits.MicrovoltsAc:\r\n                return this.MicrovoltsAc + ` `;\r\n            case ElectricPotentialAcUnits.MillivoltsAc:\r\n                return this.MillivoltsAc + ` `;\r\n            case ElectricPotentialAcUnits.KilovoltsAc:\r\n                return this.KilovoltsAc + ` `;\r\n            case ElectricPotentialAcUnits.MegavoltsAc:\r\n                return this.MegavoltsAc + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricPotentialAc are equals to the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns True if the given ElectricPotentialAc are equal to the current ElectricPotentialAc.\r\n     */\r\n    equals(electricPotentialAc) {\r\n        return this.value === electricPotentialAc.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricPotentialAc against the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns 0 if they are equal, -1 if the current ElectricPotentialAc is less then other, 1 if the current ElectricPotentialAc is greater then other.\r\n     */\r\n    compareTo(electricPotentialAc) {\r\n        if (this.value > electricPotentialAc.BaseValue)\r\n            return 1;\r\n        if (this.value < electricPotentialAc.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricPotentialAc with the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns A new ElectricPotentialAc instance with the results.\r\n     */\r\n    add(electricPotentialAc) {\r\n        return new ElectricPotentialAc(this.value + electricPotentialAc.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricPotentialAc with the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns A new ElectricPotentialAc instance with the results.\r\n     */\r\n    subtract(electricPotentialAc) {\r\n        return new ElectricPotentialAc(this.value - electricPotentialAc.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricPotentialAc with the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns A new ElectricPotentialAc instance with the results.\r\n     */\r\n    multiply(electricPotentialAc) {\r\n        return new ElectricPotentialAc(this.value * electricPotentialAc.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricPotentialAc with the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns A new ElectricPotentialAc instance with the results.\r\n     */\r\n    divide(electricPotentialAc) {\r\n        return new ElectricPotentialAc(this.value / electricPotentialAc.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricPotentialAc with the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns A new ElectricPotentialAc instance with the results.\r\n     */\r\n    modulo(electricPotentialAc) {\r\n        return new ElectricPotentialAc(this.value % electricPotentialAc.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricPotentialAc with the current ElectricPotentialAc.\r\n     * @param electricPotentialAc The other ElectricPotentialAc.\r\n     * @returns A new ElectricPotentialAc instance with the results.\r\n     */\r\n    pow(electricPotentialAc) {\r\n        return new ElectricPotentialAc(this.value ** electricPotentialAc.BaseValue);\r\n    }\r\n}\r\nexports.ElectricPotentialAc = ElectricPotentialAc;\r\n//# sourceMappingURL=electricpotentialac.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricPotentialChangeRate = exports.ElectricPotentialChangeRateUnits = void 0;\r\n/** ElectricPotentialChangeRateUnits enumeration */\r\nvar ElectricPotentialChangeRateUnits;\r\n(function (ElectricPotentialChangeRateUnits) {\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"VoltsPerSeconds\"] = 0] = \"VoltsPerSeconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"VoltsPerMicroseconds\"] = 1] = \"VoltsPerMicroseconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"VoltsPerMinutes\"] = 2] = \"VoltsPerMinutes\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"VoltsPerHours\"] = 3] = \"VoltsPerHours\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MicrovoltsPerSeconds\"] = 4] = \"MicrovoltsPerSeconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MillivoltsPerSeconds\"] = 5] = \"MillivoltsPerSeconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"KilovoltsPerSeconds\"] = 6] = \"KilovoltsPerSeconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MegavoltsPerSeconds\"] = 7] = \"MegavoltsPerSeconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MicrovoltsPerMicroseconds\"] = 8] = \"MicrovoltsPerMicroseconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MillivoltsPerMicroseconds\"] = 9] = \"MillivoltsPerMicroseconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"KilovoltsPerMicroseconds\"] = 10] = \"KilovoltsPerMicroseconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MegavoltsPerMicroseconds\"] = 11] = \"MegavoltsPerMicroseconds\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MicrovoltsPerMinutes\"] = 12] = \"MicrovoltsPerMinutes\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MillivoltsPerMinutes\"] = 13] = \"MillivoltsPerMinutes\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"KilovoltsPerMinutes\"] = 14] = \"KilovoltsPerMinutes\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MegavoltsPerMinutes\"] = 15] = \"MegavoltsPerMinutes\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MicrovoltsPerHours\"] = 16] = \"MicrovoltsPerHours\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MillivoltsPerHours\"] = 17] = \"MillivoltsPerHours\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"KilovoltsPerHours\"] = 18] = \"KilovoltsPerHours\";\r\n    /** */\r\n    ElectricPotentialChangeRateUnits[ElectricPotentialChangeRateUnits[\"MegavoltsPerHours\"] = 19] = \"MegavoltsPerHours\";\r\n})(ElectricPotentialChangeRateUnits = exports.ElectricPotentialChangeRateUnits || (exports.ElectricPotentialChangeRateUnits = {}));\r\n/** ElectricPotential change rate is the ratio of the electric potential change to the time during which the change occurred (value of electric potential changes per unit time). */\r\nclass ElectricPotentialChangeRate {\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricPotentialChangeRate’ unit to create from.\r\n     * The default unit is VoltsPerSeconds\r\n     */\r\n    constructor(value, fromUnit = ElectricPotentialChangeRateUnits.VoltsPerSeconds) {\r\n        this.voltspersecondsLazy = null;\r\n        this.voltspermicrosecondsLazy = null;\r\n        this.voltsperminutesLazy = null;\r\n        this.voltsperhoursLazy = null;\r\n        this.microvoltspersecondsLazy = null;\r\n        this.millivoltspersecondsLazy = null;\r\n        this.kilovoltspersecondsLazy = null;\r\n        this.megavoltspersecondsLazy = null;\r\n        this.microvoltspermicrosecondsLazy = null;\r\n        this.millivoltspermicrosecondsLazy = null;\r\n        this.kilovoltspermicrosecondsLazy = null;\r\n        this.megavoltspermicrosecondsLazy = null;\r\n        this.microvoltsperminutesLazy = null;\r\n        this.millivoltsperminutesLazy = null;\r\n        this.kilovoltsperminutesLazy = null;\r\n        this.megavoltsperminutesLazy = null;\r\n        this.microvoltsperhoursLazy = null;\r\n        this.millivoltsperhoursLazy = null;\r\n        this.kilovoltsperhoursLazy = null;\r\n        this.megavoltsperhoursLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricPotentialChangeRate is VoltsPerSeconds.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltsPerSeconds() {\r\n        if (this.voltspersecondsLazy !== null) {\r\n            return this.voltspersecondsLazy;\r\n        }\r\n        return this.voltspersecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.VoltsPerSeconds);\r\n    }\r\n    /** */\r\n    get VoltsPerMicroseconds() {\r\n        if (this.voltspermicrosecondsLazy !== null) {\r\n            return this.voltspermicrosecondsLazy;\r\n        }\r\n        return this.voltspermicrosecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.VoltsPerMicroseconds);\r\n    }\r\n    /** */\r\n    get VoltsPerMinutes() {\r\n        if (this.voltsperminutesLazy !== null) {\r\n            return this.voltsperminutesLazy;\r\n        }\r\n        return this.voltsperminutesLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.VoltsPerMinutes);\r\n    }\r\n    /** */\r\n    get VoltsPerHours() {\r\n        if (this.voltsperhoursLazy !== null) {\r\n            return this.voltsperhoursLazy;\r\n        }\r\n        return this.voltsperhoursLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.VoltsPerHours);\r\n    }\r\n    /** */\r\n    get MicrovoltsPerSeconds() {\r\n        if (this.microvoltspersecondsLazy !== null) {\r\n            return this.microvoltspersecondsLazy;\r\n        }\r\n        return this.microvoltspersecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MicrovoltsPerSeconds);\r\n    }\r\n    /** */\r\n    get MillivoltsPerSeconds() {\r\n        if (this.millivoltspersecondsLazy !== null) {\r\n            return this.millivoltspersecondsLazy;\r\n        }\r\n        return this.millivoltspersecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MillivoltsPerSeconds);\r\n    }\r\n    /** */\r\n    get KilovoltsPerSeconds() {\r\n        if (this.kilovoltspersecondsLazy !== null) {\r\n            return this.kilovoltspersecondsLazy;\r\n        }\r\n        return this.kilovoltspersecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.KilovoltsPerSeconds);\r\n    }\r\n    /** */\r\n    get MegavoltsPerSeconds() {\r\n        if (this.megavoltspersecondsLazy !== null) {\r\n            return this.megavoltspersecondsLazy;\r\n        }\r\n        return this.megavoltspersecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MegavoltsPerSeconds);\r\n    }\r\n    /** */\r\n    get MicrovoltsPerMicroseconds() {\r\n        if (this.microvoltspermicrosecondsLazy !== null) {\r\n            return this.microvoltspermicrosecondsLazy;\r\n        }\r\n        return this.microvoltspermicrosecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MicrovoltsPerMicroseconds);\r\n    }\r\n    /** */\r\n    get MillivoltsPerMicroseconds() {\r\n        if (this.millivoltspermicrosecondsLazy !== null) {\r\n            return this.millivoltspermicrosecondsLazy;\r\n        }\r\n        return this.millivoltspermicrosecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MillivoltsPerMicroseconds);\r\n    }\r\n    /** */\r\n    get KilovoltsPerMicroseconds() {\r\n        if (this.kilovoltspermicrosecondsLazy !== null) {\r\n            return this.kilovoltspermicrosecondsLazy;\r\n        }\r\n        return this.kilovoltspermicrosecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.KilovoltsPerMicroseconds);\r\n    }\r\n    /** */\r\n    get MegavoltsPerMicroseconds() {\r\n        if (this.megavoltspermicrosecondsLazy !== null) {\r\n            return this.megavoltspermicrosecondsLazy;\r\n        }\r\n        return this.megavoltspermicrosecondsLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MegavoltsPerMicroseconds);\r\n    }\r\n    /** */\r\n    get MicrovoltsPerMinutes() {\r\n        if (this.microvoltsperminutesLazy !== null) {\r\n            return this.microvoltsperminutesLazy;\r\n        }\r\n        return this.microvoltsperminutesLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MicrovoltsPerMinutes);\r\n    }\r\n    /** */\r\n    get MillivoltsPerMinutes() {\r\n        if (this.millivoltsperminutesLazy !== null) {\r\n            return this.millivoltsperminutesLazy;\r\n        }\r\n        return this.millivoltsperminutesLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MillivoltsPerMinutes);\r\n    }\r\n    /** */\r\n    get KilovoltsPerMinutes() {\r\n        if (this.kilovoltsperminutesLazy !== null) {\r\n            return this.kilovoltsperminutesLazy;\r\n        }\r\n        return this.kilovoltsperminutesLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.KilovoltsPerMinutes);\r\n    }\r\n    /** */\r\n    get MegavoltsPerMinutes() {\r\n        if (this.megavoltsperminutesLazy !== null) {\r\n            return this.megavoltsperminutesLazy;\r\n        }\r\n        return this.megavoltsperminutesLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MegavoltsPerMinutes);\r\n    }\r\n    /** */\r\n    get MicrovoltsPerHours() {\r\n        if (this.microvoltsperhoursLazy !== null) {\r\n            return this.microvoltsperhoursLazy;\r\n        }\r\n        return this.microvoltsperhoursLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MicrovoltsPerHours);\r\n    }\r\n    /** */\r\n    get MillivoltsPerHours() {\r\n        if (this.millivoltsperhoursLazy !== null) {\r\n            return this.millivoltsperhoursLazy;\r\n        }\r\n        return this.millivoltsperhoursLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MillivoltsPerHours);\r\n    }\r\n    /** */\r\n    get KilovoltsPerHours() {\r\n        if (this.kilovoltsperhoursLazy !== null) {\r\n            return this.kilovoltsperhoursLazy;\r\n        }\r\n        return this.kilovoltsperhoursLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.KilovoltsPerHours);\r\n    }\r\n    /** */\r\n    get MegavoltsPerHours() {\r\n        if (this.megavoltsperhoursLazy !== null) {\r\n            return this.megavoltsperhoursLazy;\r\n        }\r\n        return this.megavoltsperhoursLazy = this.convertFromBase(ElectricPotentialChangeRateUnits.MegavoltsPerHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a VoltsPerSeconds\r\n     *\r\n     * @param value The unit as VoltsPerSeconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromVoltsPerSeconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.VoltsPerSeconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a VoltsPerMicroseconds\r\n     *\r\n     * @param value The unit as VoltsPerMicroseconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromVoltsPerMicroseconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.VoltsPerMicroseconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a VoltsPerMinutes\r\n     *\r\n     * @param value The unit as VoltsPerMinutes to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromVoltsPerMinutes(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.VoltsPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a VoltsPerHours\r\n     *\r\n     * @param value The unit as VoltsPerHours to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromVoltsPerHours(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.VoltsPerHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MicrovoltsPerSeconds\r\n     *\r\n     * @param value The unit as MicrovoltsPerSeconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMicrovoltsPerSeconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MicrovoltsPerSeconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MillivoltsPerSeconds\r\n     *\r\n     * @param value The unit as MillivoltsPerSeconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMillivoltsPerSeconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MillivoltsPerSeconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a KilovoltsPerSeconds\r\n     *\r\n     * @param value The unit as KilovoltsPerSeconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromKilovoltsPerSeconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.KilovoltsPerSeconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MegavoltsPerSeconds\r\n     *\r\n     * @param value The unit as MegavoltsPerSeconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMegavoltsPerSeconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MegavoltsPerSeconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MicrovoltsPerMicroseconds\r\n     *\r\n     * @param value The unit as MicrovoltsPerMicroseconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMicrovoltsPerMicroseconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MicrovoltsPerMicroseconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MillivoltsPerMicroseconds\r\n     *\r\n     * @param value The unit as MillivoltsPerMicroseconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMillivoltsPerMicroseconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MillivoltsPerMicroseconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a KilovoltsPerMicroseconds\r\n     *\r\n     * @param value The unit as KilovoltsPerMicroseconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromKilovoltsPerMicroseconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.KilovoltsPerMicroseconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MegavoltsPerMicroseconds\r\n     *\r\n     * @param value The unit as MegavoltsPerMicroseconds to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMegavoltsPerMicroseconds(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MegavoltsPerMicroseconds);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MicrovoltsPerMinutes\r\n     *\r\n     * @param value The unit as MicrovoltsPerMinutes to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMicrovoltsPerMinutes(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MicrovoltsPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MillivoltsPerMinutes\r\n     *\r\n     * @param value The unit as MillivoltsPerMinutes to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMillivoltsPerMinutes(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MillivoltsPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a KilovoltsPerMinutes\r\n     *\r\n     * @param value The unit as KilovoltsPerMinutes to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromKilovoltsPerMinutes(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.KilovoltsPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MegavoltsPerMinutes\r\n     *\r\n     * @param value The unit as MegavoltsPerMinutes to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMegavoltsPerMinutes(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MegavoltsPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MicrovoltsPerHours\r\n     *\r\n     * @param value The unit as MicrovoltsPerHours to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMicrovoltsPerHours(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MicrovoltsPerHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MillivoltsPerHours\r\n     *\r\n     * @param value The unit as MillivoltsPerHours to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMillivoltsPerHours(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MillivoltsPerHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a KilovoltsPerHours\r\n     *\r\n     * @param value The unit as KilovoltsPerHours to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromKilovoltsPerHours(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.KilovoltsPerHours);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialChangeRate instance from a MegavoltsPerHours\r\n     *\r\n     * @param value The unit as MegavoltsPerHours to create a new ElectricPotentialChangeRate from.\r\n     * @returns The new ElectricPotentialChangeRate instance.\r\n     */\r\n    static FromMegavoltsPerHours(value) {\r\n        return new ElectricPotentialChangeRate(value, ElectricPotentialChangeRateUnits.MegavoltsPerHours);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialChangeRateUnits.VoltsPerSeconds:\r\n                return this.value;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerMicroseconds:\r\n                return this.value / 1E6;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerMinutes:\r\n                return this.value * 60;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerHours:\r\n                return this.value * 3600;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerSeconds:\r\n                return (this.value) / 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerSeconds:\r\n                return (this.value) / 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerSeconds:\r\n                return (this.value) / 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerSeconds:\r\n                return (this.value) / 1000000;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerMicroseconds:\r\n                return (this.value / 1E6) / 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerMicroseconds:\r\n                return (this.value / 1E6) / 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerMicroseconds:\r\n                return (this.value / 1E6) / 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerMicroseconds:\r\n                return (this.value / 1E6) / 1000000;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerMinutes:\r\n                return (this.value * 60) / 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerMinutes:\r\n                return (this.value * 60) / 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerMinutes:\r\n                return (this.value * 60) / 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerMinutes:\r\n                return (this.value * 60) / 1000000;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerHours:\r\n                return (this.value * 3600) / 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerHours:\r\n                return (this.value * 3600) / 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerHours:\r\n                return (this.value * 3600) / 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerHours:\r\n                return (this.value * 3600) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricPotentialChangeRateUnits.VoltsPerSeconds:\r\n                return value;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerMicroseconds:\r\n                return value * 1E6;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerMinutes:\r\n                return value / 60;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerHours:\r\n                return value / 3600;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerSeconds:\r\n                return (value) * 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerSeconds:\r\n                return (value) * 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerSeconds:\r\n                return (value) * 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerSeconds:\r\n                return (value) * 1000000;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerMicroseconds:\r\n                return (value * 1E6) * 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerMicroseconds:\r\n                return (value * 1E6) * 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerMicroseconds:\r\n                return (value * 1E6) * 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerMicroseconds:\r\n                return (value * 1E6) * 1000000;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerMinutes:\r\n                return (value / 60) * 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerMinutes:\r\n                return (value / 60) * 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerMinutes:\r\n                return (value / 60) * 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerMinutes:\r\n                return (value / 60) * 1000000;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerHours:\r\n                return (value / 3600) * 0.000001;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerHours:\r\n                return (value / 3600) * 0.001;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerHours:\r\n                return (value / 3600) * 1000;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerHours:\r\n                return (value / 3600) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricPotentialChangeRate to string.\r\n     * Note! the default format for ElectricPotentialChangeRate is VoltsPerSeconds.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricPotentialChangeRate.\r\n     * @returns The string format of the ElectricPotentialChangeRate.\r\n     */\r\n    toString(toUnit = ElectricPotentialChangeRateUnits.VoltsPerSeconds) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialChangeRateUnits.VoltsPerSeconds:\r\n                return this.VoltsPerSeconds + ` V/s`;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerMicroseconds:\r\n                return this.VoltsPerMicroseconds + ` V/μs`;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerMinutes:\r\n                return this.VoltsPerMinutes + ` V/min`;\r\n            case ElectricPotentialChangeRateUnits.VoltsPerHours:\r\n                return this.VoltsPerHours + ` V/h`;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerSeconds:\r\n                return this.MicrovoltsPerSeconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerSeconds:\r\n                return this.MillivoltsPerSeconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerSeconds:\r\n                return this.KilovoltsPerSeconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerSeconds:\r\n                return this.MegavoltsPerSeconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerMicroseconds:\r\n                return this.MicrovoltsPerMicroseconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerMicroseconds:\r\n                return this.MillivoltsPerMicroseconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerMicroseconds:\r\n                return this.KilovoltsPerMicroseconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerMicroseconds:\r\n                return this.MegavoltsPerMicroseconds + ` `;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerMinutes:\r\n                return this.MicrovoltsPerMinutes + ` `;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerMinutes:\r\n                return this.MillivoltsPerMinutes + ` `;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerMinutes:\r\n                return this.KilovoltsPerMinutes + ` `;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerMinutes:\r\n                return this.MegavoltsPerMinutes + ` `;\r\n            case ElectricPotentialChangeRateUnits.MicrovoltsPerHours:\r\n                return this.MicrovoltsPerHours + ` `;\r\n            case ElectricPotentialChangeRateUnits.MillivoltsPerHours:\r\n                return this.MillivoltsPerHours + ` `;\r\n            case ElectricPotentialChangeRateUnits.KilovoltsPerHours:\r\n                return this.KilovoltsPerHours + ` `;\r\n            case ElectricPotentialChangeRateUnits.MegavoltsPerHours:\r\n                return this.MegavoltsPerHours + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricPotentialChangeRate are equals to the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns True if the given ElectricPotentialChangeRate are equal to the current ElectricPotentialChangeRate.\r\n     */\r\n    equals(electricPotentialChangeRate) {\r\n        return this.value === electricPotentialChangeRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricPotentialChangeRate against the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns 0 if they are equal, -1 if the current ElectricPotentialChangeRate is less then other, 1 if the current ElectricPotentialChangeRate is greater then other.\r\n     */\r\n    compareTo(electricPotentialChangeRate) {\r\n        if (this.value > electricPotentialChangeRate.BaseValue)\r\n            return 1;\r\n        if (this.value < electricPotentialChangeRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricPotentialChangeRate with the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns A new ElectricPotentialChangeRate instance with the results.\r\n     */\r\n    add(electricPotentialChangeRate) {\r\n        return new ElectricPotentialChangeRate(this.value + electricPotentialChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricPotentialChangeRate with the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns A new ElectricPotentialChangeRate instance with the results.\r\n     */\r\n    subtract(electricPotentialChangeRate) {\r\n        return new ElectricPotentialChangeRate(this.value - electricPotentialChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricPotentialChangeRate with the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns A new ElectricPotentialChangeRate instance with the results.\r\n     */\r\n    multiply(electricPotentialChangeRate) {\r\n        return new ElectricPotentialChangeRate(this.value * electricPotentialChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricPotentialChangeRate with the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns A new ElectricPotentialChangeRate instance with the results.\r\n     */\r\n    divide(electricPotentialChangeRate) {\r\n        return new ElectricPotentialChangeRate(this.value / electricPotentialChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricPotentialChangeRate with the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns A new ElectricPotentialChangeRate instance with the results.\r\n     */\r\n    modulo(electricPotentialChangeRate) {\r\n        return new ElectricPotentialChangeRate(this.value % electricPotentialChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricPotentialChangeRate with the current ElectricPotentialChangeRate.\r\n     * @param electricPotentialChangeRate The other ElectricPotentialChangeRate.\r\n     * @returns A new ElectricPotentialChangeRate instance with the results.\r\n     */\r\n    pow(electricPotentialChangeRate) {\r\n        return new ElectricPotentialChangeRate(this.value ** electricPotentialChangeRate.BaseValue);\r\n    }\r\n}\r\nexports.ElectricPotentialChangeRate = ElectricPotentialChangeRate;\r\n//# sourceMappingURL=electricpotentialchangerate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricPotentialDc = exports.ElectricPotentialDcUnits = void 0;\r\n/** ElectricPotentialDcUnits enumeration */\r\nvar ElectricPotentialDcUnits;\r\n(function (ElectricPotentialDcUnits) {\r\n    /** */\r\n    ElectricPotentialDcUnits[ElectricPotentialDcUnits[\"VoltsDc\"] = 0] = \"VoltsDc\";\r\n    /** */\r\n    ElectricPotentialDcUnits[ElectricPotentialDcUnits[\"MicrovoltsDc\"] = 1] = \"MicrovoltsDc\";\r\n    /** */\r\n    ElectricPotentialDcUnits[ElectricPotentialDcUnits[\"MillivoltsDc\"] = 2] = \"MillivoltsDc\";\r\n    /** */\r\n    ElectricPotentialDcUnits[ElectricPotentialDcUnits[\"KilovoltsDc\"] = 3] = \"KilovoltsDc\";\r\n    /** */\r\n    ElectricPotentialDcUnits[ElectricPotentialDcUnits[\"MegavoltsDc\"] = 4] = \"MegavoltsDc\";\r\n})(ElectricPotentialDcUnits = exports.ElectricPotentialDcUnits || (exports.ElectricPotentialDcUnits = {}));\r\n/** The Electric Potential of a system known to use Direct Current. */\r\nclass ElectricPotentialDc {\r\n    /**\r\n     * Create a new ElectricPotentialDc.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricPotentialDc’ unit to create from.\r\n     * The default unit is VoltsDc\r\n     */\r\n    constructor(value, fromUnit = ElectricPotentialDcUnits.VoltsDc) {\r\n        this.voltsdcLazy = null;\r\n        this.microvoltsdcLazy = null;\r\n        this.millivoltsdcLazy = null;\r\n        this.kilovoltsdcLazy = null;\r\n        this.megavoltsdcLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricPotentialDc is VoltsDc.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltsDc() {\r\n        if (this.voltsdcLazy !== null) {\r\n            return this.voltsdcLazy;\r\n        }\r\n        return this.voltsdcLazy = this.convertFromBase(ElectricPotentialDcUnits.VoltsDc);\r\n    }\r\n    /** */\r\n    get MicrovoltsDc() {\r\n        if (this.microvoltsdcLazy !== null) {\r\n            return this.microvoltsdcLazy;\r\n        }\r\n        return this.microvoltsdcLazy = this.convertFromBase(ElectricPotentialDcUnits.MicrovoltsDc);\r\n    }\r\n    /** */\r\n    get MillivoltsDc() {\r\n        if (this.millivoltsdcLazy !== null) {\r\n            return this.millivoltsdcLazy;\r\n        }\r\n        return this.millivoltsdcLazy = this.convertFromBase(ElectricPotentialDcUnits.MillivoltsDc);\r\n    }\r\n    /** */\r\n    get KilovoltsDc() {\r\n        if (this.kilovoltsdcLazy !== null) {\r\n            return this.kilovoltsdcLazy;\r\n        }\r\n        return this.kilovoltsdcLazy = this.convertFromBase(ElectricPotentialDcUnits.KilovoltsDc);\r\n    }\r\n    /** */\r\n    get MegavoltsDc() {\r\n        if (this.megavoltsdcLazy !== null) {\r\n            return this.megavoltsdcLazy;\r\n        }\r\n        return this.megavoltsdcLazy = this.convertFromBase(ElectricPotentialDcUnits.MegavoltsDc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialDc instance from a VoltsDc\r\n     *\r\n     * @param value The unit as VoltsDc to create a new ElectricPotentialDc from.\r\n     * @returns The new ElectricPotentialDc instance.\r\n     */\r\n    static FromVoltsDc(value) {\r\n        return new ElectricPotentialDc(value, ElectricPotentialDcUnits.VoltsDc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialDc instance from a MicrovoltsDc\r\n     *\r\n     * @param value The unit as MicrovoltsDc to create a new ElectricPotentialDc from.\r\n     * @returns The new ElectricPotentialDc instance.\r\n     */\r\n    static FromMicrovoltsDc(value) {\r\n        return new ElectricPotentialDc(value, ElectricPotentialDcUnits.MicrovoltsDc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialDc instance from a MillivoltsDc\r\n     *\r\n     * @param value The unit as MillivoltsDc to create a new ElectricPotentialDc from.\r\n     * @returns The new ElectricPotentialDc instance.\r\n     */\r\n    static FromMillivoltsDc(value) {\r\n        return new ElectricPotentialDc(value, ElectricPotentialDcUnits.MillivoltsDc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialDc instance from a KilovoltsDc\r\n     *\r\n     * @param value The unit as KilovoltsDc to create a new ElectricPotentialDc from.\r\n     * @returns The new ElectricPotentialDc instance.\r\n     */\r\n    static FromKilovoltsDc(value) {\r\n        return new ElectricPotentialDc(value, ElectricPotentialDcUnits.KilovoltsDc);\r\n    }\r\n    /**\r\n     * Create a new ElectricPotentialDc instance from a MegavoltsDc\r\n     *\r\n     * @param value The unit as MegavoltsDc to create a new ElectricPotentialDc from.\r\n     * @returns The new ElectricPotentialDc instance.\r\n     */\r\n    static FromMegavoltsDc(value) {\r\n        return new ElectricPotentialDc(value, ElectricPotentialDcUnits.MegavoltsDc);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialDcUnits.VoltsDc:\r\n                return this.value;\r\n            case ElectricPotentialDcUnits.MicrovoltsDc:\r\n                return (this.value) / 0.000001;\r\n            case ElectricPotentialDcUnits.MillivoltsDc:\r\n                return (this.value) / 0.001;\r\n            case ElectricPotentialDcUnits.KilovoltsDc:\r\n                return (this.value) / 1000;\r\n            case ElectricPotentialDcUnits.MegavoltsDc:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricPotentialDcUnits.VoltsDc:\r\n                return value;\r\n            case ElectricPotentialDcUnits.MicrovoltsDc:\r\n                return (value) * 0.000001;\r\n            case ElectricPotentialDcUnits.MillivoltsDc:\r\n                return (value) * 0.001;\r\n            case ElectricPotentialDcUnits.KilovoltsDc:\r\n                return (value) * 1000;\r\n            case ElectricPotentialDcUnits.MegavoltsDc:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricPotentialDc to string.\r\n     * Note! the default format for ElectricPotentialDc is VoltsDc.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricPotentialDc.\r\n     * @returns The string format of the ElectricPotentialDc.\r\n     */\r\n    toString(toUnit = ElectricPotentialDcUnits.VoltsDc) {\r\n        switch (toUnit) {\r\n            case ElectricPotentialDcUnits.VoltsDc:\r\n                return this.VoltsDc + ` Vdc`;\r\n            case ElectricPotentialDcUnits.MicrovoltsDc:\r\n                return this.MicrovoltsDc + ` `;\r\n            case ElectricPotentialDcUnits.MillivoltsDc:\r\n                return this.MillivoltsDc + ` `;\r\n            case ElectricPotentialDcUnits.KilovoltsDc:\r\n                return this.KilovoltsDc + ` `;\r\n            case ElectricPotentialDcUnits.MegavoltsDc:\r\n                return this.MegavoltsDc + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricPotentialDc are equals to the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns True if the given ElectricPotentialDc are equal to the current ElectricPotentialDc.\r\n     */\r\n    equals(electricPotentialDc) {\r\n        return this.value === electricPotentialDc.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricPotentialDc against the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns 0 if they are equal, -1 if the current ElectricPotentialDc is less then other, 1 if the current ElectricPotentialDc is greater then other.\r\n     */\r\n    compareTo(electricPotentialDc) {\r\n        if (this.value > electricPotentialDc.BaseValue)\r\n            return 1;\r\n        if (this.value < electricPotentialDc.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricPotentialDc with the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns A new ElectricPotentialDc instance with the results.\r\n     */\r\n    add(electricPotentialDc) {\r\n        return new ElectricPotentialDc(this.value + electricPotentialDc.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricPotentialDc with the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns A new ElectricPotentialDc instance with the results.\r\n     */\r\n    subtract(electricPotentialDc) {\r\n        return new ElectricPotentialDc(this.value - electricPotentialDc.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricPotentialDc with the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns A new ElectricPotentialDc instance with the results.\r\n     */\r\n    multiply(electricPotentialDc) {\r\n        return new ElectricPotentialDc(this.value * electricPotentialDc.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricPotentialDc with the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns A new ElectricPotentialDc instance with the results.\r\n     */\r\n    divide(electricPotentialDc) {\r\n        return new ElectricPotentialDc(this.value / electricPotentialDc.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricPotentialDc with the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns A new ElectricPotentialDc instance with the results.\r\n     */\r\n    modulo(electricPotentialDc) {\r\n        return new ElectricPotentialDc(this.value % electricPotentialDc.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricPotentialDc with the current ElectricPotentialDc.\r\n     * @param electricPotentialDc The other ElectricPotentialDc.\r\n     * @returns A new ElectricPotentialDc instance with the results.\r\n     */\r\n    pow(electricPotentialDc) {\r\n        return new ElectricPotentialDc(this.value ** electricPotentialDc.BaseValue);\r\n    }\r\n}\r\nexports.ElectricPotentialDc = ElectricPotentialDc;\r\n//# sourceMappingURL=electricpotentialdc.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricResistance = exports.ElectricResistanceUnits = void 0;\r\n/** ElectricResistanceUnits enumeration */\r\nvar ElectricResistanceUnits;\r\n(function (ElectricResistanceUnits) {\r\n    /** */\r\n    ElectricResistanceUnits[ElectricResistanceUnits[\"Ohms\"] = 0] = \"Ohms\";\r\n    /** */\r\n    ElectricResistanceUnits[ElectricResistanceUnits[\"Microohms\"] = 1] = \"Microohms\";\r\n    /** */\r\n    ElectricResistanceUnits[ElectricResistanceUnits[\"Milliohms\"] = 2] = \"Milliohms\";\r\n    /** */\r\n    ElectricResistanceUnits[ElectricResistanceUnits[\"Kiloohms\"] = 3] = \"Kiloohms\";\r\n    /** */\r\n    ElectricResistanceUnits[ElectricResistanceUnits[\"Megaohms\"] = 4] = \"Megaohms\";\r\n    /** */\r\n    ElectricResistanceUnits[ElectricResistanceUnits[\"Gigaohms\"] = 5] = \"Gigaohms\";\r\n})(ElectricResistanceUnits = exports.ElectricResistanceUnits || (exports.ElectricResistanceUnits = {}));\r\n/** The electrical resistance of an electrical conductor is the opposition to the passage of an electric current through that conductor. */\r\nclass ElectricResistance {\r\n    /**\r\n     * Create a new ElectricResistance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricResistance’ unit to create from.\r\n     * The default unit is Ohms\r\n     */\r\n    constructor(value, fromUnit = ElectricResistanceUnits.Ohms) {\r\n        this.ohmsLazy = null;\r\n        this.microohmsLazy = null;\r\n        this.milliohmsLazy = null;\r\n        this.kiloohmsLazy = null;\r\n        this.megaohmsLazy = null;\r\n        this.gigaohmsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricResistance is Ohms.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Ohms() {\r\n        if (this.ohmsLazy !== null) {\r\n            return this.ohmsLazy;\r\n        }\r\n        return this.ohmsLazy = this.convertFromBase(ElectricResistanceUnits.Ohms);\r\n    }\r\n    /** */\r\n    get Microohms() {\r\n        if (this.microohmsLazy !== null) {\r\n            return this.microohmsLazy;\r\n        }\r\n        return this.microohmsLazy = this.convertFromBase(ElectricResistanceUnits.Microohms);\r\n    }\r\n    /** */\r\n    get Milliohms() {\r\n        if (this.milliohmsLazy !== null) {\r\n            return this.milliohmsLazy;\r\n        }\r\n        return this.milliohmsLazy = this.convertFromBase(ElectricResistanceUnits.Milliohms);\r\n    }\r\n    /** */\r\n    get Kiloohms() {\r\n        if (this.kiloohmsLazy !== null) {\r\n            return this.kiloohmsLazy;\r\n        }\r\n        return this.kiloohmsLazy = this.convertFromBase(ElectricResistanceUnits.Kiloohms);\r\n    }\r\n    /** */\r\n    get Megaohms() {\r\n        if (this.megaohmsLazy !== null) {\r\n            return this.megaohmsLazy;\r\n        }\r\n        return this.megaohmsLazy = this.convertFromBase(ElectricResistanceUnits.Megaohms);\r\n    }\r\n    /** */\r\n    get Gigaohms() {\r\n        if (this.gigaohmsLazy !== null) {\r\n            return this.gigaohmsLazy;\r\n        }\r\n        return this.gigaohmsLazy = this.convertFromBase(ElectricResistanceUnits.Gigaohms);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistance instance from a Ohms\r\n     *\r\n     * @param value The unit as Ohms to create a new ElectricResistance from.\r\n     * @returns The new ElectricResistance instance.\r\n     */\r\n    static FromOhms(value) {\r\n        return new ElectricResistance(value, ElectricResistanceUnits.Ohms);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistance instance from a Microohms\r\n     *\r\n     * @param value The unit as Microohms to create a new ElectricResistance from.\r\n     * @returns The new ElectricResistance instance.\r\n     */\r\n    static FromMicroohms(value) {\r\n        return new ElectricResistance(value, ElectricResistanceUnits.Microohms);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistance instance from a Milliohms\r\n     *\r\n     * @param value The unit as Milliohms to create a new ElectricResistance from.\r\n     * @returns The new ElectricResistance instance.\r\n     */\r\n    static FromMilliohms(value) {\r\n        return new ElectricResistance(value, ElectricResistanceUnits.Milliohms);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistance instance from a Kiloohms\r\n     *\r\n     * @param value The unit as Kiloohms to create a new ElectricResistance from.\r\n     * @returns The new ElectricResistance instance.\r\n     */\r\n    static FromKiloohms(value) {\r\n        return new ElectricResistance(value, ElectricResistanceUnits.Kiloohms);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistance instance from a Megaohms\r\n     *\r\n     * @param value The unit as Megaohms to create a new ElectricResistance from.\r\n     * @returns The new ElectricResistance instance.\r\n     */\r\n    static FromMegaohms(value) {\r\n        return new ElectricResistance(value, ElectricResistanceUnits.Megaohms);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistance instance from a Gigaohms\r\n     *\r\n     * @param value The unit as Gigaohms to create a new ElectricResistance from.\r\n     * @returns The new ElectricResistance instance.\r\n     */\r\n    static FromGigaohms(value) {\r\n        return new ElectricResistance(value, ElectricResistanceUnits.Gigaohms);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricResistanceUnits.Ohms:\r\n                return this.value;\r\n            case ElectricResistanceUnits.Microohms:\r\n                return (this.value) / 0.000001;\r\n            case ElectricResistanceUnits.Milliohms:\r\n                return (this.value) / 0.001;\r\n            case ElectricResistanceUnits.Kiloohms:\r\n                return (this.value) / 1000;\r\n            case ElectricResistanceUnits.Megaohms:\r\n                return (this.value) / 1000000;\r\n            case ElectricResistanceUnits.Gigaohms:\r\n                return (this.value) / 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricResistanceUnits.Ohms:\r\n                return value;\r\n            case ElectricResistanceUnits.Microohms:\r\n                return (value) * 0.000001;\r\n            case ElectricResistanceUnits.Milliohms:\r\n                return (value) * 0.001;\r\n            case ElectricResistanceUnits.Kiloohms:\r\n                return (value) * 1000;\r\n            case ElectricResistanceUnits.Megaohms:\r\n                return (value) * 1000000;\r\n            case ElectricResistanceUnits.Gigaohms:\r\n                return (value) * 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricResistance to string.\r\n     * Note! the default format for ElectricResistance is Ohms.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricResistance.\r\n     * @returns The string format of the ElectricResistance.\r\n     */\r\n    toString(toUnit = ElectricResistanceUnits.Ohms) {\r\n        switch (toUnit) {\r\n            case ElectricResistanceUnits.Ohms:\r\n                return this.Ohms + ` Ω`;\r\n            case ElectricResistanceUnits.Microohms:\r\n                return this.Microohms + ` `;\r\n            case ElectricResistanceUnits.Milliohms:\r\n                return this.Milliohms + ` `;\r\n            case ElectricResistanceUnits.Kiloohms:\r\n                return this.Kiloohms + ` `;\r\n            case ElectricResistanceUnits.Megaohms:\r\n                return this.Megaohms + ` `;\r\n            case ElectricResistanceUnits.Gigaohms:\r\n                return this.Gigaohms + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricResistance are equals to the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns True if the given ElectricResistance are equal to the current ElectricResistance.\r\n     */\r\n    equals(electricResistance) {\r\n        return this.value === electricResistance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricResistance against the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns 0 if they are equal, -1 if the current ElectricResistance is less then other, 1 if the current ElectricResistance is greater then other.\r\n     */\r\n    compareTo(electricResistance) {\r\n        if (this.value > electricResistance.BaseValue)\r\n            return 1;\r\n        if (this.value < electricResistance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricResistance with the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns A new ElectricResistance instance with the results.\r\n     */\r\n    add(electricResistance) {\r\n        return new ElectricResistance(this.value + electricResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricResistance with the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns A new ElectricResistance instance with the results.\r\n     */\r\n    subtract(electricResistance) {\r\n        return new ElectricResistance(this.value - electricResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricResistance with the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns A new ElectricResistance instance with the results.\r\n     */\r\n    multiply(electricResistance) {\r\n        return new ElectricResistance(this.value * electricResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricResistance with the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns A new ElectricResistance instance with the results.\r\n     */\r\n    divide(electricResistance) {\r\n        return new ElectricResistance(this.value / electricResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricResistance with the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns A new ElectricResistance instance with the results.\r\n     */\r\n    modulo(electricResistance) {\r\n        return new ElectricResistance(this.value % electricResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricResistance with the current ElectricResistance.\r\n     * @param electricResistance The other ElectricResistance.\r\n     * @returns A new ElectricResistance instance with the results.\r\n     */\r\n    pow(electricResistance) {\r\n        return new ElectricResistance(this.value ** electricResistance.BaseValue);\r\n    }\r\n}\r\nexports.ElectricResistance = ElectricResistance;\r\n//# sourceMappingURL=electricresistance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricResistivity = exports.ElectricResistivityUnits = void 0;\r\n/** ElectricResistivityUnits enumeration */\r\nvar ElectricResistivityUnits;\r\n(function (ElectricResistivityUnits) {\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"OhmMeters\"] = 0] = \"OhmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"OhmsCentimeter\"] = 1] = \"OhmsCentimeter\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"PicoohmMeters\"] = 2] = \"PicoohmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"NanoohmMeters\"] = 3] = \"NanoohmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"MicroohmMeters\"] = 4] = \"MicroohmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"MilliohmMeters\"] = 5] = \"MilliohmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"KiloohmMeters\"] = 6] = \"KiloohmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"MegaohmMeters\"] = 7] = \"MegaohmMeters\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"PicoohmsCentimeter\"] = 8] = \"PicoohmsCentimeter\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"NanoohmsCentimeter\"] = 9] = \"NanoohmsCentimeter\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"MicroohmsCentimeter\"] = 10] = \"MicroohmsCentimeter\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"MilliohmsCentimeter\"] = 11] = \"MilliohmsCentimeter\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"KiloohmsCentimeter\"] = 12] = \"KiloohmsCentimeter\";\r\n    /** */\r\n    ElectricResistivityUnits[ElectricResistivityUnits[\"MegaohmsCentimeter\"] = 13] = \"MegaohmsCentimeter\";\r\n})(ElectricResistivityUnits = exports.ElectricResistivityUnits || (exports.ElectricResistivityUnits = {}));\r\n/** Electrical resistivity (also known as resistivity, specific electrical resistance, or volume resistivity) is a fundamental property that quantifies how strongly a given material opposes the flow of electric current. */\r\nclass ElectricResistivity {\r\n    /**\r\n     * Create a new ElectricResistivity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricResistivity’ unit to create from.\r\n     * The default unit is OhmMeters\r\n     */\r\n    constructor(value, fromUnit = ElectricResistivityUnits.OhmMeters) {\r\n        this.ohmmetersLazy = null;\r\n        this.ohmscentimeterLazy = null;\r\n        this.picoohmmetersLazy = null;\r\n        this.nanoohmmetersLazy = null;\r\n        this.microohmmetersLazy = null;\r\n        this.milliohmmetersLazy = null;\r\n        this.kiloohmmetersLazy = null;\r\n        this.megaohmmetersLazy = null;\r\n        this.picoohmscentimeterLazy = null;\r\n        this.nanoohmscentimeterLazy = null;\r\n        this.microohmscentimeterLazy = null;\r\n        this.milliohmscentimeterLazy = null;\r\n        this.kiloohmscentimeterLazy = null;\r\n        this.megaohmscentimeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricResistivity is OhmMeters.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get OhmMeters() {\r\n        if (this.ohmmetersLazy !== null) {\r\n            return this.ohmmetersLazy;\r\n        }\r\n        return this.ohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.OhmMeters);\r\n    }\r\n    /** */\r\n    get OhmsCentimeter() {\r\n        if (this.ohmscentimeterLazy !== null) {\r\n            return this.ohmscentimeterLazy;\r\n        }\r\n        return this.ohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.OhmsCentimeter);\r\n    }\r\n    /** */\r\n    get PicoohmMeters() {\r\n        if (this.picoohmmetersLazy !== null) {\r\n            return this.picoohmmetersLazy;\r\n        }\r\n        return this.picoohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.PicoohmMeters);\r\n    }\r\n    /** */\r\n    get NanoohmMeters() {\r\n        if (this.nanoohmmetersLazy !== null) {\r\n            return this.nanoohmmetersLazy;\r\n        }\r\n        return this.nanoohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.NanoohmMeters);\r\n    }\r\n    /** */\r\n    get MicroohmMeters() {\r\n        if (this.microohmmetersLazy !== null) {\r\n            return this.microohmmetersLazy;\r\n        }\r\n        return this.microohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.MicroohmMeters);\r\n    }\r\n    /** */\r\n    get MilliohmMeters() {\r\n        if (this.milliohmmetersLazy !== null) {\r\n            return this.milliohmmetersLazy;\r\n        }\r\n        return this.milliohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.MilliohmMeters);\r\n    }\r\n    /** */\r\n    get KiloohmMeters() {\r\n        if (this.kiloohmmetersLazy !== null) {\r\n            return this.kiloohmmetersLazy;\r\n        }\r\n        return this.kiloohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.KiloohmMeters);\r\n    }\r\n    /** */\r\n    get MegaohmMeters() {\r\n        if (this.megaohmmetersLazy !== null) {\r\n            return this.megaohmmetersLazy;\r\n        }\r\n        return this.megaohmmetersLazy = this.convertFromBase(ElectricResistivityUnits.MegaohmMeters);\r\n    }\r\n    /** */\r\n    get PicoohmsCentimeter() {\r\n        if (this.picoohmscentimeterLazy !== null) {\r\n            return this.picoohmscentimeterLazy;\r\n        }\r\n        return this.picoohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.PicoohmsCentimeter);\r\n    }\r\n    /** */\r\n    get NanoohmsCentimeter() {\r\n        if (this.nanoohmscentimeterLazy !== null) {\r\n            return this.nanoohmscentimeterLazy;\r\n        }\r\n        return this.nanoohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.NanoohmsCentimeter);\r\n    }\r\n    /** */\r\n    get MicroohmsCentimeter() {\r\n        if (this.microohmscentimeterLazy !== null) {\r\n            return this.microohmscentimeterLazy;\r\n        }\r\n        return this.microohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.MicroohmsCentimeter);\r\n    }\r\n    /** */\r\n    get MilliohmsCentimeter() {\r\n        if (this.milliohmscentimeterLazy !== null) {\r\n            return this.milliohmscentimeterLazy;\r\n        }\r\n        return this.milliohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.MilliohmsCentimeter);\r\n    }\r\n    /** */\r\n    get KiloohmsCentimeter() {\r\n        if (this.kiloohmscentimeterLazy !== null) {\r\n            return this.kiloohmscentimeterLazy;\r\n        }\r\n        return this.kiloohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.KiloohmsCentimeter);\r\n    }\r\n    /** */\r\n    get MegaohmsCentimeter() {\r\n        if (this.megaohmscentimeterLazy !== null) {\r\n            return this.megaohmscentimeterLazy;\r\n        }\r\n        return this.megaohmscentimeterLazy = this.convertFromBase(ElectricResistivityUnits.MegaohmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a OhmMeters\r\n     *\r\n     * @param value The unit as OhmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromOhmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.OhmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a OhmsCentimeter\r\n     *\r\n     * @param value The unit as OhmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromOhmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.OhmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a PicoohmMeters\r\n     *\r\n     * @param value The unit as PicoohmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromPicoohmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.PicoohmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a NanoohmMeters\r\n     *\r\n     * @param value The unit as NanoohmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromNanoohmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.NanoohmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a MicroohmMeters\r\n     *\r\n     * @param value The unit as MicroohmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromMicroohmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.MicroohmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a MilliohmMeters\r\n     *\r\n     * @param value The unit as MilliohmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromMilliohmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.MilliohmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a KiloohmMeters\r\n     *\r\n     * @param value The unit as KiloohmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromKiloohmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.KiloohmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a MegaohmMeters\r\n     *\r\n     * @param value The unit as MegaohmMeters to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromMegaohmMeters(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.MegaohmMeters);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a PicoohmsCentimeter\r\n     *\r\n     * @param value The unit as PicoohmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromPicoohmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.PicoohmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a NanoohmsCentimeter\r\n     *\r\n     * @param value The unit as NanoohmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromNanoohmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.NanoohmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a MicroohmsCentimeter\r\n     *\r\n     * @param value The unit as MicroohmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromMicroohmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.MicroohmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a MilliohmsCentimeter\r\n     *\r\n     * @param value The unit as MilliohmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromMilliohmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.MilliohmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a KiloohmsCentimeter\r\n     *\r\n     * @param value The unit as KiloohmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromKiloohmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.KiloohmsCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricResistivity instance from a MegaohmsCentimeter\r\n     *\r\n     * @param value The unit as MegaohmsCentimeter to create a new ElectricResistivity from.\r\n     * @returns The new ElectricResistivity instance.\r\n     */\r\n    static FromMegaohmsCentimeter(value) {\r\n        return new ElectricResistivity(value, ElectricResistivityUnits.MegaohmsCentimeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricResistivityUnits.OhmMeters:\r\n                return this.value;\r\n            case ElectricResistivityUnits.OhmsCentimeter:\r\n                return this.value * 100;\r\n            case ElectricResistivityUnits.PicoohmMeters:\r\n                return (this.value) / 1e-12;\r\n            case ElectricResistivityUnits.NanoohmMeters:\r\n                return (this.value) / 1e-9;\r\n            case ElectricResistivityUnits.MicroohmMeters:\r\n                return (this.value) / 0.000001;\r\n            case ElectricResistivityUnits.MilliohmMeters:\r\n                return (this.value) / 0.001;\r\n            case ElectricResistivityUnits.KiloohmMeters:\r\n                return (this.value) / 1000;\r\n            case ElectricResistivityUnits.MegaohmMeters:\r\n                return (this.value) / 1000000;\r\n            case ElectricResistivityUnits.PicoohmsCentimeter:\r\n                return (this.value * 100) / 1e-12;\r\n            case ElectricResistivityUnits.NanoohmsCentimeter:\r\n                return (this.value * 100) / 1e-9;\r\n            case ElectricResistivityUnits.MicroohmsCentimeter:\r\n                return (this.value * 100) / 0.000001;\r\n            case ElectricResistivityUnits.MilliohmsCentimeter:\r\n                return (this.value * 100) / 0.001;\r\n            case ElectricResistivityUnits.KiloohmsCentimeter:\r\n                return (this.value * 100) / 1000;\r\n            case ElectricResistivityUnits.MegaohmsCentimeter:\r\n                return (this.value * 100) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricResistivityUnits.OhmMeters:\r\n                return value;\r\n            case ElectricResistivityUnits.OhmsCentimeter:\r\n                return value / 100;\r\n            case ElectricResistivityUnits.PicoohmMeters:\r\n                return (value) * 1e-12;\r\n            case ElectricResistivityUnits.NanoohmMeters:\r\n                return (value) * 1e-9;\r\n            case ElectricResistivityUnits.MicroohmMeters:\r\n                return (value) * 0.000001;\r\n            case ElectricResistivityUnits.MilliohmMeters:\r\n                return (value) * 0.001;\r\n            case ElectricResistivityUnits.KiloohmMeters:\r\n                return (value) * 1000;\r\n            case ElectricResistivityUnits.MegaohmMeters:\r\n                return (value) * 1000000;\r\n            case ElectricResistivityUnits.PicoohmsCentimeter:\r\n                return (value / 100) * 1e-12;\r\n            case ElectricResistivityUnits.NanoohmsCentimeter:\r\n                return (value / 100) * 1e-9;\r\n            case ElectricResistivityUnits.MicroohmsCentimeter:\r\n                return (value / 100) * 0.000001;\r\n            case ElectricResistivityUnits.MilliohmsCentimeter:\r\n                return (value / 100) * 0.001;\r\n            case ElectricResistivityUnits.KiloohmsCentimeter:\r\n                return (value / 100) * 1000;\r\n            case ElectricResistivityUnits.MegaohmsCentimeter:\r\n                return (value / 100) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricResistivity to string.\r\n     * Note! the default format for ElectricResistivity is OhmMeters.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricResistivity.\r\n     * @returns The string format of the ElectricResistivity.\r\n     */\r\n    toString(toUnit = ElectricResistivityUnits.OhmMeters) {\r\n        switch (toUnit) {\r\n            case ElectricResistivityUnits.OhmMeters:\r\n                return this.OhmMeters + ` Ω·m`;\r\n            case ElectricResistivityUnits.OhmsCentimeter:\r\n                return this.OhmsCentimeter + ` Ω·cm`;\r\n            case ElectricResistivityUnits.PicoohmMeters:\r\n                return this.PicoohmMeters + ` `;\r\n            case ElectricResistivityUnits.NanoohmMeters:\r\n                return this.NanoohmMeters + ` `;\r\n            case ElectricResistivityUnits.MicroohmMeters:\r\n                return this.MicroohmMeters + ` `;\r\n            case ElectricResistivityUnits.MilliohmMeters:\r\n                return this.MilliohmMeters + ` `;\r\n            case ElectricResistivityUnits.KiloohmMeters:\r\n                return this.KiloohmMeters + ` `;\r\n            case ElectricResistivityUnits.MegaohmMeters:\r\n                return this.MegaohmMeters + ` `;\r\n            case ElectricResistivityUnits.PicoohmsCentimeter:\r\n                return this.PicoohmsCentimeter + ` `;\r\n            case ElectricResistivityUnits.NanoohmsCentimeter:\r\n                return this.NanoohmsCentimeter + ` `;\r\n            case ElectricResistivityUnits.MicroohmsCentimeter:\r\n                return this.MicroohmsCentimeter + ` `;\r\n            case ElectricResistivityUnits.MilliohmsCentimeter:\r\n                return this.MilliohmsCentimeter + ` `;\r\n            case ElectricResistivityUnits.KiloohmsCentimeter:\r\n                return this.KiloohmsCentimeter + ` `;\r\n            case ElectricResistivityUnits.MegaohmsCentimeter:\r\n                return this.MegaohmsCentimeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricResistivity are equals to the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns True if the given ElectricResistivity are equal to the current ElectricResistivity.\r\n     */\r\n    equals(electricResistivity) {\r\n        return this.value === electricResistivity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricResistivity against the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns 0 if they are equal, -1 if the current ElectricResistivity is less then other, 1 if the current ElectricResistivity is greater then other.\r\n     */\r\n    compareTo(electricResistivity) {\r\n        if (this.value > electricResistivity.BaseValue)\r\n            return 1;\r\n        if (this.value < electricResistivity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricResistivity with the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns A new ElectricResistivity instance with the results.\r\n     */\r\n    add(electricResistivity) {\r\n        return new ElectricResistivity(this.value + electricResistivity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricResistivity with the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns A new ElectricResistivity instance with the results.\r\n     */\r\n    subtract(electricResistivity) {\r\n        return new ElectricResistivity(this.value - electricResistivity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricResistivity with the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns A new ElectricResistivity instance with the results.\r\n     */\r\n    multiply(electricResistivity) {\r\n        return new ElectricResistivity(this.value * electricResistivity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricResistivity with the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns A new ElectricResistivity instance with the results.\r\n     */\r\n    divide(electricResistivity) {\r\n        return new ElectricResistivity(this.value / electricResistivity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricResistivity with the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns A new ElectricResistivity instance with the results.\r\n     */\r\n    modulo(electricResistivity) {\r\n        return new ElectricResistivity(this.value % electricResistivity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricResistivity with the current ElectricResistivity.\r\n     * @param electricResistivity The other ElectricResistivity.\r\n     * @returns A new ElectricResistivity instance with the results.\r\n     */\r\n    pow(electricResistivity) {\r\n        return new ElectricResistivity(this.value ** electricResistivity.BaseValue);\r\n    }\r\n}\r\nexports.ElectricResistivity = ElectricResistivity;\r\n//# sourceMappingURL=electricresistivity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElectricSurfaceChargeDensity = exports.ElectricSurfaceChargeDensityUnits = void 0;\r\n/** ElectricSurfaceChargeDensityUnits enumeration */\r\nvar ElectricSurfaceChargeDensityUnits;\r\n(function (ElectricSurfaceChargeDensityUnits) {\r\n    /** */\r\n    ElectricSurfaceChargeDensityUnits[ElectricSurfaceChargeDensityUnits[\"CoulombsPerSquareMeter\"] = 0] = \"CoulombsPerSquareMeter\";\r\n    /** */\r\n    ElectricSurfaceChargeDensityUnits[ElectricSurfaceChargeDensityUnits[\"CoulombsPerSquareCentimeter\"] = 1] = \"CoulombsPerSquareCentimeter\";\r\n    /** */\r\n    ElectricSurfaceChargeDensityUnits[ElectricSurfaceChargeDensityUnits[\"CoulombsPerSquareInch\"] = 2] = \"CoulombsPerSquareInch\";\r\n})(ElectricSurfaceChargeDensityUnits = exports.ElectricSurfaceChargeDensityUnits || (exports.ElectricSurfaceChargeDensityUnits = {}));\r\n/** In electromagnetism, surface charge density is a measure of the amount of electric charge per surface area. */\r\nclass ElectricSurfaceChargeDensity {\r\n    /**\r\n     * Create a new ElectricSurfaceChargeDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ElectricSurfaceChargeDensity’ unit to create from.\r\n     * The default unit is CoulombsPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter) {\r\n        this.coulombspersquaremeterLazy = null;\r\n        this.coulombspersquarecentimeterLazy = null;\r\n        this.coulombspersquareinchLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ElectricSurfaceChargeDensity is CoulombsPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get CoulombsPerSquareMeter() {\r\n        if (this.coulombspersquaremeterLazy !== null) {\r\n            return this.coulombspersquaremeterLazy;\r\n        }\r\n        return this.coulombspersquaremeterLazy = this.convertFromBase(ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get CoulombsPerSquareCentimeter() {\r\n        if (this.coulombspersquarecentimeterLazy !== null) {\r\n            return this.coulombspersquarecentimeterLazy;\r\n        }\r\n        return this.coulombspersquarecentimeterLazy = this.convertFromBase(ElectricSurfaceChargeDensityUnits.CoulombsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get CoulombsPerSquareInch() {\r\n        if (this.coulombspersquareinchLazy !== null) {\r\n            return this.coulombspersquareinchLazy;\r\n        }\r\n        return this.coulombspersquareinchLazy = this.convertFromBase(ElectricSurfaceChargeDensityUnits.CoulombsPerSquareInch);\r\n    }\r\n    /**\r\n     * Create a new ElectricSurfaceChargeDensity instance from a CoulombsPerSquareMeter\r\n     *\r\n     * @param value The unit as CoulombsPerSquareMeter to create a new ElectricSurfaceChargeDensity from.\r\n     * @returns The new ElectricSurfaceChargeDensity instance.\r\n     */\r\n    static FromCoulombsPerSquareMeter(value) {\r\n        return new ElectricSurfaceChargeDensity(value, ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricSurfaceChargeDensity instance from a CoulombsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as CoulombsPerSquareCentimeter to create a new ElectricSurfaceChargeDensity from.\r\n     * @returns The new ElectricSurfaceChargeDensity instance.\r\n     */\r\n    static FromCoulombsPerSquareCentimeter(value) {\r\n        return new ElectricSurfaceChargeDensity(value, ElectricSurfaceChargeDensityUnits.CoulombsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ElectricSurfaceChargeDensity instance from a CoulombsPerSquareInch\r\n     *\r\n     * @param value The unit as CoulombsPerSquareInch to create a new ElectricSurfaceChargeDensity from.\r\n     * @returns The new ElectricSurfaceChargeDensity instance.\r\n     */\r\n    static FromCoulombsPerSquareInch(value) {\r\n        return new ElectricSurfaceChargeDensity(value, ElectricSurfaceChargeDensityUnits.CoulombsPerSquareInch);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter:\r\n                return this.value;\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareCentimeter:\r\n                return this.value / 1.0e4;\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareInch:\r\n                return this.value / 1.5500031000062000e3;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter:\r\n                return value;\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareCentimeter:\r\n                return value * 1.0e4;\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareInch:\r\n                return value * 1.5500031000062000e3;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ElectricSurfaceChargeDensity to string.\r\n     * Note! the default format for ElectricSurfaceChargeDensity is CoulombsPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ElectricSurfaceChargeDensity.\r\n     * @returns The string format of the ElectricSurfaceChargeDensity.\r\n     */\r\n    toString(toUnit = ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareMeter:\r\n                return this.CoulombsPerSquareMeter + ` C/m²`;\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareCentimeter:\r\n                return this.CoulombsPerSquareCentimeter + ` C/cm²`;\r\n            case ElectricSurfaceChargeDensityUnits.CoulombsPerSquareInch:\r\n                return this.CoulombsPerSquareInch + ` C/in²`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ElectricSurfaceChargeDensity are equals to the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns True if the given ElectricSurfaceChargeDensity are equal to the current ElectricSurfaceChargeDensity.\r\n     */\r\n    equals(electricSurfaceChargeDensity) {\r\n        return this.value === electricSurfaceChargeDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ElectricSurfaceChargeDensity against the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns 0 if they are equal, -1 if the current ElectricSurfaceChargeDensity is less then other, 1 if the current ElectricSurfaceChargeDensity is greater then other.\r\n     */\r\n    compareTo(electricSurfaceChargeDensity) {\r\n        if (this.value > electricSurfaceChargeDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < electricSurfaceChargeDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ElectricSurfaceChargeDensity with the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns A new ElectricSurfaceChargeDensity instance with the results.\r\n     */\r\n    add(electricSurfaceChargeDensity) {\r\n        return new ElectricSurfaceChargeDensity(this.value + electricSurfaceChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ElectricSurfaceChargeDensity with the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns A new ElectricSurfaceChargeDensity instance with the results.\r\n     */\r\n    subtract(electricSurfaceChargeDensity) {\r\n        return new ElectricSurfaceChargeDensity(this.value - electricSurfaceChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ElectricSurfaceChargeDensity with the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns A new ElectricSurfaceChargeDensity instance with the results.\r\n     */\r\n    multiply(electricSurfaceChargeDensity) {\r\n        return new ElectricSurfaceChargeDensity(this.value * electricSurfaceChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ElectricSurfaceChargeDensity with the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns A new ElectricSurfaceChargeDensity instance with the results.\r\n     */\r\n    divide(electricSurfaceChargeDensity) {\r\n        return new ElectricSurfaceChargeDensity(this.value / electricSurfaceChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ElectricSurfaceChargeDensity with the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns A new ElectricSurfaceChargeDensity instance with the results.\r\n     */\r\n    modulo(electricSurfaceChargeDensity) {\r\n        return new ElectricSurfaceChargeDensity(this.value % electricSurfaceChargeDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ElectricSurfaceChargeDensity with the current ElectricSurfaceChargeDensity.\r\n     * @param electricSurfaceChargeDensity The other ElectricSurfaceChargeDensity.\r\n     * @returns A new ElectricSurfaceChargeDensity instance with the results.\r\n     */\r\n    pow(electricSurfaceChargeDensity) {\r\n        return new ElectricSurfaceChargeDensity(this.value ** electricSurfaceChargeDensity.BaseValue);\r\n    }\r\n}\r\nexports.ElectricSurfaceChargeDensity = ElectricSurfaceChargeDensity;\r\n//# sourceMappingURL=electricsurfacechargedensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Energy = exports.EnergyUnits = void 0;\r\n/** EnergyUnits enumeration */\r\nvar EnergyUnits;\r\n(function (EnergyUnits) {\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Joules\"] = 0] = \"Joules\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Calories\"] = 1] = \"Calories\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"BritishThermalUnits\"] = 2] = \"BritishThermalUnits\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"ElectronVolts\"] = 3] = \"ElectronVolts\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"FootPounds\"] = 4] = \"FootPounds\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Ergs\"] = 5] = \"Ergs\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"WattHours\"] = 6] = \"WattHours\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"WattDays\"] = 7] = \"WattDays\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"ThermsEc\"] = 8] = \"ThermsEc\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"ThermsUs\"] = 9] = \"ThermsUs\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"ThermsImperial\"] = 10] = \"ThermsImperial\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"HorsepowerHours\"] = 11] = \"HorsepowerHours\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Millijoules\"] = 12] = \"Millijoules\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Kilojoules\"] = 13] = \"Kilojoules\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Megajoules\"] = 14] = \"Megajoules\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Gigajoules\"] = 15] = \"Gigajoules\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Kilocalories\"] = 16] = \"Kilocalories\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"Megacalories\"] = 17] = \"Megacalories\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"KilobritishThermalUnits\"] = 18] = \"KilobritishThermalUnits\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"MegabritishThermalUnits\"] = 19] = \"MegabritishThermalUnits\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"GigabritishThermalUnits\"] = 20] = \"GigabritishThermalUnits\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"KiloelectronVolts\"] = 21] = \"KiloelectronVolts\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"MegaelectronVolts\"] = 22] = \"MegaelectronVolts\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"GigaelectronVolts\"] = 23] = \"GigaelectronVolts\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"TeraelectronVolts\"] = 24] = \"TeraelectronVolts\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"KilowattHours\"] = 25] = \"KilowattHours\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"MegawattHours\"] = 26] = \"MegawattHours\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"GigawattHours\"] = 27] = \"GigawattHours\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"TerawattHours\"] = 28] = \"TerawattHours\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"KilowattDays\"] = 29] = \"KilowattDays\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"MegawattDays\"] = 30] = \"MegawattDays\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"GigawattDays\"] = 31] = \"GigawattDays\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"TerawattDays\"] = 32] = \"TerawattDays\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"DecathermsEc\"] = 33] = \"DecathermsEc\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"DecathermsUs\"] = 34] = \"DecathermsUs\";\r\n    /** */\r\n    EnergyUnits[EnergyUnits[\"DecathermsImperial\"] = 35] = \"DecathermsImperial\";\r\n})(EnergyUnits = exports.EnergyUnits || (exports.EnergyUnits = {}));\r\n/** The joule, symbol J, is a derived unit of energy, work, or amount of heat in the International System of Units. It is equal to the energy transferred (or work done) when applying a force of one newton through a distance of one metre (1 newton metre or N·m), or in passing an electric current of one ampere through a resistance of one ohm for one second. Many other units of energy are included. Please do not confuse this definition of the calorie with the one colloquially used by the food industry, the large calorie, which is equivalent to 1 kcal. Thermochemical definition of the calorie is used. For BTU, the IT definition is used. */\r\nclass Energy {\r\n    /**\r\n     * Create a new Energy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Energy’ unit to create from.\r\n     * The default unit is Joules\r\n     */\r\n    constructor(value, fromUnit = EnergyUnits.Joules) {\r\n        this.joulesLazy = null;\r\n        this.caloriesLazy = null;\r\n        this.britishthermalunitsLazy = null;\r\n        this.electronvoltsLazy = null;\r\n        this.footpoundsLazy = null;\r\n        this.ergsLazy = null;\r\n        this.watthoursLazy = null;\r\n        this.wattdaysLazy = null;\r\n        this.thermsecLazy = null;\r\n        this.thermsusLazy = null;\r\n        this.thermsimperialLazy = null;\r\n        this.horsepowerhoursLazy = null;\r\n        this.millijoulesLazy = null;\r\n        this.kilojoulesLazy = null;\r\n        this.megajoulesLazy = null;\r\n        this.gigajoulesLazy = null;\r\n        this.kilocaloriesLazy = null;\r\n        this.megacaloriesLazy = null;\r\n        this.kilobritishthermalunitsLazy = null;\r\n        this.megabritishthermalunitsLazy = null;\r\n        this.gigabritishthermalunitsLazy = null;\r\n        this.kiloelectronvoltsLazy = null;\r\n        this.megaelectronvoltsLazy = null;\r\n        this.gigaelectronvoltsLazy = null;\r\n        this.teraelectronvoltsLazy = null;\r\n        this.kilowatthoursLazy = null;\r\n        this.megawatthoursLazy = null;\r\n        this.gigawatthoursLazy = null;\r\n        this.terawatthoursLazy = null;\r\n        this.kilowattdaysLazy = null;\r\n        this.megawattdaysLazy = null;\r\n        this.gigawattdaysLazy = null;\r\n        this.terawattdaysLazy = null;\r\n        this.decathermsecLazy = null;\r\n        this.decathermsusLazy = null;\r\n        this.decathermsimperialLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Energy is Joules.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Joules() {\r\n        if (this.joulesLazy !== null) {\r\n            return this.joulesLazy;\r\n        }\r\n        return this.joulesLazy = this.convertFromBase(EnergyUnits.Joules);\r\n    }\r\n    /** */\r\n    get Calories() {\r\n        if (this.caloriesLazy !== null) {\r\n            return this.caloriesLazy;\r\n        }\r\n        return this.caloriesLazy = this.convertFromBase(EnergyUnits.Calories);\r\n    }\r\n    /** */\r\n    get BritishThermalUnits() {\r\n        if (this.britishthermalunitsLazy !== null) {\r\n            return this.britishthermalunitsLazy;\r\n        }\r\n        return this.britishthermalunitsLazy = this.convertFromBase(EnergyUnits.BritishThermalUnits);\r\n    }\r\n    /** */\r\n    get ElectronVolts() {\r\n        if (this.electronvoltsLazy !== null) {\r\n            return this.electronvoltsLazy;\r\n        }\r\n        return this.electronvoltsLazy = this.convertFromBase(EnergyUnits.ElectronVolts);\r\n    }\r\n    /** */\r\n    get FootPounds() {\r\n        if (this.footpoundsLazy !== null) {\r\n            return this.footpoundsLazy;\r\n        }\r\n        return this.footpoundsLazy = this.convertFromBase(EnergyUnits.FootPounds);\r\n    }\r\n    /** */\r\n    get Ergs() {\r\n        if (this.ergsLazy !== null) {\r\n            return this.ergsLazy;\r\n        }\r\n        return this.ergsLazy = this.convertFromBase(EnergyUnits.Ergs);\r\n    }\r\n    /** */\r\n    get WattHours() {\r\n        if (this.watthoursLazy !== null) {\r\n            return this.watthoursLazy;\r\n        }\r\n        return this.watthoursLazy = this.convertFromBase(EnergyUnits.WattHours);\r\n    }\r\n    /** */\r\n    get WattDays() {\r\n        if (this.wattdaysLazy !== null) {\r\n            return this.wattdaysLazy;\r\n        }\r\n        return this.wattdaysLazy = this.convertFromBase(EnergyUnits.WattDays);\r\n    }\r\n    /** */\r\n    get ThermsEc() {\r\n        if (this.thermsecLazy !== null) {\r\n            return this.thermsecLazy;\r\n        }\r\n        return this.thermsecLazy = this.convertFromBase(EnergyUnits.ThermsEc);\r\n    }\r\n    /** */\r\n    get ThermsUs() {\r\n        if (this.thermsusLazy !== null) {\r\n            return this.thermsusLazy;\r\n        }\r\n        return this.thermsusLazy = this.convertFromBase(EnergyUnits.ThermsUs);\r\n    }\r\n    /** */\r\n    get ThermsImperial() {\r\n        if (this.thermsimperialLazy !== null) {\r\n            return this.thermsimperialLazy;\r\n        }\r\n        return this.thermsimperialLazy = this.convertFromBase(EnergyUnits.ThermsImperial);\r\n    }\r\n    /** */\r\n    get HorsepowerHours() {\r\n        if (this.horsepowerhoursLazy !== null) {\r\n            return this.horsepowerhoursLazy;\r\n        }\r\n        return this.horsepowerhoursLazy = this.convertFromBase(EnergyUnits.HorsepowerHours);\r\n    }\r\n    /** */\r\n    get Millijoules() {\r\n        if (this.millijoulesLazy !== null) {\r\n            return this.millijoulesLazy;\r\n        }\r\n        return this.millijoulesLazy = this.convertFromBase(EnergyUnits.Millijoules);\r\n    }\r\n    /** */\r\n    get Kilojoules() {\r\n        if (this.kilojoulesLazy !== null) {\r\n            return this.kilojoulesLazy;\r\n        }\r\n        return this.kilojoulesLazy = this.convertFromBase(EnergyUnits.Kilojoules);\r\n    }\r\n    /** */\r\n    get Megajoules() {\r\n        if (this.megajoulesLazy !== null) {\r\n            return this.megajoulesLazy;\r\n        }\r\n        return this.megajoulesLazy = this.convertFromBase(EnergyUnits.Megajoules);\r\n    }\r\n    /** */\r\n    get Gigajoules() {\r\n        if (this.gigajoulesLazy !== null) {\r\n            return this.gigajoulesLazy;\r\n        }\r\n        return this.gigajoulesLazy = this.convertFromBase(EnergyUnits.Gigajoules);\r\n    }\r\n    /** */\r\n    get Kilocalories() {\r\n        if (this.kilocaloriesLazy !== null) {\r\n            return this.kilocaloriesLazy;\r\n        }\r\n        return this.kilocaloriesLazy = this.convertFromBase(EnergyUnits.Kilocalories);\r\n    }\r\n    /** */\r\n    get Megacalories() {\r\n        if (this.megacaloriesLazy !== null) {\r\n            return this.megacaloriesLazy;\r\n        }\r\n        return this.megacaloriesLazy = this.convertFromBase(EnergyUnits.Megacalories);\r\n    }\r\n    /** */\r\n    get KilobritishThermalUnits() {\r\n        if (this.kilobritishthermalunitsLazy !== null) {\r\n            return this.kilobritishthermalunitsLazy;\r\n        }\r\n        return this.kilobritishthermalunitsLazy = this.convertFromBase(EnergyUnits.KilobritishThermalUnits);\r\n    }\r\n    /** */\r\n    get MegabritishThermalUnits() {\r\n        if (this.megabritishthermalunitsLazy !== null) {\r\n            return this.megabritishthermalunitsLazy;\r\n        }\r\n        return this.megabritishthermalunitsLazy = this.convertFromBase(EnergyUnits.MegabritishThermalUnits);\r\n    }\r\n    /** */\r\n    get GigabritishThermalUnits() {\r\n        if (this.gigabritishthermalunitsLazy !== null) {\r\n            return this.gigabritishthermalunitsLazy;\r\n        }\r\n        return this.gigabritishthermalunitsLazy = this.convertFromBase(EnergyUnits.GigabritishThermalUnits);\r\n    }\r\n    /** */\r\n    get KiloelectronVolts() {\r\n        if (this.kiloelectronvoltsLazy !== null) {\r\n            return this.kiloelectronvoltsLazy;\r\n        }\r\n        return this.kiloelectronvoltsLazy = this.convertFromBase(EnergyUnits.KiloelectronVolts);\r\n    }\r\n    /** */\r\n    get MegaelectronVolts() {\r\n        if (this.megaelectronvoltsLazy !== null) {\r\n            return this.megaelectronvoltsLazy;\r\n        }\r\n        return this.megaelectronvoltsLazy = this.convertFromBase(EnergyUnits.MegaelectronVolts);\r\n    }\r\n    /** */\r\n    get GigaelectronVolts() {\r\n        if (this.gigaelectronvoltsLazy !== null) {\r\n            return this.gigaelectronvoltsLazy;\r\n        }\r\n        return this.gigaelectronvoltsLazy = this.convertFromBase(EnergyUnits.GigaelectronVolts);\r\n    }\r\n    /** */\r\n    get TeraelectronVolts() {\r\n        if (this.teraelectronvoltsLazy !== null) {\r\n            return this.teraelectronvoltsLazy;\r\n        }\r\n        return this.teraelectronvoltsLazy = this.convertFromBase(EnergyUnits.TeraelectronVolts);\r\n    }\r\n    /** */\r\n    get KilowattHours() {\r\n        if (this.kilowatthoursLazy !== null) {\r\n            return this.kilowatthoursLazy;\r\n        }\r\n        return this.kilowatthoursLazy = this.convertFromBase(EnergyUnits.KilowattHours);\r\n    }\r\n    /** */\r\n    get MegawattHours() {\r\n        if (this.megawatthoursLazy !== null) {\r\n            return this.megawatthoursLazy;\r\n        }\r\n        return this.megawatthoursLazy = this.convertFromBase(EnergyUnits.MegawattHours);\r\n    }\r\n    /** */\r\n    get GigawattHours() {\r\n        if (this.gigawatthoursLazy !== null) {\r\n            return this.gigawatthoursLazy;\r\n        }\r\n        return this.gigawatthoursLazy = this.convertFromBase(EnergyUnits.GigawattHours);\r\n    }\r\n    /** */\r\n    get TerawattHours() {\r\n        if (this.terawatthoursLazy !== null) {\r\n            return this.terawatthoursLazy;\r\n        }\r\n        return this.terawatthoursLazy = this.convertFromBase(EnergyUnits.TerawattHours);\r\n    }\r\n    /** */\r\n    get KilowattDays() {\r\n        if (this.kilowattdaysLazy !== null) {\r\n            return this.kilowattdaysLazy;\r\n        }\r\n        return this.kilowattdaysLazy = this.convertFromBase(EnergyUnits.KilowattDays);\r\n    }\r\n    /** */\r\n    get MegawattDays() {\r\n        if (this.megawattdaysLazy !== null) {\r\n            return this.megawattdaysLazy;\r\n        }\r\n        return this.megawattdaysLazy = this.convertFromBase(EnergyUnits.MegawattDays);\r\n    }\r\n    /** */\r\n    get GigawattDays() {\r\n        if (this.gigawattdaysLazy !== null) {\r\n            return this.gigawattdaysLazy;\r\n        }\r\n        return this.gigawattdaysLazy = this.convertFromBase(EnergyUnits.GigawattDays);\r\n    }\r\n    /** */\r\n    get TerawattDays() {\r\n        if (this.terawattdaysLazy !== null) {\r\n            return this.terawattdaysLazy;\r\n        }\r\n        return this.terawattdaysLazy = this.convertFromBase(EnergyUnits.TerawattDays);\r\n    }\r\n    /** */\r\n    get DecathermsEc() {\r\n        if (this.decathermsecLazy !== null) {\r\n            return this.decathermsecLazy;\r\n        }\r\n        return this.decathermsecLazy = this.convertFromBase(EnergyUnits.DecathermsEc);\r\n    }\r\n    /** */\r\n    get DecathermsUs() {\r\n        if (this.decathermsusLazy !== null) {\r\n            return this.decathermsusLazy;\r\n        }\r\n        return this.decathermsusLazy = this.convertFromBase(EnergyUnits.DecathermsUs);\r\n    }\r\n    /** */\r\n    get DecathermsImperial() {\r\n        if (this.decathermsimperialLazy !== null) {\r\n            return this.decathermsimperialLazy;\r\n        }\r\n        return this.decathermsimperialLazy = this.convertFromBase(EnergyUnits.DecathermsImperial);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Joules\r\n     *\r\n     * @param value The unit as Joules to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromJoules(value) {\r\n        return new Energy(value, EnergyUnits.Joules);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Calories\r\n     *\r\n     * @param value The unit as Calories to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromCalories(value) {\r\n        return new Energy(value, EnergyUnits.Calories);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a BritishThermalUnits\r\n     *\r\n     * @param value The unit as BritishThermalUnits to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromBritishThermalUnits(value) {\r\n        return new Energy(value, EnergyUnits.BritishThermalUnits);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a ElectronVolts\r\n     *\r\n     * @param value The unit as ElectronVolts to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromElectronVolts(value) {\r\n        return new Energy(value, EnergyUnits.ElectronVolts);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a FootPounds\r\n     *\r\n     * @param value The unit as FootPounds to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromFootPounds(value) {\r\n        return new Energy(value, EnergyUnits.FootPounds);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Ergs\r\n     *\r\n     * @param value The unit as Ergs to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromErgs(value) {\r\n        return new Energy(value, EnergyUnits.Ergs);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a WattHours\r\n     *\r\n     * @param value The unit as WattHours to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromWattHours(value) {\r\n        return new Energy(value, EnergyUnits.WattHours);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a WattDays\r\n     *\r\n     * @param value The unit as WattDays to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromWattDays(value) {\r\n        return new Energy(value, EnergyUnits.WattDays);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a ThermsEc\r\n     *\r\n     * @param value The unit as ThermsEc to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromThermsEc(value) {\r\n        return new Energy(value, EnergyUnits.ThermsEc);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a ThermsUs\r\n     *\r\n     * @param value The unit as ThermsUs to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromThermsUs(value) {\r\n        return new Energy(value, EnergyUnits.ThermsUs);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a ThermsImperial\r\n     *\r\n     * @param value The unit as ThermsImperial to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromThermsImperial(value) {\r\n        return new Energy(value, EnergyUnits.ThermsImperial);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a HorsepowerHours\r\n     *\r\n     * @param value The unit as HorsepowerHours to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromHorsepowerHours(value) {\r\n        return new Energy(value, EnergyUnits.HorsepowerHours);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Millijoules\r\n     *\r\n     * @param value The unit as Millijoules to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMillijoules(value) {\r\n        return new Energy(value, EnergyUnits.Millijoules);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Kilojoules\r\n     *\r\n     * @param value The unit as Kilojoules to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromKilojoules(value) {\r\n        return new Energy(value, EnergyUnits.Kilojoules);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Megajoules\r\n     *\r\n     * @param value The unit as Megajoules to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMegajoules(value) {\r\n        return new Energy(value, EnergyUnits.Megajoules);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Gigajoules\r\n     *\r\n     * @param value The unit as Gigajoules to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromGigajoules(value) {\r\n        return new Energy(value, EnergyUnits.Gigajoules);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Kilocalories\r\n     *\r\n     * @param value The unit as Kilocalories to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromKilocalories(value) {\r\n        return new Energy(value, EnergyUnits.Kilocalories);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a Megacalories\r\n     *\r\n     * @param value The unit as Megacalories to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMegacalories(value) {\r\n        return new Energy(value, EnergyUnits.Megacalories);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a KilobritishThermalUnits\r\n     *\r\n     * @param value The unit as KilobritishThermalUnits to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromKilobritishThermalUnits(value) {\r\n        return new Energy(value, EnergyUnits.KilobritishThermalUnits);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a MegabritishThermalUnits\r\n     *\r\n     * @param value The unit as MegabritishThermalUnits to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMegabritishThermalUnits(value) {\r\n        return new Energy(value, EnergyUnits.MegabritishThermalUnits);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a GigabritishThermalUnits\r\n     *\r\n     * @param value The unit as GigabritishThermalUnits to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromGigabritishThermalUnits(value) {\r\n        return new Energy(value, EnergyUnits.GigabritishThermalUnits);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a KiloelectronVolts\r\n     *\r\n     * @param value The unit as KiloelectronVolts to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromKiloelectronVolts(value) {\r\n        return new Energy(value, EnergyUnits.KiloelectronVolts);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a MegaelectronVolts\r\n     *\r\n     * @param value The unit as MegaelectronVolts to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMegaelectronVolts(value) {\r\n        return new Energy(value, EnergyUnits.MegaelectronVolts);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a GigaelectronVolts\r\n     *\r\n     * @param value The unit as GigaelectronVolts to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromGigaelectronVolts(value) {\r\n        return new Energy(value, EnergyUnits.GigaelectronVolts);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a TeraelectronVolts\r\n     *\r\n     * @param value The unit as TeraelectronVolts to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromTeraelectronVolts(value) {\r\n        return new Energy(value, EnergyUnits.TeraelectronVolts);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a KilowattHours\r\n     *\r\n     * @param value The unit as KilowattHours to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromKilowattHours(value) {\r\n        return new Energy(value, EnergyUnits.KilowattHours);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a MegawattHours\r\n     *\r\n     * @param value The unit as MegawattHours to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMegawattHours(value) {\r\n        return new Energy(value, EnergyUnits.MegawattHours);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a GigawattHours\r\n     *\r\n     * @param value The unit as GigawattHours to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromGigawattHours(value) {\r\n        return new Energy(value, EnergyUnits.GigawattHours);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a TerawattHours\r\n     *\r\n     * @param value The unit as TerawattHours to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromTerawattHours(value) {\r\n        return new Energy(value, EnergyUnits.TerawattHours);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a KilowattDays\r\n     *\r\n     * @param value The unit as KilowattDays to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromKilowattDays(value) {\r\n        return new Energy(value, EnergyUnits.KilowattDays);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a MegawattDays\r\n     *\r\n     * @param value The unit as MegawattDays to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromMegawattDays(value) {\r\n        return new Energy(value, EnergyUnits.MegawattDays);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a GigawattDays\r\n     *\r\n     * @param value The unit as GigawattDays to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromGigawattDays(value) {\r\n        return new Energy(value, EnergyUnits.GigawattDays);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a TerawattDays\r\n     *\r\n     * @param value The unit as TerawattDays to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromTerawattDays(value) {\r\n        return new Energy(value, EnergyUnits.TerawattDays);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a DecathermsEc\r\n     *\r\n     * @param value The unit as DecathermsEc to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromDecathermsEc(value) {\r\n        return new Energy(value, EnergyUnits.DecathermsEc);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a DecathermsUs\r\n     *\r\n     * @param value The unit as DecathermsUs to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromDecathermsUs(value) {\r\n        return new Energy(value, EnergyUnits.DecathermsUs);\r\n    }\r\n    /**\r\n     * Create a new Energy instance from a DecathermsImperial\r\n     *\r\n     * @param value The unit as DecathermsImperial to create a new Energy from.\r\n     * @returns The new Energy instance.\r\n     */\r\n    static FromDecathermsImperial(value) {\r\n        return new Energy(value, EnergyUnits.DecathermsImperial);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case EnergyUnits.Joules:\r\n                return this.value;\r\n            case EnergyUnits.Calories:\r\n                return this.value / 4.184;\r\n            case EnergyUnits.BritishThermalUnits:\r\n                return this.value / 1055.05585262;\r\n            case EnergyUnits.ElectronVolts:\r\n                return this.value / 1.602176565e-19;\r\n            case EnergyUnits.FootPounds:\r\n                return this.value / 1.355817948;\r\n            case EnergyUnits.Ergs:\r\n                return this.value / 1e-7;\r\n            case EnergyUnits.WattHours:\r\n                return this.value / 3600;\r\n            case EnergyUnits.WattDays:\r\n                return this.value / (24 * 3600);\r\n            case EnergyUnits.ThermsEc:\r\n                return this.value / 1.05505585262e8;\r\n            case EnergyUnits.ThermsUs:\r\n                return this.value / 1.054804e8;\r\n            case EnergyUnits.ThermsImperial:\r\n                return this.value / 1.05505585257348e8;\r\n            case EnergyUnits.HorsepowerHours:\r\n                return this.value / 2.6845195377e6;\r\n            case EnergyUnits.Millijoules:\r\n                return (this.value) / 0.001;\r\n            case EnergyUnits.Kilojoules:\r\n                return (this.value) / 1000;\r\n            case EnergyUnits.Megajoules:\r\n                return (this.value) / 1000000;\r\n            case EnergyUnits.Gigajoules:\r\n                return (this.value) / 1000000000;\r\n            case EnergyUnits.Kilocalories:\r\n                return (this.value / 4.184) / 1000;\r\n            case EnergyUnits.Megacalories:\r\n                return (this.value / 4.184) / 1000000;\r\n            case EnergyUnits.KilobritishThermalUnits:\r\n                return (this.value / 1055.05585262) / 1000;\r\n            case EnergyUnits.MegabritishThermalUnits:\r\n                return (this.value / 1055.05585262) / 1000000;\r\n            case EnergyUnits.GigabritishThermalUnits:\r\n                return (this.value / 1055.05585262) / 1000000000;\r\n            case EnergyUnits.KiloelectronVolts:\r\n                return (this.value / 1.602176565e-19) / 1000;\r\n            case EnergyUnits.MegaelectronVolts:\r\n                return (this.value / 1.602176565e-19) / 1000000;\r\n            case EnergyUnits.GigaelectronVolts:\r\n                return (this.value / 1.602176565e-19) / 1000000000;\r\n            case EnergyUnits.TeraelectronVolts:\r\n                return (this.value / 1.602176565e-19) / 1000000000000;\r\n            case EnergyUnits.KilowattHours:\r\n                return (this.value / 3600) / 1000;\r\n            case EnergyUnits.MegawattHours:\r\n                return (this.value / 3600) / 1000000;\r\n            case EnergyUnits.GigawattHours:\r\n                return (this.value / 3600) / 1000000000;\r\n            case EnergyUnits.TerawattHours:\r\n                return (this.value / 3600) / 1000000000000;\r\n            case EnergyUnits.KilowattDays:\r\n                return (this.value / (24 * 3600)) / 1000;\r\n            case EnergyUnits.MegawattDays:\r\n                return (this.value / (24 * 3600)) / 1000000;\r\n            case EnergyUnits.GigawattDays:\r\n                return (this.value / (24 * 3600)) / 1000000000;\r\n            case EnergyUnits.TerawattDays:\r\n                return (this.value / (24 * 3600)) / 1000000000000;\r\n            case EnergyUnits.DecathermsEc:\r\n                return (this.value / 1.05505585262e8) / 10;\r\n            case EnergyUnits.DecathermsUs:\r\n                return (this.value / 1.054804e8) / 10;\r\n            case EnergyUnits.DecathermsImperial:\r\n                return (this.value / 1.05505585257348e8) / 10;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case EnergyUnits.Joules:\r\n                return value;\r\n            case EnergyUnits.Calories:\r\n                return value * 4.184;\r\n            case EnergyUnits.BritishThermalUnits:\r\n                return value * 1055.05585262;\r\n            case EnergyUnits.ElectronVolts:\r\n                return value * 1.602176565e-19;\r\n            case EnergyUnits.FootPounds:\r\n                return value * 1.355817948;\r\n            case EnergyUnits.Ergs:\r\n                return value * 1e-7;\r\n            case EnergyUnits.WattHours:\r\n                return value * 3600;\r\n            case EnergyUnits.WattDays:\r\n                return value * 24 * 3600;\r\n            case EnergyUnits.ThermsEc:\r\n                return value * 1.05505585262e8;\r\n            case EnergyUnits.ThermsUs:\r\n                return value * 1.054804e8;\r\n            case EnergyUnits.ThermsImperial:\r\n                return value * 1.05505585257348e8;\r\n            case EnergyUnits.HorsepowerHours:\r\n                return value * 2.6845195377e6;\r\n            case EnergyUnits.Millijoules:\r\n                return (value) * 0.001;\r\n            case EnergyUnits.Kilojoules:\r\n                return (value) * 1000;\r\n            case EnergyUnits.Megajoules:\r\n                return (value) * 1000000;\r\n            case EnergyUnits.Gigajoules:\r\n                return (value) * 1000000000;\r\n            case EnergyUnits.Kilocalories:\r\n                return (value * 4.184) * 1000;\r\n            case EnergyUnits.Megacalories:\r\n                return (value * 4.184) * 1000000;\r\n            case EnergyUnits.KilobritishThermalUnits:\r\n                return (value * 1055.05585262) * 1000;\r\n            case EnergyUnits.MegabritishThermalUnits:\r\n                return (value * 1055.05585262) * 1000000;\r\n            case EnergyUnits.GigabritishThermalUnits:\r\n                return (value * 1055.05585262) * 1000000000;\r\n            case EnergyUnits.KiloelectronVolts:\r\n                return (value * 1.602176565e-19) * 1000;\r\n            case EnergyUnits.MegaelectronVolts:\r\n                return (value * 1.602176565e-19) * 1000000;\r\n            case EnergyUnits.GigaelectronVolts:\r\n                return (value * 1.602176565e-19) * 1000000000;\r\n            case EnergyUnits.TeraelectronVolts:\r\n                return (value * 1.602176565e-19) * 1000000000000;\r\n            case EnergyUnits.KilowattHours:\r\n                return (value * 3600) * 1000;\r\n            case EnergyUnits.MegawattHours:\r\n                return (value * 3600) * 1000000;\r\n            case EnergyUnits.GigawattHours:\r\n                return (value * 3600) * 1000000000;\r\n            case EnergyUnits.TerawattHours:\r\n                return (value * 3600) * 1000000000000;\r\n            case EnergyUnits.KilowattDays:\r\n                return (value * 24 * 3600) * 1000;\r\n            case EnergyUnits.MegawattDays:\r\n                return (value * 24 * 3600) * 1000000;\r\n            case EnergyUnits.GigawattDays:\r\n                return (value * 24 * 3600) * 1000000000;\r\n            case EnergyUnits.TerawattDays:\r\n                return (value * 24 * 3600) * 1000000000000;\r\n            case EnergyUnits.DecathermsEc:\r\n                return (value * 1.05505585262e8) * 10;\r\n            case EnergyUnits.DecathermsUs:\r\n                return (value * 1.054804e8) * 10;\r\n            case EnergyUnits.DecathermsImperial:\r\n                return (value * 1.05505585257348e8) * 10;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Energy to string.\r\n     * Note! the default format for Energy is Joules.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Energy.\r\n     * @returns The string format of the Energy.\r\n     */\r\n    toString(toUnit = EnergyUnits.Joules) {\r\n        switch (toUnit) {\r\n            case EnergyUnits.Joules:\r\n                return this.Joules + ` J`;\r\n            case EnergyUnits.Calories:\r\n                return this.Calories + ` cal`;\r\n            case EnergyUnits.BritishThermalUnits:\r\n                return this.BritishThermalUnits + ` BTU`;\r\n            case EnergyUnits.ElectronVolts:\r\n                return this.ElectronVolts + ` eV`;\r\n            case EnergyUnits.FootPounds:\r\n                return this.FootPounds + ` ft·lb`;\r\n            case EnergyUnits.Ergs:\r\n                return this.Ergs + ` erg`;\r\n            case EnergyUnits.WattHours:\r\n                return this.WattHours + ` Wh`;\r\n            case EnergyUnits.WattDays:\r\n                return this.WattDays + ` Wd`;\r\n            case EnergyUnits.ThermsEc:\r\n                return this.ThermsEc + ` th (E.C.)`;\r\n            case EnergyUnits.ThermsUs:\r\n                return this.ThermsUs + ` th (U.S.)`;\r\n            case EnergyUnits.ThermsImperial:\r\n                return this.ThermsImperial + ` th (imp.)`;\r\n            case EnergyUnits.HorsepowerHours:\r\n                return this.HorsepowerHours + ` hp·h`;\r\n            case EnergyUnits.Millijoules:\r\n                return this.Millijoules + ` `;\r\n            case EnergyUnits.Kilojoules:\r\n                return this.Kilojoules + ` `;\r\n            case EnergyUnits.Megajoules:\r\n                return this.Megajoules + ` `;\r\n            case EnergyUnits.Gigajoules:\r\n                return this.Gigajoules + ` `;\r\n            case EnergyUnits.Kilocalories:\r\n                return this.Kilocalories + ` `;\r\n            case EnergyUnits.Megacalories:\r\n                return this.Megacalories + ` `;\r\n            case EnergyUnits.KilobritishThermalUnits:\r\n                return this.KilobritishThermalUnits + ` `;\r\n            case EnergyUnits.MegabritishThermalUnits:\r\n                return this.MegabritishThermalUnits + ` `;\r\n            case EnergyUnits.GigabritishThermalUnits:\r\n                return this.GigabritishThermalUnits + ` `;\r\n            case EnergyUnits.KiloelectronVolts:\r\n                return this.KiloelectronVolts + ` `;\r\n            case EnergyUnits.MegaelectronVolts:\r\n                return this.MegaelectronVolts + ` `;\r\n            case EnergyUnits.GigaelectronVolts:\r\n                return this.GigaelectronVolts + ` `;\r\n            case EnergyUnits.TeraelectronVolts:\r\n                return this.TeraelectronVolts + ` `;\r\n            case EnergyUnits.KilowattHours:\r\n                return this.KilowattHours + ` `;\r\n            case EnergyUnits.MegawattHours:\r\n                return this.MegawattHours + ` `;\r\n            case EnergyUnits.GigawattHours:\r\n                return this.GigawattHours + ` `;\r\n            case EnergyUnits.TerawattHours:\r\n                return this.TerawattHours + ` `;\r\n            case EnergyUnits.KilowattDays:\r\n                return this.KilowattDays + ` `;\r\n            case EnergyUnits.MegawattDays:\r\n                return this.MegawattDays + ` `;\r\n            case EnergyUnits.GigawattDays:\r\n                return this.GigawattDays + ` `;\r\n            case EnergyUnits.TerawattDays:\r\n                return this.TerawattDays + ` `;\r\n            case EnergyUnits.DecathermsEc:\r\n                return this.DecathermsEc + ` `;\r\n            case EnergyUnits.DecathermsUs:\r\n                return this.DecathermsUs + ` `;\r\n            case EnergyUnits.DecathermsImperial:\r\n                return this.DecathermsImperial + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Energy are equals to the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns True if the given Energy are equal to the current Energy.\r\n     */\r\n    equals(energy) {\r\n        return this.value === energy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Energy against the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns 0 if they are equal, -1 if the current Energy is less then other, 1 if the current Energy is greater then other.\r\n     */\r\n    compareTo(energy) {\r\n        if (this.value > energy.BaseValue)\r\n            return 1;\r\n        if (this.value < energy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Energy with the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns A new Energy instance with the results.\r\n     */\r\n    add(energy) {\r\n        return new Energy(this.value + energy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Energy with the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns A new Energy instance with the results.\r\n     */\r\n    subtract(energy) {\r\n        return new Energy(this.value - energy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Energy with the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns A new Energy instance with the results.\r\n     */\r\n    multiply(energy) {\r\n        return new Energy(this.value * energy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Energy with the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns A new Energy instance with the results.\r\n     */\r\n    divide(energy) {\r\n        return new Energy(this.value / energy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Energy with the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns A new Energy instance with the results.\r\n     */\r\n    modulo(energy) {\r\n        return new Energy(this.value % energy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Energy with the current Energy.\r\n     * @param energy The other Energy.\r\n     * @returns A new Energy instance with the results.\r\n     */\r\n    pow(energy) {\r\n        return new Energy(this.value ** energy.BaseValue);\r\n    }\r\n}\r\nexports.Energy = Energy;\r\n//# sourceMappingURL=energy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Entropy = exports.EntropyUnits = void 0;\r\n/** EntropyUnits enumeration */\r\nvar EntropyUnits;\r\n(function (EntropyUnits) {\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"JoulesPerKelvin\"] = 0] = \"JoulesPerKelvin\";\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"CaloriesPerKelvin\"] = 1] = \"CaloriesPerKelvin\";\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"JoulesPerDegreeCelsius\"] = 2] = \"JoulesPerDegreeCelsius\";\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"KilojoulesPerKelvin\"] = 3] = \"KilojoulesPerKelvin\";\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"MegajoulesPerKelvin\"] = 4] = \"MegajoulesPerKelvin\";\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"KilocaloriesPerKelvin\"] = 5] = \"KilocaloriesPerKelvin\";\r\n    /** */\r\n    EntropyUnits[EntropyUnits[\"KilojoulesPerDegreeCelsius\"] = 6] = \"KilojoulesPerDegreeCelsius\";\r\n})(EntropyUnits = exports.EntropyUnits || (exports.EntropyUnits = {}));\r\n/** Entropy is an important concept in the branch of science known as thermodynamics. The idea of \"irreversibility\" is central to the understanding of entropy.  It is often said that entropy is an expression of the disorder, or randomness of a system, or of our lack of information about it. Entropy is an extensive property. It has the dimension of energy divided by temperature, which has a unit of joules per kelvin (J/K) in the International System of Units */\r\nclass Entropy {\r\n    /**\r\n     * Create a new Entropy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Entropy’ unit to create from.\r\n     * The default unit is JoulesPerKelvin\r\n     */\r\n    constructor(value, fromUnit = EntropyUnits.JoulesPerKelvin) {\r\n        this.joulesperkelvinLazy = null;\r\n        this.caloriesperkelvinLazy = null;\r\n        this.joulesperdegreecelsiusLazy = null;\r\n        this.kilojoulesperkelvinLazy = null;\r\n        this.megajoulesperkelvinLazy = null;\r\n        this.kilocaloriesperkelvinLazy = null;\r\n        this.kilojoulesperdegreecelsiusLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Entropy is JoulesPerKelvin.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get JoulesPerKelvin() {\r\n        if (this.joulesperkelvinLazy !== null) {\r\n            return this.joulesperkelvinLazy;\r\n        }\r\n        return this.joulesperkelvinLazy = this.convertFromBase(EntropyUnits.JoulesPerKelvin);\r\n    }\r\n    /** */\r\n    get CaloriesPerKelvin() {\r\n        if (this.caloriesperkelvinLazy !== null) {\r\n            return this.caloriesperkelvinLazy;\r\n        }\r\n        return this.caloriesperkelvinLazy = this.convertFromBase(EntropyUnits.CaloriesPerKelvin);\r\n    }\r\n    /** */\r\n    get JoulesPerDegreeCelsius() {\r\n        if (this.joulesperdegreecelsiusLazy !== null) {\r\n            return this.joulesperdegreecelsiusLazy;\r\n        }\r\n        return this.joulesperdegreecelsiusLazy = this.convertFromBase(EntropyUnits.JoulesPerDegreeCelsius);\r\n    }\r\n    /** */\r\n    get KilojoulesPerKelvin() {\r\n        if (this.kilojoulesperkelvinLazy !== null) {\r\n            return this.kilojoulesperkelvinLazy;\r\n        }\r\n        return this.kilojoulesperkelvinLazy = this.convertFromBase(EntropyUnits.KilojoulesPerKelvin);\r\n    }\r\n    /** */\r\n    get MegajoulesPerKelvin() {\r\n        if (this.megajoulesperkelvinLazy !== null) {\r\n            return this.megajoulesperkelvinLazy;\r\n        }\r\n        return this.megajoulesperkelvinLazy = this.convertFromBase(EntropyUnits.MegajoulesPerKelvin);\r\n    }\r\n    /** */\r\n    get KilocaloriesPerKelvin() {\r\n        if (this.kilocaloriesperkelvinLazy !== null) {\r\n            return this.kilocaloriesperkelvinLazy;\r\n        }\r\n        return this.kilocaloriesperkelvinLazy = this.convertFromBase(EntropyUnits.KilocaloriesPerKelvin);\r\n    }\r\n    /** */\r\n    get KilojoulesPerDegreeCelsius() {\r\n        if (this.kilojoulesperdegreecelsiusLazy !== null) {\r\n            return this.kilojoulesperdegreecelsiusLazy;\r\n        }\r\n        return this.kilojoulesperdegreecelsiusLazy = this.convertFromBase(EntropyUnits.KilojoulesPerDegreeCelsius);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a JoulesPerKelvin\r\n     *\r\n     * @param value The unit as JoulesPerKelvin to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromJoulesPerKelvin(value) {\r\n        return new Entropy(value, EntropyUnits.JoulesPerKelvin);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a CaloriesPerKelvin\r\n     *\r\n     * @param value The unit as CaloriesPerKelvin to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromCaloriesPerKelvin(value) {\r\n        return new Entropy(value, EntropyUnits.CaloriesPerKelvin);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a JoulesPerDegreeCelsius\r\n     *\r\n     * @param value The unit as JoulesPerDegreeCelsius to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromJoulesPerDegreeCelsius(value) {\r\n        return new Entropy(value, EntropyUnits.JoulesPerDegreeCelsius);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a KilojoulesPerKelvin\r\n     *\r\n     * @param value The unit as KilojoulesPerKelvin to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromKilojoulesPerKelvin(value) {\r\n        return new Entropy(value, EntropyUnits.KilojoulesPerKelvin);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a MegajoulesPerKelvin\r\n     *\r\n     * @param value The unit as MegajoulesPerKelvin to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromMegajoulesPerKelvin(value) {\r\n        return new Entropy(value, EntropyUnits.MegajoulesPerKelvin);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a KilocaloriesPerKelvin\r\n     *\r\n     * @param value The unit as KilocaloriesPerKelvin to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromKilocaloriesPerKelvin(value) {\r\n        return new Entropy(value, EntropyUnits.KilocaloriesPerKelvin);\r\n    }\r\n    /**\r\n     * Create a new Entropy instance from a KilojoulesPerDegreeCelsius\r\n     *\r\n     * @param value The unit as KilojoulesPerDegreeCelsius to create a new Entropy from.\r\n     * @returns The new Entropy instance.\r\n     */\r\n    static FromKilojoulesPerDegreeCelsius(value) {\r\n        return new Entropy(value, EntropyUnits.KilojoulesPerDegreeCelsius);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case EntropyUnits.JoulesPerKelvin:\r\n                return this.value;\r\n            case EntropyUnits.CaloriesPerKelvin:\r\n                return this.value / 4.184;\r\n            case EntropyUnits.JoulesPerDegreeCelsius:\r\n                return this.value;\r\n            case EntropyUnits.KilojoulesPerKelvin:\r\n                return (this.value) / 1000;\r\n            case EntropyUnits.MegajoulesPerKelvin:\r\n                return (this.value) / 1000000;\r\n            case EntropyUnits.KilocaloriesPerKelvin:\r\n                return (this.value / 4.184) / 1000;\r\n            case EntropyUnits.KilojoulesPerDegreeCelsius:\r\n                return (this.value) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case EntropyUnits.JoulesPerKelvin:\r\n                return value;\r\n            case EntropyUnits.CaloriesPerKelvin:\r\n                return value * 4.184;\r\n            case EntropyUnits.JoulesPerDegreeCelsius:\r\n                return value;\r\n            case EntropyUnits.KilojoulesPerKelvin:\r\n                return (value) * 1000;\r\n            case EntropyUnits.MegajoulesPerKelvin:\r\n                return (value) * 1000000;\r\n            case EntropyUnits.KilocaloriesPerKelvin:\r\n                return (value * 4.184) * 1000;\r\n            case EntropyUnits.KilojoulesPerDegreeCelsius:\r\n                return (value) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Entropy to string.\r\n     * Note! the default format for Entropy is JoulesPerKelvin.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Entropy.\r\n     * @returns The string format of the Entropy.\r\n     */\r\n    toString(toUnit = EntropyUnits.JoulesPerKelvin) {\r\n        switch (toUnit) {\r\n            case EntropyUnits.JoulesPerKelvin:\r\n                return this.JoulesPerKelvin + ` J/K`;\r\n            case EntropyUnits.CaloriesPerKelvin:\r\n                return this.CaloriesPerKelvin + ` cal/K`;\r\n            case EntropyUnits.JoulesPerDegreeCelsius:\r\n                return this.JoulesPerDegreeCelsius + ` J/C`;\r\n            case EntropyUnits.KilojoulesPerKelvin:\r\n                return this.KilojoulesPerKelvin + ` `;\r\n            case EntropyUnits.MegajoulesPerKelvin:\r\n                return this.MegajoulesPerKelvin + ` `;\r\n            case EntropyUnits.KilocaloriesPerKelvin:\r\n                return this.KilocaloriesPerKelvin + ` `;\r\n            case EntropyUnits.KilojoulesPerDegreeCelsius:\r\n                return this.KilojoulesPerDegreeCelsius + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Entropy are equals to the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns True if the given Entropy are equal to the current Entropy.\r\n     */\r\n    equals(entropy) {\r\n        return this.value === entropy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Entropy against the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns 0 if they are equal, -1 if the current Entropy is less then other, 1 if the current Entropy is greater then other.\r\n     */\r\n    compareTo(entropy) {\r\n        if (this.value > entropy.BaseValue)\r\n            return 1;\r\n        if (this.value < entropy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Entropy with the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns A new Entropy instance with the results.\r\n     */\r\n    add(entropy) {\r\n        return new Entropy(this.value + entropy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Entropy with the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns A new Entropy instance with the results.\r\n     */\r\n    subtract(entropy) {\r\n        return new Entropy(this.value - entropy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Entropy with the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns A new Entropy instance with the results.\r\n     */\r\n    multiply(entropy) {\r\n        return new Entropy(this.value * entropy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Entropy with the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns A new Entropy instance with the results.\r\n     */\r\n    divide(entropy) {\r\n        return new Entropy(this.value / entropy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Entropy with the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns A new Entropy instance with the results.\r\n     */\r\n    modulo(entropy) {\r\n        return new Entropy(this.value % entropy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Entropy with the current Entropy.\r\n     * @param entropy The other Entropy.\r\n     * @returns A new Entropy instance with the results.\r\n     */\r\n    pow(entropy) {\r\n        return new Entropy(this.value ** entropy.BaseValue);\r\n    }\r\n}\r\nexports.Entropy = Entropy;\r\n//# sourceMappingURL=entropy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Force = exports.ForceUnits = void 0;\r\n/** ForceUnits enumeration */\r\nvar ForceUnits;\r\n(function (ForceUnits) {\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Dyne\"] = 0] = \"Dyne\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"KilogramsForce\"] = 1] = \"KilogramsForce\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"TonnesForce\"] = 2] = \"TonnesForce\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Newtons\"] = 3] = \"Newtons\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"KiloPonds\"] = 4] = \"KiloPonds\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Poundals\"] = 5] = \"Poundals\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"PoundsForce\"] = 6] = \"PoundsForce\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"OunceForce\"] = 7] = \"OunceForce\";\r\n    /** The short ton-force is a unit of force equal to 2,000 pounds-force (907.18474 kgf), that is most commonly used in the United States – known there simply as the ton or US ton. */\r\n    ForceUnits[ForceUnits[\"ShortTonsForce\"] = 8] = \"ShortTonsForce\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Micronewtons\"] = 9] = \"Micronewtons\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Millinewtons\"] = 10] = \"Millinewtons\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Decanewtons\"] = 11] = \"Decanewtons\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Kilonewtons\"] = 12] = \"Kilonewtons\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"Meganewtons\"] = 13] = \"Meganewtons\";\r\n    /** */\r\n    ForceUnits[ForceUnits[\"KilopoundsForce\"] = 14] = \"KilopoundsForce\";\r\n})(ForceUnits = exports.ForceUnits || (exports.ForceUnits = {}));\r\n/** In physics, a force is any influence that causes an object to undergo a certain change, either concerning its movement, direction, or geometrical construction. In other words, a force can cause an object with mass to change its velocity (which includes to begin moving from a state of rest), i.e., to accelerate, or a flexible object to deform, or both. Force can also be described by intuitive concepts such as a push or a pull. A force has both magnitude and direction, making it a vector quantity. It is measured in the SI unit of newtons and represented by the symbol F. */\r\nclass Force {\r\n    /**\r\n     * Create a new Force.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Force’ unit to create from.\r\n     * The default unit is Newtons\r\n     */\r\n    constructor(value, fromUnit = ForceUnits.Newtons) {\r\n        this.dyneLazy = null;\r\n        this.kilogramsforceLazy = null;\r\n        this.tonnesforceLazy = null;\r\n        this.newtonsLazy = null;\r\n        this.kilopondsLazy = null;\r\n        this.poundalsLazy = null;\r\n        this.poundsforceLazy = null;\r\n        this.ounceforceLazy = null;\r\n        this.shorttonsforceLazy = null;\r\n        this.micronewtonsLazy = null;\r\n        this.millinewtonsLazy = null;\r\n        this.decanewtonsLazy = null;\r\n        this.kilonewtonsLazy = null;\r\n        this.meganewtonsLazy = null;\r\n        this.kilopoundsforceLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Force is Newtons.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Dyne() {\r\n        if (this.dyneLazy !== null) {\r\n            return this.dyneLazy;\r\n        }\r\n        return this.dyneLazy = this.convertFromBase(ForceUnits.Dyne);\r\n    }\r\n    /** */\r\n    get KilogramsForce() {\r\n        if (this.kilogramsforceLazy !== null) {\r\n            return this.kilogramsforceLazy;\r\n        }\r\n        return this.kilogramsforceLazy = this.convertFromBase(ForceUnits.KilogramsForce);\r\n    }\r\n    /** */\r\n    get TonnesForce() {\r\n        if (this.tonnesforceLazy !== null) {\r\n            return this.tonnesforceLazy;\r\n        }\r\n        return this.tonnesforceLazy = this.convertFromBase(ForceUnits.TonnesForce);\r\n    }\r\n    /** */\r\n    get Newtons() {\r\n        if (this.newtonsLazy !== null) {\r\n            return this.newtonsLazy;\r\n        }\r\n        return this.newtonsLazy = this.convertFromBase(ForceUnits.Newtons);\r\n    }\r\n    /** */\r\n    get KiloPonds() {\r\n        if (this.kilopondsLazy !== null) {\r\n            return this.kilopondsLazy;\r\n        }\r\n        return this.kilopondsLazy = this.convertFromBase(ForceUnits.KiloPonds);\r\n    }\r\n    /** */\r\n    get Poundals() {\r\n        if (this.poundalsLazy !== null) {\r\n            return this.poundalsLazy;\r\n        }\r\n        return this.poundalsLazy = this.convertFromBase(ForceUnits.Poundals);\r\n    }\r\n    /** */\r\n    get PoundsForce() {\r\n        if (this.poundsforceLazy !== null) {\r\n            return this.poundsforceLazy;\r\n        }\r\n        return this.poundsforceLazy = this.convertFromBase(ForceUnits.PoundsForce);\r\n    }\r\n    /** */\r\n    get OunceForce() {\r\n        if (this.ounceforceLazy !== null) {\r\n            return this.ounceforceLazy;\r\n        }\r\n        return this.ounceforceLazy = this.convertFromBase(ForceUnits.OunceForce);\r\n    }\r\n    /** The short ton-force is a unit of force equal to 2,000 pounds-force (907.18474 kgf), that is most commonly used in the United States – known there simply as the ton or US ton. */\r\n    get ShortTonsForce() {\r\n        if (this.shorttonsforceLazy !== null) {\r\n            return this.shorttonsforceLazy;\r\n        }\r\n        return this.shorttonsforceLazy = this.convertFromBase(ForceUnits.ShortTonsForce);\r\n    }\r\n    /** */\r\n    get Micronewtons() {\r\n        if (this.micronewtonsLazy !== null) {\r\n            return this.micronewtonsLazy;\r\n        }\r\n        return this.micronewtonsLazy = this.convertFromBase(ForceUnits.Micronewtons);\r\n    }\r\n    /** */\r\n    get Millinewtons() {\r\n        if (this.millinewtonsLazy !== null) {\r\n            return this.millinewtonsLazy;\r\n        }\r\n        return this.millinewtonsLazy = this.convertFromBase(ForceUnits.Millinewtons);\r\n    }\r\n    /** */\r\n    get Decanewtons() {\r\n        if (this.decanewtonsLazy !== null) {\r\n            return this.decanewtonsLazy;\r\n        }\r\n        return this.decanewtonsLazy = this.convertFromBase(ForceUnits.Decanewtons);\r\n    }\r\n    /** */\r\n    get Kilonewtons() {\r\n        if (this.kilonewtonsLazy !== null) {\r\n            return this.kilonewtonsLazy;\r\n        }\r\n        return this.kilonewtonsLazy = this.convertFromBase(ForceUnits.Kilonewtons);\r\n    }\r\n    /** */\r\n    get Meganewtons() {\r\n        if (this.meganewtonsLazy !== null) {\r\n            return this.meganewtonsLazy;\r\n        }\r\n        return this.meganewtonsLazy = this.convertFromBase(ForceUnits.Meganewtons);\r\n    }\r\n    /** */\r\n    get KilopoundsForce() {\r\n        if (this.kilopoundsforceLazy !== null) {\r\n            return this.kilopoundsforceLazy;\r\n        }\r\n        return this.kilopoundsforceLazy = this.convertFromBase(ForceUnits.KilopoundsForce);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Dyne\r\n     *\r\n     * @param value The unit as Dyne to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromDyne(value) {\r\n        return new Force(value, ForceUnits.Dyne);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a KilogramsForce\r\n     *\r\n     * @param value The unit as KilogramsForce to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromKilogramsForce(value) {\r\n        return new Force(value, ForceUnits.KilogramsForce);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a TonnesForce\r\n     *\r\n     * @param value The unit as TonnesForce to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromTonnesForce(value) {\r\n        return new Force(value, ForceUnits.TonnesForce);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Newtons\r\n     *\r\n     * @param value The unit as Newtons to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromNewtons(value) {\r\n        return new Force(value, ForceUnits.Newtons);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a KiloPonds\r\n     *\r\n     * @param value The unit as KiloPonds to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromKiloPonds(value) {\r\n        return new Force(value, ForceUnits.KiloPonds);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Poundals\r\n     *\r\n     * @param value The unit as Poundals to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromPoundals(value) {\r\n        return new Force(value, ForceUnits.Poundals);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a PoundsForce\r\n     *\r\n     * @param value The unit as PoundsForce to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromPoundsForce(value) {\r\n        return new Force(value, ForceUnits.PoundsForce);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a OunceForce\r\n     *\r\n     * @param value The unit as OunceForce to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromOunceForce(value) {\r\n        return new Force(value, ForceUnits.OunceForce);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a ShortTonsForce\r\n     * The short ton-force is a unit of force equal to 2,000 pounds-force (907.18474 kgf), that is most commonly used in the United States – known there simply as the ton or US ton.\r\n     * @param value The unit as ShortTonsForce to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromShortTonsForce(value) {\r\n        return new Force(value, ForceUnits.ShortTonsForce);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Micronewtons\r\n     *\r\n     * @param value The unit as Micronewtons to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromMicronewtons(value) {\r\n        return new Force(value, ForceUnits.Micronewtons);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Millinewtons\r\n     *\r\n     * @param value The unit as Millinewtons to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromMillinewtons(value) {\r\n        return new Force(value, ForceUnits.Millinewtons);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Decanewtons\r\n     *\r\n     * @param value The unit as Decanewtons to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromDecanewtons(value) {\r\n        return new Force(value, ForceUnits.Decanewtons);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Kilonewtons\r\n     *\r\n     * @param value The unit as Kilonewtons to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromKilonewtons(value) {\r\n        return new Force(value, ForceUnits.Kilonewtons);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a Meganewtons\r\n     *\r\n     * @param value The unit as Meganewtons to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromMeganewtons(value) {\r\n        return new Force(value, ForceUnits.Meganewtons);\r\n    }\r\n    /**\r\n     * Create a new Force instance from a KilopoundsForce\r\n     *\r\n     * @param value The unit as KilopoundsForce to create a new Force from.\r\n     * @returns The new Force instance.\r\n     */\r\n    static FromKilopoundsForce(value) {\r\n        return new Force(value, ForceUnits.KilopoundsForce);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ForceUnits.Dyne:\r\n                return this.value * 1e5;\r\n            case ForceUnits.KilogramsForce:\r\n                return this.value / 9.80665002864;\r\n            case ForceUnits.TonnesForce:\r\n                return this.value / 9.80665002864e3;\r\n            case ForceUnits.Newtons:\r\n                return this.value;\r\n            case ForceUnits.KiloPonds:\r\n                return this.value / 9.80665002864;\r\n            case ForceUnits.Poundals:\r\n                return this.value / 0.13825502798973041652092282466083;\r\n            case ForceUnits.PoundsForce:\r\n                return this.value / 4.4482216152605095551842641431421;\r\n            case ForceUnits.OunceForce:\r\n                return this.value / 2.780138509537812e-1;\r\n            case ForceUnits.ShortTonsForce:\r\n                return this.value / 8.896443230521e3;\r\n            case ForceUnits.Micronewtons:\r\n                return (this.value) / 0.000001;\r\n            case ForceUnits.Millinewtons:\r\n                return (this.value) / 0.001;\r\n            case ForceUnits.Decanewtons:\r\n                return (this.value) / 10;\r\n            case ForceUnits.Kilonewtons:\r\n                return (this.value) / 1000;\r\n            case ForceUnits.Meganewtons:\r\n                return (this.value) / 1000000;\r\n            case ForceUnits.KilopoundsForce:\r\n                return (this.value / 4.4482216152605095551842641431421) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ForceUnits.Dyne:\r\n                return value / 1e5;\r\n            case ForceUnits.KilogramsForce:\r\n                return value * 9.80665002864;\r\n            case ForceUnits.TonnesForce:\r\n                return value * 9.80665002864e3;\r\n            case ForceUnits.Newtons:\r\n                return value;\r\n            case ForceUnits.KiloPonds:\r\n                return value * 9.80665002864;\r\n            case ForceUnits.Poundals:\r\n                return value * 0.13825502798973041652092282466083;\r\n            case ForceUnits.PoundsForce:\r\n                return value * 4.4482216152605095551842641431421;\r\n            case ForceUnits.OunceForce:\r\n                return value * 2.780138509537812e-1;\r\n            case ForceUnits.ShortTonsForce:\r\n                return value * 8.896443230521e3;\r\n            case ForceUnits.Micronewtons:\r\n                return (value) * 0.000001;\r\n            case ForceUnits.Millinewtons:\r\n                return (value) * 0.001;\r\n            case ForceUnits.Decanewtons:\r\n                return (value) * 10;\r\n            case ForceUnits.Kilonewtons:\r\n                return (value) * 1000;\r\n            case ForceUnits.Meganewtons:\r\n                return (value) * 1000000;\r\n            case ForceUnits.KilopoundsForce:\r\n                return (value * 4.4482216152605095551842641431421) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Force to string.\r\n     * Note! the default format for Force is Newtons.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Force.\r\n     * @returns The string format of the Force.\r\n     */\r\n    toString(toUnit = ForceUnits.Newtons) {\r\n        switch (toUnit) {\r\n            case ForceUnits.Dyne:\r\n                return this.Dyne + ` dyn`;\r\n            case ForceUnits.KilogramsForce:\r\n                return this.KilogramsForce + ` kgf`;\r\n            case ForceUnits.TonnesForce:\r\n                return this.TonnesForce + ` tf`;\r\n            case ForceUnits.Newtons:\r\n                return this.Newtons + ` N`;\r\n            case ForceUnits.KiloPonds:\r\n                return this.KiloPonds + ` kp`;\r\n            case ForceUnits.Poundals:\r\n                return this.Poundals + ` pdl`;\r\n            case ForceUnits.PoundsForce:\r\n                return this.PoundsForce + ` lbf`;\r\n            case ForceUnits.OunceForce:\r\n                return this.OunceForce + ` ozf`;\r\n            case ForceUnits.ShortTonsForce:\r\n                return this.ShortTonsForce + ` tf (short)`;\r\n            case ForceUnits.Micronewtons:\r\n                return this.Micronewtons + ` `;\r\n            case ForceUnits.Millinewtons:\r\n                return this.Millinewtons + ` `;\r\n            case ForceUnits.Decanewtons:\r\n                return this.Decanewtons + ` `;\r\n            case ForceUnits.Kilonewtons:\r\n                return this.Kilonewtons + ` `;\r\n            case ForceUnits.Meganewtons:\r\n                return this.Meganewtons + ` `;\r\n            case ForceUnits.KilopoundsForce:\r\n                return this.KilopoundsForce + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Force are equals to the current Force.\r\n     * @param force The other Force.\r\n     * @returns True if the given Force are equal to the current Force.\r\n     */\r\n    equals(force) {\r\n        return this.value === force.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Force against the current Force.\r\n     * @param force The other Force.\r\n     * @returns 0 if they are equal, -1 if the current Force is less then other, 1 if the current Force is greater then other.\r\n     */\r\n    compareTo(force) {\r\n        if (this.value > force.BaseValue)\r\n            return 1;\r\n        if (this.value < force.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Force with the current Force.\r\n     * @param force The other Force.\r\n     * @returns A new Force instance with the results.\r\n     */\r\n    add(force) {\r\n        return new Force(this.value + force.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Force with the current Force.\r\n     * @param force The other Force.\r\n     * @returns A new Force instance with the results.\r\n     */\r\n    subtract(force) {\r\n        return new Force(this.value - force.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Force with the current Force.\r\n     * @param force The other Force.\r\n     * @returns A new Force instance with the results.\r\n     */\r\n    multiply(force) {\r\n        return new Force(this.value * force.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Force with the current Force.\r\n     * @param force The other Force.\r\n     * @returns A new Force instance with the results.\r\n     */\r\n    divide(force) {\r\n        return new Force(this.value / force.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Force with the current Force.\r\n     * @param force The other Force.\r\n     * @returns A new Force instance with the results.\r\n     */\r\n    modulo(force) {\r\n        return new Force(this.value % force.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Force with the current Force.\r\n     * @param force The other Force.\r\n     * @returns A new Force instance with the results.\r\n     */\r\n    pow(force) {\r\n        return new Force(this.value ** force.BaseValue);\r\n    }\r\n}\r\nexports.Force = Force;\r\n//# sourceMappingURL=force.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ForceChangeRate = exports.ForceChangeRateUnits = void 0;\r\n/** ForceChangeRateUnits enumeration */\r\nvar ForceChangeRateUnits;\r\n(function (ForceChangeRateUnits) {\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"NewtonsPerMinute\"] = 0] = \"NewtonsPerMinute\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"NewtonsPerSecond\"] = 1] = \"NewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"PoundsForcePerMinute\"] = 2] = \"PoundsForcePerMinute\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"PoundsForcePerSecond\"] = 3] = \"PoundsForcePerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"DecanewtonsPerMinute\"] = 4] = \"DecanewtonsPerMinute\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"KilonewtonsPerMinute\"] = 5] = \"KilonewtonsPerMinute\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"NanonewtonsPerSecond\"] = 6] = \"NanonewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"MicronewtonsPerSecond\"] = 7] = \"MicronewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"MillinewtonsPerSecond\"] = 8] = \"MillinewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"CentinewtonsPerSecond\"] = 9] = \"CentinewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"DecinewtonsPerSecond\"] = 10] = \"DecinewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"DecanewtonsPerSecond\"] = 11] = \"DecanewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"KilonewtonsPerSecond\"] = 12] = \"KilonewtonsPerSecond\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"KilopoundsForcePerMinute\"] = 13] = \"KilopoundsForcePerMinute\";\r\n    /** */\r\n    ForceChangeRateUnits[ForceChangeRateUnits[\"KilopoundsForcePerSecond\"] = 14] = \"KilopoundsForcePerSecond\";\r\n})(ForceChangeRateUnits = exports.ForceChangeRateUnits || (exports.ForceChangeRateUnits = {}));\r\n/** Force change rate is the ratio of the force change to the time during which the change occurred (value of force changes per unit time). */\r\nclass ForceChangeRate {\r\n    /**\r\n     * Create a new ForceChangeRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ForceChangeRate’ unit to create from.\r\n     * The default unit is NewtonsPerSecond\r\n     */\r\n    constructor(value, fromUnit = ForceChangeRateUnits.NewtonsPerSecond) {\r\n        this.newtonsperminuteLazy = null;\r\n        this.newtonspersecondLazy = null;\r\n        this.poundsforceperminuteLazy = null;\r\n        this.poundsforcepersecondLazy = null;\r\n        this.decanewtonsperminuteLazy = null;\r\n        this.kilonewtonsperminuteLazy = null;\r\n        this.nanonewtonspersecondLazy = null;\r\n        this.micronewtonspersecondLazy = null;\r\n        this.millinewtonspersecondLazy = null;\r\n        this.centinewtonspersecondLazy = null;\r\n        this.decinewtonspersecondLazy = null;\r\n        this.decanewtonspersecondLazy = null;\r\n        this.kilonewtonspersecondLazy = null;\r\n        this.kilopoundsforceperminuteLazy = null;\r\n        this.kilopoundsforcepersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ForceChangeRate is NewtonsPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonsPerMinute() {\r\n        if (this.newtonsperminuteLazy !== null) {\r\n            return this.newtonsperminuteLazy;\r\n        }\r\n        return this.newtonsperminuteLazy = this.convertFromBase(ForceChangeRateUnits.NewtonsPerMinute);\r\n    }\r\n    /** */\r\n    get NewtonsPerSecond() {\r\n        if (this.newtonspersecondLazy !== null) {\r\n            return this.newtonspersecondLazy;\r\n        }\r\n        return this.newtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.NewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get PoundsForcePerMinute() {\r\n        if (this.poundsforceperminuteLazy !== null) {\r\n            return this.poundsforceperminuteLazy;\r\n        }\r\n        return this.poundsforceperminuteLazy = this.convertFromBase(ForceChangeRateUnits.PoundsForcePerMinute);\r\n    }\r\n    /** */\r\n    get PoundsForcePerSecond() {\r\n        if (this.poundsforcepersecondLazy !== null) {\r\n            return this.poundsforcepersecondLazy;\r\n        }\r\n        return this.poundsforcepersecondLazy = this.convertFromBase(ForceChangeRateUnits.PoundsForcePerSecond);\r\n    }\r\n    /** */\r\n    get DecanewtonsPerMinute() {\r\n        if (this.decanewtonsperminuteLazy !== null) {\r\n            return this.decanewtonsperminuteLazy;\r\n        }\r\n        return this.decanewtonsperminuteLazy = this.convertFromBase(ForceChangeRateUnits.DecanewtonsPerMinute);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerMinute() {\r\n        if (this.kilonewtonsperminuteLazy !== null) {\r\n            return this.kilonewtonsperminuteLazy;\r\n        }\r\n        return this.kilonewtonsperminuteLazy = this.convertFromBase(ForceChangeRateUnits.KilonewtonsPerMinute);\r\n    }\r\n    /** */\r\n    get NanonewtonsPerSecond() {\r\n        if (this.nanonewtonspersecondLazy !== null) {\r\n            return this.nanonewtonspersecondLazy;\r\n        }\r\n        return this.nanonewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.NanonewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get MicronewtonsPerSecond() {\r\n        if (this.micronewtonspersecondLazy !== null) {\r\n            return this.micronewtonspersecondLazy;\r\n        }\r\n        return this.micronewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.MicronewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get MillinewtonsPerSecond() {\r\n        if (this.millinewtonspersecondLazy !== null) {\r\n            return this.millinewtonspersecondLazy;\r\n        }\r\n        return this.millinewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.MillinewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get CentinewtonsPerSecond() {\r\n        if (this.centinewtonspersecondLazy !== null) {\r\n            return this.centinewtonspersecondLazy;\r\n        }\r\n        return this.centinewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.CentinewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get DecinewtonsPerSecond() {\r\n        if (this.decinewtonspersecondLazy !== null) {\r\n            return this.decinewtonspersecondLazy;\r\n        }\r\n        return this.decinewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.DecinewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get DecanewtonsPerSecond() {\r\n        if (this.decanewtonspersecondLazy !== null) {\r\n            return this.decanewtonspersecondLazy;\r\n        }\r\n        return this.decanewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.DecanewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerSecond() {\r\n        if (this.kilonewtonspersecondLazy !== null) {\r\n            return this.kilonewtonspersecondLazy;\r\n        }\r\n        return this.kilonewtonspersecondLazy = this.convertFromBase(ForceChangeRateUnits.KilonewtonsPerSecond);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerMinute() {\r\n        if (this.kilopoundsforceperminuteLazy !== null) {\r\n            return this.kilopoundsforceperminuteLazy;\r\n        }\r\n        return this.kilopoundsforceperminuteLazy = this.convertFromBase(ForceChangeRateUnits.KilopoundsForcePerMinute);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerSecond() {\r\n        if (this.kilopoundsforcepersecondLazy !== null) {\r\n            return this.kilopoundsforcepersecondLazy;\r\n        }\r\n        return this.kilopoundsforcepersecondLazy = this.convertFromBase(ForceChangeRateUnits.KilopoundsForcePerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a NewtonsPerMinute\r\n     *\r\n     * @param value The unit as NewtonsPerMinute to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromNewtonsPerMinute(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.NewtonsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a NewtonsPerSecond\r\n     *\r\n     * @param value The unit as NewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromNewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.NewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a PoundsForcePerMinute\r\n     *\r\n     * @param value The unit as PoundsForcePerMinute to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromPoundsForcePerMinute(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.PoundsForcePerMinute);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a PoundsForcePerSecond\r\n     *\r\n     * @param value The unit as PoundsForcePerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromPoundsForcePerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.PoundsForcePerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a DecanewtonsPerMinute\r\n     *\r\n     * @param value The unit as DecanewtonsPerMinute to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromDecanewtonsPerMinute(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.DecanewtonsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a KilonewtonsPerMinute\r\n     *\r\n     * @param value The unit as KilonewtonsPerMinute to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromKilonewtonsPerMinute(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.KilonewtonsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a NanonewtonsPerSecond\r\n     *\r\n     * @param value The unit as NanonewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromNanonewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.NanonewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a MicronewtonsPerSecond\r\n     *\r\n     * @param value The unit as MicronewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromMicronewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.MicronewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a MillinewtonsPerSecond\r\n     *\r\n     * @param value The unit as MillinewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromMillinewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.MillinewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a CentinewtonsPerSecond\r\n     *\r\n     * @param value The unit as CentinewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromCentinewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.CentinewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a DecinewtonsPerSecond\r\n     *\r\n     * @param value The unit as DecinewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromDecinewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.DecinewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a DecanewtonsPerSecond\r\n     *\r\n     * @param value The unit as DecanewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromDecanewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.DecanewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a KilonewtonsPerSecond\r\n     *\r\n     * @param value The unit as KilonewtonsPerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromKilonewtonsPerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.KilonewtonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a KilopoundsForcePerMinute\r\n     *\r\n     * @param value The unit as KilopoundsForcePerMinute to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromKilopoundsForcePerMinute(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.KilopoundsForcePerMinute);\r\n    }\r\n    /**\r\n     * Create a new ForceChangeRate instance from a KilopoundsForcePerSecond\r\n     *\r\n     * @param value The unit as KilopoundsForcePerSecond to create a new ForceChangeRate from.\r\n     * @returns The new ForceChangeRate instance.\r\n     */\r\n    static FromKilopoundsForcePerSecond(value) {\r\n        return new ForceChangeRate(value, ForceChangeRateUnits.KilopoundsForcePerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ForceChangeRateUnits.NewtonsPerMinute:\r\n                return this.value * 60;\r\n            case ForceChangeRateUnits.NewtonsPerSecond:\r\n                return this.value;\r\n            case ForceChangeRateUnits.PoundsForcePerMinute:\r\n                return this.value / 4.4482216152605095551842641431421 * 60;\r\n            case ForceChangeRateUnits.PoundsForcePerSecond:\r\n                return this.value / 4.4482216152605095551842641431421;\r\n            case ForceChangeRateUnits.DecanewtonsPerMinute:\r\n                return (this.value * 60) / 10;\r\n            case ForceChangeRateUnits.KilonewtonsPerMinute:\r\n                return (this.value * 60) / 1000;\r\n            case ForceChangeRateUnits.NanonewtonsPerSecond:\r\n                return (this.value) / 1e-9;\r\n            case ForceChangeRateUnits.MicronewtonsPerSecond:\r\n                return (this.value) / 0.000001;\r\n            case ForceChangeRateUnits.MillinewtonsPerSecond:\r\n                return (this.value) / 0.001;\r\n            case ForceChangeRateUnits.CentinewtonsPerSecond:\r\n                return (this.value) / 0.01;\r\n            case ForceChangeRateUnits.DecinewtonsPerSecond:\r\n                return (this.value) / 0.1;\r\n            case ForceChangeRateUnits.DecanewtonsPerSecond:\r\n                return (this.value) / 10;\r\n            case ForceChangeRateUnits.KilonewtonsPerSecond:\r\n                return (this.value) / 1000;\r\n            case ForceChangeRateUnits.KilopoundsForcePerMinute:\r\n                return (this.value / 4.4482216152605095551842641431421 * 60) / 1000;\r\n            case ForceChangeRateUnits.KilopoundsForcePerSecond:\r\n                return (this.value / 4.4482216152605095551842641431421) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ForceChangeRateUnits.NewtonsPerMinute:\r\n                return value / 60;\r\n            case ForceChangeRateUnits.NewtonsPerSecond:\r\n                return value;\r\n            case ForceChangeRateUnits.PoundsForcePerMinute:\r\n                return value * 4.4482216152605095551842641431421 / 60;\r\n            case ForceChangeRateUnits.PoundsForcePerSecond:\r\n                return value * 4.4482216152605095551842641431421;\r\n            case ForceChangeRateUnits.DecanewtonsPerMinute:\r\n                return (value / 60) * 10;\r\n            case ForceChangeRateUnits.KilonewtonsPerMinute:\r\n                return (value / 60) * 1000;\r\n            case ForceChangeRateUnits.NanonewtonsPerSecond:\r\n                return (value) * 1e-9;\r\n            case ForceChangeRateUnits.MicronewtonsPerSecond:\r\n                return (value) * 0.000001;\r\n            case ForceChangeRateUnits.MillinewtonsPerSecond:\r\n                return (value) * 0.001;\r\n            case ForceChangeRateUnits.CentinewtonsPerSecond:\r\n                return (value) * 0.01;\r\n            case ForceChangeRateUnits.DecinewtonsPerSecond:\r\n                return (value) * 0.1;\r\n            case ForceChangeRateUnits.DecanewtonsPerSecond:\r\n                return (value) * 10;\r\n            case ForceChangeRateUnits.KilonewtonsPerSecond:\r\n                return (value) * 1000;\r\n            case ForceChangeRateUnits.KilopoundsForcePerMinute:\r\n                return (value * 4.4482216152605095551842641431421 / 60) * 1000;\r\n            case ForceChangeRateUnits.KilopoundsForcePerSecond:\r\n                return (value * 4.4482216152605095551842641431421) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ForceChangeRate to string.\r\n     * Note! the default format for ForceChangeRate is NewtonsPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ForceChangeRate.\r\n     * @returns The string format of the ForceChangeRate.\r\n     */\r\n    toString(toUnit = ForceChangeRateUnits.NewtonsPerSecond) {\r\n        switch (toUnit) {\r\n            case ForceChangeRateUnits.NewtonsPerMinute:\r\n                return this.NewtonsPerMinute + ` N/min`;\r\n            case ForceChangeRateUnits.NewtonsPerSecond:\r\n                return this.NewtonsPerSecond + ` N/s`;\r\n            case ForceChangeRateUnits.PoundsForcePerMinute:\r\n                return this.PoundsForcePerMinute + ` lbf/min`;\r\n            case ForceChangeRateUnits.PoundsForcePerSecond:\r\n                return this.PoundsForcePerSecond + ` lbf/s`;\r\n            case ForceChangeRateUnits.DecanewtonsPerMinute:\r\n                return this.DecanewtonsPerMinute + ` `;\r\n            case ForceChangeRateUnits.KilonewtonsPerMinute:\r\n                return this.KilonewtonsPerMinute + ` `;\r\n            case ForceChangeRateUnits.NanonewtonsPerSecond:\r\n                return this.NanonewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.MicronewtonsPerSecond:\r\n                return this.MicronewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.MillinewtonsPerSecond:\r\n                return this.MillinewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.CentinewtonsPerSecond:\r\n                return this.CentinewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.DecinewtonsPerSecond:\r\n                return this.DecinewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.DecanewtonsPerSecond:\r\n                return this.DecanewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.KilonewtonsPerSecond:\r\n                return this.KilonewtonsPerSecond + ` `;\r\n            case ForceChangeRateUnits.KilopoundsForcePerMinute:\r\n                return this.KilopoundsForcePerMinute + ` `;\r\n            case ForceChangeRateUnits.KilopoundsForcePerSecond:\r\n                return this.KilopoundsForcePerSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ForceChangeRate are equals to the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns True if the given ForceChangeRate are equal to the current ForceChangeRate.\r\n     */\r\n    equals(forceChangeRate) {\r\n        return this.value === forceChangeRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ForceChangeRate against the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns 0 if they are equal, -1 if the current ForceChangeRate is less then other, 1 if the current ForceChangeRate is greater then other.\r\n     */\r\n    compareTo(forceChangeRate) {\r\n        if (this.value > forceChangeRate.BaseValue)\r\n            return 1;\r\n        if (this.value < forceChangeRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ForceChangeRate with the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns A new ForceChangeRate instance with the results.\r\n     */\r\n    add(forceChangeRate) {\r\n        return new ForceChangeRate(this.value + forceChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ForceChangeRate with the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns A new ForceChangeRate instance with the results.\r\n     */\r\n    subtract(forceChangeRate) {\r\n        return new ForceChangeRate(this.value - forceChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ForceChangeRate with the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns A new ForceChangeRate instance with the results.\r\n     */\r\n    multiply(forceChangeRate) {\r\n        return new ForceChangeRate(this.value * forceChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ForceChangeRate with the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns A new ForceChangeRate instance with the results.\r\n     */\r\n    divide(forceChangeRate) {\r\n        return new ForceChangeRate(this.value / forceChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ForceChangeRate with the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns A new ForceChangeRate instance with the results.\r\n     */\r\n    modulo(forceChangeRate) {\r\n        return new ForceChangeRate(this.value % forceChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ForceChangeRate with the current ForceChangeRate.\r\n     * @param forceChangeRate The other ForceChangeRate.\r\n     * @returns A new ForceChangeRate instance with the results.\r\n     */\r\n    pow(forceChangeRate) {\r\n        return new ForceChangeRate(this.value ** forceChangeRate.BaseValue);\r\n    }\r\n}\r\nexports.ForceChangeRate = ForceChangeRate;\r\n//# sourceMappingURL=forcechangerate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ForcePerLength = exports.ForcePerLengthUnits = void 0;\r\n/** ForcePerLengthUnits enumeration */\r\nvar ForcePerLengthUnits;\r\n(function (ForcePerLengthUnits) {\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"NewtonsPerMeter\"] = 0] = \"NewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"NewtonsPerCentimeter\"] = 1] = \"NewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"NewtonsPerMillimeter\"] = 2] = \"NewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilogramsForcePerMeter\"] = 3] = \"KilogramsForcePerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilogramsForcePerCentimeter\"] = 4] = \"KilogramsForcePerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilogramsForcePerMillimeter\"] = 5] = \"KilogramsForcePerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"TonnesForcePerMeter\"] = 6] = \"TonnesForcePerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"TonnesForcePerCentimeter\"] = 7] = \"TonnesForcePerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"TonnesForcePerMillimeter\"] = 8] = \"TonnesForcePerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"PoundsForcePerFoot\"] = 9] = \"PoundsForcePerFoot\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"PoundsForcePerInch\"] = 10] = \"PoundsForcePerInch\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"PoundsForcePerYard\"] = 11] = \"PoundsForcePerYard\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilopoundsForcePerFoot\"] = 12] = \"KilopoundsForcePerFoot\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilopoundsForcePerInch\"] = 13] = \"KilopoundsForcePerInch\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"NanonewtonsPerMeter\"] = 14] = \"NanonewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MicronewtonsPerMeter\"] = 15] = \"MicronewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MillinewtonsPerMeter\"] = 16] = \"MillinewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"CentinewtonsPerMeter\"] = 17] = \"CentinewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"DecinewtonsPerMeter\"] = 18] = \"DecinewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"DecanewtonsPerMeter\"] = 19] = \"DecanewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilonewtonsPerMeter\"] = 20] = \"KilonewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MeganewtonsPerMeter\"] = 21] = \"MeganewtonsPerMeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"NanonewtonsPerCentimeter\"] = 22] = \"NanonewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MicronewtonsPerCentimeter\"] = 23] = \"MicronewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MillinewtonsPerCentimeter\"] = 24] = \"MillinewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"CentinewtonsPerCentimeter\"] = 25] = \"CentinewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"DecinewtonsPerCentimeter\"] = 26] = \"DecinewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"DecanewtonsPerCentimeter\"] = 27] = \"DecanewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilonewtonsPerCentimeter\"] = 28] = \"KilonewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MeganewtonsPerCentimeter\"] = 29] = \"MeganewtonsPerCentimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"NanonewtonsPerMillimeter\"] = 30] = \"NanonewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MicronewtonsPerMillimeter\"] = 31] = \"MicronewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MillinewtonsPerMillimeter\"] = 32] = \"MillinewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"CentinewtonsPerMillimeter\"] = 33] = \"CentinewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"DecinewtonsPerMillimeter\"] = 34] = \"DecinewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"DecanewtonsPerMillimeter\"] = 35] = \"DecanewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"KilonewtonsPerMillimeter\"] = 36] = \"KilonewtonsPerMillimeter\";\r\n    /** */\r\n    ForcePerLengthUnits[ForcePerLengthUnits[\"MeganewtonsPerMillimeter\"] = 37] = \"MeganewtonsPerMillimeter\";\r\n})(ForcePerLengthUnits = exports.ForcePerLengthUnits || (exports.ForcePerLengthUnits = {}));\r\n/** The magnitude of force per unit length. */\r\nclass ForcePerLength {\r\n    /**\r\n     * Create a new ForcePerLength.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ForcePerLength’ unit to create from.\r\n     * The default unit is NewtonsPerMeter\r\n     */\r\n    constructor(value, fromUnit = ForcePerLengthUnits.NewtonsPerMeter) {\r\n        this.newtonspermeterLazy = null;\r\n        this.newtonspercentimeterLazy = null;\r\n        this.newtonspermillimeterLazy = null;\r\n        this.kilogramsforcepermeterLazy = null;\r\n        this.kilogramsforcepercentimeterLazy = null;\r\n        this.kilogramsforcepermillimeterLazy = null;\r\n        this.tonnesforcepermeterLazy = null;\r\n        this.tonnesforcepercentimeterLazy = null;\r\n        this.tonnesforcepermillimeterLazy = null;\r\n        this.poundsforceperfootLazy = null;\r\n        this.poundsforceperinchLazy = null;\r\n        this.poundsforceperyardLazy = null;\r\n        this.kilopoundsforceperfootLazy = null;\r\n        this.kilopoundsforceperinchLazy = null;\r\n        this.nanonewtonspermeterLazy = null;\r\n        this.micronewtonspermeterLazy = null;\r\n        this.millinewtonspermeterLazy = null;\r\n        this.centinewtonspermeterLazy = null;\r\n        this.decinewtonspermeterLazy = null;\r\n        this.decanewtonspermeterLazy = null;\r\n        this.kilonewtonspermeterLazy = null;\r\n        this.meganewtonspermeterLazy = null;\r\n        this.nanonewtonspercentimeterLazy = null;\r\n        this.micronewtonspercentimeterLazy = null;\r\n        this.millinewtonspercentimeterLazy = null;\r\n        this.centinewtonspercentimeterLazy = null;\r\n        this.decinewtonspercentimeterLazy = null;\r\n        this.decanewtonspercentimeterLazy = null;\r\n        this.kilonewtonspercentimeterLazy = null;\r\n        this.meganewtonspercentimeterLazy = null;\r\n        this.nanonewtonspermillimeterLazy = null;\r\n        this.micronewtonspermillimeterLazy = null;\r\n        this.millinewtonspermillimeterLazy = null;\r\n        this.centinewtonspermillimeterLazy = null;\r\n        this.decinewtonspermillimeterLazy = null;\r\n        this.decanewtonspermillimeterLazy = null;\r\n        this.kilonewtonspermillimeterLazy = null;\r\n        this.meganewtonspermillimeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ForcePerLength is NewtonsPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonsPerMeter() {\r\n        if (this.newtonspermeterLazy !== null) {\r\n            return this.newtonspermeterLazy;\r\n        }\r\n        return this.newtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.NewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerCentimeter() {\r\n        if (this.newtonspercentimeterLazy !== null) {\r\n            return this.newtonspercentimeterLazy;\r\n        }\r\n        return this.newtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.NewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerMillimeter() {\r\n        if (this.newtonspermillimeterLazy !== null) {\r\n            return this.newtonspermillimeterLazy;\r\n        }\r\n        return this.newtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.NewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerMeter() {\r\n        if (this.kilogramsforcepermeterLazy !== null) {\r\n            return this.kilogramsforcepermeterLazy;\r\n        }\r\n        return this.kilogramsforcepermeterLazy = this.convertFromBase(ForcePerLengthUnits.KilogramsForcePerMeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerCentimeter() {\r\n        if (this.kilogramsforcepercentimeterLazy !== null) {\r\n            return this.kilogramsforcepercentimeterLazy;\r\n        }\r\n        return this.kilogramsforcepercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.KilogramsForcePerCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerMillimeter() {\r\n        if (this.kilogramsforcepermillimeterLazy !== null) {\r\n            return this.kilogramsforcepermillimeterLazy;\r\n        }\r\n        return this.kilogramsforcepermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.KilogramsForcePerMillimeter);\r\n    }\r\n    /** */\r\n    get TonnesForcePerMeter() {\r\n        if (this.tonnesforcepermeterLazy !== null) {\r\n            return this.tonnesforcepermeterLazy;\r\n        }\r\n        return this.tonnesforcepermeterLazy = this.convertFromBase(ForcePerLengthUnits.TonnesForcePerMeter);\r\n    }\r\n    /** */\r\n    get TonnesForcePerCentimeter() {\r\n        if (this.tonnesforcepercentimeterLazy !== null) {\r\n            return this.tonnesforcepercentimeterLazy;\r\n        }\r\n        return this.tonnesforcepercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.TonnesForcePerCentimeter);\r\n    }\r\n    /** */\r\n    get TonnesForcePerMillimeter() {\r\n        if (this.tonnesforcepermillimeterLazy !== null) {\r\n            return this.tonnesforcepermillimeterLazy;\r\n        }\r\n        return this.tonnesforcepermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.TonnesForcePerMillimeter);\r\n    }\r\n    /** */\r\n    get PoundsForcePerFoot() {\r\n        if (this.poundsforceperfootLazy !== null) {\r\n            return this.poundsforceperfootLazy;\r\n        }\r\n        return this.poundsforceperfootLazy = this.convertFromBase(ForcePerLengthUnits.PoundsForcePerFoot);\r\n    }\r\n    /** */\r\n    get PoundsForcePerInch() {\r\n        if (this.poundsforceperinchLazy !== null) {\r\n            return this.poundsforceperinchLazy;\r\n        }\r\n        return this.poundsforceperinchLazy = this.convertFromBase(ForcePerLengthUnits.PoundsForcePerInch);\r\n    }\r\n    /** */\r\n    get PoundsForcePerYard() {\r\n        if (this.poundsforceperyardLazy !== null) {\r\n            return this.poundsforceperyardLazy;\r\n        }\r\n        return this.poundsforceperyardLazy = this.convertFromBase(ForcePerLengthUnits.PoundsForcePerYard);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerFoot() {\r\n        if (this.kilopoundsforceperfootLazy !== null) {\r\n            return this.kilopoundsforceperfootLazy;\r\n        }\r\n        return this.kilopoundsforceperfootLazy = this.convertFromBase(ForcePerLengthUnits.KilopoundsForcePerFoot);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerInch() {\r\n        if (this.kilopoundsforceperinchLazy !== null) {\r\n            return this.kilopoundsforceperinchLazy;\r\n        }\r\n        return this.kilopoundsforceperinchLazy = this.convertFromBase(ForcePerLengthUnits.KilopoundsForcePerInch);\r\n    }\r\n    /** */\r\n    get NanonewtonsPerMeter() {\r\n        if (this.nanonewtonspermeterLazy !== null) {\r\n            return this.nanonewtonspermeterLazy;\r\n        }\r\n        return this.nanonewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.NanonewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get MicronewtonsPerMeter() {\r\n        if (this.micronewtonspermeterLazy !== null) {\r\n            return this.micronewtonspermeterLazy;\r\n        }\r\n        return this.micronewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.MicronewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get MillinewtonsPerMeter() {\r\n        if (this.millinewtonspermeterLazy !== null) {\r\n            return this.millinewtonspermeterLazy;\r\n        }\r\n        return this.millinewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.MillinewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get CentinewtonsPerMeter() {\r\n        if (this.centinewtonspermeterLazy !== null) {\r\n            return this.centinewtonspermeterLazy;\r\n        }\r\n        return this.centinewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.CentinewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get DecinewtonsPerMeter() {\r\n        if (this.decinewtonspermeterLazy !== null) {\r\n            return this.decinewtonspermeterLazy;\r\n        }\r\n        return this.decinewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.DecinewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get DecanewtonsPerMeter() {\r\n        if (this.decanewtonspermeterLazy !== null) {\r\n            return this.decanewtonspermeterLazy;\r\n        }\r\n        return this.decanewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.DecanewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerMeter() {\r\n        if (this.kilonewtonspermeterLazy !== null) {\r\n            return this.kilonewtonspermeterLazy;\r\n        }\r\n        return this.kilonewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.KilonewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonsPerMeter() {\r\n        if (this.meganewtonspermeterLazy !== null) {\r\n            return this.meganewtonspermeterLazy;\r\n        }\r\n        return this.meganewtonspermeterLazy = this.convertFromBase(ForcePerLengthUnits.MeganewtonsPerMeter);\r\n    }\r\n    /** */\r\n    get NanonewtonsPerCentimeter() {\r\n        if (this.nanonewtonspercentimeterLazy !== null) {\r\n            return this.nanonewtonspercentimeterLazy;\r\n        }\r\n        return this.nanonewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.NanonewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MicronewtonsPerCentimeter() {\r\n        if (this.micronewtonspercentimeterLazy !== null) {\r\n            return this.micronewtonspercentimeterLazy;\r\n        }\r\n        return this.micronewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.MicronewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MillinewtonsPerCentimeter() {\r\n        if (this.millinewtonspercentimeterLazy !== null) {\r\n            return this.millinewtonspercentimeterLazy;\r\n        }\r\n        return this.millinewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.MillinewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get CentinewtonsPerCentimeter() {\r\n        if (this.centinewtonspercentimeterLazy !== null) {\r\n            return this.centinewtonspercentimeterLazy;\r\n        }\r\n        return this.centinewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.CentinewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get DecinewtonsPerCentimeter() {\r\n        if (this.decinewtonspercentimeterLazy !== null) {\r\n            return this.decinewtonspercentimeterLazy;\r\n        }\r\n        return this.decinewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.DecinewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get DecanewtonsPerCentimeter() {\r\n        if (this.decanewtonspercentimeterLazy !== null) {\r\n            return this.decanewtonspercentimeterLazy;\r\n        }\r\n        return this.decanewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.DecanewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerCentimeter() {\r\n        if (this.kilonewtonspercentimeterLazy !== null) {\r\n            return this.kilonewtonspercentimeterLazy;\r\n        }\r\n        return this.kilonewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.KilonewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MeganewtonsPerCentimeter() {\r\n        if (this.meganewtonspercentimeterLazy !== null) {\r\n            return this.meganewtonspercentimeterLazy;\r\n        }\r\n        return this.meganewtonspercentimeterLazy = this.convertFromBase(ForcePerLengthUnits.MeganewtonsPerCentimeter);\r\n    }\r\n    /** */\r\n    get NanonewtonsPerMillimeter() {\r\n        if (this.nanonewtonspermillimeterLazy !== null) {\r\n            return this.nanonewtonspermillimeterLazy;\r\n        }\r\n        return this.nanonewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.NanonewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MicronewtonsPerMillimeter() {\r\n        if (this.micronewtonspermillimeterLazy !== null) {\r\n            return this.micronewtonspermillimeterLazy;\r\n        }\r\n        return this.micronewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.MicronewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MillinewtonsPerMillimeter() {\r\n        if (this.millinewtonspermillimeterLazy !== null) {\r\n            return this.millinewtonspermillimeterLazy;\r\n        }\r\n        return this.millinewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.MillinewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get CentinewtonsPerMillimeter() {\r\n        if (this.centinewtonspermillimeterLazy !== null) {\r\n            return this.centinewtonspermillimeterLazy;\r\n        }\r\n        return this.centinewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.CentinewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get DecinewtonsPerMillimeter() {\r\n        if (this.decinewtonspermillimeterLazy !== null) {\r\n            return this.decinewtonspermillimeterLazy;\r\n        }\r\n        return this.decinewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.DecinewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get DecanewtonsPerMillimeter() {\r\n        if (this.decanewtonspermillimeterLazy !== null) {\r\n            return this.decanewtonspermillimeterLazy;\r\n        }\r\n        return this.decanewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.DecanewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerMillimeter() {\r\n        if (this.kilonewtonspermillimeterLazy !== null) {\r\n            return this.kilonewtonspermillimeterLazy;\r\n        }\r\n        return this.kilonewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.KilonewtonsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MeganewtonsPerMillimeter() {\r\n        if (this.meganewtonspermillimeterLazy !== null) {\r\n            return this.meganewtonspermillimeterLazy;\r\n        }\r\n        return this.meganewtonspermillimeterLazy = this.convertFromBase(ForcePerLengthUnits.MeganewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a NewtonsPerMeter\r\n     *\r\n     * @param value The unit as NewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromNewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.NewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a NewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as NewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromNewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.NewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a NewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as NewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromNewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.NewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilogramsForcePerMeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilogramsForcePerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilogramsForcePerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilogramsForcePerCentimeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilogramsForcePerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilogramsForcePerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilogramsForcePerMillimeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilogramsForcePerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilogramsForcePerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a TonnesForcePerMeter\r\n     *\r\n     * @param value The unit as TonnesForcePerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromTonnesForcePerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.TonnesForcePerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a TonnesForcePerCentimeter\r\n     *\r\n     * @param value The unit as TonnesForcePerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromTonnesForcePerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.TonnesForcePerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a TonnesForcePerMillimeter\r\n     *\r\n     * @param value The unit as TonnesForcePerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromTonnesForcePerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.TonnesForcePerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a PoundsForcePerFoot\r\n     *\r\n     * @param value The unit as PoundsForcePerFoot to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromPoundsForcePerFoot(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.PoundsForcePerFoot);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a PoundsForcePerInch\r\n     *\r\n     * @param value The unit as PoundsForcePerInch to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromPoundsForcePerInch(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.PoundsForcePerInch);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a PoundsForcePerYard\r\n     *\r\n     * @param value The unit as PoundsForcePerYard to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromPoundsForcePerYard(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.PoundsForcePerYard);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilopoundsForcePerFoot\r\n     *\r\n     * @param value The unit as KilopoundsForcePerFoot to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilopoundsForcePerFoot(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilopoundsForcePerFoot);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilopoundsForcePerInch\r\n     *\r\n     * @param value The unit as KilopoundsForcePerInch to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilopoundsForcePerInch(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilopoundsForcePerInch);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a NanonewtonsPerMeter\r\n     *\r\n     * @param value The unit as NanonewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromNanonewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.NanonewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MicronewtonsPerMeter\r\n     *\r\n     * @param value The unit as MicronewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMicronewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MicronewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MillinewtonsPerMeter\r\n     *\r\n     * @param value The unit as MillinewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMillinewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MillinewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a CentinewtonsPerMeter\r\n     *\r\n     * @param value The unit as CentinewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromCentinewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.CentinewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a DecinewtonsPerMeter\r\n     *\r\n     * @param value The unit as DecinewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromDecinewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.DecinewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a DecanewtonsPerMeter\r\n     *\r\n     * @param value The unit as DecanewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromDecanewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.DecanewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilonewtonsPerMeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilonewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilonewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MeganewtonsPerMeter\r\n     *\r\n     * @param value The unit as MeganewtonsPerMeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMeganewtonsPerMeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MeganewtonsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a NanonewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as NanonewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromNanonewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.NanonewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MicronewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as MicronewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMicronewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MicronewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MillinewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as MillinewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMillinewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MillinewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a CentinewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as CentinewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromCentinewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.CentinewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a DecinewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as DecinewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromDecinewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.DecinewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a DecanewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as DecanewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromDecanewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.DecanewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilonewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilonewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilonewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MeganewtonsPerCentimeter\r\n     *\r\n     * @param value The unit as MeganewtonsPerCentimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMeganewtonsPerCentimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MeganewtonsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a NanonewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as NanonewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromNanonewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.NanonewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MicronewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as MicronewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMicronewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MicronewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MillinewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as MillinewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMillinewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MillinewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a CentinewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as CentinewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromCentinewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.CentinewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a DecinewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as DecinewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromDecinewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.DecinewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a DecanewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as DecanewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromDecanewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.DecanewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a KilonewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromKilonewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.KilonewtonsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new ForcePerLength instance from a MeganewtonsPerMillimeter\r\n     *\r\n     * @param value The unit as MeganewtonsPerMillimeter to create a new ForcePerLength from.\r\n     * @returns The new ForcePerLength instance.\r\n     */\r\n    static FromMeganewtonsPerMillimeter(value) {\r\n        return new ForcePerLength(value, ForcePerLengthUnits.MeganewtonsPerMillimeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ForcePerLengthUnits.NewtonsPerMeter:\r\n                return this.value;\r\n            case ForcePerLengthUnits.NewtonsPerCentimeter:\r\n                return this.value / 1e2;\r\n            case ForcePerLengthUnits.NewtonsPerMillimeter:\r\n                return this.value / 1e3;\r\n            case ForcePerLengthUnits.KilogramsForcePerMeter:\r\n                return this.value / 9.80665002864;\r\n            case ForcePerLengthUnits.KilogramsForcePerCentimeter:\r\n                return this.value / 980.665002864;\r\n            case ForcePerLengthUnits.KilogramsForcePerMillimeter:\r\n                return this.value / 9.80665002864e3;\r\n            case ForcePerLengthUnits.TonnesForcePerMeter:\r\n                return this.value / 9.80665002864e3;\r\n            case ForcePerLengthUnits.TonnesForcePerCentimeter:\r\n                return this.value / 9.80665002864e5;\r\n            case ForcePerLengthUnits.TonnesForcePerMillimeter:\r\n                return this.value / 9.80665002864e6;\r\n            case ForcePerLengthUnits.PoundsForcePerFoot:\r\n                return this.value / 14.59390292;\r\n            case ForcePerLengthUnits.PoundsForcePerInch:\r\n                return this.value / 1.75126835e2;\r\n            case ForcePerLengthUnits.PoundsForcePerYard:\r\n                return this.value / 4.864634307;\r\n            case ForcePerLengthUnits.KilopoundsForcePerFoot:\r\n                return this.value / 14593.90292;\r\n            case ForcePerLengthUnits.KilopoundsForcePerInch:\r\n                return this.value / 1.75126835e5;\r\n            case ForcePerLengthUnits.NanonewtonsPerMeter:\r\n                return (this.value) / 1e-9;\r\n            case ForcePerLengthUnits.MicronewtonsPerMeter:\r\n                return (this.value) / 0.000001;\r\n            case ForcePerLengthUnits.MillinewtonsPerMeter:\r\n                return (this.value) / 0.001;\r\n            case ForcePerLengthUnits.CentinewtonsPerMeter:\r\n                return (this.value) / 0.01;\r\n            case ForcePerLengthUnits.DecinewtonsPerMeter:\r\n                return (this.value) / 0.1;\r\n            case ForcePerLengthUnits.DecanewtonsPerMeter:\r\n                return (this.value) / 10;\r\n            case ForcePerLengthUnits.KilonewtonsPerMeter:\r\n                return (this.value) / 1000;\r\n            case ForcePerLengthUnits.MeganewtonsPerMeter:\r\n                return (this.value) / 1000000;\r\n            case ForcePerLengthUnits.NanonewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 1e-9;\r\n            case ForcePerLengthUnits.MicronewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 0.000001;\r\n            case ForcePerLengthUnits.MillinewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 0.001;\r\n            case ForcePerLengthUnits.CentinewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 0.01;\r\n            case ForcePerLengthUnits.DecinewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 0.1;\r\n            case ForcePerLengthUnits.DecanewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 10;\r\n            case ForcePerLengthUnits.KilonewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 1000;\r\n            case ForcePerLengthUnits.MeganewtonsPerCentimeter:\r\n                return (this.value / 1e2) / 1000000;\r\n            case ForcePerLengthUnits.NanonewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 1e-9;\r\n            case ForcePerLengthUnits.MicronewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 0.000001;\r\n            case ForcePerLengthUnits.MillinewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 0.001;\r\n            case ForcePerLengthUnits.CentinewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 0.01;\r\n            case ForcePerLengthUnits.DecinewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 0.1;\r\n            case ForcePerLengthUnits.DecanewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 10;\r\n            case ForcePerLengthUnits.KilonewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 1000;\r\n            case ForcePerLengthUnits.MeganewtonsPerMillimeter:\r\n                return (this.value / 1e3) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ForcePerLengthUnits.NewtonsPerMeter:\r\n                return value;\r\n            case ForcePerLengthUnits.NewtonsPerCentimeter:\r\n                return value * 1e2;\r\n            case ForcePerLengthUnits.NewtonsPerMillimeter:\r\n                return value * 1e3;\r\n            case ForcePerLengthUnits.KilogramsForcePerMeter:\r\n                return value * 9.80665002864;\r\n            case ForcePerLengthUnits.KilogramsForcePerCentimeter:\r\n                return value * 980.665002864;\r\n            case ForcePerLengthUnits.KilogramsForcePerMillimeter:\r\n                return value * 9.80665002864e3;\r\n            case ForcePerLengthUnits.TonnesForcePerMeter:\r\n                return value * 9.80665002864e3;\r\n            case ForcePerLengthUnits.TonnesForcePerCentimeter:\r\n                return value * 9.80665002864e5;\r\n            case ForcePerLengthUnits.TonnesForcePerMillimeter:\r\n                return value * 9.80665002864e6;\r\n            case ForcePerLengthUnits.PoundsForcePerFoot:\r\n                return value * 14.59390292;\r\n            case ForcePerLengthUnits.PoundsForcePerInch:\r\n                return value * 1.75126835e2;\r\n            case ForcePerLengthUnits.PoundsForcePerYard:\r\n                return value * 4.864634307;\r\n            case ForcePerLengthUnits.KilopoundsForcePerFoot:\r\n                return value * 14593.90292;\r\n            case ForcePerLengthUnits.KilopoundsForcePerInch:\r\n                return value * 1.75126835e5;\r\n            case ForcePerLengthUnits.NanonewtonsPerMeter:\r\n                return (value) * 1e-9;\r\n            case ForcePerLengthUnits.MicronewtonsPerMeter:\r\n                return (value) * 0.000001;\r\n            case ForcePerLengthUnits.MillinewtonsPerMeter:\r\n                return (value) * 0.001;\r\n            case ForcePerLengthUnits.CentinewtonsPerMeter:\r\n                return (value) * 0.01;\r\n            case ForcePerLengthUnits.DecinewtonsPerMeter:\r\n                return (value) * 0.1;\r\n            case ForcePerLengthUnits.DecanewtonsPerMeter:\r\n                return (value) * 10;\r\n            case ForcePerLengthUnits.KilonewtonsPerMeter:\r\n                return (value) * 1000;\r\n            case ForcePerLengthUnits.MeganewtonsPerMeter:\r\n                return (value) * 1000000;\r\n            case ForcePerLengthUnits.NanonewtonsPerCentimeter:\r\n                return (value * 1e2) * 1e-9;\r\n            case ForcePerLengthUnits.MicronewtonsPerCentimeter:\r\n                return (value * 1e2) * 0.000001;\r\n            case ForcePerLengthUnits.MillinewtonsPerCentimeter:\r\n                return (value * 1e2) * 0.001;\r\n            case ForcePerLengthUnits.CentinewtonsPerCentimeter:\r\n                return (value * 1e2) * 0.01;\r\n            case ForcePerLengthUnits.DecinewtonsPerCentimeter:\r\n                return (value * 1e2) * 0.1;\r\n            case ForcePerLengthUnits.DecanewtonsPerCentimeter:\r\n                return (value * 1e2) * 10;\r\n            case ForcePerLengthUnits.KilonewtonsPerCentimeter:\r\n                return (value * 1e2) * 1000;\r\n            case ForcePerLengthUnits.MeganewtonsPerCentimeter:\r\n                return (value * 1e2) * 1000000;\r\n            case ForcePerLengthUnits.NanonewtonsPerMillimeter:\r\n                return (value * 1e3) * 1e-9;\r\n            case ForcePerLengthUnits.MicronewtonsPerMillimeter:\r\n                return (value * 1e3) * 0.000001;\r\n            case ForcePerLengthUnits.MillinewtonsPerMillimeter:\r\n                return (value * 1e3) * 0.001;\r\n            case ForcePerLengthUnits.CentinewtonsPerMillimeter:\r\n                return (value * 1e3) * 0.01;\r\n            case ForcePerLengthUnits.DecinewtonsPerMillimeter:\r\n                return (value * 1e3) * 0.1;\r\n            case ForcePerLengthUnits.DecanewtonsPerMillimeter:\r\n                return (value * 1e3) * 10;\r\n            case ForcePerLengthUnits.KilonewtonsPerMillimeter:\r\n                return (value * 1e3) * 1000;\r\n            case ForcePerLengthUnits.MeganewtonsPerMillimeter:\r\n                return (value * 1e3) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ForcePerLength to string.\r\n     * Note! the default format for ForcePerLength is NewtonsPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ForcePerLength.\r\n     * @returns The string format of the ForcePerLength.\r\n     */\r\n    toString(toUnit = ForcePerLengthUnits.NewtonsPerMeter) {\r\n        switch (toUnit) {\r\n            case ForcePerLengthUnits.NewtonsPerMeter:\r\n                return this.NewtonsPerMeter + ` N/m`;\r\n            case ForcePerLengthUnits.NewtonsPerCentimeter:\r\n                return this.NewtonsPerCentimeter + ` N/cm`;\r\n            case ForcePerLengthUnits.NewtonsPerMillimeter:\r\n                return this.NewtonsPerMillimeter + ` N/mm`;\r\n            case ForcePerLengthUnits.KilogramsForcePerMeter:\r\n                return this.KilogramsForcePerMeter + ` kgf/m`;\r\n            case ForcePerLengthUnits.KilogramsForcePerCentimeter:\r\n                return this.KilogramsForcePerCentimeter + ` kgf/cm`;\r\n            case ForcePerLengthUnits.KilogramsForcePerMillimeter:\r\n                return this.KilogramsForcePerMillimeter + ` kgf/mm`;\r\n            case ForcePerLengthUnits.TonnesForcePerMeter:\r\n                return this.TonnesForcePerMeter + ` tf/m`;\r\n            case ForcePerLengthUnits.TonnesForcePerCentimeter:\r\n                return this.TonnesForcePerCentimeter + ` tf/cm`;\r\n            case ForcePerLengthUnits.TonnesForcePerMillimeter:\r\n                return this.TonnesForcePerMillimeter + ` tf/mm`;\r\n            case ForcePerLengthUnits.PoundsForcePerFoot:\r\n                return this.PoundsForcePerFoot + ` lbf/ft`;\r\n            case ForcePerLengthUnits.PoundsForcePerInch:\r\n                return this.PoundsForcePerInch + ` lbf/in`;\r\n            case ForcePerLengthUnits.PoundsForcePerYard:\r\n                return this.PoundsForcePerYard + ` lbf/yd`;\r\n            case ForcePerLengthUnits.KilopoundsForcePerFoot:\r\n                return this.KilopoundsForcePerFoot + ` kipf/ft`;\r\n            case ForcePerLengthUnits.KilopoundsForcePerInch:\r\n                return this.KilopoundsForcePerInch + ` kipf/in`;\r\n            case ForcePerLengthUnits.NanonewtonsPerMeter:\r\n                return this.NanonewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.MicronewtonsPerMeter:\r\n                return this.MicronewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.MillinewtonsPerMeter:\r\n                return this.MillinewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.CentinewtonsPerMeter:\r\n                return this.CentinewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.DecinewtonsPerMeter:\r\n                return this.DecinewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.DecanewtonsPerMeter:\r\n                return this.DecanewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.KilonewtonsPerMeter:\r\n                return this.KilonewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.MeganewtonsPerMeter:\r\n                return this.MeganewtonsPerMeter + ` `;\r\n            case ForcePerLengthUnits.NanonewtonsPerCentimeter:\r\n                return this.NanonewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.MicronewtonsPerCentimeter:\r\n                return this.MicronewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.MillinewtonsPerCentimeter:\r\n                return this.MillinewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.CentinewtonsPerCentimeter:\r\n                return this.CentinewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.DecinewtonsPerCentimeter:\r\n                return this.DecinewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.DecanewtonsPerCentimeter:\r\n                return this.DecanewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.KilonewtonsPerCentimeter:\r\n                return this.KilonewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.MeganewtonsPerCentimeter:\r\n                return this.MeganewtonsPerCentimeter + ` `;\r\n            case ForcePerLengthUnits.NanonewtonsPerMillimeter:\r\n                return this.NanonewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.MicronewtonsPerMillimeter:\r\n                return this.MicronewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.MillinewtonsPerMillimeter:\r\n                return this.MillinewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.CentinewtonsPerMillimeter:\r\n                return this.CentinewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.DecinewtonsPerMillimeter:\r\n                return this.DecinewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.DecanewtonsPerMillimeter:\r\n                return this.DecanewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.KilonewtonsPerMillimeter:\r\n                return this.KilonewtonsPerMillimeter + ` `;\r\n            case ForcePerLengthUnits.MeganewtonsPerMillimeter:\r\n                return this.MeganewtonsPerMillimeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ForcePerLength are equals to the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns True if the given ForcePerLength are equal to the current ForcePerLength.\r\n     */\r\n    equals(forcePerLength) {\r\n        return this.value === forcePerLength.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ForcePerLength against the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns 0 if they are equal, -1 if the current ForcePerLength is less then other, 1 if the current ForcePerLength is greater then other.\r\n     */\r\n    compareTo(forcePerLength) {\r\n        if (this.value > forcePerLength.BaseValue)\r\n            return 1;\r\n        if (this.value < forcePerLength.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ForcePerLength with the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns A new ForcePerLength instance with the results.\r\n     */\r\n    add(forcePerLength) {\r\n        return new ForcePerLength(this.value + forcePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ForcePerLength with the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns A new ForcePerLength instance with the results.\r\n     */\r\n    subtract(forcePerLength) {\r\n        return new ForcePerLength(this.value - forcePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ForcePerLength with the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns A new ForcePerLength instance with the results.\r\n     */\r\n    multiply(forcePerLength) {\r\n        return new ForcePerLength(this.value * forcePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ForcePerLength with the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns A new ForcePerLength instance with the results.\r\n     */\r\n    divide(forcePerLength) {\r\n        return new ForcePerLength(this.value / forcePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ForcePerLength with the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns A new ForcePerLength instance with the results.\r\n     */\r\n    modulo(forcePerLength) {\r\n        return new ForcePerLength(this.value % forcePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ForcePerLength with the current ForcePerLength.\r\n     * @param forcePerLength The other ForcePerLength.\r\n     * @returns A new ForcePerLength instance with the results.\r\n     */\r\n    pow(forcePerLength) {\r\n        return new ForcePerLength(this.value ** forcePerLength.BaseValue);\r\n    }\r\n}\r\nexports.ForcePerLength = ForcePerLength;\r\n//# sourceMappingURL=forceperlength.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Frequency = exports.FrequencyUnits = void 0;\r\n/** FrequencyUnits enumeration */\r\nvar FrequencyUnits;\r\n(function (FrequencyUnits) {\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"Hertz\"] = 0] = \"Hertz\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"RadiansPerSecond\"] = 1] = \"RadiansPerSecond\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"CyclesPerMinute\"] = 2] = \"CyclesPerMinute\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"CyclesPerHour\"] = 3] = \"CyclesPerHour\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"BeatsPerMinute\"] = 4] = \"BeatsPerMinute\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"PerSecond\"] = 5] = \"PerSecond\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"BUnits\"] = 6] = \"BUnits\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"Kilohertz\"] = 7] = \"Kilohertz\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"Megahertz\"] = 8] = \"Megahertz\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"Gigahertz\"] = 9] = \"Gigahertz\";\r\n    /** */\r\n    FrequencyUnits[FrequencyUnits[\"Terahertz\"] = 10] = \"Terahertz\";\r\n})(FrequencyUnits = exports.FrequencyUnits || (exports.FrequencyUnits = {}));\r\n/** The number of occurrences of a repeating event per unit time. */\r\nclass Frequency {\r\n    /**\r\n     * Create a new Frequency.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Frequency’ unit to create from.\r\n     * The default unit is Hertz\r\n     */\r\n    constructor(value, fromUnit = FrequencyUnits.Hertz) {\r\n        this.hertzLazy = null;\r\n        this.radianspersecondLazy = null;\r\n        this.cyclesperminuteLazy = null;\r\n        this.cyclesperhourLazy = null;\r\n        this.beatsperminuteLazy = null;\r\n        this.persecondLazy = null;\r\n        this.bunitsLazy = null;\r\n        this.kilohertzLazy = null;\r\n        this.megahertzLazy = null;\r\n        this.gigahertzLazy = null;\r\n        this.terahertzLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Frequency is Hertz.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Hertz() {\r\n        if (this.hertzLazy !== null) {\r\n            return this.hertzLazy;\r\n        }\r\n        return this.hertzLazy = this.convertFromBase(FrequencyUnits.Hertz);\r\n    }\r\n    /** */\r\n    get RadiansPerSecond() {\r\n        if (this.radianspersecondLazy !== null) {\r\n            return this.radianspersecondLazy;\r\n        }\r\n        return this.radianspersecondLazy = this.convertFromBase(FrequencyUnits.RadiansPerSecond);\r\n    }\r\n    /** */\r\n    get CyclesPerMinute() {\r\n        if (this.cyclesperminuteLazy !== null) {\r\n            return this.cyclesperminuteLazy;\r\n        }\r\n        return this.cyclesperminuteLazy = this.convertFromBase(FrequencyUnits.CyclesPerMinute);\r\n    }\r\n    /** */\r\n    get CyclesPerHour() {\r\n        if (this.cyclesperhourLazy !== null) {\r\n            return this.cyclesperhourLazy;\r\n        }\r\n        return this.cyclesperhourLazy = this.convertFromBase(FrequencyUnits.CyclesPerHour);\r\n    }\r\n    /** */\r\n    get BeatsPerMinute() {\r\n        if (this.beatsperminuteLazy !== null) {\r\n            return this.beatsperminuteLazy;\r\n        }\r\n        return this.beatsperminuteLazy = this.convertFromBase(FrequencyUnits.BeatsPerMinute);\r\n    }\r\n    /** */\r\n    get PerSecond() {\r\n        if (this.persecondLazy !== null) {\r\n            return this.persecondLazy;\r\n        }\r\n        return this.persecondLazy = this.convertFromBase(FrequencyUnits.PerSecond);\r\n    }\r\n    /** */\r\n    get BUnits() {\r\n        if (this.bunitsLazy !== null) {\r\n            return this.bunitsLazy;\r\n        }\r\n        return this.bunitsLazy = this.convertFromBase(FrequencyUnits.BUnits);\r\n    }\r\n    /** */\r\n    get Kilohertz() {\r\n        if (this.kilohertzLazy !== null) {\r\n            return this.kilohertzLazy;\r\n        }\r\n        return this.kilohertzLazy = this.convertFromBase(FrequencyUnits.Kilohertz);\r\n    }\r\n    /** */\r\n    get Megahertz() {\r\n        if (this.megahertzLazy !== null) {\r\n            return this.megahertzLazy;\r\n        }\r\n        return this.megahertzLazy = this.convertFromBase(FrequencyUnits.Megahertz);\r\n    }\r\n    /** */\r\n    get Gigahertz() {\r\n        if (this.gigahertzLazy !== null) {\r\n            return this.gigahertzLazy;\r\n        }\r\n        return this.gigahertzLazy = this.convertFromBase(FrequencyUnits.Gigahertz);\r\n    }\r\n    /** */\r\n    get Terahertz() {\r\n        if (this.terahertzLazy !== null) {\r\n            return this.terahertzLazy;\r\n        }\r\n        return this.terahertzLazy = this.convertFromBase(FrequencyUnits.Terahertz);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a Hertz\r\n     *\r\n     * @param value The unit as Hertz to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromHertz(value) {\r\n        return new Frequency(value, FrequencyUnits.Hertz);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a RadiansPerSecond\r\n     *\r\n     * @param value The unit as RadiansPerSecond to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromRadiansPerSecond(value) {\r\n        return new Frequency(value, FrequencyUnits.RadiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a CyclesPerMinute\r\n     *\r\n     * @param value The unit as CyclesPerMinute to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromCyclesPerMinute(value) {\r\n        return new Frequency(value, FrequencyUnits.CyclesPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a CyclesPerHour\r\n     *\r\n     * @param value The unit as CyclesPerHour to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromCyclesPerHour(value) {\r\n        return new Frequency(value, FrequencyUnits.CyclesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a BeatsPerMinute\r\n     *\r\n     * @param value The unit as BeatsPerMinute to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromBeatsPerMinute(value) {\r\n        return new Frequency(value, FrequencyUnits.BeatsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a PerSecond\r\n     *\r\n     * @param value The unit as PerSecond to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromPerSecond(value) {\r\n        return new Frequency(value, FrequencyUnits.PerSecond);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a BUnits\r\n     *\r\n     * @param value The unit as BUnits to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromBUnits(value) {\r\n        return new Frequency(value, FrequencyUnits.BUnits);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a Kilohertz\r\n     *\r\n     * @param value The unit as Kilohertz to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromKilohertz(value) {\r\n        return new Frequency(value, FrequencyUnits.Kilohertz);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a Megahertz\r\n     *\r\n     * @param value The unit as Megahertz to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromMegahertz(value) {\r\n        return new Frequency(value, FrequencyUnits.Megahertz);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a Gigahertz\r\n     *\r\n     * @param value The unit as Gigahertz to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromGigahertz(value) {\r\n        return new Frequency(value, FrequencyUnits.Gigahertz);\r\n    }\r\n    /**\r\n     * Create a new Frequency instance from a Terahertz\r\n     *\r\n     * @param value The unit as Terahertz to create a new Frequency from.\r\n     * @returns The new Frequency instance.\r\n     */\r\n    static FromTerahertz(value) {\r\n        return new Frequency(value, FrequencyUnits.Terahertz);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case FrequencyUnits.Hertz:\r\n                return this.value;\r\n            case FrequencyUnits.RadiansPerSecond:\r\n                return this.value * 6.2831853072;\r\n            case FrequencyUnits.CyclesPerMinute:\r\n                return this.value * 60;\r\n            case FrequencyUnits.CyclesPerHour:\r\n                return this.value * 3600;\r\n            case FrequencyUnits.BeatsPerMinute:\r\n                return this.value * 60;\r\n            case FrequencyUnits.PerSecond:\r\n                return this.value;\r\n            case FrequencyUnits.BUnits:\r\n                return this.value * this.value * 1e-3;\r\n            case FrequencyUnits.Kilohertz:\r\n                return (this.value) / 1000;\r\n            case FrequencyUnits.Megahertz:\r\n                return (this.value) / 1000000;\r\n            case FrequencyUnits.Gigahertz:\r\n                return (this.value) / 1000000000;\r\n            case FrequencyUnits.Terahertz:\r\n                return (this.value) / 1000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case FrequencyUnits.Hertz:\r\n                return value;\r\n            case FrequencyUnits.RadiansPerSecond:\r\n                return value / 6.2831853072;\r\n            case FrequencyUnits.CyclesPerMinute:\r\n                return value / 60;\r\n            case FrequencyUnits.CyclesPerHour:\r\n                return value / 3600;\r\n            case FrequencyUnits.BeatsPerMinute:\r\n                return value / 60;\r\n            case FrequencyUnits.PerSecond:\r\n                return value;\r\n            case FrequencyUnits.BUnits:\r\n                return Math.sqrt(value * 1e3);\r\n            case FrequencyUnits.Kilohertz:\r\n                return (value) * 1000;\r\n            case FrequencyUnits.Megahertz:\r\n                return (value) * 1000000;\r\n            case FrequencyUnits.Gigahertz:\r\n                return (value) * 1000000000;\r\n            case FrequencyUnits.Terahertz:\r\n                return (value) * 1000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Frequency to string.\r\n     * Note! the default format for Frequency is Hertz.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Frequency.\r\n     * @returns The string format of the Frequency.\r\n     */\r\n    toString(toUnit = FrequencyUnits.Hertz) {\r\n        switch (toUnit) {\r\n            case FrequencyUnits.Hertz:\r\n                return this.Hertz + ` Hz`;\r\n            case FrequencyUnits.RadiansPerSecond:\r\n                return this.RadiansPerSecond + ` rad/s`;\r\n            case FrequencyUnits.CyclesPerMinute:\r\n                return this.CyclesPerMinute + ` cpm`;\r\n            case FrequencyUnits.CyclesPerHour:\r\n                return this.CyclesPerHour + ` cph`;\r\n            case FrequencyUnits.BeatsPerMinute:\r\n                return this.BeatsPerMinute + ` bpm`;\r\n            case FrequencyUnits.PerSecond:\r\n                return this.PerSecond + ` s⁻¹`;\r\n            case FrequencyUnits.BUnits:\r\n                return this.BUnits + ` B Units`;\r\n            case FrequencyUnits.Kilohertz:\r\n                return this.Kilohertz + ` `;\r\n            case FrequencyUnits.Megahertz:\r\n                return this.Megahertz + ` `;\r\n            case FrequencyUnits.Gigahertz:\r\n                return this.Gigahertz + ` `;\r\n            case FrequencyUnits.Terahertz:\r\n                return this.Terahertz + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Frequency are equals to the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns True if the given Frequency are equal to the current Frequency.\r\n     */\r\n    equals(frequency) {\r\n        return this.value === frequency.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Frequency against the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns 0 if they are equal, -1 if the current Frequency is less then other, 1 if the current Frequency is greater then other.\r\n     */\r\n    compareTo(frequency) {\r\n        if (this.value > frequency.BaseValue)\r\n            return 1;\r\n        if (this.value < frequency.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Frequency with the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns A new Frequency instance with the results.\r\n     */\r\n    add(frequency) {\r\n        return new Frequency(this.value + frequency.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Frequency with the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns A new Frequency instance with the results.\r\n     */\r\n    subtract(frequency) {\r\n        return new Frequency(this.value - frequency.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Frequency with the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns A new Frequency instance with the results.\r\n     */\r\n    multiply(frequency) {\r\n        return new Frequency(this.value * frequency.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Frequency with the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns A new Frequency instance with the results.\r\n     */\r\n    divide(frequency) {\r\n        return new Frequency(this.value / frequency.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Frequency with the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns A new Frequency instance with the results.\r\n     */\r\n    modulo(frequency) {\r\n        return new Frequency(this.value % frequency.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Frequency with the current Frequency.\r\n     * @param frequency The other Frequency.\r\n     * @returns A new Frequency instance with the results.\r\n     */\r\n    pow(frequency) {\r\n        return new Frequency(this.value ** frequency.BaseValue);\r\n    }\r\n}\r\nexports.Frequency = Frequency;\r\n//# sourceMappingURL=frequency.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FuelEfficiency = exports.FuelEfficiencyUnits = void 0;\r\n/** FuelEfficiencyUnits enumeration */\r\nvar FuelEfficiencyUnits;\r\n(function (FuelEfficiencyUnits) {\r\n    /** */\r\n    FuelEfficiencyUnits[FuelEfficiencyUnits[\"LitersPer100Kilometers\"] = 0] = \"LitersPer100Kilometers\";\r\n    /** */\r\n    FuelEfficiencyUnits[FuelEfficiencyUnits[\"MilesPerUsGallon\"] = 1] = \"MilesPerUsGallon\";\r\n    /** */\r\n    FuelEfficiencyUnits[FuelEfficiencyUnits[\"MilesPerUkGallon\"] = 2] = \"MilesPerUkGallon\";\r\n    /** */\r\n    FuelEfficiencyUnits[FuelEfficiencyUnits[\"KilometersPerLiters\"] = 3] = \"KilometersPerLiters\";\r\n})(FuelEfficiencyUnits = exports.FuelEfficiencyUnits || (exports.FuelEfficiencyUnits = {}));\r\n/** Fuel efficiency is a form of thermal efficiency, meaning the ratio from effort to result of a process that converts chemical potential energy contained in a carrier (fuel) into kinetic energy or work. Fuel economy is stated as \"fuel consumption\" in liters per 100 kilometers (L/100 km). In countries using non-metric system, fuel economy is expressed in miles per gallon (mpg) (imperial galon or US galon). */\r\nclass FuelEfficiency {\r\n    /**\r\n     * Create a new FuelEfficiency.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘FuelEfficiency’ unit to create from.\r\n     * The default unit is LitersPer100Kilometers\r\n     */\r\n    constructor(value, fromUnit = FuelEfficiencyUnits.LitersPer100Kilometers) {\r\n        this.litersper100kilometersLazy = null;\r\n        this.milesperusgallonLazy = null;\r\n        this.milesperukgallonLazy = null;\r\n        this.kilometersperlitersLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of FuelEfficiency is LitersPer100Kilometers.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get LitersPer100Kilometers() {\r\n        if (this.litersper100kilometersLazy !== null) {\r\n            return this.litersper100kilometersLazy;\r\n        }\r\n        return this.litersper100kilometersLazy = this.convertFromBase(FuelEfficiencyUnits.LitersPer100Kilometers);\r\n    }\r\n    /** */\r\n    get MilesPerUsGallon() {\r\n        if (this.milesperusgallonLazy !== null) {\r\n            return this.milesperusgallonLazy;\r\n        }\r\n        return this.milesperusgallonLazy = this.convertFromBase(FuelEfficiencyUnits.MilesPerUsGallon);\r\n    }\r\n    /** */\r\n    get MilesPerUkGallon() {\r\n        if (this.milesperukgallonLazy !== null) {\r\n            return this.milesperukgallonLazy;\r\n        }\r\n        return this.milesperukgallonLazy = this.convertFromBase(FuelEfficiencyUnits.MilesPerUkGallon);\r\n    }\r\n    /** */\r\n    get KilometersPerLiters() {\r\n        if (this.kilometersperlitersLazy !== null) {\r\n            return this.kilometersperlitersLazy;\r\n        }\r\n        return this.kilometersperlitersLazy = this.convertFromBase(FuelEfficiencyUnits.KilometersPerLiters);\r\n    }\r\n    /**\r\n     * Create a new FuelEfficiency instance from a LitersPer100Kilometers\r\n     *\r\n     * @param value The unit as LitersPer100Kilometers to create a new FuelEfficiency from.\r\n     * @returns The new FuelEfficiency instance.\r\n     */\r\n    static FromLitersPer100Kilometers(value) {\r\n        return new FuelEfficiency(value, FuelEfficiencyUnits.LitersPer100Kilometers);\r\n    }\r\n    /**\r\n     * Create a new FuelEfficiency instance from a MilesPerUsGallon\r\n     *\r\n     * @param value The unit as MilesPerUsGallon to create a new FuelEfficiency from.\r\n     * @returns The new FuelEfficiency instance.\r\n     */\r\n    static FromMilesPerUsGallon(value) {\r\n        return new FuelEfficiency(value, FuelEfficiencyUnits.MilesPerUsGallon);\r\n    }\r\n    /**\r\n     * Create a new FuelEfficiency instance from a MilesPerUkGallon\r\n     *\r\n     * @param value The unit as MilesPerUkGallon to create a new FuelEfficiency from.\r\n     * @returns The new FuelEfficiency instance.\r\n     */\r\n    static FromMilesPerUkGallon(value) {\r\n        return new FuelEfficiency(value, FuelEfficiencyUnits.MilesPerUkGallon);\r\n    }\r\n    /**\r\n     * Create a new FuelEfficiency instance from a KilometersPerLiters\r\n     *\r\n     * @param value The unit as KilometersPerLiters to create a new FuelEfficiency from.\r\n     * @returns The new FuelEfficiency instance.\r\n     */\r\n    static FromKilometersPerLiters(value) {\r\n        return new FuelEfficiency(value, FuelEfficiencyUnits.KilometersPerLiters);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case FuelEfficiencyUnits.LitersPer100Kilometers:\r\n                return this.value;\r\n            case FuelEfficiencyUnits.MilesPerUsGallon:\r\n                return (100 * 3.785411784) / (1.609344 * this.value);\r\n            case FuelEfficiencyUnits.MilesPerUkGallon:\r\n                return (100 * 4.54609188) / (1.609344 * this.value);\r\n            case FuelEfficiencyUnits.KilometersPerLiters:\r\n                return 100 / this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case FuelEfficiencyUnits.LitersPer100Kilometers:\r\n                return value;\r\n            case FuelEfficiencyUnits.MilesPerUsGallon:\r\n                return (100 * 3.785411784) / (1.609344 * value);\r\n            case FuelEfficiencyUnits.MilesPerUkGallon:\r\n                return (100 * 4.54609188) / (1.609344 * value);\r\n            case FuelEfficiencyUnits.KilometersPerLiters:\r\n                return 100 / value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the FuelEfficiency to string.\r\n     * Note! the default format for FuelEfficiency is LitersPer100Kilometers.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the FuelEfficiency.\r\n     * @returns The string format of the FuelEfficiency.\r\n     */\r\n    toString(toUnit = FuelEfficiencyUnits.LitersPer100Kilometers) {\r\n        switch (toUnit) {\r\n            case FuelEfficiencyUnits.LitersPer100Kilometers:\r\n                return this.LitersPer100Kilometers + ` L/100km`;\r\n            case FuelEfficiencyUnits.MilesPerUsGallon:\r\n                return this.MilesPerUsGallon + ` mpg (U.S.)`;\r\n            case FuelEfficiencyUnits.MilesPerUkGallon:\r\n                return this.MilesPerUkGallon + ` mpg (imp.)`;\r\n            case FuelEfficiencyUnits.KilometersPerLiters:\r\n                return this.KilometersPerLiters + ` km/L`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given FuelEfficiency are equals to the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns True if the given FuelEfficiency are equal to the current FuelEfficiency.\r\n     */\r\n    equals(fuelEfficiency) {\r\n        return this.value === fuelEfficiency.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given FuelEfficiency against the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns 0 if they are equal, -1 if the current FuelEfficiency is less then other, 1 if the current FuelEfficiency is greater then other.\r\n     */\r\n    compareTo(fuelEfficiency) {\r\n        if (this.value > fuelEfficiency.BaseValue)\r\n            return 1;\r\n        if (this.value < fuelEfficiency.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given FuelEfficiency with the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns A new FuelEfficiency instance with the results.\r\n     */\r\n    add(fuelEfficiency) {\r\n        return new FuelEfficiency(this.value + fuelEfficiency.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given FuelEfficiency with the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns A new FuelEfficiency instance with the results.\r\n     */\r\n    subtract(fuelEfficiency) {\r\n        return new FuelEfficiency(this.value - fuelEfficiency.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given FuelEfficiency with the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns A new FuelEfficiency instance with the results.\r\n     */\r\n    multiply(fuelEfficiency) {\r\n        return new FuelEfficiency(this.value * fuelEfficiency.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given FuelEfficiency with the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns A new FuelEfficiency instance with the results.\r\n     */\r\n    divide(fuelEfficiency) {\r\n        return new FuelEfficiency(this.value / fuelEfficiency.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given FuelEfficiency with the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns A new FuelEfficiency instance with the results.\r\n     */\r\n    modulo(fuelEfficiency) {\r\n        return new FuelEfficiency(this.value % fuelEfficiency.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given FuelEfficiency with the current FuelEfficiency.\r\n     * @param fuelEfficiency The other FuelEfficiency.\r\n     * @returns A new FuelEfficiency instance with the results.\r\n     */\r\n    pow(fuelEfficiency) {\r\n        return new FuelEfficiency(this.value ** fuelEfficiency.BaseValue);\r\n    }\r\n}\r\nexports.FuelEfficiency = FuelEfficiency;\r\n//# sourceMappingURL=fuelefficiency.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HeatFlux = exports.HeatFluxUnits = void 0;\r\n/** HeatFluxUnits enumeration */\r\nvar HeatFluxUnits;\r\n(function (HeatFluxUnits) {\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"WattsPerSquareMeter\"] = 0] = \"WattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"WattsPerSquareInch\"] = 1] = \"WattsPerSquareInch\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"WattsPerSquareFoot\"] = 2] = \"WattsPerSquareFoot\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"BtusPerSecondSquareInch\"] = 3] = \"BtusPerSecondSquareInch\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"BtusPerSecondSquareFoot\"] = 4] = \"BtusPerSecondSquareFoot\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"BtusPerMinuteSquareFoot\"] = 5] = \"BtusPerMinuteSquareFoot\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"BtusPerHourSquareFoot\"] = 6] = \"BtusPerHourSquareFoot\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"CaloriesPerSecondSquareCentimeter\"] = 7] = \"CaloriesPerSecondSquareCentimeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"KilocaloriesPerHourSquareMeter\"] = 8] = \"KilocaloriesPerHourSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"PoundsForcePerFootSecond\"] = 9] = \"PoundsForcePerFootSecond\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"PoundsPerSecondCubed\"] = 10] = \"PoundsPerSecondCubed\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"NanowattsPerSquareMeter\"] = 11] = \"NanowattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"MicrowattsPerSquareMeter\"] = 12] = \"MicrowattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"MilliwattsPerSquareMeter\"] = 13] = \"MilliwattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"CentiwattsPerSquareMeter\"] = 14] = \"CentiwattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"DeciwattsPerSquareMeter\"] = 15] = \"DeciwattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"KilowattsPerSquareMeter\"] = 16] = \"KilowattsPerSquareMeter\";\r\n    /** */\r\n    HeatFluxUnits[HeatFluxUnits[\"KilocaloriesPerSecondSquareCentimeter\"] = 17] = \"KilocaloriesPerSecondSquareCentimeter\";\r\n})(HeatFluxUnits = exports.HeatFluxUnits || (exports.HeatFluxUnits = {}));\r\n/** Heat flux is the flow of energy per unit of area per unit of time */\r\nclass HeatFlux {\r\n    /**\r\n     * Create a new HeatFlux.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘HeatFlux’ unit to create from.\r\n     * The default unit is WattsPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = HeatFluxUnits.WattsPerSquareMeter) {\r\n        this.wattspersquaremeterLazy = null;\r\n        this.wattspersquareinchLazy = null;\r\n        this.wattspersquarefootLazy = null;\r\n        this.btuspersecondsquareinchLazy = null;\r\n        this.btuspersecondsquarefootLazy = null;\r\n        this.btusperminutesquarefootLazy = null;\r\n        this.btusperhoursquarefootLazy = null;\r\n        this.caloriespersecondsquarecentimeterLazy = null;\r\n        this.kilocaloriesperhoursquaremeterLazy = null;\r\n        this.poundsforceperfootsecondLazy = null;\r\n        this.poundspersecondcubedLazy = null;\r\n        this.nanowattspersquaremeterLazy = null;\r\n        this.microwattspersquaremeterLazy = null;\r\n        this.milliwattspersquaremeterLazy = null;\r\n        this.centiwattspersquaremeterLazy = null;\r\n        this.deciwattspersquaremeterLazy = null;\r\n        this.kilowattspersquaremeterLazy = null;\r\n        this.kilocaloriespersecondsquarecentimeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of HeatFlux is WattsPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get WattsPerSquareMeter() {\r\n        if (this.wattspersquaremeterLazy !== null) {\r\n            return this.wattspersquaremeterLazy;\r\n        }\r\n        return this.wattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.WattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get WattsPerSquareInch() {\r\n        if (this.wattspersquareinchLazy !== null) {\r\n            return this.wattspersquareinchLazy;\r\n        }\r\n        return this.wattspersquareinchLazy = this.convertFromBase(HeatFluxUnits.WattsPerSquareInch);\r\n    }\r\n    /** */\r\n    get WattsPerSquareFoot() {\r\n        if (this.wattspersquarefootLazy !== null) {\r\n            return this.wattspersquarefootLazy;\r\n        }\r\n        return this.wattspersquarefootLazy = this.convertFromBase(HeatFluxUnits.WattsPerSquareFoot);\r\n    }\r\n    /** */\r\n    get BtusPerSecondSquareInch() {\r\n        if (this.btuspersecondsquareinchLazy !== null) {\r\n            return this.btuspersecondsquareinchLazy;\r\n        }\r\n        return this.btuspersecondsquareinchLazy = this.convertFromBase(HeatFluxUnits.BtusPerSecondSquareInch);\r\n    }\r\n    /** */\r\n    get BtusPerSecondSquareFoot() {\r\n        if (this.btuspersecondsquarefootLazy !== null) {\r\n            return this.btuspersecondsquarefootLazy;\r\n        }\r\n        return this.btuspersecondsquarefootLazy = this.convertFromBase(HeatFluxUnits.BtusPerSecondSquareFoot);\r\n    }\r\n    /** */\r\n    get BtusPerMinuteSquareFoot() {\r\n        if (this.btusperminutesquarefootLazy !== null) {\r\n            return this.btusperminutesquarefootLazy;\r\n        }\r\n        return this.btusperminutesquarefootLazy = this.convertFromBase(HeatFluxUnits.BtusPerMinuteSquareFoot);\r\n    }\r\n    /** */\r\n    get BtusPerHourSquareFoot() {\r\n        if (this.btusperhoursquarefootLazy !== null) {\r\n            return this.btusperhoursquarefootLazy;\r\n        }\r\n        return this.btusperhoursquarefootLazy = this.convertFromBase(HeatFluxUnits.BtusPerHourSquareFoot);\r\n    }\r\n    /** */\r\n    get CaloriesPerSecondSquareCentimeter() {\r\n        if (this.caloriespersecondsquarecentimeterLazy !== null) {\r\n            return this.caloriespersecondsquarecentimeterLazy;\r\n        }\r\n        return this.caloriespersecondsquarecentimeterLazy = this.convertFromBase(HeatFluxUnits.CaloriesPerSecondSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilocaloriesPerHourSquareMeter() {\r\n        if (this.kilocaloriesperhoursquaremeterLazy !== null) {\r\n            return this.kilocaloriesperhoursquaremeterLazy;\r\n        }\r\n        return this.kilocaloriesperhoursquaremeterLazy = this.convertFromBase(HeatFluxUnits.KilocaloriesPerHourSquareMeter);\r\n    }\r\n    /** */\r\n    get PoundsForcePerFootSecond() {\r\n        if (this.poundsforceperfootsecondLazy !== null) {\r\n            return this.poundsforceperfootsecondLazy;\r\n        }\r\n        return this.poundsforceperfootsecondLazy = this.convertFromBase(HeatFluxUnits.PoundsForcePerFootSecond);\r\n    }\r\n    /** */\r\n    get PoundsPerSecondCubed() {\r\n        if (this.poundspersecondcubedLazy !== null) {\r\n            return this.poundspersecondcubedLazy;\r\n        }\r\n        return this.poundspersecondcubedLazy = this.convertFromBase(HeatFluxUnits.PoundsPerSecondCubed);\r\n    }\r\n    /** */\r\n    get NanowattsPerSquareMeter() {\r\n        if (this.nanowattspersquaremeterLazy !== null) {\r\n            return this.nanowattspersquaremeterLazy;\r\n        }\r\n        return this.nanowattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.NanowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MicrowattsPerSquareMeter() {\r\n        if (this.microwattspersquaremeterLazy !== null) {\r\n            return this.microwattspersquaremeterLazy;\r\n        }\r\n        return this.microwattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.MicrowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerSquareMeter() {\r\n        if (this.milliwattspersquaremeterLazy !== null) {\r\n            return this.milliwattspersquaremeterLazy;\r\n        }\r\n        return this.milliwattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.MilliwattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get CentiwattsPerSquareMeter() {\r\n        if (this.centiwattspersquaremeterLazy !== null) {\r\n            return this.centiwattspersquaremeterLazy;\r\n        }\r\n        return this.centiwattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.CentiwattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get DeciwattsPerSquareMeter() {\r\n        if (this.deciwattspersquaremeterLazy !== null) {\r\n            return this.deciwattspersquaremeterLazy;\r\n        }\r\n        return this.deciwattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.DeciwattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerSquareMeter() {\r\n        if (this.kilowattspersquaremeterLazy !== null) {\r\n            return this.kilowattspersquaremeterLazy;\r\n        }\r\n        return this.kilowattspersquaremeterLazy = this.convertFromBase(HeatFluxUnits.KilowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilocaloriesPerSecondSquareCentimeter() {\r\n        if (this.kilocaloriespersecondsquarecentimeterLazy !== null) {\r\n            return this.kilocaloriespersecondsquarecentimeterLazy;\r\n        }\r\n        return this.kilocaloriespersecondsquarecentimeterLazy = this.convertFromBase(HeatFluxUnits.KilocaloriesPerSecondSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a WattsPerSquareMeter\r\n     *\r\n     * @param value The unit as WattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromWattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.WattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a WattsPerSquareInch\r\n     *\r\n     * @param value The unit as WattsPerSquareInch to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromWattsPerSquareInch(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.WattsPerSquareInch);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a WattsPerSquareFoot\r\n     *\r\n     * @param value The unit as WattsPerSquareFoot to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromWattsPerSquareFoot(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.WattsPerSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a BtusPerSecondSquareInch\r\n     *\r\n     * @param value The unit as BtusPerSecondSquareInch to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromBtusPerSecondSquareInch(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.BtusPerSecondSquareInch);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a BtusPerSecondSquareFoot\r\n     *\r\n     * @param value The unit as BtusPerSecondSquareFoot to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromBtusPerSecondSquareFoot(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.BtusPerSecondSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a BtusPerMinuteSquareFoot\r\n     *\r\n     * @param value The unit as BtusPerMinuteSquareFoot to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromBtusPerMinuteSquareFoot(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.BtusPerMinuteSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a BtusPerHourSquareFoot\r\n     *\r\n     * @param value The unit as BtusPerHourSquareFoot to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromBtusPerHourSquareFoot(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.BtusPerHourSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a CaloriesPerSecondSquareCentimeter\r\n     *\r\n     * @param value The unit as CaloriesPerSecondSquareCentimeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromCaloriesPerSecondSquareCentimeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.CaloriesPerSecondSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a KilocaloriesPerHourSquareMeter\r\n     *\r\n     * @param value The unit as KilocaloriesPerHourSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromKilocaloriesPerHourSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.KilocaloriesPerHourSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a PoundsForcePerFootSecond\r\n     *\r\n     * @param value The unit as PoundsForcePerFootSecond to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromPoundsForcePerFootSecond(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.PoundsForcePerFootSecond);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a PoundsPerSecondCubed\r\n     *\r\n     * @param value The unit as PoundsPerSecondCubed to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromPoundsPerSecondCubed(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.PoundsPerSecondCubed);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a NanowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as NanowattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromNanowattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.NanowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a MicrowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as MicrowattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromMicrowattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.MicrowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a MilliwattsPerSquareMeter\r\n     *\r\n     * @param value The unit as MilliwattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromMilliwattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.MilliwattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a CentiwattsPerSquareMeter\r\n     *\r\n     * @param value The unit as CentiwattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromCentiwattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.CentiwattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a DeciwattsPerSquareMeter\r\n     *\r\n     * @param value The unit as DeciwattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromDeciwattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.DeciwattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a KilowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as KilowattsPerSquareMeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromKilowattsPerSquareMeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.KilowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new HeatFlux instance from a KilocaloriesPerSecondSquareCentimeter\r\n     *\r\n     * @param value The unit as KilocaloriesPerSecondSquareCentimeter to create a new HeatFlux from.\r\n     * @returns The new HeatFlux instance.\r\n     */\r\n    static FromKilocaloriesPerSecondSquareCentimeter(value) {\r\n        return new HeatFlux(value, HeatFluxUnits.KilocaloriesPerSecondSquareCentimeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case HeatFluxUnits.WattsPerSquareMeter:\r\n                return this.value;\r\n            case HeatFluxUnits.WattsPerSquareInch:\r\n                return this.value / 1.5500031e3;\r\n            case HeatFluxUnits.WattsPerSquareFoot:\r\n                return this.value / 1.07639e1;\r\n            case HeatFluxUnits.BtusPerSecondSquareInch:\r\n                return this.value / 1.63533984e6;\r\n            case HeatFluxUnits.BtusPerSecondSquareFoot:\r\n                return this.value / 1.13565267e4;\r\n            case HeatFluxUnits.BtusPerMinuteSquareFoot:\r\n                return this.value / 1.89275445e2;\r\n            case HeatFluxUnits.BtusPerHourSquareFoot:\r\n                return this.value / 3.15459075;\r\n            case HeatFluxUnits.CaloriesPerSecondSquareCentimeter:\r\n                return this.value / 4.1868e4;\r\n            case HeatFluxUnits.KilocaloriesPerHourSquareMeter:\r\n                return this.value / 1.163;\r\n            case HeatFluxUnits.PoundsForcePerFootSecond:\r\n                return this.value / 1.459390293720636e1;\r\n            case HeatFluxUnits.PoundsPerSecondCubed:\r\n                return this.value / 4.5359237e-1;\r\n            case HeatFluxUnits.NanowattsPerSquareMeter:\r\n                return (this.value) / 1e-9;\r\n            case HeatFluxUnits.MicrowattsPerSquareMeter:\r\n                return (this.value) / 0.000001;\r\n            case HeatFluxUnits.MilliwattsPerSquareMeter:\r\n                return (this.value) / 0.001;\r\n            case HeatFluxUnits.CentiwattsPerSquareMeter:\r\n                return (this.value) / 0.01;\r\n            case HeatFluxUnits.DeciwattsPerSquareMeter:\r\n                return (this.value) / 0.1;\r\n            case HeatFluxUnits.KilowattsPerSquareMeter:\r\n                return (this.value) / 1000;\r\n            case HeatFluxUnits.KilocaloriesPerSecondSquareCentimeter:\r\n                return (this.value / 4.1868e4) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case HeatFluxUnits.WattsPerSquareMeter:\r\n                return value;\r\n            case HeatFluxUnits.WattsPerSquareInch:\r\n                return value * 1.5500031e3;\r\n            case HeatFluxUnits.WattsPerSquareFoot:\r\n                return value * 1.07639e1;\r\n            case HeatFluxUnits.BtusPerSecondSquareInch:\r\n                return value * 1.63533984e6;\r\n            case HeatFluxUnits.BtusPerSecondSquareFoot:\r\n                return value * 1.13565267e4;\r\n            case HeatFluxUnits.BtusPerMinuteSquareFoot:\r\n                return value * 1.89275445e2;\r\n            case HeatFluxUnits.BtusPerHourSquareFoot:\r\n                return value * 3.15459075;\r\n            case HeatFluxUnits.CaloriesPerSecondSquareCentimeter:\r\n                return value * 4.1868e4;\r\n            case HeatFluxUnits.KilocaloriesPerHourSquareMeter:\r\n                return value * 1.163;\r\n            case HeatFluxUnits.PoundsForcePerFootSecond:\r\n                return value * 1.459390293720636e1;\r\n            case HeatFluxUnits.PoundsPerSecondCubed:\r\n                return value * 4.5359237e-1;\r\n            case HeatFluxUnits.NanowattsPerSquareMeter:\r\n                return (value) * 1e-9;\r\n            case HeatFluxUnits.MicrowattsPerSquareMeter:\r\n                return (value) * 0.000001;\r\n            case HeatFluxUnits.MilliwattsPerSquareMeter:\r\n                return (value) * 0.001;\r\n            case HeatFluxUnits.CentiwattsPerSquareMeter:\r\n                return (value) * 0.01;\r\n            case HeatFluxUnits.DeciwattsPerSquareMeter:\r\n                return (value) * 0.1;\r\n            case HeatFluxUnits.KilowattsPerSquareMeter:\r\n                return (value) * 1000;\r\n            case HeatFluxUnits.KilocaloriesPerSecondSquareCentimeter:\r\n                return (value * 4.1868e4) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the HeatFlux to string.\r\n     * Note! the default format for HeatFlux is WattsPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the HeatFlux.\r\n     * @returns The string format of the HeatFlux.\r\n     */\r\n    toString(toUnit = HeatFluxUnits.WattsPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case HeatFluxUnits.WattsPerSquareMeter:\r\n                return this.WattsPerSquareMeter + ` W/m²`;\r\n            case HeatFluxUnits.WattsPerSquareInch:\r\n                return this.WattsPerSquareInch + ` W/in²`;\r\n            case HeatFluxUnits.WattsPerSquareFoot:\r\n                return this.WattsPerSquareFoot + ` W/ft²`;\r\n            case HeatFluxUnits.BtusPerSecondSquareInch:\r\n                return this.BtusPerSecondSquareInch + ` BTU/s·in²`;\r\n            case HeatFluxUnits.BtusPerSecondSquareFoot:\r\n                return this.BtusPerSecondSquareFoot + ` BTU/s·ft²`;\r\n            case HeatFluxUnits.BtusPerMinuteSquareFoot:\r\n                return this.BtusPerMinuteSquareFoot + ` BTU/min·ft²`;\r\n            case HeatFluxUnits.BtusPerHourSquareFoot:\r\n                return this.BtusPerHourSquareFoot + ` BTU/h·ft²`;\r\n            case HeatFluxUnits.CaloriesPerSecondSquareCentimeter:\r\n                return this.CaloriesPerSecondSquareCentimeter + ` cal/s·cm²`;\r\n            case HeatFluxUnits.KilocaloriesPerHourSquareMeter:\r\n                return this.KilocaloriesPerHourSquareMeter + ` kcal/h·m²`;\r\n            case HeatFluxUnits.PoundsForcePerFootSecond:\r\n                return this.PoundsForcePerFootSecond + ` lbf/(ft·s)`;\r\n            case HeatFluxUnits.PoundsPerSecondCubed:\r\n                return this.PoundsPerSecondCubed + ` lb/s³`;\r\n            case HeatFluxUnits.NanowattsPerSquareMeter:\r\n                return this.NanowattsPerSquareMeter + ` `;\r\n            case HeatFluxUnits.MicrowattsPerSquareMeter:\r\n                return this.MicrowattsPerSquareMeter + ` `;\r\n            case HeatFluxUnits.MilliwattsPerSquareMeter:\r\n                return this.MilliwattsPerSquareMeter + ` `;\r\n            case HeatFluxUnits.CentiwattsPerSquareMeter:\r\n                return this.CentiwattsPerSquareMeter + ` `;\r\n            case HeatFluxUnits.DeciwattsPerSquareMeter:\r\n                return this.DeciwattsPerSquareMeter + ` `;\r\n            case HeatFluxUnits.KilowattsPerSquareMeter:\r\n                return this.KilowattsPerSquareMeter + ` `;\r\n            case HeatFluxUnits.KilocaloriesPerSecondSquareCentimeter:\r\n                return this.KilocaloriesPerSecondSquareCentimeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given HeatFlux are equals to the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns True if the given HeatFlux are equal to the current HeatFlux.\r\n     */\r\n    equals(heatFlux) {\r\n        return this.value === heatFlux.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given HeatFlux against the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns 0 if they are equal, -1 if the current HeatFlux is less then other, 1 if the current HeatFlux is greater then other.\r\n     */\r\n    compareTo(heatFlux) {\r\n        if (this.value > heatFlux.BaseValue)\r\n            return 1;\r\n        if (this.value < heatFlux.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given HeatFlux with the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns A new HeatFlux instance with the results.\r\n     */\r\n    add(heatFlux) {\r\n        return new HeatFlux(this.value + heatFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given HeatFlux with the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns A new HeatFlux instance with the results.\r\n     */\r\n    subtract(heatFlux) {\r\n        return new HeatFlux(this.value - heatFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given HeatFlux with the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns A new HeatFlux instance with the results.\r\n     */\r\n    multiply(heatFlux) {\r\n        return new HeatFlux(this.value * heatFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given HeatFlux with the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns A new HeatFlux instance with the results.\r\n     */\r\n    divide(heatFlux) {\r\n        return new HeatFlux(this.value / heatFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given HeatFlux with the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns A new HeatFlux instance with the results.\r\n     */\r\n    modulo(heatFlux) {\r\n        return new HeatFlux(this.value % heatFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given HeatFlux with the current HeatFlux.\r\n     * @param heatFlux The other HeatFlux.\r\n     * @returns A new HeatFlux instance with the results.\r\n     */\r\n    pow(heatFlux) {\r\n        return new HeatFlux(this.value ** heatFlux.BaseValue);\r\n    }\r\n}\r\nexports.HeatFlux = HeatFlux;\r\n//# sourceMappingURL=heatflux.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HeatTransferCoefficient = exports.HeatTransferCoefficientUnits = void 0;\r\n/** HeatTransferCoefficientUnits enumeration */\r\nvar HeatTransferCoefficientUnits;\r\n(function (HeatTransferCoefficientUnits) {\r\n    /** */\r\n    HeatTransferCoefficientUnits[HeatTransferCoefficientUnits[\"WattsPerSquareMeterKelvin\"] = 0] = \"WattsPerSquareMeterKelvin\";\r\n    /** */\r\n    HeatTransferCoefficientUnits[HeatTransferCoefficientUnits[\"WattsPerSquareMeterCelsius\"] = 1] = \"WattsPerSquareMeterCelsius\";\r\n    /** */\r\n    HeatTransferCoefficientUnits[HeatTransferCoefficientUnits[\"BtusPerSquareFootDegreeFahrenheit\"] = 2] = \"BtusPerSquareFootDegreeFahrenheit\";\r\n})(HeatTransferCoefficientUnits = exports.HeatTransferCoefficientUnits || (exports.HeatTransferCoefficientUnits = {}));\r\n/** The heat transfer coefficient or film coefficient, or film effectiveness, in thermodynamics and in mechanics is the proportionality constant between the heat flux and the thermodynamic driving force for the flow of heat (i.e., the temperature difference, ΔT) */\r\nclass HeatTransferCoefficient {\r\n    /**\r\n     * Create a new HeatTransferCoefficient.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘HeatTransferCoefficient’ unit to create from.\r\n     * The default unit is WattsPerSquareMeterKelvin\r\n     */\r\n    constructor(value, fromUnit = HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin) {\r\n        this.wattspersquaremeterkelvinLazy = null;\r\n        this.wattspersquaremetercelsiusLazy = null;\r\n        this.btuspersquarefootdegreefahrenheitLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of HeatTransferCoefficient is WattsPerSquareMeterKelvin.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get WattsPerSquareMeterKelvin() {\r\n        if (this.wattspersquaremeterkelvinLazy !== null) {\r\n            return this.wattspersquaremeterkelvinLazy;\r\n        }\r\n        return this.wattspersquaremeterkelvinLazy = this.convertFromBase(HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin);\r\n    }\r\n    /** */\r\n    get WattsPerSquareMeterCelsius() {\r\n        if (this.wattspersquaremetercelsiusLazy !== null) {\r\n            return this.wattspersquaremetercelsiusLazy;\r\n        }\r\n        return this.wattspersquaremetercelsiusLazy = this.convertFromBase(HeatTransferCoefficientUnits.WattsPerSquareMeterCelsius);\r\n    }\r\n    /** */\r\n    get BtusPerSquareFootDegreeFahrenheit() {\r\n        if (this.btuspersquarefootdegreefahrenheitLazy !== null) {\r\n            return this.btuspersquarefootdegreefahrenheitLazy;\r\n        }\r\n        return this.btuspersquarefootdegreefahrenheitLazy = this.convertFromBase(HeatTransferCoefficientUnits.BtusPerSquareFootDegreeFahrenheit);\r\n    }\r\n    /**\r\n     * Create a new HeatTransferCoefficient instance from a WattsPerSquareMeterKelvin\r\n     *\r\n     * @param value The unit as WattsPerSquareMeterKelvin to create a new HeatTransferCoefficient from.\r\n     * @returns The new HeatTransferCoefficient instance.\r\n     */\r\n    static FromWattsPerSquareMeterKelvin(value) {\r\n        return new HeatTransferCoefficient(value, HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin);\r\n    }\r\n    /**\r\n     * Create a new HeatTransferCoefficient instance from a WattsPerSquareMeterCelsius\r\n     *\r\n     * @param value The unit as WattsPerSquareMeterCelsius to create a new HeatTransferCoefficient from.\r\n     * @returns The new HeatTransferCoefficient instance.\r\n     */\r\n    static FromWattsPerSquareMeterCelsius(value) {\r\n        return new HeatTransferCoefficient(value, HeatTransferCoefficientUnits.WattsPerSquareMeterCelsius);\r\n    }\r\n    /**\r\n     * Create a new HeatTransferCoefficient instance from a BtusPerSquareFootDegreeFahrenheit\r\n     *\r\n     * @param value The unit as BtusPerSquareFootDegreeFahrenheit to create a new HeatTransferCoefficient from.\r\n     * @returns The new HeatTransferCoefficient instance.\r\n     */\r\n    static FromBtusPerSquareFootDegreeFahrenheit(value) {\r\n        return new HeatTransferCoefficient(value, HeatTransferCoefficientUnits.BtusPerSquareFootDegreeFahrenheit);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin:\r\n                return this.value;\r\n            case HeatTransferCoefficientUnits.WattsPerSquareMeterCelsius:\r\n                return this.value;\r\n            case HeatTransferCoefficientUnits.BtusPerSquareFootDegreeFahrenheit:\r\n                return this.value / 5.6782633411134878;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin:\r\n                return value;\r\n            case HeatTransferCoefficientUnits.WattsPerSquareMeterCelsius:\r\n                return value;\r\n            case HeatTransferCoefficientUnits.BtusPerSquareFootDegreeFahrenheit:\r\n                return value * 5.6782633411134878;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the HeatTransferCoefficient to string.\r\n     * Note! the default format for HeatTransferCoefficient is WattsPerSquareMeterKelvin.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the HeatTransferCoefficient.\r\n     * @returns The string format of the HeatTransferCoefficient.\r\n     */\r\n    toString(toUnit = HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin) {\r\n        switch (toUnit) {\r\n            case HeatTransferCoefficientUnits.WattsPerSquareMeterKelvin:\r\n                return this.WattsPerSquareMeterKelvin + ` W/m²·K`;\r\n            case HeatTransferCoefficientUnits.WattsPerSquareMeterCelsius:\r\n                return this.WattsPerSquareMeterCelsius + ` W/m²·°C`;\r\n            case HeatTransferCoefficientUnits.BtusPerSquareFootDegreeFahrenheit:\r\n                return this.BtusPerSquareFootDegreeFahrenheit + ` Btu/ft²·hr·°F`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given HeatTransferCoefficient are equals to the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns True if the given HeatTransferCoefficient are equal to the current HeatTransferCoefficient.\r\n     */\r\n    equals(heatTransferCoefficient) {\r\n        return this.value === heatTransferCoefficient.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given HeatTransferCoefficient against the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns 0 if they are equal, -1 if the current HeatTransferCoefficient is less then other, 1 if the current HeatTransferCoefficient is greater then other.\r\n     */\r\n    compareTo(heatTransferCoefficient) {\r\n        if (this.value > heatTransferCoefficient.BaseValue)\r\n            return 1;\r\n        if (this.value < heatTransferCoefficient.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given HeatTransferCoefficient with the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns A new HeatTransferCoefficient instance with the results.\r\n     */\r\n    add(heatTransferCoefficient) {\r\n        return new HeatTransferCoefficient(this.value + heatTransferCoefficient.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given HeatTransferCoefficient with the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns A new HeatTransferCoefficient instance with the results.\r\n     */\r\n    subtract(heatTransferCoefficient) {\r\n        return new HeatTransferCoefficient(this.value - heatTransferCoefficient.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given HeatTransferCoefficient with the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns A new HeatTransferCoefficient instance with the results.\r\n     */\r\n    multiply(heatTransferCoefficient) {\r\n        return new HeatTransferCoefficient(this.value * heatTransferCoefficient.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given HeatTransferCoefficient with the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns A new HeatTransferCoefficient instance with the results.\r\n     */\r\n    divide(heatTransferCoefficient) {\r\n        return new HeatTransferCoefficient(this.value / heatTransferCoefficient.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given HeatTransferCoefficient with the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns A new HeatTransferCoefficient instance with the results.\r\n     */\r\n    modulo(heatTransferCoefficient) {\r\n        return new HeatTransferCoefficient(this.value % heatTransferCoefficient.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given HeatTransferCoefficient with the current HeatTransferCoefficient.\r\n     * @param heatTransferCoefficient The other HeatTransferCoefficient.\r\n     * @returns A new HeatTransferCoefficient instance with the results.\r\n     */\r\n    pow(heatTransferCoefficient) {\r\n        return new HeatTransferCoefficient(this.value ** heatTransferCoefficient.BaseValue);\r\n    }\r\n}\r\nexports.HeatTransferCoefficient = HeatTransferCoefficient;\r\n//# sourceMappingURL=heattransfercoefficient.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Illuminance = exports.IlluminanceUnits = void 0;\r\n/** IlluminanceUnits enumeration */\r\nvar IlluminanceUnits;\r\n(function (IlluminanceUnits) {\r\n    /** */\r\n    IlluminanceUnits[IlluminanceUnits[\"Lux\"] = 0] = \"Lux\";\r\n    /** */\r\n    IlluminanceUnits[IlluminanceUnits[\"Millilux\"] = 1] = \"Millilux\";\r\n    /** */\r\n    IlluminanceUnits[IlluminanceUnits[\"Kilolux\"] = 2] = \"Kilolux\";\r\n    /** */\r\n    IlluminanceUnits[IlluminanceUnits[\"Megalux\"] = 3] = \"Megalux\";\r\n})(IlluminanceUnits = exports.IlluminanceUnits || (exports.IlluminanceUnits = {}));\r\n/** In photometry, illuminance is the total luminous flux incident on a surface, per unit area. */\r\nclass Illuminance {\r\n    /**\r\n     * Create a new Illuminance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Illuminance’ unit to create from.\r\n     * The default unit is Lux\r\n     */\r\n    constructor(value, fromUnit = IlluminanceUnits.Lux) {\r\n        this.luxLazy = null;\r\n        this.milliluxLazy = null;\r\n        this.kiloluxLazy = null;\r\n        this.megaluxLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Illuminance is Lux.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Lux() {\r\n        if (this.luxLazy !== null) {\r\n            return this.luxLazy;\r\n        }\r\n        return this.luxLazy = this.convertFromBase(IlluminanceUnits.Lux);\r\n    }\r\n    /** */\r\n    get Millilux() {\r\n        if (this.milliluxLazy !== null) {\r\n            return this.milliluxLazy;\r\n        }\r\n        return this.milliluxLazy = this.convertFromBase(IlluminanceUnits.Millilux);\r\n    }\r\n    /** */\r\n    get Kilolux() {\r\n        if (this.kiloluxLazy !== null) {\r\n            return this.kiloluxLazy;\r\n        }\r\n        return this.kiloluxLazy = this.convertFromBase(IlluminanceUnits.Kilolux);\r\n    }\r\n    /** */\r\n    get Megalux() {\r\n        if (this.megaluxLazy !== null) {\r\n            return this.megaluxLazy;\r\n        }\r\n        return this.megaluxLazy = this.convertFromBase(IlluminanceUnits.Megalux);\r\n    }\r\n    /**\r\n     * Create a new Illuminance instance from a Lux\r\n     *\r\n     * @param value The unit as Lux to create a new Illuminance from.\r\n     * @returns The new Illuminance instance.\r\n     */\r\n    static FromLux(value) {\r\n        return new Illuminance(value, IlluminanceUnits.Lux);\r\n    }\r\n    /**\r\n     * Create a new Illuminance instance from a Millilux\r\n     *\r\n     * @param value The unit as Millilux to create a new Illuminance from.\r\n     * @returns The new Illuminance instance.\r\n     */\r\n    static FromMillilux(value) {\r\n        return new Illuminance(value, IlluminanceUnits.Millilux);\r\n    }\r\n    /**\r\n     * Create a new Illuminance instance from a Kilolux\r\n     *\r\n     * @param value The unit as Kilolux to create a new Illuminance from.\r\n     * @returns The new Illuminance instance.\r\n     */\r\n    static FromKilolux(value) {\r\n        return new Illuminance(value, IlluminanceUnits.Kilolux);\r\n    }\r\n    /**\r\n     * Create a new Illuminance instance from a Megalux\r\n     *\r\n     * @param value The unit as Megalux to create a new Illuminance from.\r\n     * @returns The new Illuminance instance.\r\n     */\r\n    static FromMegalux(value) {\r\n        return new Illuminance(value, IlluminanceUnits.Megalux);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case IlluminanceUnits.Lux:\r\n                return this.value;\r\n            case IlluminanceUnits.Millilux:\r\n                return (this.value) / 0.001;\r\n            case IlluminanceUnits.Kilolux:\r\n                return (this.value) / 1000;\r\n            case IlluminanceUnits.Megalux:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case IlluminanceUnits.Lux:\r\n                return value;\r\n            case IlluminanceUnits.Millilux:\r\n                return (value) * 0.001;\r\n            case IlluminanceUnits.Kilolux:\r\n                return (value) * 1000;\r\n            case IlluminanceUnits.Megalux:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Illuminance to string.\r\n     * Note! the default format for Illuminance is Lux.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Illuminance.\r\n     * @returns The string format of the Illuminance.\r\n     */\r\n    toString(toUnit = IlluminanceUnits.Lux) {\r\n        switch (toUnit) {\r\n            case IlluminanceUnits.Lux:\r\n                return this.Lux + ` lx`;\r\n            case IlluminanceUnits.Millilux:\r\n                return this.Millilux + ` `;\r\n            case IlluminanceUnits.Kilolux:\r\n                return this.Kilolux + ` `;\r\n            case IlluminanceUnits.Megalux:\r\n                return this.Megalux + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Illuminance are equals to the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns True if the given Illuminance are equal to the current Illuminance.\r\n     */\r\n    equals(illuminance) {\r\n        return this.value === illuminance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Illuminance against the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns 0 if they are equal, -1 if the current Illuminance is less then other, 1 if the current Illuminance is greater then other.\r\n     */\r\n    compareTo(illuminance) {\r\n        if (this.value > illuminance.BaseValue)\r\n            return 1;\r\n        if (this.value < illuminance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Illuminance with the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns A new Illuminance instance with the results.\r\n     */\r\n    add(illuminance) {\r\n        return new Illuminance(this.value + illuminance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Illuminance with the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns A new Illuminance instance with the results.\r\n     */\r\n    subtract(illuminance) {\r\n        return new Illuminance(this.value - illuminance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Illuminance with the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns A new Illuminance instance with the results.\r\n     */\r\n    multiply(illuminance) {\r\n        return new Illuminance(this.value * illuminance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Illuminance with the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns A new Illuminance instance with the results.\r\n     */\r\n    divide(illuminance) {\r\n        return new Illuminance(this.value / illuminance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Illuminance with the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns A new Illuminance instance with the results.\r\n     */\r\n    modulo(illuminance) {\r\n        return new Illuminance(this.value % illuminance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Illuminance with the current Illuminance.\r\n     * @param illuminance The other Illuminance.\r\n     * @returns A new Illuminance instance with the results.\r\n     */\r\n    pow(illuminance) {\r\n        return new Illuminance(this.value ** illuminance.BaseValue);\r\n    }\r\n}\r\nexports.Illuminance = Illuminance;\r\n//# sourceMappingURL=illuminance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Information = exports.InformationUnits = void 0;\r\n/** InformationUnits enumeration */\r\nvar InformationUnits;\r\n(function (InformationUnits) {\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Bytes\"] = 0] = \"Bytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Bits\"] = 1] = \"Bits\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Kilobytes\"] = 2] = \"Kilobytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Megabytes\"] = 3] = \"Megabytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Gigabytes\"] = 4] = \"Gigabytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Terabytes\"] = 5] = \"Terabytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Petabytes\"] = 6] = \"Petabytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Exabytes\"] = 7] = \"Exabytes\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Kilobits\"] = 8] = \"Kilobits\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Megabits\"] = 9] = \"Megabits\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Gigabits\"] = 10] = \"Gigabits\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Terabits\"] = 11] = \"Terabits\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Petabits\"] = 12] = \"Petabits\";\r\n    /** */\r\n    InformationUnits[InformationUnits[\"Exabits\"] = 13] = \"Exabits\";\r\n})(InformationUnits = exports.InformationUnits || (exports.InformationUnits = {}));\r\n/** In computing and telecommunications, a unit of information is the capacity of some standard data storage system or communication channel, used to measure the capacities of other systems and channels. In information theory, units of information are also used to measure the information contents or entropy of random variables. */\r\nclass Information {\r\n    /**\r\n     * Create a new Information.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Information’ unit to create from.\r\n     * The default unit is Bits\r\n     */\r\n    constructor(value, fromUnit = InformationUnits.Bits) {\r\n        this.bytesLazy = null;\r\n        this.bitsLazy = null;\r\n        this.kilobytesLazy = null;\r\n        this.megabytesLazy = null;\r\n        this.gigabytesLazy = null;\r\n        this.terabytesLazy = null;\r\n        this.petabytesLazy = null;\r\n        this.exabytesLazy = null;\r\n        this.kilobitsLazy = null;\r\n        this.megabitsLazy = null;\r\n        this.gigabitsLazy = null;\r\n        this.terabitsLazy = null;\r\n        this.petabitsLazy = null;\r\n        this.exabitsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Information is Bits.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Bytes() {\r\n        if (this.bytesLazy !== null) {\r\n            return this.bytesLazy;\r\n        }\r\n        return this.bytesLazy = this.convertFromBase(InformationUnits.Bytes);\r\n    }\r\n    /** */\r\n    get Bits() {\r\n        if (this.bitsLazy !== null) {\r\n            return this.bitsLazy;\r\n        }\r\n        return this.bitsLazy = this.convertFromBase(InformationUnits.Bits);\r\n    }\r\n    /** */\r\n    get Kilobytes() {\r\n        if (this.kilobytesLazy !== null) {\r\n            return this.kilobytesLazy;\r\n        }\r\n        return this.kilobytesLazy = this.convertFromBase(InformationUnits.Kilobytes);\r\n    }\r\n    /** */\r\n    get Megabytes() {\r\n        if (this.megabytesLazy !== null) {\r\n            return this.megabytesLazy;\r\n        }\r\n        return this.megabytesLazy = this.convertFromBase(InformationUnits.Megabytes);\r\n    }\r\n    /** */\r\n    get Gigabytes() {\r\n        if (this.gigabytesLazy !== null) {\r\n            return this.gigabytesLazy;\r\n        }\r\n        return this.gigabytesLazy = this.convertFromBase(InformationUnits.Gigabytes);\r\n    }\r\n    /** */\r\n    get Terabytes() {\r\n        if (this.terabytesLazy !== null) {\r\n            return this.terabytesLazy;\r\n        }\r\n        return this.terabytesLazy = this.convertFromBase(InformationUnits.Terabytes);\r\n    }\r\n    /** */\r\n    get Petabytes() {\r\n        if (this.petabytesLazy !== null) {\r\n            return this.petabytesLazy;\r\n        }\r\n        return this.petabytesLazy = this.convertFromBase(InformationUnits.Petabytes);\r\n    }\r\n    /** */\r\n    get Exabytes() {\r\n        if (this.exabytesLazy !== null) {\r\n            return this.exabytesLazy;\r\n        }\r\n        return this.exabytesLazy = this.convertFromBase(InformationUnits.Exabytes);\r\n    }\r\n    /** */\r\n    get Kilobits() {\r\n        if (this.kilobitsLazy !== null) {\r\n            return this.kilobitsLazy;\r\n        }\r\n        return this.kilobitsLazy = this.convertFromBase(InformationUnits.Kilobits);\r\n    }\r\n    /** */\r\n    get Megabits() {\r\n        if (this.megabitsLazy !== null) {\r\n            return this.megabitsLazy;\r\n        }\r\n        return this.megabitsLazy = this.convertFromBase(InformationUnits.Megabits);\r\n    }\r\n    /** */\r\n    get Gigabits() {\r\n        if (this.gigabitsLazy !== null) {\r\n            return this.gigabitsLazy;\r\n        }\r\n        return this.gigabitsLazy = this.convertFromBase(InformationUnits.Gigabits);\r\n    }\r\n    /** */\r\n    get Terabits() {\r\n        if (this.terabitsLazy !== null) {\r\n            return this.terabitsLazy;\r\n        }\r\n        return this.terabitsLazy = this.convertFromBase(InformationUnits.Terabits);\r\n    }\r\n    /** */\r\n    get Petabits() {\r\n        if (this.petabitsLazy !== null) {\r\n            return this.petabitsLazy;\r\n        }\r\n        return this.petabitsLazy = this.convertFromBase(InformationUnits.Petabits);\r\n    }\r\n    /** */\r\n    get Exabits() {\r\n        if (this.exabitsLazy !== null) {\r\n            return this.exabitsLazy;\r\n        }\r\n        return this.exabitsLazy = this.convertFromBase(InformationUnits.Exabits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Bytes\r\n     *\r\n     * @param value The unit as Bytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromBytes(value) {\r\n        return new Information(value, InformationUnits.Bytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Bits\r\n     *\r\n     * @param value The unit as Bits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromBits(value) {\r\n        return new Information(value, InformationUnits.Bits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Kilobytes\r\n     *\r\n     * @param value The unit as Kilobytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromKilobytes(value) {\r\n        return new Information(value, InformationUnits.Kilobytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Megabytes\r\n     *\r\n     * @param value The unit as Megabytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromMegabytes(value) {\r\n        return new Information(value, InformationUnits.Megabytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Gigabytes\r\n     *\r\n     * @param value The unit as Gigabytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromGigabytes(value) {\r\n        return new Information(value, InformationUnits.Gigabytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Terabytes\r\n     *\r\n     * @param value The unit as Terabytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromTerabytes(value) {\r\n        return new Information(value, InformationUnits.Terabytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Petabytes\r\n     *\r\n     * @param value The unit as Petabytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromPetabytes(value) {\r\n        return new Information(value, InformationUnits.Petabytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Exabytes\r\n     *\r\n     * @param value The unit as Exabytes to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromExabytes(value) {\r\n        return new Information(value, InformationUnits.Exabytes);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Kilobits\r\n     *\r\n     * @param value The unit as Kilobits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromKilobits(value) {\r\n        return new Information(value, InformationUnits.Kilobits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Megabits\r\n     *\r\n     * @param value The unit as Megabits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromMegabits(value) {\r\n        return new Information(value, InformationUnits.Megabits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Gigabits\r\n     *\r\n     * @param value The unit as Gigabits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromGigabits(value) {\r\n        return new Information(value, InformationUnits.Gigabits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Terabits\r\n     *\r\n     * @param value The unit as Terabits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromTerabits(value) {\r\n        return new Information(value, InformationUnits.Terabits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Petabits\r\n     *\r\n     * @param value The unit as Petabits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromPetabits(value) {\r\n        return new Information(value, InformationUnits.Petabits);\r\n    }\r\n    /**\r\n     * Create a new Information instance from a Exabits\r\n     *\r\n     * @param value The unit as Exabits to create a new Information from.\r\n     * @returns The new Information instance.\r\n     */\r\n    static FromExabits(value) {\r\n        return new Information(value, InformationUnits.Exabits);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case InformationUnits.Bytes:\r\n                return this.value / 8;\r\n            case InformationUnits.Bits:\r\n                return this.value;\r\n            case InformationUnits.Kilobytes:\r\n                return (this.value / 8) / 1000;\r\n            case InformationUnits.Megabytes:\r\n                return (this.value / 8) / 1000000;\r\n            case InformationUnits.Gigabytes:\r\n                return (this.value / 8) / 1000000000;\r\n            case InformationUnits.Terabytes:\r\n                return (this.value / 8) / 1000000000000;\r\n            case InformationUnits.Petabytes:\r\n                return (this.value / 8) / 1000000000000000;\r\n            case InformationUnits.Exabytes:\r\n                return (this.value / 8) / 1000000000000000000;\r\n            case InformationUnits.Kilobits:\r\n                return (this.value) / 1000;\r\n            case InformationUnits.Megabits:\r\n                return (this.value) / 1000000;\r\n            case InformationUnits.Gigabits:\r\n                return (this.value) / 1000000000;\r\n            case InformationUnits.Terabits:\r\n                return (this.value) / 1000000000000;\r\n            case InformationUnits.Petabits:\r\n                return (this.value) / 1000000000000000;\r\n            case InformationUnits.Exabits:\r\n                return (this.value) / 1000000000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case InformationUnits.Bytes:\r\n                return value * 8;\r\n            case InformationUnits.Bits:\r\n                return value;\r\n            case InformationUnits.Kilobytes:\r\n                return (value * 8) * 1000;\r\n            case InformationUnits.Megabytes:\r\n                return (value * 8) * 1000000;\r\n            case InformationUnits.Gigabytes:\r\n                return (value * 8) * 1000000000;\r\n            case InformationUnits.Terabytes:\r\n                return (value * 8) * 1000000000000;\r\n            case InformationUnits.Petabytes:\r\n                return (value * 8) * 1000000000000000;\r\n            case InformationUnits.Exabytes:\r\n                return (value * 8) * 1000000000000000000;\r\n            case InformationUnits.Kilobits:\r\n                return (value) * 1000;\r\n            case InformationUnits.Megabits:\r\n                return (value) * 1000000;\r\n            case InformationUnits.Gigabits:\r\n                return (value) * 1000000000;\r\n            case InformationUnits.Terabits:\r\n                return (value) * 1000000000000;\r\n            case InformationUnits.Petabits:\r\n                return (value) * 1000000000000000;\r\n            case InformationUnits.Exabits:\r\n                return (value) * 1000000000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Information to string.\r\n     * Note! the default format for Information is Bits.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Information.\r\n     * @returns The string format of the Information.\r\n     */\r\n    toString(toUnit = InformationUnits.Bits) {\r\n        switch (toUnit) {\r\n            case InformationUnits.Bytes:\r\n                return this.Bytes + ` B`;\r\n            case InformationUnits.Bits:\r\n                return this.Bits + ` b`;\r\n            case InformationUnits.Kilobytes:\r\n                return this.Kilobytes + ` `;\r\n            case InformationUnits.Megabytes:\r\n                return this.Megabytes + ` `;\r\n            case InformationUnits.Gigabytes:\r\n                return this.Gigabytes + ` `;\r\n            case InformationUnits.Terabytes:\r\n                return this.Terabytes + ` `;\r\n            case InformationUnits.Petabytes:\r\n                return this.Petabytes + ` `;\r\n            case InformationUnits.Exabytes:\r\n                return this.Exabytes + ` `;\r\n            case InformationUnits.Kilobits:\r\n                return this.Kilobits + ` `;\r\n            case InformationUnits.Megabits:\r\n                return this.Megabits + ` `;\r\n            case InformationUnits.Gigabits:\r\n                return this.Gigabits + ` `;\r\n            case InformationUnits.Terabits:\r\n                return this.Terabits + ` `;\r\n            case InformationUnits.Petabits:\r\n                return this.Petabits + ` `;\r\n            case InformationUnits.Exabits:\r\n                return this.Exabits + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Information are equals to the current Information.\r\n     * @param information The other Information.\r\n     * @returns True if the given Information are equal to the current Information.\r\n     */\r\n    equals(information) {\r\n        return this.value === information.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Information against the current Information.\r\n     * @param information The other Information.\r\n     * @returns 0 if they are equal, -1 if the current Information is less then other, 1 if the current Information is greater then other.\r\n     */\r\n    compareTo(information) {\r\n        if (this.value > information.BaseValue)\r\n            return 1;\r\n        if (this.value < information.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Information with the current Information.\r\n     * @param information The other Information.\r\n     * @returns A new Information instance with the results.\r\n     */\r\n    add(information) {\r\n        return new Information(this.value + information.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Information with the current Information.\r\n     * @param information The other Information.\r\n     * @returns A new Information instance with the results.\r\n     */\r\n    subtract(information) {\r\n        return new Information(this.value - information.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Information with the current Information.\r\n     * @param information The other Information.\r\n     * @returns A new Information instance with the results.\r\n     */\r\n    multiply(information) {\r\n        return new Information(this.value * information.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Information with the current Information.\r\n     * @param information The other Information.\r\n     * @returns A new Information instance with the results.\r\n     */\r\n    divide(information) {\r\n        return new Information(this.value / information.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Information with the current Information.\r\n     * @param information The other Information.\r\n     * @returns A new Information instance with the results.\r\n     */\r\n    modulo(information) {\r\n        return new Information(this.value % information.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Information with the current Information.\r\n     * @param information The other Information.\r\n     * @returns A new Information instance with the results.\r\n     */\r\n    pow(information) {\r\n        return new Information(this.value ** information.BaseValue);\r\n    }\r\n}\r\nexports.Information = Information;\r\n//# sourceMappingURL=information.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Irradiance = exports.IrradianceUnits = void 0;\r\n/** IrradianceUnits enumeration */\r\nvar IrradianceUnits;\r\n(function (IrradianceUnits) {\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"WattsPerSquareMeter\"] = 0] = \"WattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"WattsPerSquareCentimeter\"] = 1] = \"WattsPerSquareCentimeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"PicowattsPerSquareMeter\"] = 2] = \"PicowattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"NanowattsPerSquareMeter\"] = 3] = \"NanowattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"MicrowattsPerSquareMeter\"] = 4] = \"MicrowattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"MilliwattsPerSquareMeter\"] = 5] = \"MilliwattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"KilowattsPerSquareMeter\"] = 6] = \"KilowattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"MegawattsPerSquareMeter\"] = 7] = \"MegawattsPerSquareMeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"PicowattsPerSquareCentimeter\"] = 8] = \"PicowattsPerSquareCentimeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"NanowattsPerSquareCentimeter\"] = 9] = \"NanowattsPerSquareCentimeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"MicrowattsPerSquareCentimeter\"] = 10] = \"MicrowattsPerSquareCentimeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"MilliwattsPerSquareCentimeter\"] = 11] = \"MilliwattsPerSquareCentimeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"KilowattsPerSquareCentimeter\"] = 12] = \"KilowattsPerSquareCentimeter\";\r\n    /** */\r\n    IrradianceUnits[IrradianceUnits[\"MegawattsPerSquareCentimeter\"] = 13] = \"MegawattsPerSquareCentimeter\";\r\n})(IrradianceUnits = exports.IrradianceUnits || (exports.IrradianceUnits = {}));\r\n/** Irradiance is the intensity of ultraviolet (UV) or visible light incident on a surface. */\r\nclass Irradiance {\r\n    /**\r\n     * Create a new Irradiance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Irradiance’ unit to create from.\r\n     * The default unit is WattsPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = IrradianceUnits.WattsPerSquareMeter) {\r\n        this.wattspersquaremeterLazy = null;\r\n        this.wattspersquarecentimeterLazy = null;\r\n        this.picowattspersquaremeterLazy = null;\r\n        this.nanowattspersquaremeterLazy = null;\r\n        this.microwattspersquaremeterLazy = null;\r\n        this.milliwattspersquaremeterLazy = null;\r\n        this.kilowattspersquaremeterLazy = null;\r\n        this.megawattspersquaremeterLazy = null;\r\n        this.picowattspersquarecentimeterLazy = null;\r\n        this.nanowattspersquarecentimeterLazy = null;\r\n        this.microwattspersquarecentimeterLazy = null;\r\n        this.milliwattspersquarecentimeterLazy = null;\r\n        this.kilowattspersquarecentimeterLazy = null;\r\n        this.megawattspersquarecentimeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Irradiance is WattsPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get WattsPerSquareMeter() {\r\n        if (this.wattspersquaremeterLazy !== null) {\r\n            return this.wattspersquaremeterLazy;\r\n        }\r\n        return this.wattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.WattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get WattsPerSquareCentimeter() {\r\n        if (this.wattspersquarecentimeterLazy !== null) {\r\n            return this.wattspersquarecentimeterLazy;\r\n        }\r\n        return this.wattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.WattsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get PicowattsPerSquareMeter() {\r\n        if (this.picowattspersquaremeterLazy !== null) {\r\n            return this.picowattspersquaremeterLazy;\r\n        }\r\n        return this.picowattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.PicowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get NanowattsPerSquareMeter() {\r\n        if (this.nanowattspersquaremeterLazy !== null) {\r\n            return this.nanowattspersquaremeterLazy;\r\n        }\r\n        return this.nanowattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.NanowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MicrowattsPerSquareMeter() {\r\n        if (this.microwattspersquaremeterLazy !== null) {\r\n            return this.microwattspersquaremeterLazy;\r\n        }\r\n        return this.microwattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.MicrowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerSquareMeter() {\r\n        if (this.milliwattspersquaremeterLazy !== null) {\r\n            return this.milliwattspersquaremeterLazy;\r\n        }\r\n        return this.milliwattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.MilliwattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerSquareMeter() {\r\n        if (this.kilowattspersquaremeterLazy !== null) {\r\n            return this.kilowattspersquaremeterLazy;\r\n        }\r\n        return this.kilowattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.KilowattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MegawattsPerSquareMeter() {\r\n        if (this.megawattspersquaremeterLazy !== null) {\r\n            return this.megawattspersquaremeterLazy;\r\n        }\r\n        return this.megawattspersquaremeterLazy = this.convertFromBase(IrradianceUnits.MegawattsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get PicowattsPerSquareCentimeter() {\r\n        if (this.picowattspersquarecentimeterLazy !== null) {\r\n            return this.picowattspersquarecentimeterLazy;\r\n        }\r\n        return this.picowattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.PicowattsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get NanowattsPerSquareCentimeter() {\r\n        if (this.nanowattspersquarecentimeterLazy !== null) {\r\n            return this.nanowattspersquarecentimeterLazy;\r\n        }\r\n        return this.nanowattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.NanowattsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get MicrowattsPerSquareCentimeter() {\r\n        if (this.microwattspersquarecentimeterLazy !== null) {\r\n            return this.microwattspersquarecentimeterLazy;\r\n        }\r\n        return this.microwattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.MicrowattsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerSquareCentimeter() {\r\n        if (this.milliwattspersquarecentimeterLazy !== null) {\r\n            return this.milliwattspersquarecentimeterLazy;\r\n        }\r\n        return this.milliwattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.MilliwattsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerSquareCentimeter() {\r\n        if (this.kilowattspersquarecentimeterLazy !== null) {\r\n            return this.kilowattspersquarecentimeterLazy;\r\n        }\r\n        return this.kilowattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.KilowattsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get MegawattsPerSquareCentimeter() {\r\n        if (this.megawattspersquarecentimeterLazy !== null) {\r\n            return this.megawattspersquarecentimeterLazy;\r\n        }\r\n        return this.megawattspersquarecentimeterLazy = this.convertFromBase(IrradianceUnits.MegawattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a WattsPerSquareMeter\r\n     *\r\n     * @param value The unit as WattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromWattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.WattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a WattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as WattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromWattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.WattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a PicowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as PicowattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromPicowattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.PicowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a NanowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as NanowattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromNanowattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.NanowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a MicrowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as MicrowattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromMicrowattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.MicrowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a MilliwattsPerSquareMeter\r\n     *\r\n     * @param value The unit as MilliwattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromMilliwattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.MilliwattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a KilowattsPerSquareMeter\r\n     *\r\n     * @param value The unit as KilowattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromKilowattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.KilowattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a MegawattsPerSquareMeter\r\n     *\r\n     * @param value The unit as MegawattsPerSquareMeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromMegawattsPerSquareMeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.MegawattsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a PicowattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as PicowattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromPicowattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.PicowattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a NanowattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as NanowattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromNanowattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.NanowattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a MicrowattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as MicrowattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromMicrowattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.MicrowattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a MilliwattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as MilliwattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromMilliwattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.MilliwattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a KilowattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as KilowattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromKilowattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.KilowattsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiance instance from a MegawattsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as MegawattsPerSquareCentimeter to create a new Irradiance from.\r\n     * @returns The new Irradiance instance.\r\n     */\r\n    static FromMegawattsPerSquareCentimeter(value) {\r\n        return new Irradiance(value, IrradianceUnits.MegawattsPerSquareCentimeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case IrradianceUnits.WattsPerSquareMeter:\r\n                return this.value;\r\n            case IrradianceUnits.WattsPerSquareCentimeter:\r\n                return this.value * 0.0001;\r\n            case IrradianceUnits.PicowattsPerSquareMeter:\r\n                return (this.value) / 1e-12;\r\n            case IrradianceUnits.NanowattsPerSquareMeter:\r\n                return (this.value) / 1e-9;\r\n            case IrradianceUnits.MicrowattsPerSquareMeter:\r\n                return (this.value) / 0.000001;\r\n            case IrradianceUnits.MilliwattsPerSquareMeter:\r\n                return (this.value) / 0.001;\r\n            case IrradianceUnits.KilowattsPerSquareMeter:\r\n                return (this.value) / 1000;\r\n            case IrradianceUnits.MegawattsPerSquareMeter:\r\n                return (this.value) / 1000000;\r\n            case IrradianceUnits.PicowattsPerSquareCentimeter:\r\n                return (this.value * 0.0001) / 1e-12;\r\n            case IrradianceUnits.NanowattsPerSquareCentimeter:\r\n                return (this.value * 0.0001) / 1e-9;\r\n            case IrradianceUnits.MicrowattsPerSquareCentimeter:\r\n                return (this.value * 0.0001) / 0.000001;\r\n            case IrradianceUnits.MilliwattsPerSquareCentimeter:\r\n                return (this.value * 0.0001) / 0.001;\r\n            case IrradianceUnits.KilowattsPerSquareCentimeter:\r\n                return (this.value * 0.0001) / 1000;\r\n            case IrradianceUnits.MegawattsPerSquareCentimeter:\r\n                return (this.value * 0.0001) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case IrradianceUnits.WattsPerSquareMeter:\r\n                return value;\r\n            case IrradianceUnits.WattsPerSquareCentimeter:\r\n                return value * 10000;\r\n            case IrradianceUnits.PicowattsPerSquareMeter:\r\n                return (value) * 1e-12;\r\n            case IrradianceUnits.NanowattsPerSquareMeter:\r\n                return (value) * 1e-9;\r\n            case IrradianceUnits.MicrowattsPerSquareMeter:\r\n                return (value) * 0.000001;\r\n            case IrradianceUnits.MilliwattsPerSquareMeter:\r\n                return (value) * 0.001;\r\n            case IrradianceUnits.KilowattsPerSquareMeter:\r\n                return (value) * 1000;\r\n            case IrradianceUnits.MegawattsPerSquareMeter:\r\n                return (value) * 1000000;\r\n            case IrradianceUnits.PicowattsPerSquareCentimeter:\r\n                return (value * 10000) * 1e-12;\r\n            case IrradianceUnits.NanowattsPerSquareCentimeter:\r\n                return (value * 10000) * 1e-9;\r\n            case IrradianceUnits.MicrowattsPerSquareCentimeter:\r\n                return (value * 10000) * 0.000001;\r\n            case IrradianceUnits.MilliwattsPerSquareCentimeter:\r\n                return (value * 10000) * 0.001;\r\n            case IrradianceUnits.KilowattsPerSquareCentimeter:\r\n                return (value * 10000) * 1000;\r\n            case IrradianceUnits.MegawattsPerSquareCentimeter:\r\n                return (value * 10000) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Irradiance to string.\r\n     * Note! the default format for Irradiance is WattsPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Irradiance.\r\n     * @returns The string format of the Irradiance.\r\n     */\r\n    toString(toUnit = IrradianceUnits.WattsPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case IrradianceUnits.WattsPerSquareMeter:\r\n                return this.WattsPerSquareMeter + ` W/m²`;\r\n            case IrradianceUnits.WattsPerSquareCentimeter:\r\n                return this.WattsPerSquareCentimeter + ` W/cm²`;\r\n            case IrradianceUnits.PicowattsPerSquareMeter:\r\n                return this.PicowattsPerSquareMeter + ` `;\r\n            case IrradianceUnits.NanowattsPerSquareMeter:\r\n                return this.NanowattsPerSquareMeter + ` `;\r\n            case IrradianceUnits.MicrowattsPerSquareMeter:\r\n                return this.MicrowattsPerSquareMeter + ` `;\r\n            case IrradianceUnits.MilliwattsPerSquareMeter:\r\n                return this.MilliwattsPerSquareMeter + ` `;\r\n            case IrradianceUnits.KilowattsPerSquareMeter:\r\n                return this.KilowattsPerSquareMeter + ` `;\r\n            case IrradianceUnits.MegawattsPerSquareMeter:\r\n                return this.MegawattsPerSquareMeter + ` `;\r\n            case IrradianceUnits.PicowattsPerSquareCentimeter:\r\n                return this.PicowattsPerSquareCentimeter + ` `;\r\n            case IrradianceUnits.NanowattsPerSquareCentimeter:\r\n                return this.NanowattsPerSquareCentimeter + ` `;\r\n            case IrradianceUnits.MicrowattsPerSquareCentimeter:\r\n                return this.MicrowattsPerSquareCentimeter + ` `;\r\n            case IrradianceUnits.MilliwattsPerSquareCentimeter:\r\n                return this.MilliwattsPerSquareCentimeter + ` `;\r\n            case IrradianceUnits.KilowattsPerSquareCentimeter:\r\n                return this.KilowattsPerSquareCentimeter + ` `;\r\n            case IrradianceUnits.MegawattsPerSquareCentimeter:\r\n                return this.MegawattsPerSquareCentimeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Irradiance are equals to the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns True if the given Irradiance are equal to the current Irradiance.\r\n     */\r\n    equals(irradiance) {\r\n        return this.value === irradiance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Irradiance against the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns 0 if they are equal, -1 if the current Irradiance is less then other, 1 if the current Irradiance is greater then other.\r\n     */\r\n    compareTo(irradiance) {\r\n        if (this.value > irradiance.BaseValue)\r\n            return 1;\r\n        if (this.value < irradiance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Irradiance with the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns A new Irradiance instance with the results.\r\n     */\r\n    add(irradiance) {\r\n        return new Irradiance(this.value + irradiance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Irradiance with the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns A new Irradiance instance with the results.\r\n     */\r\n    subtract(irradiance) {\r\n        return new Irradiance(this.value - irradiance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Irradiance with the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns A new Irradiance instance with the results.\r\n     */\r\n    multiply(irradiance) {\r\n        return new Irradiance(this.value * irradiance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Irradiance with the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns A new Irradiance instance with the results.\r\n     */\r\n    divide(irradiance) {\r\n        return new Irradiance(this.value / irradiance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Irradiance with the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns A new Irradiance instance with the results.\r\n     */\r\n    modulo(irradiance) {\r\n        return new Irradiance(this.value % irradiance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Irradiance with the current Irradiance.\r\n     * @param irradiance The other Irradiance.\r\n     * @returns A new Irradiance instance with the results.\r\n     */\r\n    pow(irradiance) {\r\n        return new Irradiance(this.value ** irradiance.BaseValue);\r\n    }\r\n}\r\nexports.Irradiance = Irradiance;\r\n//# sourceMappingURL=irradiance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Irradiation = exports.IrradiationUnits = void 0;\r\n/** IrradiationUnits enumeration */\r\nvar IrradiationUnits;\r\n(function (IrradiationUnits) {\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"JoulesPerSquareMeter\"] = 0] = \"JoulesPerSquareMeter\";\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"JoulesPerSquareCentimeter\"] = 1] = \"JoulesPerSquareCentimeter\";\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"JoulesPerSquareMillimeter\"] = 2] = \"JoulesPerSquareMillimeter\";\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"WattHoursPerSquareMeter\"] = 3] = \"WattHoursPerSquareMeter\";\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"KilojoulesPerSquareMeter\"] = 4] = \"KilojoulesPerSquareMeter\";\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"MillijoulesPerSquareCentimeter\"] = 5] = \"MillijoulesPerSquareCentimeter\";\r\n    /** */\r\n    IrradiationUnits[IrradiationUnits[\"KilowattHoursPerSquareMeter\"] = 6] = \"KilowattHoursPerSquareMeter\";\r\n})(IrradiationUnits = exports.IrradiationUnits || (exports.IrradiationUnits = {}));\r\n/** Irradiation is the process by which an object is exposed to radiation. The exposure can originate from various sources, including natural sources. */\r\nclass Irradiation {\r\n    /**\r\n     * Create a new Irradiation.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Irradiation’ unit to create from.\r\n     * The default unit is JoulesPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = IrradiationUnits.JoulesPerSquareMeter) {\r\n        this.joulespersquaremeterLazy = null;\r\n        this.joulespersquarecentimeterLazy = null;\r\n        this.joulespersquaremillimeterLazy = null;\r\n        this.watthourspersquaremeterLazy = null;\r\n        this.kilojoulespersquaremeterLazy = null;\r\n        this.millijoulespersquarecentimeterLazy = null;\r\n        this.kilowatthourspersquaremeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Irradiation is JoulesPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get JoulesPerSquareMeter() {\r\n        if (this.joulespersquaremeterLazy !== null) {\r\n            return this.joulespersquaremeterLazy;\r\n        }\r\n        return this.joulespersquaremeterLazy = this.convertFromBase(IrradiationUnits.JoulesPerSquareMeter);\r\n    }\r\n    /** */\r\n    get JoulesPerSquareCentimeter() {\r\n        if (this.joulespersquarecentimeterLazy !== null) {\r\n            return this.joulespersquarecentimeterLazy;\r\n        }\r\n        return this.joulespersquarecentimeterLazy = this.convertFromBase(IrradiationUnits.JoulesPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get JoulesPerSquareMillimeter() {\r\n        if (this.joulespersquaremillimeterLazy !== null) {\r\n            return this.joulespersquaremillimeterLazy;\r\n        }\r\n        return this.joulespersquaremillimeterLazy = this.convertFromBase(IrradiationUnits.JoulesPerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get WattHoursPerSquareMeter() {\r\n        if (this.watthourspersquaremeterLazy !== null) {\r\n            return this.watthourspersquaremeterLazy;\r\n        }\r\n        return this.watthourspersquaremeterLazy = this.convertFromBase(IrradiationUnits.WattHoursPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilojoulesPerSquareMeter() {\r\n        if (this.kilojoulespersquaremeterLazy !== null) {\r\n            return this.kilojoulespersquaremeterLazy;\r\n        }\r\n        return this.kilojoulespersquaremeterLazy = this.convertFromBase(IrradiationUnits.KilojoulesPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MillijoulesPerSquareCentimeter() {\r\n        if (this.millijoulespersquarecentimeterLazy !== null) {\r\n            return this.millijoulespersquarecentimeterLazy;\r\n        }\r\n        return this.millijoulespersquarecentimeterLazy = this.convertFromBase(IrradiationUnits.MillijoulesPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilowattHoursPerSquareMeter() {\r\n        if (this.kilowatthourspersquaremeterLazy !== null) {\r\n            return this.kilowatthourspersquaremeterLazy;\r\n        }\r\n        return this.kilowatthourspersquaremeterLazy = this.convertFromBase(IrradiationUnits.KilowattHoursPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a JoulesPerSquareMeter\r\n     *\r\n     * @param value The unit as JoulesPerSquareMeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromJoulesPerSquareMeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.JoulesPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a JoulesPerSquareCentimeter\r\n     *\r\n     * @param value The unit as JoulesPerSquareCentimeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromJoulesPerSquareCentimeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.JoulesPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a JoulesPerSquareMillimeter\r\n     *\r\n     * @param value The unit as JoulesPerSquareMillimeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromJoulesPerSquareMillimeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.JoulesPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a WattHoursPerSquareMeter\r\n     *\r\n     * @param value The unit as WattHoursPerSquareMeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromWattHoursPerSquareMeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.WattHoursPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a KilojoulesPerSquareMeter\r\n     *\r\n     * @param value The unit as KilojoulesPerSquareMeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromKilojoulesPerSquareMeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.KilojoulesPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a MillijoulesPerSquareCentimeter\r\n     *\r\n     * @param value The unit as MillijoulesPerSquareCentimeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromMillijoulesPerSquareCentimeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.MillijoulesPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Irradiation instance from a KilowattHoursPerSquareMeter\r\n     *\r\n     * @param value The unit as KilowattHoursPerSquareMeter to create a new Irradiation from.\r\n     * @returns The new Irradiation instance.\r\n     */\r\n    static FromKilowattHoursPerSquareMeter(value) {\r\n        return new Irradiation(value, IrradiationUnits.KilowattHoursPerSquareMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case IrradiationUnits.JoulesPerSquareMeter:\r\n                return this.value;\r\n            case IrradiationUnits.JoulesPerSquareCentimeter:\r\n                return this.value / 1e4;\r\n            case IrradiationUnits.JoulesPerSquareMillimeter:\r\n                return this.value / 1e6;\r\n            case IrradiationUnits.WattHoursPerSquareMeter:\r\n                return this.value / 3600;\r\n            case IrradiationUnits.KilojoulesPerSquareMeter:\r\n                return (this.value) / 1000;\r\n            case IrradiationUnits.MillijoulesPerSquareCentimeter:\r\n                return (this.value / 1e4) / 0.001;\r\n            case IrradiationUnits.KilowattHoursPerSquareMeter:\r\n                return (this.value / 3600) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case IrradiationUnits.JoulesPerSquareMeter:\r\n                return value;\r\n            case IrradiationUnits.JoulesPerSquareCentimeter:\r\n                return value * 1e4;\r\n            case IrradiationUnits.JoulesPerSquareMillimeter:\r\n                return value * 1e6;\r\n            case IrradiationUnits.WattHoursPerSquareMeter:\r\n                return value * 3600;\r\n            case IrradiationUnits.KilojoulesPerSquareMeter:\r\n                return (value) * 1000;\r\n            case IrradiationUnits.MillijoulesPerSquareCentimeter:\r\n                return (value * 1e4) * 0.001;\r\n            case IrradiationUnits.KilowattHoursPerSquareMeter:\r\n                return (value * 3600) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Irradiation to string.\r\n     * Note! the default format for Irradiation is JoulesPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Irradiation.\r\n     * @returns The string format of the Irradiation.\r\n     */\r\n    toString(toUnit = IrradiationUnits.JoulesPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case IrradiationUnits.JoulesPerSquareMeter:\r\n                return this.JoulesPerSquareMeter + ` J/m²`;\r\n            case IrradiationUnits.JoulesPerSquareCentimeter:\r\n                return this.JoulesPerSquareCentimeter + ` J/cm²`;\r\n            case IrradiationUnits.JoulesPerSquareMillimeter:\r\n                return this.JoulesPerSquareMillimeter + ` J/mm²`;\r\n            case IrradiationUnits.WattHoursPerSquareMeter:\r\n                return this.WattHoursPerSquareMeter + ` Wh/m²`;\r\n            case IrradiationUnits.KilojoulesPerSquareMeter:\r\n                return this.KilojoulesPerSquareMeter + ` `;\r\n            case IrradiationUnits.MillijoulesPerSquareCentimeter:\r\n                return this.MillijoulesPerSquareCentimeter + ` `;\r\n            case IrradiationUnits.KilowattHoursPerSquareMeter:\r\n                return this.KilowattHoursPerSquareMeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Irradiation are equals to the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns True if the given Irradiation are equal to the current Irradiation.\r\n     */\r\n    equals(irradiation) {\r\n        return this.value === irradiation.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Irradiation against the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns 0 if they are equal, -1 if the current Irradiation is less then other, 1 if the current Irradiation is greater then other.\r\n     */\r\n    compareTo(irradiation) {\r\n        if (this.value > irradiation.BaseValue)\r\n            return 1;\r\n        if (this.value < irradiation.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Irradiation with the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns A new Irradiation instance with the results.\r\n     */\r\n    add(irradiation) {\r\n        return new Irradiation(this.value + irradiation.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Irradiation with the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns A new Irradiation instance with the results.\r\n     */\r\n    subtract(irradiation) {\r\n        return new Irradiation(this.value - irradiation.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Irradiation with the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns A new Irradiation instance with the results.\r\n     */\r\n    multiply(irradiation) {\r\n        return new Irradiation(this.value * irradiation.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Irradiation with the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns A new Irradiation instance with the results.\r\n     */\r\n    divide(irradiation) {\r\n        return new Irradiation(this.value / irradiation.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Irradiation with the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns A new Irradiation instance with the results.\r\n     */\r\n    modulo(irradiation) {\r\n        return new Irradiation(this.value % irradiation.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Irradiation with the current Irradiation.\r\n     * @param irradiation The other Irradiation.\r\n     * @returns A new Irradiation instance with the results.\r\n     */\r\n    pow(irradiation) {\r\n        return new Irradiation(this.value ** irradiation.BaseValue);\r\n    }\r\n}\r\nexports.Irradiation = Irradiation;\r\n//# sourceMappingURL=irradiation.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KinematicViscosity = exports.KinematicViscosityUnits = void 0;\r\n/** KinematicViscosityUnits enumeration */\r\nvar KinematicViscosityUnits;\r\n(function (KinematicViscosityUnits) {\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"SquareMetersPerSecond\"] = 0] = \"SquareMetersPerSecond\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Stokes\"] = 1] = \"Stokes\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"SquareFeetPerSecond\"] = 2] = \"SquareFeetPerSecond\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Nanostokes\"] = 3] = \"Nanostokes\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Microstokes\"] = 4] = \"Microstokes\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Millistokes\"] = 5] = \"Millistokes\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Centistokes\"] = 6] = \"Centistokes\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Decistokes\"] = 7] = \"Decistokes\";\r\n    /** */\r\n    KinematicViscosityUnits[KinematicViscosityUnits[\"Kilostokes\"] = 8] = \"Kilostokes\";\r\n})(KinematicViscosityUnits = exports.KinematicViscosityUnits || (exports.KinematicViscosityUnits = {}));\r\n/** The viscosity of a fluid is a measure of its resistance to gradual deformation by shear stress or tensile stress. */\r\nclass KinematicViscosity {\r\n    /**\r\n     * Create a new KinematicViscosity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘KinematicViscosity’ unit to create from.\r\n     * The default unit is SquareMetersPerSecond\r\n     */\r\n    constructor(value, fromUnit = KinematicViscosityUnits.SquareMetersPerSecond) {\r\n        this.squaremeterspersecondLazy = null;\r\n        this.stokesLazy = null;\r\n        this.squarefeetpersecondLazy = null;\r\n        this.nanostokesLazy = null;\r\n        this.microstokesLazy = null;\r\n        this.millistokesLazy = null;\r\n        this.centistokesLazy = null;\r\n        this.decistokesLazy = null;\r\n        this.kilostokesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of KinematicViscosity is SquareMetersPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get SquareMetersPerSecond() {\r\n        if (this.squaremeterspersecondLazy !== null) {\r\n            return this.squaremeterspersecondLazy;\r\n        }\r\n        return this.squaremeterspersecondLazy = this.convertFromBase(KinematicViscosityUnits.SquareMetersPerSecond);\r\n    }\r\n    /** */\r\n    get Stokes() {\r\n        if (this.stokesLazy !== null) {\r\n            return this.stokesLazy;\r\n        }\r\n        return this.stokesLazy = this.convertFromBase(KinematicViscosityUnits.Stokes);\r\n    }\r\n    /** */\r\n    get SquareFeetPerSecond() {\r\n        if (this.squarefeetpersecondLazy !== null) {\r\n            return this.squarefeetpersecondLazy;\r\n        }\r\n        return this.squarefeetpersecondLazy = this.convertFromBase(KinematicViscosityUnits.SquareFeetPerSecond);\r\n    }\r\n    /** */\r\n    get Nanostokes() {\r\n        if (this.nanostokesLazy !== null) {\r\n            return this.nanostokesLazy;\r\n        }\r\n        return this.nanostokesLazy = this.convertFromBase(KinematicViscosityUnits.Nanostokes);\r\n    }\r\n    /** */\r\n    get Microstokes() {\r\n        if (this.microstokesLazy !== null) {\r\n            return this.microstokesLazy;\r\n        }\r\n        return this.microstokesLazy = this.convertFromBase(KinematicViscosityUnits.Microstokes);\r\n    }\r\n    /** */\r\n    get Millistokes() {\r\n        if (this.millistokesLazy !== null) {\r\n            return this.millistokesLazy;\r\n        }\r\n        return this.millistokesLazy = this.convertFromBase(KinematicViscosityUnits.Millistokes);\r\n    }\r\n    /** */\r\n    get Centistokes() {\r\n        if (this.centistokesLazy !== null) {\r\n            return this.centistokesLazy;\r\n        }\r\n        return this.centistokesLazy = this.convertFromBase(KinematicViscosityUnits.Centistokes);\r\n    }\r\n    /** */\r\n    get Decistokes() {\r\n        if (this.decistokesLazy !== null) {\r\n            return this.decistokesLazy;\r\n        }\r\n        return this.decistokesLazy = this.convertFromBase(KinematicViscosityUnits.Decistokes);\r\n    }\r\n    /** */\r\n    get Kilostokes() {\r\n        if (this.kilostokesLazy !== null) {\r\n            return this.kilostokesLazy;\r\n        }\r\n        return this.kilostokesLazy = this.convertFromBase(KinematicViscosityUnits.Kilostokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a SquareMetersPerSecond\r\n     *\r\n     * @param value The unit as SquareMetersPerSecond to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromSquareMetersPerSecond(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.SquareMetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Stokes\r\n     *\r\n     * @param value The unit as Stokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromStokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Stokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a SquareFeetPerSecond\r\n     *\r\n     * @param value The unit as SquareFeetPerSecond to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromSquareFeetPerSecond(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.SquareFeetPerSecond);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Nanostokes\r\n     *\r\n     * @param value The unit as Nanostokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromNanostokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Nanostokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Microstokes\r\n     *\r\n     * @param value The unit as Microstokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromMicrostokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Microstokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Millistokes\r\n     *\r\n     * @param value The unit as Millistokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromMillistokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Millistokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Centistokes\r\n     *\r\n     * @param value The unit as Centistokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromCentistokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Centistokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Decistokes\r\n     *\r\n     * @param value The unit as Decistokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromDecistokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Decistokes);\r\n    }\r\n    /**\r\n     * Create a new KinematicViscosity instance from a Kilostokes\r\n     *\r\n     * @param value The unit as Kilostokes to create a new KinematicViscosity from.\r\n     * @returns The new KinematicViscosity instance.\r\n     */\r\n    static FromKilostokes(value) {\r\n        return new KinematicViscosity(value, KinematicViscosityUnits.Kilostokes);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case KinematicViscosityUnits.SquareMetersPerSecond:\r\n                return this.value;\r\n            case KinematicViscosityUnits.Stokes:\r\n                return this.value * 1e4;\r\n            case KinematicViscosityUnits.SquareFeetPerSecond:\r\n                return this.value * 10.7639;\r\n            case KinematicViscosityUnits.Nanostokes:\r\n                return (this.value * 1e4) / 1e-9;\r\n            case KinematicViscosityUnits.Microstokes:\r\n                return (this.value * 1e4) / 0.000001;\r\n            case KinematicViscosityUnits.Millistokes:\r\n                return (this.value * 1e4) / 0.001;\r\n            case KinematicViscosityUnits.Centistokes:\r\n                return (this.value * 1e4) / 0.01;\r\n            case KinematicViscosityUnits.Decistokes:\r\n                return (this.value * 1e4) / 0.1;\r\n            case KinematicViscosityUnits.Kilostokes:\r\n                return (this.value * 1e4) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case KinematicViscosityUnits.SquareMetersPerSecond:\r\n                return value;\r\n            case KinematicViscosityUnits.Stokes:\r\n                return value / 1e4;\r\n            case KinematicViscosityUnits.SquareFeetPerSecond:\r\n                return value / 10.7639;\r\n            case KinematicViscosityUnits.Nanostokes:\r\n                return (value / 1e4) * 1e-9;\r\n            case KinematicViscosityUnits.Microstokes:\r\n                return (value / 1e4) * 0.000001;\r\n            case KinematicViscosityUnits.Millistokes:\r\n                return (value / 1e4) * 0.001;\r\n            case KinematicViscosityUnits.Centistokes:\r\n                return (value / 1e4) * 0.01;\r\n            case KinematicViscosityUnits.Decistokes:\r\n                return (value / 1e4) * 0.1;\r\n            case KinematicViscosityUnits.Kilostokes:\r\n                return (value / 1e4) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the KinematicViscosity to string.\r\n     * Note! the default format for KinematicViscosity is SquareMetersPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the KinematicViscosity.\r\n     * @returns The string format of the KinematicViscosity.\r\n     */\r\n    toString(toUnit = KinematicViscosityUnits.SquareMetersPerSecond) {\r\n        switch (toUnit) {\r\n            case KinematicViscosityUnits.SquareMetersPerSecond:\r\n                return this.SquareMetersPerSecond + ` m²/s`;\r\n            case KinematicViscosityUnits.Stokes:\r\n                return this.Stokes + ` St`;\r\n            case KinematicViscosityUnits.SquareFeetPerSecond:\r\n                return this.SquareFeetPerSecond + ` ft²/s`;\r\n            case KinematicViscosityUnits.Nanostokes:\r\n                return this.Nanostokes + ` `;\r\n            case KinematicViscosityUnits.Microstokes:\r\n                return this.Microstokes + ` `;\r\n            case KinematicViscosityUnits.Millistokes:\r\n                return this.Millistokes + ` `;\r\n            case KinematicViscosityUnits.Centistokes:\r\n                return this.Centistokes + ` `;\r\n            case KinematicViscosityUnits.Decistokes:\r\n                return this.Decistokes + ` `;\r\n            case KinematicViscosityUnits.Kilostokes:\r\n                return this.Kilostokes + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given KinematicViscosity are equals to the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns True if the given KinematicViscosity are equal to the current KinematicViscosity.\r\n     */\r\n    equals(kinematicViscosity) {\r\n        return this.value === kinematicViscosity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given KinematicViscosity against the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns 0 if they are equal, -1 if the current KinematicViscosity is less then other, 1 if the current KinematicViscosity is greater then other.\r\n     */\r\n    compareTo(kinematicViscosity) {\r\n        if (this.value > kinematicViscosity.BaseValue)\r\n            return 1;\r\n        if (this.value < kinematicViscosity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given KinematicViscosity with the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns A new KinematicViscosity instance with the results.\r\n     */\r\n    add(kinematicViscosity) {\r\n        return new KinematicViscosity(this.value + kinematicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given KinematicViscosity with the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns A new KinematicViscosity instance with the results.\r\n     */\r\n    subtract(kinematicViscosity) {\r\n        return new KinematicViscosity(this.value - kinematicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given KinematicViscosity with the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns A new KinematicViscosity instance with the results.\r\n     */\r\n    multiply(kinematicViscosity) {\r\n        return new KinematicViscosity(this.value * kinematicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given KinematicViscosity with the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns A new KinematicViscosity instance with the results.\r\n     */\r\n    divide(kinematicViscosity) {\r\n        return new KinematicViscosity(this.value / kinematicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given KinematicViscosity with the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns A new KinematicViscosity instance with the results.\r\n     */\r\n    modulo(kinematicViscosity) {\r\n        return new KinematicViscosity(this.value % kinematicViscosity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given KinematicViscosity with the current KinematicViscosity.\r\n     * @param kinematicViscosity The other KinematicViscosity.\r\n     * @returns A new KinematicViscosity instance with the results.\r\n     */\r\n    pow(kinematicViscosity) {\r\n        return new KinematicViscosity(this.value ** kinematicViscosity.BaseValue);\r\n    }\r\n}\r\nexports.KinematicViscosity = KinematicViscosity;\r\n//# sourceMappingURL=kinematicviscosity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LapseRate = exports.LapseRateUnits = void 0;\r\n/** LapseRateUnits enumeration */\r\nvar LapseRateUnits;\r\n(function (LapseRateUnits) {\r\n    /** */\r\n    LapseRateUnits[LapseRateUnits[\"DegreesCelciusPerKilometer\"] = 0] = \"DegreesCelciusPerKilometer\";\r\n})(LapseRateUnits = exports.LapseRateUnits || (exports.LapseRateUnits = {}));\r\n/** Lapse rate is the rate at which Earth's atmospheric temperature decreases with an increase in altitude, or increases with the decrease in altitude. */\r\nclass LapseRate {\r\n    /**\r\n     * Create a new LapseRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘LapseRate’ unit to create from.\r\n     * The default unit is DegreesCelciusPerKilometer\r\n     */\r\n    constructor(value, fromUnit = LapseRateUnits.DegreesCelciusPerKilometer) {\r\n        this.degreescelciusperkilometerLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of LapseRate is DegreesCelciusPerKilometer.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DegreesCelciusPerKilometer() {\r\n        if (this.degreescelciusperkilometerLazy !== null) {\r\n            return this.degreescelciusperkilometerLazy;\r\n        }\r\n        return this.degreescelciusperkilometerLazy = this.convertFromBase(LapseRateUnits.DegreesCelciusPerKilometer);\r\n    }\r\n    /**\r\n     * Create a new LapseRate instance from a DegreesCelciusPerKilometer\r\n     *\r\n     * @param value The unit as DegreesCelciusPerKilometer to create a new LapseRate from.\r\n     * @returns The new LapseRate instance.\r\n     */\r\n    static FromDegreesCelciusPerKilometer(value) {\r\n        return new LapseRate(value, LapseRateUnits.DegreesCelciusPerKilometer);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LapseRateUnits.DegreesCelciusPerKilometer:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LapseRateUnits.DegreesCelciusPerKilometer:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the LapseRate to string.\r\n     * Note! the default format for LapseRate is DegreesCelciusPerKilometer.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the LapseRate.\r\n     * @returns The string format of the LapseRate.\r\n     */\r\n    toString(toUnit = LapseRateUnits.DegreesCelciusPerKilometer) {\r\n        switch (toUnit) {\r\n            case LapseRateUnits.DegreesCelciusPerKilometer:\r\n                return this.DegreesCelciusPerKilometer + ` ∆°C/km`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given LapseRate are equals to the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns True if the given LapseRate are equal to the current LapseRate.\r\n     */\r\n    equals(lapseRate) {\r\n        return this.value === lapseRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given LapseRate against the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns 0 if they are equal, -1 if the current LapseRate is less then other, 1 if the current LapseRate is greater then other.\r\n     */\r\n    compareTo(lapseRate) {\r\n        if (this.value > lapseRate.BaseValue)\r\n            return 1;\r\n        if (this.value < lapseRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given LapseRate with the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns A new LapseRate instance with the results.\r\n     */\r\n    add(lapseRate) {\r\n        return new LapseRate(this.value + lapseRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given LapseRate with the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns A new LapseRate instance with the results.\r\n     */\r\n    subtract(lapseRate) {\r\n        return new LapseRate(this.value - lapseRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given LapseRate with the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns A new LapseRate instance with the results.\r\n     */\r\n    multiply(lapseRate) {\r\n        return new LapseRate(this.value * lapseRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given LapseRate with the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns A new LapseRate instance with the results.\r\n     */\r\n    divide(lapseRate) {\r\n        return new LapseRate(this.value / lapseRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given LapseRate with the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns A new LapseRate instance with the results.\r\n     */\r\n    modulo(lapseRate) {\r\n        return new LapseRate(this.value % lapseRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given LapseRate with the current LapseRate.\r\n     * @param lapseRate The other LapseRate.\r\n     * @returns A new LapseRate instance with the results.\r\n     */\r\n    pow(lapseRate) {\r\n        return new LapseRate(this.value ** lapseRate.BaseValue);\r\n    }\r\n}\r\nexports.LapseRate = LapseRate;\r\n//# sourceMappingURL=lapserate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Length = exports.LengthUnits = void 0;\r\n/** LengthUnits enumeration */\r\nvar LengthUnits;\r\n(function (LengthUnits) {\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Meters\"] = 0] = \"Meters\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Miles\"] = 1] = \"Miles\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Yards\"] = 2] = \"Yards\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Feet\"] = 3] = \"Feet\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"UsSurveyFeet\"] = 4] = \"UsSurveyFeet\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Inches\"] = 5] = \"Inches\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Mils\"] = 6] = \"Mils\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"NauticalMiles\"] = 7] = \"NauticalMiles\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Fathoms\"] = 8] = \"Fathoms\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Shackles\"] = 9] = \"Shackles\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Microinches\"] = 10] = \"Microinches\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"PrinterPoints\"] = 11] = \"PrinterPoints\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"DtpPoints\"] = 12] = \"DtpPoints\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"PrinterPicas\"] = 13] = \"PrinterPicas\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"DtpPicas\"] = 14] = \"DtpPicas\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Twips\"] = 15] = \"Twips\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Hands\"] = 16] = \"Hands\";\r\n    /** One Astronomical Unit is the distance from the solar system Star, the sun, to planet Earth. */\r\n    LengthUnits[LengthUnits[\"AstronomicalUnits\"] = 17] = \"AstronomicalUnits\";\r\n    /** A parsec is defined as the distance at which one astronomical unit (AU) subtends an angle of one arcsecond. */\r\n    LengthUnits[LengthUnits[\"Parsecs\"] = 18] = \"Parsecs\";\r\n    /** A Light Year (ly) is the distance that light travel during an Earth year, ie 365 days. */\r\n    LengthUnits[LengthUnits[\"LightYears\"] = 19] = \"LightYears\";\r\n    /** Solar radius is a ratio unit to the radius of the solar system star, the sun. */\r\n    LengthUnits[LengthUnits[\"SolarRadiuses\"] = 20] = \"SolarRadiuses\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Chains\"] = 21] = \"Chains\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Nanometers\"] = 22] = \"Nanometers\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Micrometers\"] = 23] = \"Micrometers\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Millimeters\"] = 24] = \"Millimeters\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Centimeters\"] = 25] = \"Centimeters\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Decimeters\"] = 26] = \"Decimeters\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Hectometers\"] = 27] = \"Hectometers\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Kilometers\"] = 28] = \"Kilometers\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Kiloparsecs\"] = 29] = \"Kiloparsecs\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"Megaparsecs\"] = 30] = \"Megaparsecs\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"KilolightYears\"] = 31] = \"KilolightYears\";\r\n    /** */\r\n    LengthUnits[LengthUnits[\"MegalightYears\"] = 32] = \"MegalightYears\";\r\n})(LengthUnits = exports.LengthUnits || (exports.LengthUnits = {}));\r\n/** Many different units of length have been used around the world. The main units in modern use are U.S. customary units in the United States and the Metric system elsewhere. British Imperial units are still used for some purposes in the United Kingdom and some other countries. The metric system is sub-divided into SI and non-SI units. */\r\nclass Length {\r\n    /**\r\n     * Create a new Length.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Length’ unit to create from.\r\n     * The default unit is Meters\r\n     */\r\n    constructor(value, fromUnit = LengthUnits.Meters) {\r\n        this.metersLazy = null;\r\n        this.milesLazy = null;\r\n        this.yardsLazy = null;\r\n        this.feetLazy = null;\r\n        this.ussurveyfeetLazy = null;\r\n        this.inchesLazy = null;\r\n        this.milsLazy = null;\r\n        this.nauticalmilesLazy = null;\r\n        this.fathomsLazy = null;\r\n        this.shacklesLazy = null;\r\n        this.microinchesLazy = null;\r\n        this.printerpointsLazy = null;\r\n        this.dtppointsLazy = null;\r\n        this.printerpicasLazy = null;\r\n        this.dtppicasLazy = null;\r\n        this.twipsLazy = null;\r\n        this.handsLazy = null;\r\n        this.astronomicalunitsLazy = null;\r\n        this.parsecsLazy = null;\r\n        this.lightyearsLazy = null;\r\n        this.solarradiusesLazy = null;\r\n        this.chainsLazy = null;\r\n        this.nanometersLazy = null;\r\n        this.micrometersLazy = null;\r\n        this.millimetersLazy = null;\r\n        this.centimetersLazy = null;\r\n        this.decimetersLazy = null;\r\n        this.hectometersLazy = null;\r\n        this.kilometersLazy = null;\r\n        this.kiloparsecsLazy = null;\r\n        this.megaparsecsLazy = null;\r\n        this.kilolightyearsLazy = null;\r\n        this.megalightyearsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Length is Meters.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Meters() {\r\n        if (this.metersLazy !== null) {\r\n            return this.metersLazy;\r\n        }\r\n        return this.metersLazy = this.convertFromBase(LengthUnits.Meters);\r\n    }\r\n    /** */\r\n    get Miles() {\r\n        if (this.milesLazy !== null) {\r\n            return this.milesLazy;\r\n        }\r\n        return this.milesLazy = this.convertFromBase(LengthUnits.Miles);\r\n    }\r\n    /** */\r\n    get Yards() {\r\n        if (this.yardsLazy !== null) {\r\n            return this.yardsLazy;\r\n        }\r\n        return this.yardsLazy = this.convertFromBase(LengthUnits.Yards);\r\n    }\r\n    /** */\r\n    get Feet() {\r\n        if (this.feetLazy !== null) {\r\n            return this.feetLazy;\r\n        }\r\n        return this.feetLazy = this.convertFromBase(LengthUnits.Feet);\r\n    }\r\n    /** */\r\n    get UsSurveyFeet() {\r\n        if (this.ussurveyfeetLazy !== null) {\r\n            return this.ussurveyfeetLazy;\r\n        }\r\n        return this.ussurveyfeetLazy = this.convertFromBase(LengthUnits.UsSurveyFeet);\r\n    }\r\n    /** */\r\n    get Inches() {\r\n        if (this.inchesLazy !== null) {\r\n            return this.inchesLazy;\r\n        }\r\n        return this.inchesLazy = this.convertFromBase(LengthUnits.Inches);\r\n    }\r\n    /** */\r\n    get Mils() {\r\n        if (this.milsLazy !== null) {\r\n            return this.milsLazy;\r\n        }\r\n        return this.milsLazy = this.convertFromBase(LengthUnits.Mils);\r\n    }\r\n    /** */\r\n    get NauticalMiles() {\r\n        if (this.nauticalmilesLazy !== null) {\r\n            return this.nauticalmilesLazy;\r\n        }\r\n        return this.nauticalmilesLazy = this.convertFromBase(LengthUnits.NauticalMiles);\r\n    }\r\n    /** */\r\n    get Fathoms() {\r\n        if (this.fathomsLazy !== null) {\r\n            return this.fathomsLazy;\r\n        }\r\n        return this.fathomsLazy = this.convertFromBase(LengthUnits.Fathoms);\r\n    }\r\n    /** */\r\n    get Shackles() {\r\n        if (this.shacklesLazy !== null) {\r\n            return this.shacklesLazy;\r\n        }\r\n        return this.shacklesLazy = this.convertFromBase(LengthUnits.Shackles);\r\n    }\r\n    /** */\r\n    get Microinches() {\r\n        if (this.microinchesLazy !== null) {\r\n            return this.microinchesLazy;\r\n        }\r\n        return this.microinchesLazy = this.convertFromBase(LengthUnits.Microinches);\r\n    }\r\n    /** */\r\n    get PrinterPoints() {\r\n        if (this.printerpointsLazy !== null) {\r\n            return this.printerpointsLazy;\r\n        }\r\n        return this.printerpointsLazy = this.convertFromBase(LengthUnits.PrinterPoints);\r\n    }\r\n    /** */\r\n    get DtpPoints() {\r\n        if (this.dtppointsLazy !== null) {\r\n            return this.dtppointsLazy;\r\n        }\r\n        return this.dtppointsLazy = this.convertFromBase(LengthUnits.DtpPoints);\r\n    }\r\n    /** */\r\n    get PrinterPicas() {\r\n        if (this.printerpicasLazy !== null) {\r\n            return this.printerpicasLazy;\r\n        }\r\n        return this.printerpicasLazy = this.convertFromBase(LengthUnits.PrinterPicas);\r\n    }\r\n    /** */\r\n    get DtpPicas() {\r\n        if (this.dtppicasLazy !== null) {\r\n            return this.dtppicasLazy;\r\n        }\r\n        return this.dtppicasLazy = this.convertFromBase(LengthUnits.DtpPicas);\r\n    }\r\n    /** */\r\n    get Twips() {\r\n        if (this.twipsLazy !== null) {\r\n            return this.twipsLazy;\r\n        }\r\n        return this.twipsLazy = this.convertFromBase(LengthUnits.Twips);\r\n    }\r\n    /** */\r\n    get Hands() {\r\n        if (this.handsLazy !== null) {\r\n            return this.handsLazy;\r\n        }\r\n        return this.handsLazy = this.convertFromBase(LengthUnits.Hands);\r\n    }\r\n    /** One Astronomical Unit is the distance from the solar system Star, the sun, to planet Earth. */\r\n    get AstronomicalUnits() {\r\n        if (this.astronomicalunitsLazy !== null) {\r\n            return this.astronomicalunitsLazy;\r\n        }\r\n        return this.astronomicalunitsLazy = this.convertFromBase(LengthUnits.AstronomicalUnits);\r\n    }\r\n    /** A parsec is defined as the distance at which one astronomical unit (AU) subtends an angle of one arcsecond. */\r\n    get Parsecs() {\r\n        if (this.parsecsLazy !== null) {\r\n            return this.parsecsLazy;\r\n        }\r\n        return this.parsecsLazy = this.convertFromBase(LengthUnits.Parsecs);\r\n    }\r\n    /** A Light Year (ly) is the distance that light travel during an Earth year, ie 365 days. */\r\n    get LightYears() {\r\n        if (this.lightyearsLazy !== null) {\r\n            return this.lightyearsLazy;\r\n        }\r\n        return this.lightyearsLazy = this.convertFromBase(LengthUnits.LightYears);\r\n    }\r\n    /** Solar radius is a ratio unit to the radius of the solar system star, the sun. */\r\n    get SolarRadiuses() {\r\n        if (this.solarradiusesLazy !== null) {\r\n            return this.solarradiusesLazy;\r\n        }\r\n        return this.solarradiusesLazy = this.convertFromBase(LengthUnits.SolarRadiuses);\r\n    }\r\n    /** */\r\n    get Chains() {\r\n        if (this.chainsLazy !== null) {\r\n            return this.chainsLazy;\r\n        }\r\n        return this.chainsLazy = this.convertFromBase(LengthUnits.Chains);\r\n    }\r\n    /** */\r\n    get Nanometers() {\r\n        if (this.nanometersLazy !== null) {\r\n            return this.nanometersLazy;\r\n        }\r\n        return this.nanometersLazy = this.convertFromBase(LengthUnits.Nanometers);\r\n    }\r\n    /** */\r\n    get Micrometers() {\r\n        if (this.micrometersLazy !== null) {\r\n            return this.micrometersLazy;\r\n        }\r\n        return this.micrometersLazy = this.convertFromBase(LengthUnits.Micrometers);\r\n    }\r\n    /** */\r\n    get Millimeters() {\r\n        if (this.millimetersLazy !== null) {\r\n            return this.millimetersLazy;\r\n        }\r\n        return this.millimetersLazy = this.convertFromBase(LengthUnits.Millimeters);\r\n    }\r\n    /** */\r\n    get Centimeters() {\r\n        if (this.centimetersLazy !== null) {\r\n            return this.centimetersLazy;\r\n        }\r\n        return this.centimetersLazy = this.convertFromBase(LengthUnits.Centimeters);\r\n    }\r\n    /** */\r\n    get Decimeters() {\r\n        if (this.decimetersLazy !== null) {\r\n            return this.decimetersLazy;\r\n        }\r\n        return this.decimetersLazy = this.convertFromBase(LengthUnits.Decimeters);\r\n    }\r\n    /** */\r\n    get Hectometers() {\r\n        if (this.hectometersLazy !== null) {\r\n            return this.hectometersLazy;\r\n        }\r\n        return this.hectometersLazy = this.convertFromBase(LengthUnits.Hectometers);\r\n    }\r\n    /** */\r\n    get Kilometers() {\r\n        if (this.kilometersLazy !== null) {\r\n            return this.kilometersLazy;\r\n        }\r\n        return this.kilometersLazy = this.convertFromBase(LengthUnits.Kilometers);\r\n    }\r\n    /** */\r\n    get Kiloparsecs() {\r\n        if (this.kiloparsecsLazy !== null) {\r\n            return this.kiloparsecsLazy;\r\n        }\r\n        return this.kiloparsecsLazy = this.convertFromBase(LengthUnits.Kiloparsecs);\r\n    }\r\n    /** */\r\n    get Megaparsecs() {\r\n        if (this.megaparsecsLazy !== null) {\r\n            return this.megaparsecsLazy;\r\n        }\r\n        return this.megaparsecsLazy = this.convertFromBase(LengthUnits.Megaparsecs);\r\n    }\r\n    /** */\r\n    get KilolightYears() {\r\n        if (this.kilolightyearsLazy !== null) {\r\n            return this.kilolightyearsLazy;\r\n        }\r\n        return this.kilolightyearsLazy = this.convertFromBase(LengthUnits.KilolightYears);\r\n    }\r\n    /** */\r\n    get MegalightYears() {\r\n        if (this.megalightyearsLazy !== null) {\r\n            return this.megalightyearsLazy;\r\n        }\r\n        return this.megalightyearsLazy = this.convertFromBase(LengthUnits.MegalightYears);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Meters\r\n     *\r\n     * @param value The unit as Meters to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMeters(value) {\r\n        return new Length(value, LengthUnits.Meters);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Miles\r\n     *\r\n     * @param value The unit as Miles to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMiles(value) {\r\n        return new Length(value, LengthUnits.Miles);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Yards\r\n     *\r\n     * @param value The unit as Yards to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromYards(value) {\r\n        return new Length(value, LengthUnits.Yards);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Feet\r\n     *\r\n     * @param value The unit as Feet to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromFeet(value) {\r\n        return new Length(value, LengthUnits.Feet);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a UsSurveyFeet\r\n     *\r\n     * @param value The unit as UsSurveyFeet to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromUsSurveyFeet(value) {\r\n        return new Length(value, LengthUnits.UsSurveyFeet);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Inches\r\n     *\r\n     * @param value The unit as Inches to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromInches(value) {\r\n        return new Length(value, LengthUnits.Inches);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Mils\r\n     *\r\n     * @param value The unit as Mils to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMils(value) {\r\n        return new Length(value, LengthUnits.Mils);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a NauticalMiles\r\n     *\r\n     * @param value The unit as NauticalMiles to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromNauticalMiles(value) {\r\n        return new Length(value, LengthUnits.NauticalMiles);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Fathoms\r\n     *\r\n     * @param value The unit as Fathoms to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromFathoms(value) {\r\n        return new Length(value, LengthUnits.Fathoms);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Shackles\r\n     *\r\n     * @param value The unit as Shackles to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromShackles(value) {\r\n        return new Length(value, LengthUnits.Shackles);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Microinches\r\n     *\r\n     * @param value The unit as Microinches to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMicroinches(value) {\r\n        return new Length(value, LengthUnits.Microinches);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a PrinterPoints\r\n     *\r\n     * @param value The unit as PrinterPoints to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromPrinterPoints(value) {\r\n        return new Length(value, LengthUnits.PrinterPoints);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a DtpPoints\r\n     *\r\n     * @param value The unit as DtpPoints to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromDtpPoints(value) {\r\n        return new Length(value, LengthUnits.DtpPoints);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a PrinterPicas\r\n     *\r\n     * @param value The unit as PrinterPicas to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromPrinterPicas(value) {\r\n        return new Length(value, LengthUnits.PrinterPicas);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a DtpPicas\r\n     *\r\n     * @param value The unit as DtpPicas to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromDtpPicas(value) {\r\n        return new Length(value, LengthUnits.DtpPicas);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Twips\r\n     *\r\n     * @param value The unit as Twips to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromTwips(value) {\r\n        return new Length(value, LengthUnits.Twips);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Hands\r\n     *\r\n     * @param value The unit as Hands to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromHands(value) {\r\n        return new Length(value, LengthUnits.Hands);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a AstronomicalUnits\r\n     * One Astronomical Unit is the distance from the solar system Star, the sun, to planet Earth.\r\n     * @param value The unit as AstronomicalUnits to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromAstronomicalUnits(value) {\r\n        return new Length(value, LengthUnits.AstronomicalUnits);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Parsecs\r\n     * A parsec is defined as the distance at which one astronomical unit (AU) subtends an angle of one arcsecond.\r\n     * @param value The unit as Parsecs to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromParsecs(value) {\r\n        return new Length(value, LengthUnits.Parsecs);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a LightYears\r\n     * A Light Year (ly) is the distance that light travel during an Earth year, ie 365 days.\r\n     * @param value The unit as LightYears to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromLightYears(value) {\r\n        return new Length(value, LengthUnits.LightYears);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a SolarRadiuses\r\n     * Solar radius is a ratio unit to the radius of the solar system star, the sun.\r\n     * @param value The unit as SolarRadiuses to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromSolarRadiuses(value) {\r\n        return new Length(value, LengthUnits.SolarRadiuses);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Chains\r\n     *\r\n     * @param value The unit as Chains to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromChains(value) {\r\n        return new Length(value, LengthUnits.Chains);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Nanometers\r\n     *\r\n     * @param value The unit as Nanometers to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromNanometers(value) {\r\n        return new Length(value, LengthUnits.Nanometers);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Micrometers\r\n     *\r\n     * @param value The unit as Micrometers to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMicrometers(value) {\r\n        return new Length(value, LengthUnits.Micrometers);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Millimeters\r\n     *\r\n     * @param value The unit as Millimeters to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMillimeters(value) {\r\n        return new Length(value, LengthUnits.Millimeters);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Centimeters\r\n     *\r\n     * @param value The unit as Centimeters to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromCentimeters(value) {\r\n        return new Length(value, LengthUnits.Centimeters);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Decimeters\r\n     *\r\n     * @param value The unit as Decimeters to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromDecimeters(value) {\r\n        return new Length(value, LengthUnits.Decimeters);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Hectometers\r\n     *\r\n     * @param value The unit as Hectometers to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromHectometers(value) {\r\n        return new Length(value, LengthUnits.Hectometers);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Kilometers\r\n     *\r\n     * @param value The unit as Kilometers to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromKilometers(value) {\r\n        return new Length(value, LengthUnits.Kilometers);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Kiloparsecs\r\n     *\r\n     * @param value The unit as Kiloparsecs to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromKiloparsecs(value) {\r\n        return new Length(value, LengthUnits.Kiloparsecs);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a Megaparsecs\r\n     *\r\n     * @param value The unit as Megaparsecs to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMegaparsecs(value) {\r\n        return new Length(value, LengthUnits.Megaparsecs);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a KilolightYears\r\n     *\r\n     * @param value The unit as KilolightYears to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromKilolightYears(value) {\r\n        return new Length(value, LengthUnits.KilolightYears);\r\n    }\r\n    /**\r\n     * Create a new Length instance from a MegalightYears\r\n     *\r\n     * @param value The unit as MegalightYears to create a new Length from.\r\n     * @returns The new Length instance.\r\n     */\r\n    static FromMegalightYears(value) {\r\n        return new Length(value, LengthUnits.MegalightYears);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LengthUnits.Meters:\r\n                return this.value;\r\n            case LengthUnits.Miles:\r\n                return this.value / 1609.34;\r\n            case LengthUnits.Yards:\r\n                return this.value / 0.9144;\r\n            case LengthUnits.Feet:\r\n                return this.value / 0.3048;\r\n            case LengthUnits.UsSurveyFeet:\r\n                return this.value * 3937 / 1200;\r\n            case LengthUnits.Inches:\r\n                return this.value / 2.54e-2;\r\n            case LengthUnits.Mils:\r\n                return this.value / 2.54e-5;\r\n            case LengthUnits.NauticalMiles:\r\n                return this.value / 1852;\r\n            case LengthUnits.Fathoms:\r\n                return this.value / 1.8288;\r\n            case LengthUnits.Shackles:\r\n                return this.value / 27.432;\r\n            case LengthUnits.Microinches:\r\n                return this.value / 2.54e-8;\r\n            case LengthUnits.PrinterPoints:\r\n                return (this.value / 2.54e-2) * 72.27;\r\n            case LengthUnits.DtpPoints:\r\n                return (this.value / 2.54e-2) * 72;\r\n            case LengthUnits.PrinterPicas:\r\n                return this.value * 237.106301584;\r\n            case LengthUnits.DtpPicas:\r\n                return this.value * 236.220472441;\r\n            case LengthUnits.Twips:\r\n                return this.value * 56692.913385826;\r\n            case LengthUnits.Hands:\r\n                return this.value / 1.016e-1;\r\n            case LengthUnits.AstronomicalUnits:\r\n                return this.value / 1.4959787070e11;\r\n            case LengthUnits.Parsecs:\r\n                return this.value / 3.08567758128e16;\r\n            case LengthUnits.LightYears:\r\n                return this.value / 9.46073047258e15;\r\n            case LengthUnits.SolarRadiuses:\r\n                return this.value / 6.95510000E+08;\r\n            case LengthUnits.Chains:\r\n                return this.value / 20.1168;\r\n            case LengthUnits.Nanometers:\r\n                return (this.value) / 1e-9;\r\n            case LengthUnits.Micrometers:\r\n                return (this.value) / 0.000001;\r\n            case LengthUnits.Millimeters:\r\n                return (this.value) / 0.001;\r\n            case LengthUnits.Centimeters:\r\n                return (this.value) / 0.01;\r\n            case LengthUnits.Decimeters:\r\n                return (this.value) / 0.1;\r\n            case LengthUnits.Hectometers:\r\n                return (this.value) / 100;\r\n            case LengthUnits.Kilometers:\r\n                return (this.value) / 1000;\r\n            case LengthUnits.Kiloparsecs:\r\n                return (this.value / 3.08567758128e16) / 1000;\r\n            case LengthUnits.Megaparsecs:\r\n                return (this.value / 3.08567758128e16) / 1000000;\r\n            case LengthUnits.KilolightYears:\r\n                return (this.value / 9.46073047258e15) / 1000;\r\n            case LengthUnits.MegalightYears:\r\n                return (this.value / 9.46073047258e15) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LengthUnits.Meters:\r\n                return value;\r\n            case LengthUnits.Miles:\r\n                return value * 1609.34;\r\n            case LengthUnits.Yards:\r\n                return value * 0.9144;\r\n            case LengthUnits.Feet:\r\n                return value * 0.3048;\r\n            case LengthUnits.UsSurveyFeet:\r\n                return value * 1200 / 3937;\r\n            case LengthUnits.Inches:\r\n                return value * 2.54e-2;\r\n            case LengthUnits.Mils:\r\n                return value * 2.54e-5;\r\n            case LengthUnits.NauticalMiles:\r\n                return value * 1852;\r\n            case LengthUnits.Fathoms:\r\n                return value * 1.8288;\r\n            case LengthUnits.Shackles:\r\n                return value * 27.432;\r\n            case LengthUnits.Microinches:\r\n                return value * 2.54e-8;\r\n            case LengthUnits.PrinterPoints:\r\n                return (value / 72.27) * 2.54e-2;\r\n            case LengthUnits.DtpPoints:\r\n                return (value / 72) * 2.54e-2;\r\n            case LengthUnits.PrinterPicas:\r\n                return value / 237.106301584;\r\n            case LengthUnits.DtpPicas:\r\n                return value / 236.220472441;\r\n            case LengthUnits.Twips:\r\n                return value / 56692.913385826;\r\n            case LengthUnits.Hands:\r\n                return value * 1.016e-1;\r\n            case LengthUnits.AstronomicalUnits:\r\n                return value * 1.4959787070e11;\r\n            case LengthUnits.Parsecs:\r\n                return value * 3.08567758128e16;\r\n            case LengthUnits.LightYears:\r\n                return value * 9.46073047258e15;\r\n            case LengthUnits.SolarRadiuses:\r\n                return value * 6.95510000E+08;\r\n            case LengthUnits.Chains:\r\n                return value * 20.1168;\r\n            case LengthUnits.Nanometers:\r\n                return (value) * 1e-9;\r\n            case LengthUnits.Micrometers:\r\n                return (value) * 0.000001;\r\n            case LengthUnits.Millimeters:\r\n                return (value) * 0.001;\r\n            case LengthUnits.Centimeters:\r\n                return (value) * 0.01;\r\n            case LengthUnits.Decimeters:\r\n                return (value) * 0.1;\r\n            case LengthUnits.Hectometers:\r\n                return (value) * 100;\r\n            case LengthUnits.Kilometers:\r\n                return (value) * 1000;\r\n            case LengthUnits.Kiloparsecs:\r\n                return (value * 3.08567758128e16) * 1000;\r\n            case LengthUnits.Megaparsecs:\r\n                return (value * 3.08567758128e16) * 1000000;\r\n            case LengthUnits.KilolightYears:\r\n                return (value * 9.46073047258e15) * 1000;\r\n            case LengthUnits.MegalightYears:\r\n                return (value * 9.46073047258e15) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Length to string.\r\n     * Note! the default format for Length is Meters.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Length.\r\n     * @returns The string format of the Length.\r\n     */\r\n    toString(toUnit = LengthUnits.Meters) {\r\n        switch (toUnit) {\r\n            case LengthUnits.Meters:\r\n                return this.Meters + ` m`;\r\n            case LengthUnits.Miles:\r\n                return this.Miles + ` mi`;\r\n            case LengthUnits.Yards:\r\n                return this.Yards + ` yd`;\r\n            case LengthUnits.Feet:\r\n                return this.Feet + ` ft`;\r\n            case LengthUnits.UsSurveyFeet:\r\n                return this.UsSurveyFeet + ` ftUS`;\r\n            case LengthUnits.Inches:\r\n                return this.Inches + ` in`;\r\n            case LengthUnits.Mils:\r\n                return this.Mils + ` mil`;\r\n            case LengthUnits.NauticalMiles:\r\n                return this.NauticalMiles + ` NM`;\r\n            case LengthUnits.Fathoms:\r\n                return this.Fathoms + ` fathom`;\r\n            case LengthUnits.Shackles:\r\n                return this.Shackles + ` shackle`;\r\n            case LengthUnits.Microinches:\r\n                return this.Microinches + ` µin`;\r\n            case LengthUnits.PrinterPoints:\r\n                return this.PrinterPoints + ` pt`;\r\n            case LengthUnits.DtpPoints:\r\n                return this.DtpPoints + ` pt`;\r\n            case LengthUnits.PrinterPicas:\r\n                return this.PrinterPicas + ` pica`;\r\n            case LengthUnits.DtpPicas:\r\n                return this.DtpPicas + ` pica`;\r\n            case LengthUnits.Twips:\r\n                return this.Twips + ` twip`;\r\n            case LengthUnits.Hands:\r\n                return this.Hands + ` h`;\r\n            case LengthUnits.AstronomicalUnits:\r\n                return this.AstronomicalUnits + ` au`;\r\n            case LengthUnits.Parsecs:\r\n                return this.Parsecs + ` pc`;\r\n            case LengthUnits.LightYears:\r\n                return this.LightYears + ` ly`;\r\n            case LengthUnits.SolarRadiuses:\r\n                return this.SolarRadiuses + ` R⊙`;\r\n            case LengthUnits.Chains:\r\n                return this.Chains + ` ch`;\r\n            case LengthUnits.Nanometers:\r\n                return this.Nanometers + ` `;\r\n            case LengthUnits.Micrometers:\r\n                return this.Micrometers + ` `;\r\n            case LengthUnits.Millimeters:\r\n                return this.Millimeters + ` `;\r\n            case LengthUnits.Centimeters:\r\n                return this.Centimeters + ` `;\r\n            case LengthUnits.Decimeters:\r\n                return this.Decimeters + ` `;\r\n            case LengthUnits.Hectometers:\r\n                return this.Hectometers + ` `;\r\n            case LengthUnits.Kilometers:\r\n                return this.Kilometers + ` `;\r\n            case LengthUnits.Kiloparsecs:\r\n                return this.Kiloparsecs + ` `;\r\n            case LengthUnits.Megaparsecs:\r\n                return this.Megaparsecs + ` `;\r\n            case LengthUnits.KilolightYears:\r\n                return this.KilolightYears + ` `;\r\n            case LengthUnits.MegalightYears:\r\n                return this.MegalightYears + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Length are equals to the current Length.\r\n     * @param length The other Length.\r\n     * @returns True if the given Length are equal to the current Length.\r\n     */\r\n    equals(length) {\r\n        return this.value === length.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Length against the current Length.\r\n     * @param length The other Length.\r\n     * @returns 0 if they are equal, -1 if the current Length is less then other, 1 if the current Length is greater then other.\r\n     */\r\n    compareTo(length) {\r\n        if (this.value > length.BaseValue)\r\n            return 1;\r\n        if (this.value < length.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Length with the current Length.\r\n     * @param length The other Length.\r\n     * @returns A new Length instance with the results.\r\n     */\r\n    add(length) {\r\n        return new Length(this.value + length.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Length with the current Length.\r\n     * @param length The other Length.\r\n     * @returns A new Length instance with the results.\r\n     */\r\n    subtract(length) {\r\n        return new Length(this.value - length.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Length with the current Length.\r\n     * @param length The other Length.\r\n     * @returns A new Length instance with the results.\r\n     */\r\n    multiply(length) {\r\n        return new Length(this.value * length.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Length with the current Length.\r\n     * @param length The other Length.\r\n     * @returns A new Length instance with the results.\r\n     */\r\n    divide(length) {\r\n        return new Length(this.value / length.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Length with the current Length.\r\n     * @param length The other Length.\r\n     * @returns A new Length instance with the results.\r\n     */\r\n    modulo(length) {\r\n        return new Length(this.value % length.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Length with the current Length.\r\n     * @param length The other Length.\r\n     * @returns A new Length instance with the results.\r\n     */\r\n    pow(length) {\r\n        return new Length(this.value ** length.BaseValue);\r\n    }\r\n}\r\nexports.Length = Length;\r\n//# sourceMappingURL=length.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Level = exports.LevelUnits = void 0;\r\n/** LevelUnits enumeration */\r\nvar LevelUnits;\r\n(function (LevelUnits) {\r\n    /** */\r\n    LevelUnits[LevelUnits[\"Decibels\"] = 0] = \"Decibels\";\r\n    /** */\r\n    LevelUnits[LevelUnits[\"Nepers\"] = 1] = \"Nepers\";\r\n})(LevelUnits = exports.LevelUnits || (exports.LevelUnits = {}));\r\n/** Level is the logarithm of the ratio of a quantity Q to a reference value of that quantity, Q₀, expressed in dimensionless units. */\r\nclass Level {\r\n    /**\r\n     * Create a new Level.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Level’ unit to create from.\r\n     * The default unit is Decibels\r\n     */\r\n    constructor(value, fromUnit = LevelUnits.Decibels) {\r\n        this.decibelsLazy = null;\r\n        this.nepersLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Level is Decibels.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Decibels() {\r\n        if (this.decibelsLazy !== null) {\r\n            return this.decibelsLazy;\r\n        }\r\n        return this.decibelsLazy = this.convertFromBase(LevelUnits.Decibels);\r\n    }\r\n    /** */\r\n    get Nepers() {\r\n        if (this.nepersLazy !== null) {\r\n            return this.nepersLazy;\r\n        }\r\n        return this.nepersLazy = this.convertFromBase(LevelUnits.Nepers);\r\n    }\r\n    /**\r\n     * Create a new Level instance from a Decibels\r\n     *\r\n     * @param value The unit as Decibels to create a new Level from.\r\n     * @returns The new Level instance.\r\n     */\r\n    static FromDecibels(value) {\r\n        return new Level(value, LevelUnits.Decibels);\r\n    }\r\n    /**\r\n     * Create a new Level instance from a Nepers\r\n     *\r\n     * @param value The unit as Nepers to create a new Level from.\r\n     * @returns The new Level instance.\r\n     */\r\n    static FromNepers(value) {\r\n        return new Level(value, LevelUnits.Nepers);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LevelUnits.Decibels:\r\n                return this.value;\r\n            case LevelUnits.Nepers:\r\n                return 0.115129254 * this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LevelUnits.Decibels:\r\n                return value;\r\n            case LevelUnits.Nepers:\r\n                return (1 / 0.115129254) * value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Level to string.\r\n     * Note! the default format for Level is Decibels.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Level.\r\n     * @returns The string format of the Level.\r\n     */\r\n    toString(toUnit = LevelUnits.Decibels) {\r\n        switch (toUnit) {\r\n            case LevelUnits.Decibels:\r\n                return this.Decibels + ` dB`;\r\n            case LevelUnits.Nepers:\r\n                return this.Nepers + ` Np`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Level are equals to the current Level.\r\n     * @param level The other Level.\r\n     * @returns True if the given Level are equal to the current Level.\r\n     */\r\n    equals(level) {\r\n        return this.value === level.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Level against the current Level.\r\n     * @param level The other Level.\r\n     * @returns 0 if they are equal, -1 if the current Level is less then other, 1 if the current Level is greater then other.\r\n     */\r\n    compareTo(level) {\r\n        if (this.value > level.BaseValue)\r\n            return 1;\r\n        if (this.value < level.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Level with the current Level.\r\n     * @param level The other Level.\r\n     * @returns A new Level instance with the results.\r\n     */\r\n    add(level) {\r\n        return new Level(this.value + level.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Level with the current Level.\r\n     * @param level The other Level.\r\n     * @returns A new Level instance with the results.\r\n     */\r\n    subtract(level) {\r\n        return new Level(this.value - level.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Level with the current Level.\r\n     * @param level The other Level.\r\n     * @returns A new Level instance with the results.\r\n     */\r\n    multiply(level) {\r\n        return new Level(this.value * level.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Level with the current Level.\r\n     * @param level The other Level.\r\n     * @returns A new Level instance with the results.\r\n     */\r\n    divide(level) {\r\n        return new Level(this.value / level.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Level with the current Level.\r\n     * @param level The other Level.\r\n     * @returns A new Level instance with the results.\r\n     */\r\n    modulo(level) {\r\n        return new Level(this.value % level.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Level with the current Level.\r\n     * @param level The other Level.\r\n     * @returns A new Level instance with the results.\r\n     */\r\n    pow(level) {\r\n        return new Level(this.value ** level.BaseValue);\r\n    }\r\n}\r\nexports.Level = Level;\r\n//# sourceMappingURL=level.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LinearDensity = exports.LinearDensityUnits = void 0;\r\n/** LinearDensityUnits enumeration */\r\nvar LinearDensityUnits;\r\n(function (LinearDensityUnits) {\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"GramsPerMillimeter\"] = 0] = \"GramsPerMillimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"GramsPerCentimeter\"] = 1] = \"GramsPerCentimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"GramsPerMeter\"] = 2] = \"GramsPerMeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"PoundsPerInch\"] = 3] = \"PoundsPerInch\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"PoundsPerFoot\"] = 4] = \"PoundsPerFoot\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"MicrogramsPerMillimeter\"] = 5] = \"MicrogramsPerMillimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"MilligramsPerMillimeter\"] = 6] = \"MilligramsPerMillimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"KilogramsPerMillimeter\"] = 7] = \"KilogramsPerMillimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"MicrogramsPerCentimeter\"] = 8] = \"MicrogramsPerCentimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"MilligramsPerCentimeter\"] = 9] = \"MilligramsPerCentimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"KilogramsPerCentimeter\"] = 10] = \"KilogramsPerCentimeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"MicrogramsPerMeter\"] = 11] = \"MicrogramsPerMeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"MilligramsPerMeter\"] = 12] = \"MilligramsPerMeter\";\r\n    /** */\r\n    LinearDensityUnits[LinearDensityUnits[\"KilogramsPerMeter\"] = 13] = \"KilogramsPerMeter\";\r\n})(LinearDensityUnits = exports.LinearDensityUnits || (exports.LinearDensityUnits = {}));\r\n/** The Linear Density, or more precisely, the linear mass density, of a substance is its mass per unit length.  The term linear density is most often used when describing the characteristics of one-dimensional objects, although linear density can also be used to describe the density of a three-dimensional quantity along one particular dimension. */\r\nclass LinearDensity {\r\n    /**\r\n     * Create a new LinearDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘LinearDensity’ unit to create from.\r\n     * The default unit is KilogramsPerMeter\r\n     */\r\n    constructor(value, fromUnit = LinearDensityUnits.KilogramsPerMeter) {\r\n        this.gramspermillimeterLazy = null;\r\n        this.gramspercentimeterLazy = null;\r\n        this.gramspermeterLazy = null;\r\n        this.poundsperinchLazy = null;\r\n        this.poundsperfootLazy = null;\r\n        this.microgramspermillimeterLazy = null;\r\n        this.milligramspermillimeterLazy = null;\r\n        this.kilogramspermillimeterLazy = null;\r\n        this.microgramspercentimeterLazy = null;\r\n        this.milligramspercentimeterLazy = null;\r\n        this.kilogramspercentimeterLazy = null;\r\n        this.microgramspermeterLazy = null;\r\n        this.milligramspermeterLazy = null;\r\n        this.kilogramspermeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of LinearDensity is KilogramsPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerMillimeter() {\r\n        if (this.gramspermillimeterLazy !== null) {\r\n            return this.gramspermillimeterLazy;\r\n        }\r\n        return this.gramspermillimeterLazy = this.convertFromBase(LinearDensityUnits.GramsPerMillimeter);\r\n    }\r\n    /** */\r\n    get GramsPerCentimeter() {\r\n        if (this.gramspercentimeterLazy !== null) {\r\n            return this.gramspercentimeterLazy;\r\n        }\r\n        return this.gramspercentimeterLazy = this.convertFromBase(LinearDensityUnits.GramsPerCentimeter);\r\n    }\r\n    /** */\r\n    get GramsPerMeter() {\r\n        if (this.gramspermeterLazy !== null) {\r\n            return this.gramspermeterLazy;\r\n        }\r\n        return this.gramspermeterLazy = this.convertFromBase(LinearDensityUnits.GramsPerMeter);\r\n    }\r\n    /** */\r\n    get PoundsPerInch() {\r\n        if (this.poundsperinchLazy !== null) {\r\n            return this.poundsperinchLazy;\r\n        }\r\n        return this.poundsperinchLazy = this.convertFromBase(LinearDensityUnits.PoundsPerInch);\r\n    }\r\n    /** */\r\n    get PoundsPerFoot() {\r\n        if (this.poundsperfootLazy !== null) {\r\n            return this.poundsperfootLazy;\r\n        }\r\n        return this.poundsperfootLazy = this.convertFromBase(LinearDensityUnits.PoundsPerFoot);\r\n    }\r\n    /** */\r\n    get MicrogramsPerMillimeter() {\r\n        if (this.microgramspermillimeterLazy !== null) {\r\n            return this.microgramspermillimeterLazy;\r\n        }\r\n        return this.microgramspermillimeterLazy = this.convertFromBase(LinearDensityUnits.MicrogramsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MilligramsPerMillimeter() {\r\n        if (this.milligramspermillimeterLazy !== null) {\r\n            return this.milligramspermillimeterLazy;\r\n        }\r\n        return this.milligramspermillimeterLazy = this.convertFromBase(LinearDensityUnits.MilligramsPerMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerMillimeter() {\r\n        if (this.kilogramspermillimeterLazy !== null) {\r\n            return this.kilogramspermillimeterLazy;\r\n        }\r\n        return this.kilogramspermillimeterLazy = this.convertFromBase(LinearDensityUnits.KilogramsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerCentimeter() {\r\n        if (this.microgramspercentimeterLazy !== null) {\r\n            return this.microgramspercentimeterLazy;\r\n        }\r\n        return this.microgramspercentimeterLazy = this.convertFromBase(LinearDensityUnits.MicrogramsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MilligramsPerCentimeter() {\r\n        if (this.milligramspercentimeterLazy !== null) {\r\n            return this.milligramspercentimeterLazy;\r\n        }\r\n        return this.milligramspercentimeterLazy = this.convertFromBase(LinearDensityUnits.MilligramsPerCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerCentimeter() {\r\n        if (this.kilogramspercentimeterLazy !== null) {\r\n            return this.kilogramspercentimeterLazy;\r\n        }\r\n        return this.kilogramspercentimeterLazy = this.convertFromBase(LinearDensityUnits.KilogramsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerMeter() {\r\n        if (this.microgramspermeterLazy !== null) {\r\n            return this.microgramspermeterLazy;\r\n        }\r\n        return this.microgramspermeterLazy = this.convertFromBase(LinearDensityUnits.MicrogramsPerMeter);\r\n    }\r\n    /** */\r\n    get MilligramsPerMeter() {\r\n        if (this.milligramspermeterLazy !== null) {\r\n            return this.milligramspermeterLazy;\r\n        }\r\n        return this.milligramspermeterLazy = this.convertFromBase(LinearDensityUnits.MilligramsPerMeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerMeter() {\r\n        if (this.kilogramspermeterLazy !== null) {\r\n            return this.kilogramspermeterLazy;\r\n        }\r\n        return this.kilogramspermeterLazy = this.convertFromBase(LinearDensityUnits.KilogramsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a GramsPerMillimeter\r\n     *\r\n     * @param value The unit as GramsPerMillimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromGramsPerMillimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.GramsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a GramsPerCentimeter\r\n     *\r\n     * @param value The unit as GramsPerCentimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromGramsPerCentimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.GramsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a GramsPerMeter\r\n     *\r\n     * @param value The unit as GramsPerMeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromGramsPerMeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.GramsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a PoundsPerInch\r\n     *\r\n     * @param value The unit as PoundsPerInch to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromPoundsPerInch(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.PoundsPerInch);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a PoundsPerFoot\r\n     *\r\n     * @param value The unit as PoundsPerFoot to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromPoundsPerFoot(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.PoundsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a MicrogramsPerMillimeter\r\n     *\r\n     * @param value The unit as MicrogramsPerMillimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromMicrogramsPerMillimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.MicrogramsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a MilligramsPerMillimeter\r\n     *\r\n     * @param value The unit as MilligramsPerMillimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromMilligramsPerMillimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.MilligramsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a KilogramsPerMillimeter\r\n     *\r\n     * @param value The unit as KilogramsPerMillimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromKilogramsPerMillimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.KilogramsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a MicrogramsPerCentimeter\r\n     *\r\n     * @param value The unit as MicrogramsPerCentimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromMicrogramsPerCentimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.MicrogramsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a MilligramsPerCentimeter\r\n     *\r\n     * @param value The unit as MilligramsPerCentimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromMilligramsPerCentimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.MilligramsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a KilogramsPerCentimeter\r\n     *\r\n     * @param value The unit as KilogramsPerCentimeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromKilogramsPerCentimeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.KilogramsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a MicrogramsPerMeter\r\n     *\r\n     * @param value The unit as MicrogramsPerMeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromMicrogramsPerMeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.MicrogramsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a MilligramsPerMeter\r\n     *\r\n     * @param value The unit as MilligramsPerMeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromMilligramsPerMeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.MilligramsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearDensity instance from a KilogramsPerMeter\r\n     *\r\n     * @param value The unit as KilogramsPerMeter to create a new LinearDensity from.\r\n     * @returns The new LinearDensity instance.\r\n     */\r\n    static FromKilogramsPerMeter(value) {\r\n        return new LinearDensity(value, LinearDensityUnits.KilogramsPerMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LinearDensityUnits.GramsPerMillimeter:\r\n                return this.value;\r\n            case LinearDensityUnits.GramsPerCentimeter:\r\n                return this.value / 1e-1;\r\n            case LinearDensityUnits.GramsPerMeter:\r\n                return this.value / 1e-3;\r\n            case LinearDensityUnits.PoundsPerInch:\r\n                return this.value * 5.5997415e-2;\r\n            case LinearDensityUnits.PoundsPerFoot:\r\n                return this.value / 1.48816394;\r\n            case LinearDensityUnits.MicrogramsPerMillimeter:\r\n                return (this.value) / 0.000001;\r\n            case LinearDensityUnits.MilligramsPerMillimeter:\r\n                return (this.value) / 0.001;\r\n            case LinearDensityUnits.KilogramsPerMillimeter:\r\n                return (this.value) / 1000;\r\n            case LinearDensityUnits.MicrogramsPerCentimeter:\r\n                return (this.value / 1e-1) / 0.000001;\r\n            case LinearDensityUnits.MilligramsPerCentimeter:\r\n                return (this.value / 1e-1) / 0.001;\r\n            case LinearDensityUnits.KilogramsPerCentimeter:\r\n                return (this.value / 1e-1) / 1000;\r\n            case LinearDensityUnits.MicrogramsPerMeter:\r\n                return (this.value / 1e-3) / 0.000001;\r\n            case LinearDensityUnits.MilligramsPerMeter:\r\n                return (this.value / 1e-3) / 0.001;\r\n            case LinearDensityUnits.KilogramsPerMeter:\r\n                return (this.value / 1e-3) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LinearDensityUnits.GramsPerMillimeter:\r\n                return value;\r\n            case LinearDensityUnits.GramsPerCentimeter:\r\n                return value * 1e-1;\r\n            case LinearDensityUnits.GramsPerMeter:\r\n                return value * 1e-3;\r\n            case LinearDensityUnits.PoundsPerInch:\r\n                return value / 5.5997415e-2;\r\n            case LinearDensityUnits.PoundsPerFoot:\r\n                return value * 1.48816394;\r\n            case LinearDensityUnits.MicrogramsPerMillimeter:\r\n                return (value) * 0.000001;\r\n            case LinearDensityUnits.MilligramsPerMillimeter:\r\n                return (value) * 0.001;\r\n            case LinearDensityUnits.KilogramsPerMillimeter:\r\n                return (value) * 1000;\r\n            case LinearDensityUnits.MicrogramsPerCentimeter:\r\n                return (value * 1e-1) * 0.000001;\r\n            case LinearDensityUnits.MilligramsPerCentimeter:\r\n                return (value * 1e-1) * 0.001;\r\n            case LinearDensityUnits.KilogramsPerCentimeter:\r\n                return (value * 1e-1) * 1000;\r\n            case LinearDensityUnits.MicrogramsPerMeter:\r\n                return (value * 1e-3) * 0.000001;\r\n            case LinearDensityUnits.MilligramsPerMeter:\r\n                return (value * 1e-3) * 0.001;\r\n            case LinearDensityUnits.KilogramsPerMeter:\r\n                return (value * 1e-3) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the LinearDensity to string.\r\n     * Note! the default format for LinearDensity is KilogramsPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the LinearDensity.\r\n     * @returns The string format of the LinearDensity.\r\n     */\r\n    toString(toUnit = LinearDensityUnits.KilogramsPerMeter) {\r\n        switch (toUnit) {\r\n            case LinearDensityUnits.GramsPerMillimeter:\r\n                return this.GramsPerMillimeter + ` g/mm`;\r\n            case LinearDensityUnits.GramsPerCentimeter:\r\n                return this.GramsPerCentimeter + ` g/cm`;\r\n            case LinearDensityUnits.GramsPerMeter:\r\n                return this.GramsPerMeter + ` g/m`;\r\n            case LinearDensityUnits.PoundsPerInch:\r\n                return this.PoundsPerInch + ` lb/in`;\r\n            case LinearDensityUnits.PoundsPerFoot:\r\n                return this.PoundsPerFoot + ` lb/ft`;\r\n            case LinearDensityUnits.MicrogramsPerMillimeter:\r\n                return this.MicrogramsPerMillimeter + ` `;\r\n            case LinearDensityUnits.MilligramsPerMillimeter:\r\n                return this.MilligramsPerMillimeter + ` `;\r\n            case LinearDensityUnits.KilogramsPerMillimeter:\r\n                return this.KilogramsPerMillimeter + ` `;\r\n            case LinearDensityUnits.MicrogramsPerCentimeter:\r\n                return this.MicrogramsPerCentimeter + ` `;\r\n            case LinearDensityUnits.MilligramsPerCentimeter:\r\n                return this.MilligramsPerCentimeter + ` `;\r\n            case LinearDensityUnits.KilogramsPerCentimeter:\r\n                return this.KilogramsPerCentimeter + ` `;\r\n            case LinearDensityUnits.MicrogramsPerMeter:\r\n                return this.MicrogramsPerMeter + ` `;\r\n            case LinearDensityUnits.MilligramsPerMeter:\r\n                return this.MilligramsPerMeter + ` `;\r\n            case LinearDensityUnits.KilogramsPerMeter:\r\n                return this.KilogramsPerMeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given LinearDensity are equals to the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns True if the given LinearDensity are equal to the current LinearDensity.\r\n     */\r\n    equals(linearDensity) {\r\n        return this.value === linearDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given LinearDensity against the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns 0 if they are equal, -1 if the current LinearDensity is less then other, 1 if the current LinearDensity is greater then other.\r\n     */\r\n    compareTo(linearDensity) {\r\n        if (this.value > linearDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < linearDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given LinearDensity with the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns A new LinearDensity instance with the results.\r\n     */\r\n    add(linearDensity) {\r\n        return new LinearDensity(this.value + linearDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given LinearDensity with the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns A new LinearDensity instance with the results.\r\n     */\r\n    subtract(linearDensity) {\r\n        return new LinearDensity(this.value - linearDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given LinearDensity with the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns A new LinearDensity instance with the results.\r\n     */\r\n    multiply(linearDensity) {\r\n        return new LinearDensity(this.value * linearDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given LinearDensity with the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns A new LinearDensity instance with the results.\r\n     */\r\n    divide(linearDensity) {\r\n        return new LinearDensity(this.value / linearDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given LinearDensity with the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns A new LinearDensity instance with the results.\r\n     */\r\n    modulo(linearDensity) {\r\n        return new LinearDensity(this.value % linearDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given LinearDensity with the current LinearDensity.\r\n     * @param linearDensity The other LinearDensity.\r\n     * @returns A new LinearDensity instance with the results.\r\n     */\r\n    pow(linearDensity) {\r\n        return new LinearDensity(this.value ** linearDensity.BaseValue);\r\n    }\r\n}\r\nexports.LinearDensity = LinearDensity;\r\n//# sourceMappingURL=lineardensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LinearPowerDensity = exports.LinearPowerDensityUnits = void 0;\r\n/** LinearPowerDensityUnits enumeration */\r\nvar LinearPowerDensityUnits;\r\n(function (LinearPowerDensityUnits) {\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"WattsPerMeter\"] = 0] = \"WattsPerMeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"WattsPerCentimeter\"] = 1] = \"WattsPerCentimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"WattsPerMillimeter\"] = 2] = \"WattsPerMillimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"WattsPerInch\"] = 3] = \"WattsPerInch\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"WattsPerFoot\"] = 4] = \"WattsPerFoot\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MilliwattsPerMeter\"] = 5] = \"MilliwattsPerMeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"KilowattsPerMeter\"] = 6] = \"KilowattsPerMeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MegawattsPerMeter\"] = 7] = \"MegawattsPerMeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"GigawattsPerMeter\"] = 8] = \"GigawattsPerMeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MilliwattsPerCentimeter\"] = 9] = \"MilliwattsPerCentimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"KilowattsPerCentimeter\"] = 10] = \"KilowattsPerCentimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MegawattsPerCentimeter\"] = 11] = \"MegawattsPerCentimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"GigawattsPerCentimeter\"] = 12] = \"GigawattsPerCentimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MilliwattsPerMillimeter\"] = 13] = \"MilliwattsPerMillimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"KilowattsPerMillimeter\"] = 14] = \"KilowattsPerMillimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MegawattsPerMillimeter\"] = 15] = \"MegawattsPerMillimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"GigawattsPerMillimeter\"] = 16] = \"GigawattsPerMillimeter\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MilliwattsPerInch\"] = 17] = \"MilliwattsPerInch\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"KilowattsPerInch\"] = 18] = \"KilowattsPerInch\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MegawattsPerInch\"] = 19] = \"MegawattsPerInch\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"GigawattsPerInch\"] = 20] = \"GigawattsPerInch\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MilliwattsPerFoot\"] = 21] = \"MilliwattsPerFoot\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"KilowattsPerFoot\"] = 22] = \"KilowattsPerFoot\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"MegawattsPerFoot\"] = 23] = \"MegawattsPerFoot\";\r\n    /** */\r\n    LinearPowerDensityUnits[LinearPowerDensityUnits[\"GigawattsPerFoot\"] = 24] = \"GigawattsPerFoot\";\r\n})(LinearPowerDensityUnits = exports.LinearPowerDensityUnits || (exports.LinearPowerDensityUnits = {}));\r\n/** The Linear Power Density of a substance is its power per unit length.  The term linear density is most often used when describing the characteristics of one-dimensional objects, although linear density can also be used to describe the density of a three-dimensional quantity along one particular dimension. */\r\nclass LinearPowerDensity {\r\n    /**\r\n     * Create a new LinearPowerDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘LinearPowerDensity’ unit to create from.\r\n     * The default unit is WattsPerMeter\r\n     */\r\n    constructor(value, fromUnit = LinearPowerDensityUnits.WattsPerMeter) {\r\n        this.wattspermeterLazy = null;\r\n        this.wattspercentimeterLazy = null;\r\n        this.wattspermillimeterLazy = null;\r\n        this.wattsperinchLazy = null;\r\n        this.wattsperfootLazy = null;\r\n        this.milliwattspermeterLazy = null;\r\n        this.kilowattspermeterLazy = null;\r\n        this.megawattspermeterLazy = null;\r\n        this.gigawattspermeterLazy = null;\r\n        this.milliwattspercentimeterLazy = null;\r\n        this.kilowattspercentimeterLazy = null;\r\n        this.megawattspercentimeterLazy = null;\r\n        this.gigawattspercentimeterLazy = null;\r\n        this.milliwattspermillimeterLazy = null;\r\n        this.kilowattspermillimeterLazy = null;\r\n        this.megawattspermillimeterLazy = null;\r\n        this.gigawattspermillimeterLazy = null;\r\n        this.milliwattsperinchLazy = null;\r\n        this.kilowattsperinchLazy = null;\r\n        this.megawattsperinchLazy = null;\r\n        this.gigawattsperinchLazy = null;\r\n        this.milliwattsperfootLazy = null;\r\n        this.kilowattsperfootLazy = null;\r\n        this.megawattsperfootLazy = null;\r\n        this.gigawattsperfootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of LinearPowerDensity is WattsPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get WattsPerMeter() {\r\n        if (this.wattspermeterLazy !== null) {\r\n            return this.wattspermeterLazy;\r\n        }\r\n        return this.wattspermeterLazy = this.convertFromBase(LinearPowerDensityUnits.WattsPerMeter);\r\n    }\r\n    /** */\r\n    get WattsPerCentimeter() {\r\n        if (this.wattspercentimeterLazy !== null) {\r\n            return this.wattspercentimeterLazy;\r\n        }\r\n        return this.wattspercentimeterLazy = this.convertFromBase(LinearPowerDensityUnits.WattsPerCentimeter);\r\n    }\r\n    /** */\r\n    get WattsPerMillimeter() {\r\n        if (this.wattspermillimeterLazy !== null) {\r\n            return this.wattspermillimeterLazy;\r\n        }\r\n        return this.wattspermillimeterLazy = this.convertFromBase(LinearPowerDensityUnits.WattsPerMillimeter);\r\n    }\r\n    /** */\r\n    get WattsPerInch() {\r\n        if (this.wattsperinchLazy !== null) {\r\n            return this.wattsperinchLazy;\r\n        }\r\n        return this.wattsperinchLazy = this.convertFromBase(LinearPowerDensityUnits.WattsPerInch);\r\n    }\r\n    /** */\r\n    get WattsPerFoot() {\r\n        if (this.wattsperfootLazy !== null) {\r\n            return this.wattsperfootLazy;\r\n        }\r\n        return this.wattsperfootLazy = this.convertFromBase(LinearPowerDensityUnits.WattsPerFoot);\r\n    }\r\n    /** */\r\n    get MilliwattsPerMeter() {\r\n        if (this.milliwattspermeterLazy !== null) {\r\n            return this.milliwattspermeterLazy;\r\n        }\r\n        return this.milliwattspermeterLazy = this.convertFromBase(LinearPowerDensityUnits.MilliwattsPerMeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerMeter() {\r\n        if (this.kilowattspermeterLazy !== null) {\r\n            return this.kilowattspermeterLazy;\r\n        }\r\n        return this.kilowattspermeterLazy = this.convertFromBase(LinearPowerDensityUnits.KilowattsPerMeter);\r\n    }\r\n    /** */\r\n    get MegawattsPerMeter() {\r\n        if (this.megawattspermeterLazy !== null) {\r\n            return this.megawattspermeterLazy;\r\n        }\r\n        return this.megawattspermeterLazy = this.convertFromBase(LinearPowerDensityUnits.MegawattsPerMeter);\r\n    }\r\n    /** */\r\n    get GigawattsPerMeter() {\r\n        if (this.gigawattspermeterLazy !== null) {\r\n            return this.gigawattspermeterLazy;\r\n        }\r\n        return this.gigawattspermeterLazy = this.convertFromBase(LinearPowerDensityUnits.GigawattsPerMeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerCentimeter() {\r\n        if (this.milliwattspercentimeterLazy !== null) {\r\n            return this.milliwattspercentimeterLazy;\r\n        }\r\n        return this.milliwattspercentimeterLazy = this.convertFromBase(LinearPowerDensityUnits.MilliwattsPerCentimeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerCentimeter() {\r\n        if (this.kilowattspercentimeterLazy !== null) {\r\n            return this.kilowattspercentimeterLazy;\r\n        }\r\n        return this.kilowattspercentimeterLazy = this.convertFromBase(LinearPowerDensityUnits.KilowattsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MegawattsPerCentimeter() {\r\n        if (this.megawattspercentimeterLazy !== null) {\r\n            return this.megawattspercentimeterLazy;\r\n        }\r\n        return this.megawattspercentimeterLazy = this.convertFromBase(LinearPowerDensityUnits.MegawattsPerCentimeter);\r\n    }\r\n    /** */\r\n    get GigawattsPerCentimeter() {\r\n        if (this.gigawattspercentimeterLazy !== null) {\r\n            return this.gigawattspercentimeterLazy;\r\n        }\r\n        return this.gigawattspercentimeterLazy = this.convertFromBase(LinearPowerDensityUnits.GigawattsPerCentimeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerMillimeter() {\r\n        if (this.milliwattspermillimeterLazy !== null) {\r\n            return this.milliwattspermillimeterLazy;\r\n        }\r\n        return this.milliwattspermillimeterLazy = this.convertFromBase(LinearPowerDensityUnits.MilliwattsPerMillimeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerMillimeter() {\r\n        if (this.kilowattspermillimeterLazy !== null) {\r\n            return this.kilowattspermillimeterLazy;\r\n        }\r\n        return this.kilowattspermillimeterLazy = this.convertFromBase(LinearPowerDensityUnits.KilowattsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MegawattsPerMillimeter() {\r\n        if (this.megawattspermillimeterLazy !== null) {\r\n            return this.megawattspermillimeterLazy;\r\n        }\r\n        return this.megawattspermillimeterLazy = this.convertFromBase(LinearPowerDensityUnits.MegawattsPerMillimeter);\r\n    }\r\n    /** */\r\n    get GigawattsPerMillimeter() {\r\n        if (this.gigawattspermillimeterLazy !== null) {\r\n            return this.gigawattspermillimeterLazy;\r\n        }\r\n        return this.gigawattspermillimeterLazy = this.convertFromBase(LinearPowerDensityUnits.GigawattsPerMillimeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerInch() {\r\n        if (this.milliwattsperinchLazy !== null) {\r\n            return this.milliwattsperinchLazy;\r\n        }\r\n        return this.milliwattsperinchLazy = this.convertFromBase(LinearPowerDensityUnits.MilliwattsPerInch);\r\n    }\r\n    /** */\r\n    get KilowattsPerInch() {\r\n        if (this.kilowattsperinchLazy !== null) {\r\n            return this.kilowattsperinchLazy;\r\n        }\r\n        return this.kilowattsperinchLazy = this.convertFromBase(LinearPowerDensityUnits.KilowattsPerInch);\r\n    }\r\n    /** */\r\n    get MegawattsPerInch() {\r\n        if (this.megawattsperinchLazy !== null) {\r\n            return this.megawattsperinchLazy;\r\n        }\r\n        return this.megawattsperinchLazy = this.convertFromBase(LinearPowerDensityUnits.MegawattsPerInch);\r\n    }\r\n    /** */\r\n    get GigawattsPerInch() {\r\n        if (this.gigawattsperinchLazy !== null) {\r\n            return this.gigawattsperinchLazy;\r\n        }\r\n        return this.gigawattsperinchLazy = this.convertFromBase(LinearPowerDensityUnits.GigawattsPerInch);\r\n    }\r\n    /** */\r\n    get MilliwattsPerFoot() {\r\n        if (this.milliwattsperfootLazy !== null) {\r\n            return this.milliwattsperfootLazy;\r\n        }\r\n        return this.milliwattsperfootLazy = this.convertFromBase(LinearPowerDensityUnits.MilliwattsPerFoot);\r\n    }\r\n    /** */\r\n    get KilowattsPerFoot() {\r\n        if (this.kilowattsperfootLazy !== null) {\r\n            return this.kilowattsperfootLazy;\r\n        }\r\n        return this.kilowattsperfootLazy = this.convertFromBase(LinearPowerDensityUnits.KilowattsPerFoot);\r\n    }\r\n    /** */\r\n    get MegawattsPerFoot() {\r\n        if (this.megawattsperfootLazy !== null) {\r\n            return this.megawattsperfootLazy;\r\n        }\r\n        return this.megawattsperfootLazy = this.convertFromBase(LinearPowerDensityUnits.MegawattsPerFoot);\r\n    }\r\n    /** */\r\n    get GigawattsPerFoot() {\r\n        if (this.gigawattsperfootLazy !== null) {\r\n            return this.gigawattsperfootLazy;\r\n        }\r\n        return this.gigawattsperfootLazy = this.convertFromBase(LinearPowerDensityUnits.GigawattsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a WattsPerMeter\r\n     *\r\n     * @param value The unit as WattsPerMeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromWattsPerMeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.WattsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a WattsPerCentimeter\r\n     *\r\n     * @param value The unit as WattsPerCentimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromWattsPerCentimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.WattsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a WattsPerMillimeter\r\n     *\r\n     * @param value The unit as WattsPerMillimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromWattsPerMillimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.WattsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a WattsPerInch\r\n     *\r\n     * @param value The unit as WattsPerInch to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromWattsPerInch(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.WattsPerInch);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a WattsPerFoot\r\n     *\r\n     * @param value The unit as WattsPerFoot to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromWattsPerFoot(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.WattsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MilliwattsPerMeter\r\n     *\r\n     * @param value The unit as MilliwattsPerMeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerMeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MilliwattsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a KilowattsPerMeter\r\n     *\r\n     * @param value The unit as KilowattsPerMeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromKilowattsPerMeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.KilowattsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MegawattsPerMeter\r\n     *\r\n     * @param value The unit as MegawattsPerMeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMegawattsPerMeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MegawattsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a GigawattsPerMeter\r\n     *\r\n     * @param value The unit as GigawattsPerMeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromGigawattsPerMeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.GigawattsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MilliwattsPerCentimeter\r\n     *\r\n     * @param value The unit as MilliwattsPerCentimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerCentimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MilliwattsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a KilowattsPerCentimeter\r\n     *\r\n     * @param value The unit as KilowattsPerCentimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromKilowattsPerCentimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.KilowattsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MegawattsPerCentimeter\r\n     *\r\n     * @param value The unit as MegawattsPerCentimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMegawattsPerCentimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MegawattsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a GigawattsPerCentimeter\r\n     *\r\n     * @param value The unit as GigawattsPerCentimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromGigawattsPerCentimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.GigawattsPerCentimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MilliwattsPerMillimeter\r\n     *\r\n     * @param value The unit as MilliwattsPerMillimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerMillimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MilliwattsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a KilowattsPerMillimeter\r\n     *\r\n     * @param value The unit as KilowattsPerMillimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromKilowattsPerMillimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.KilowattsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MegawattsPerMillimeter\r\n     *\r\n     * @param value The unit as MegawattsPerMillimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMegawattsPerMillimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MegawattsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a GigawattsPerMillimeter\r\n     *\r\n     * @param value The unit as GigawattsPerMillimeter to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromGigawattsPerMillimeter(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.GigawattsPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MilliwattsPerInch\r\n     *\r\n     * @param value The unit as MilliwattsPerInch to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerInch(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MilliwattsPerInch);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a KilowattsPerInch\r\n     *\r\n     * @param value The unit as KilowattsPerInch to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromKilowattsPerInch(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.KilowattsPerInch);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MegawattsPerInch\r\n     *\r\n     * @param value The unit as MegawattsPerInch to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMegawattsPerInch(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MegawattsPerInch);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a GigawattsPerInch\r\n     *\r\n     * @param value The unit as GigawattsPerInch to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromGigawattsPerInch(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.GigawattsPerInch);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MilliwattsPerFoot\r\n     *\r\n     * @param value The unit as MilliwattsPerFoot to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerFoot(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MilliwattsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a KilowattsPerFoot\r\n     *\r\n     * @param value The unit as KilowattsPerFoot to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromKilowattsPerFoot(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.KilowattsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a MegawattsPerFoot\r\n     *\r\n     * @param value The unit as MegawattsPerFoot to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromMegawattsPerFoot(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.MegawattsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new LinearPowerDensity instance from a GigawattsPerFoot\r\n     *\r\n     * @param value The unit as GigawattsPerFoot to create a new LinearPowerDensity from.\r\n     * @returns The new LinearPowerDensity instance.\r\n     */\r\n    static FromGigawattsPerFoot(value) {\r\n        return new LinearPowerDensity(value, LinearPowerDensityUnits.GigawattsPerFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LinearPowerDensityUnits.WattsPerMeter:\r\n                return this.value;\r\n            case LinearPowerDensityUnits.WattsPerCentimeter:\r\n                return this.value / 1e2;\r\n            case LinearPowerDensityUnits.WattsPerMillimeter:\r\n                return this.value / 1e3;\r\n            case LinearPowerDensityUnits.WattsPerInch:\r\n                return this.value / 39.37007874;\r\n            case LinearPowerDensityUnits.WattsPerFoot:\r\n                return this.value / 3.280839895;\r\n            case LinearPowerDensityUnits.MilliwattsPerMeter:\r\n                return (this.value) / 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerMeter:\r\n                return (this.value) / 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerMeter:\r\n                return (this.value) / 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerMeter:\r\n                return (this.value) / 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerCentimeter:\r\n                return (this.value / 1e2) / 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerCentimeter:\r\n                return (this.value / 1e2) / 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerCentimeter:\r\n                return (this.value / 1e2) / 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerCentimeter:\r\n                return (this.value / 1e2) / 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerMillimeter:\r\n                return (this.value / 1e3) / 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerMillimeter:\r\n                return (this.value / 1e3) / 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerMillimeter:\r\n                return (this.value / 1e3) / 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerMillimeter:\r\n                return (this.value / 1e3) / 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerInch:\r\n                return (this.value / 39.37007874) / 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerInch:\r\n                return (this.value / 39.37007874) / 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerInch:\r\n                return (this.value / 39.37007874) / 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerInch:\r\n                return (this.value / 39.37007874) / 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerFoot:\r\n                return (this.value / 3.280839895) / 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerFoot:\r\n                return (this.value / 3.280839895) / 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerFoot:\r\n                return (this.value / 3.280839895) / 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerFoot:\r\n                return (this.value / 3.280839895) / 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LinearPowerDensityUnits.WattsPerMeter:\r\n                return value;\r\n            case LinearPowerDensityUnits.WattsPerCentimeter:\r\n                return value * 1e2;\r\n            case LinearPowerDensityUnits.WattsPerMillimeter:\r\n                return value * 1e3;\r\n            case LinearPowerDensityUnits.WattsPerInch:\r\n                return value * 39.37007874;\r\n            case LinearPowerDensityUnits.WattsPerFoot:\r\n                return value * 3.280839895;\r\n            case LinearPowerDensityUnits.MilliwattsPerMeter:\r\n                return (value) * 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerMeter:\r\n                return (value) * 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerMeter:\r\n                return (value) * 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerMeter:\r\n                return (value) * 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerCentimeter:\r\n                return (value * 1e2) * 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerCentimeter:\r\n                return (value * 1e2) * 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerCentimeter:\r\n                return (value * 1e2) * 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerCentimeter:\r\n                return (value * 1e2) * 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerMillimeter:\r\n                return (value * 1e3) * 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerMillimeter:\r\n                return (value * 1e3) * 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerMillimeter:\r\n                return (value * 1e3) * 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerMillimeter:\r\n                return (value * 1e3) * 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerInch:\r\n                return (value * 39.37007874) * 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerInch:\r\n                return (value * 39.37007874) * 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerInch:\r\n                return (value * 39.37007874) * 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerInch:\r\n                return (value * 39.37007874) * 1000000000;\r\n            case LinearPowerDensityUnits.MilliwattsPerFoot:\r\n                return (value * 3.280839895) * 0.001;\r\n            case LinearPowerDensityUnits.KilowattsPerFoot:\r\n                return (value * 3.280839895) * 1000;\r\n            case LinearPowerDensityUnits.MegawattsPerFoot:\r\n                return (value * 3.280839895) * 1000000;\r\n            case LinearPowerDensityUnits.GigawattsPerFoot:\r\n                return (value * 3.280839895) * 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the LinearPowerDensity to string.\r\n     * Note! the default format for LinearPowerDensity is WattsPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the LinearPowerDensity.\r\n     * @returns The string format of the LinearPowerDensity.\r\n     */\r\n    toString(toUnit = LinearPowerDensityUnits.WattsPerMeter) {\r\n        switch (toUnit) {\r\n            case LinearPowerDensityUnits.WattsPerMeter:\r\n                return this.WattsPerMeter + ` W/m`;\r\n            case LinearPowerDensityUnits.WattsPerCentimeter:\r\n                return this.WattsPerCentimeter + ` W/cm`;\r\n            case LinearPowerDensityUnits.WattsPerMillimeter:\r\n                return this.WattsPerMillimeter + ` W/mm`;\r\n            case LinearPowerDensityUnits.WattsPerInch:\r\n                return this.WattsPerInch + ` W/in`;\r\n            case LinearPowerDensityUnits.WattsPerFoot:\r\n                return this.WattsPerFoot + ` W/ft`;\r\n            case LinearPowerDensityUnits.MilliwattsPerMeter:\r\n                return this.MilliwattsPerMeter + ` `;\r\n            case LinearPowerDensityUnits.KilowattsPerMeter:\r\n                return this.KilowattsPerMeter + ` `;\r\n            case LinearPowerDensityUnits.MegawattsPerMeter:\r\n                return this.MegawattsPerMeter + ` `;\r\n            case LinearPowerDensityUnits.GigawattsPerMeter:\r\n                return this.GigawattsPerMeter + ` `;\r\n            case LinearPowerDensityUnits.MilliwattsPerCentimeter:\r\n                return this.MilliwattsPerCentimeter + ` `;\r\n            case LinearPowerDensityUnits.KilowattsPerCentimeter:\r\n                return this.KilowattsPerCentimeter + ` `;\r\n            case LinearPowerDensityUnits.MegawattsPerCentimeter:\r\n                return this.MegawattsPerCentimeter + ` `;\r\n            case LinearPowerDensityUnits.GigawattsPerCentimeter:\r\n                return this.GigawattsPerCentimeter + ` `;\r\n            case LinearPowerDensityUnits.MilliwattsPerMillimeter:\r\n                return this.MilliwattsPerMillimeter + ` `;\r\n            case LinearPowerDensityUnits.KilowattsPerMillimeter:\r\n                return this.KilowattsPerMillimeter + ` `;\r\n            case LinearPowerDensityUnits.MegawattsPerMillimeter:\r\n                return this.MegawattsPerMillimeter + ` `;\r\n            case LinearPowerDensityUnits.GigawattsPerMillimeter:\r\n                return this.GigawattsPerMillimeter + ` `;\r\n            case LinearPowerDensityUnits.MilliwattsPerInch:\r\n                return this.MilliwattsPerInch + ` `;\r\n            case LinearPowerDensityUnits.KilowattsPerInch:\r\n                return this.KilowattsPerInch + ` `;\r\n            case LinearPowerDensityUnits.MegawattsPerInch:\r\n                return this.MegawattsPerInch + ` `;\r\n            case LinearPowerDensityUnits.GigawattsPerInch:\r\n                return this.GigawattsPerInch + ` `;\r\n            case LinearPowerDensityUnits.MilliwattsPerFoot:\r\n                return this.MilliwattsPerFoot + ` `;\r\n            case LinearPowerDensityUnits.KilowattsPerFoot:\r\n                return this.KilowattsPerFoot + ` `;\r\n            case LinearPowerDensityUnits.MegawattsPerFoot:\r\n                return this.MegawattsPerFoot + ` `;\r\n            case LinearPowerDensityUnits.GigawattsPerFoot:\r\n                return this.GigawattsPerFoot + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given LinearPowerDensity are equals to the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns True if the given LinearPowerDensity are equal to the current LinearPowerDensity.\r\n     */\r\n    equals(linearPowerDensity) {\r\n        return this.value === linearPowerDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given LinearPowerDensity against the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns 0 if they are equal, -1 if the current LinearPowerDensity is less then other, 1 if the current LinearPowerDensity is greater then other.\r\n     */\r\n    compareTo(linearPowerDensity) {\r\n        if (this.value > linearPowerDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < linearPowerDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given LinearPowerDensity with the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns A new LinearPowerDensity instance with the results.\r\n     */\r\n    add(linearPowerDensity) {\r\n        return new LinearPowerDensity(this.value + linearPowerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given LinearPowerDensity with the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns A new LinearPowerDensity instance with the results.\r\n     */\r\n    subtract(linearPowerDensity) {\r\n        return new LinearPowerDensity(this.value - linearPowerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given LinearPowerDensity with the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns A new LinearPowerDensity instance with the results.\r\n     */\r\n    multiply(linearPowerDensity) {\r\n        return new LinearPowerDensity(this.value * linearPowerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given LinearPowerDensity with the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns A new LinearPowerDensity instance with the results.\r\n     */\r\n    divide(linearPowerDensity) {\r\n        return new LinearPowerDensity(this.value / linearPowerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given LinearPowerDensity with the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns A new LinearPowerDensity instance with the results.\r\n     */\r\n    modulo(linearPowerDensity) {\r\n        return new LinearPowerDensity(this.value % linearPowerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given LinearPowerDensity with the current LinearPowerDensity.\r\n     * @param linearPowerDensity The other LinearPowerDensity.\r\n     * @returns A new LinearPowerDensity instance with the results.\r\n     */\r\n    pow(linearPowerDensity) {\r\n        return new LinearPowerDensity(this.value ** linearPowerDensity.BaseValue);\r\n    }\r\n}\r\nexports.LinearPowerDensity = LinearPowerDensity;\r\n//# sourceMappingURL=linearpowerdensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Luminosity = exports.LuminosityUnits = void 0;\r\n/** LuminosityUnits enumeration */\r\nvar LuminosityUnits;\r\n(function (LuminosityUnits) {\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Watts\"] = 0] = \"Watts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"SolarLuminosities\"] = 1] = \"SolarLuminosities\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Femtowatts\"] = 2] = \"Femtowatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Picowatts\"] = 3] = \"Picowatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Nanowatts\"] = 4] = \"Nanowatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Microwatts\"] = 5] = \"Microwatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Milliwatts\"] = 6] = \"Milliwatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Deciwatts\"] = 7] = \"Deciwatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Decawatts\"] = 8] = \"Decawatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Kilowatts\"] = 9] = \"Kilowatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Megawatts\"] = 10] = \"Megawatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Gigawatts\"] = 11] = \"Gigawatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Terawatts\"] = 12] = \"Terawatts\";\r\n    /** */\r\n    LuminosityUnits[LuminosityUnits[\"Petawatts\"] = 13] = \"Petawatts\";\r\n})(LuminosityUnits = exports.LuminosityUnits || (exports.LuminosityUnits = {}));\r\n/** Luminosity is an absolute measure of radiated electromagnetic power (light), the radiant power emitted by a light-emitting object. */\r\nclass Luminosity {\r\n    /**\r\n     * Create a new Luminosity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Luminosity’ unit to create from.\r\n     * The default unit is Watts\r\n     */\r\n    constructor(value, fromUnit = LuminosityUnits.Watts) {\r\n        this.wattsLazy = null;\r\n        this.solarluminositiesLazy = null;\r\n        this.femtowattsLazy = null;\r\n        this.picowattsLazy = null;\r\n        this.nanowattsLazy = null;\r\n        this.microwattsLazy = null;\r\n        this.milliwattsLazy = null;\r\n        this.deciwattsLazy = null;\r\n        this.decawattsLazy = null;\r\n        this.kilowattsLazy = null;\r\n        this.megawattsLazy = null;\r\n        this.gigawattsLazy = null;\r\n        this.terawattsLazy = null;\r\n        this.petawattsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Luminosity is Watts.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Watts() {\r\n        if (this.wattsLazy !== null) {\r\n            return this.wattsLazy;\r\n        }\r\n        return this.wattsLazy = this.convertFromBase(LuminosityUnits.Watts);\r\n    }\r\n    /** */\r\n    get SolarLuminosities() {\r\n        if (this.solarluminositiesLazy !== null) {\r\n            return this.solarluminositiesLazy;\r\n        }\r\n        return this.solarluminositiesLazy = this.convertFromBase(LuminosityUnits.SolarLuminosities);\r\n    }\r\n    /** */\r\n    get Femtowatts() {\r\n        if (this.femtowattsLazy !== null) {\r\n            return this.femtowattsLazy;\r\n        }\r\n        return this.femtowattsLazy = this.convertFromBase(LuminosityUnits.Femtowatts);\r\n    }\r\n    /** */\r\n    get Picowatts() {\r\n        if (this.picowattsLazy !== null) {\r\n            return this.picowattsLazy;\r\n        }\r\n        return this.picowattsLazy = this.convertFromBase(LuminosityUnits.Picowatts);\r\n    }\r\n    /** */\r\n    get Nanowatts() {\r\n        if (this.nanowattsLazy !== null) {\r\n            return this.nanowattsLazy;\r\n        }\r\n        return this.nanowattsLazy = this.convertFromBase(LuminosityUnits.Nanowatts);\r\n    }\r\n    /** */\r\n    get Microwatts() {\r\n        if (this.microwattsLazy !== null) {\r\n            return this.microwattsLazy;\r\n        }\r\n        return this.microwattsLazy = this.convertFromBase(LuminosityUnits.Microwatts);\r\n    }\r\n    /** */\r\n    get Milliwatts() {\r\n        if (this.milliwattsLazy !== null) {\r\n            return this.milliwattsLazy;\r\n        }\r\n        return this.milliwattsLazy = this.convertFromBase(LuminosityUnits.Milliwatts);\r\n    }\r\n    /** */\r\n    get Deciwatts() {\r\n        if (this.deciwattsLazy !== null) {\r\n            return this.deciwattsLazy;\r\n        }\r\n        return this.deciwattsLazy = this.convertFromBase(LuminosityUnits.Deciwatts);\r\n    }\r\n    /** */\r\n    get Decawatts() {\r\n        if (this.decawattsLazy !== null) {\r\n            return this.decawattsLazy;\r\n        }\r\n        return this.decawattsLazy = this.convertFromBase(LuminosityUnits.Decawatts);\r\n    }\r\n    /** */\r\n    get Kilowatts() {\r\n        if (this.kilowattsLazy !== null) {\r\n            return this.kilowattsLazy;\r\n        }\r\n        return this.kilowattsLazy = this.convertFromBase(LuminosityUnits.Kilowatts);\r\n    }\r\n    /** */\r\n    get Megawatts() {\r\n        if (this.megawattsLazy !== null) {\r\n            return this.megawattsLazy;\r\n        }\r\n        return this.megawattsLazy = this.convertFromBase(LuminosityUnits.Megawatts);\r\n    }\r\n    /** */\r\n    get Gigawatts() {\r\n        if (this.gigawattsLazy !== null) {\r\n            return this.gigawattsLazy;\r\n        }\r\n        return this.gigawattsLazy = this.convertFromBase(LuminosityUnits.Gigawatts);\r\n    }\r\n    /** */\r\n    get Terawatts() {\r\n        if (this.terawattsLazy !== null) {\r\n            return this.terawattsLazy;\r\n        }\r\n        return this.terawattsLazy = this.convertFromBase(LuminosityUnits.Terawatts);\r\n    }\r\n    /** */\r\n    get Petawatts() {\r\n        if (this.petawattsLazy !== null) {\r\n            return this.petawattsLazy;\r\n        }\r\n        return this.petawattsLazy = this.convertFromBase(LuminosityUnits.Petawatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Watts\r\n     *\r\n     * @param value The unit as Watts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromWatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Watts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a SolarLuminosities\r\n     *\r\n     * @param value The unit as SolarLuminosities to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromSolarLuminosities(value) {\r\n        return new Luminosity(value, LuminosityUnits.SolarLuminosities);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Femtowatts\r\n     *\r\n     * @param value The unit as Femtowatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromFemtowatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Femtowatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Picowatts\r\n     *\r\n     * @param value The unit as Picowatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromPicowatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Picowatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Nanowatts\r\n     *\r\n     * @param value The unit as Nanowatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromNanowatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Nanowatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Microwatts\r\n     *\r\n     * @param value The unit as Microwatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromMicrowatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Microwatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Milliwatts\r\n     *\r\n     * @param value The unit as Milliwatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromMilliwatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Milliwatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Deciwatts\r\n     *\r\n     * @param value The unit as Deciwatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromDeciwatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Deciwatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Decawatts\r\n     *\r\n     * @param value The unit as Decawatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromDecawatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Decawatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Kilowatts\r\n     *\r\n     * @param value The unit as Kilowatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromKilowatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Kilowatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Megawatts\r\n     *\r\n     * @param value The unit as Megawatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromMegawatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Megawatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Gigawatts\r\n     *\r\n     * @param value The unit as Gigawatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromGigawatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Gigawatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Terawatts\r\n     *\r\n     * @param value The unit as Terawatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromTerawatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Terawatts);\r\n    }\r\n    /**\r\n     * Create a new Luminosity instance from a Petawatts\r\n     *\r\n     * @param value The unit as Petawatts to create a new Luminosity from.\r\n     * @returns The new Luminosity instance.\r\n     */\r\n    static FromPetawatts(value) {\r\n        return new Luminosity(value, LuminosityUnits.Petawatts);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LuminosityUnits.Watts:\r\n                return this.value;\r\n            case LuminosityUnits.SolarLuminosities:\r\n                return this.value / 3.846e26;\r\n            case LuminosityUnits.Femtowatts:\r\n                return (this.value) / 1e-15;\r\n            case LuminosityUnits.Picowatts:\r\n                return (this.value) / 1e-12;\r\n            case LuminosityUnits.Nanowatts:\r\n                return (this.value) / 1e-9;\r\n            case LuminosityUnits.Microwatts:\r\n                return (this.value) / 0.000001;\r\n            case LuminosityUnits.Milliwatts:\r\n                return (this.value) / 0.001;\r\n            case LuminosityUnits.Deciwatts:\r\n                return (this.value) / 0.1;\r\n            case LuminosityUnits.Decawatts:\r\n                return (this.value) / 10;\r\n            case LuminosityUnits.Kilowatts:\r\n                return (this.value) / 1000;\r\n            case LuminosityUnits.Megawatts:\r\n                return (this.value) / 1000000;\r\n            case LuminosityUnits.Gigawatts:\r\n                return (this.value) / 1000000000;\r\n            case LuminosityUnits.Terawatts:\r\n                return (this.value) / 1000000000000;\r\n            case LuminosityUnits.Petawatts:\r\n                return (this.value) / 1000000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LuminosityUnits.Watts:\r\n                return value;\r\n            case LuminosityUnits.SolarLuminosities:\r\n                return value * 3.846e26;\r\n            case LuminosityUnits.Femtowatts:\r\n                return (value) * 1e-15;\r\n            case LuminosityUnits.Picowatts:\r\n                return (value) * 1e-12;\r\n            case LuminosityUnits.Nanowatts:\r\n                return (value) * 1e-9;\r\n            case LuminosityUnits.Microwatts:\r\n                return (value) * 0.000001;\r\n            case LuminosityUnits.Milliwatts:\r\n                return (value) * 0.001;\r\n            case LuminosityUnits.Deciwatts:\r\n                return (value) * 0.1;\r\n            case LuminosityUnits.Decawatts:\r\n                return (value) * 10;\r\n            case LuminosityUnits.Kilowatts:\r\n                return (value) * 1000;\r\n            case LuminosityUnits.Megawatts:\r\n                return (value) * 1000000;\r\n            case LuminosityUnits.Gigawatts:\r\n                return (value) * 1000000000;\r\n            case LuminosityUnits.Terawatts:\r\n                return (value) * 1000000000000;\r\n            case LuminosityUnits.Petawatts:\r\n                return (value) * 1000000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Luminosity to string.\r\n     * Note! the default format for Luminosity is Watts.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Luminosity.\r\n     * @returns The string format of the Luminosity.\r\n     */\r\n    toString(toUnit = LuminosityUnits.Watts) {\r\n        switch (toUnit) {\r\n            case LuminosityUnits.Watts:\r\n                return this.Watts + ` W`;\r\n            case LuminosityUnits.SolarLuminosities:\r\n                return this.SolarLuminosities + ` L⊙`;\r\n            case LuminosityUnits.Femtowatts:\r\n                return this.Femtowatts + ` `;\r\n            case LuminosityUnits.Picowatts:\r\n                return this.Picowatts + ` `;\r\n            case LuminosityUnits.Nanowatts:\r\n                return this.Nanowatts + ` `;\r\n            case LuminosityUnits.Microwatts:\r\n                return this.Microwatts + ` `;\r\n            case LuminosityUnits.Milliwatts:\r\n                return this.Milliwatts + ` `;\r\n            case LuminosityUnits.Deciwatts:\r\n                return this.Deciwatts + ` `;\r\n            case LuminosityUnits.Decawatts:\r\n                return this.Decawatts + ` `;\r\n            case LuminosityUnits.Kilowatts:\r\n                return this.Kilowatts + ` `;\r\n            case LuminosityUnits.Megawatts:\r\n                return this.Megawatts + ` `;\r\n            case LuminosityUnits.Gigawatts:\r\n                return this.Gigawatts + ` `;\r\n            case LuminosityUnits.Terawatts:\r\n                return this.Terawatts + ` `;\r\n            case LuminosityUnits.Petawatts:\r\n                return this.Petawatts + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Luminosity are equals to the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns True if the given Luminosity are equal to the current Luminosity.\r\n     */\r\n    equals(luminosity) {\r\n        return this.value === luminosity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Luminosity against the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns 0 if they are equal, -1 if the current Luminosity is less then other, 1 if the current Luminosity is greater then other.\r\n     */\r\n    compareTo(luminosity) {\r\n        if (this.value > luminosity.BaseValue)\r\n            return 1;\r\n        if (this.value < luminosity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Luminosity with the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns A new Luminosity instance with the results.\r\n     */\r\n    add(luminosity) {\r\n        return new Luminosity(this.value + luminosity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Luminosity with the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns A new Luminosity instance with the results.\r\n     */\r\n    subtract(luminosity) {\r\n        return new Luminosity(this.value - luminosity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Luminosity with the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns A new Luminosity instance with the results.\r\n     */\r\n    multiply(luminosity) {\r\n        return new Luminosity(this.value * luminosity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Luminosity with the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns A new Luminosity instance with the results.\r\n     */\r\n    divide(luminosity) {\r\n        return new Luminosity(this.value / luminosity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Luminosity with the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns A new Luminosity instance with the results.\r\n     */\r\n    modulo(luminosity) {\r\n        return new Luminosity(this.value % luminosity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Luminosity with the current Luminosity.\r\n     * @param luminosity The other Luminosity.\r\n     * @returns A new Luminosity instance with the results.\r\n     */\r\n    pow(luminosity) {\r\n        return new Luminosity(this.value ** luminosity.BaseValue);\r\n    }\r\n}\r\nexports.Luminosity = Luminosity;\r\n//# sourceMappingURL=luminosity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LuminousFlux = exports.LuminousFluxUnits = void 0;\r\n/** LuminousFluxUnits enumeration */\r\nvar LuminousFluxUnits;\r\n(function (LuminousFluxUnits) {\r\n    /** */\r\n    LuminousFluxUnits[LuminousFluxUnits[\"Lumens\"] = 0] = \"Lumens\";\r\n})(LuminousFluxUnits = exports.LuminousFluxUnits || (exports.LuminousFluxUnits = {}));\r\n/** In photometry, luminous flux or luminous power is the measure of the perceived power of light. */\r\nclass LuminousFlux {\r\n    /**\r\n     * Create a new LuminousFlux.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘LuminousFlux’ unit to create from.\r\n     * The default unit is Lumens\r\n     */\r\n    constructor(value, fromUnit = LuminousFluxUnits.Lumens) {\r\n        this.lumensLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of LuminousFlux is Lumens.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Lumens() {\r\n        if (this.lumensLazy !== null) {\r\n            return this.lumensLazy;\r\n        }\r\n        return this.lumensLazy = this.convertFromBase(LuminousFluxUnits.Lumens);\r\n    }\r\n    /**\r\n     * Create a new LuminousFlux instance from a Lumens\r\n     *\r\n     * @param value The unit as Lumens to create a new LuminousFlux from.\r\n     * @returns The new LuminousFlux instance.\r\n     */\r\n    static FromLumens(value) {\r\n        return new LuminousFlux(value, LuminousFluxUnits.Lumens);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LuminousFluxUnits.Lumens:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LuminousFluxUnits.Lumens:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the LuminousFlux to string.\r\n     * Note! the default format for LuminousFlux is Lumens.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the LuminousFlux.\r\n     * @returns The string format of the LuminousFlux.\r\n     */\r\n    toString(toUnit = LuminousFluxUnits.Lumens) {\r\n        switch (toUnit) {\r\n            case LuminousFluxUnits.Lumens:\r\n                return this.Lumens + ` lm`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given LuminousFlux are equals to the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns True if the given LuminousFlux are equal to the current LuminousFlux.\r\n     */\r\n    equals(luminousFlux) {\r\n        return this.value === luminousFlux.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given LuminousFlux against the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns 0 if they are equal, -1 if the current LuminousFlux is less then other, 1 if the current LuminousFlux is greater then other.\r\n     */\r\n    compareTo(luminousFlux) {\r\n        if (this.value > luminousFlux.BaseValue)\r\n            return 1;\r\n        if (this.value < luminousFlux.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given LuminousFlux with the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns A new LuminousFlux instance with the results.\r\n     */\r\n    add(luminousFlux) {\r\n        return new LuminousFlux(this.value + luminousFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given LuminousFlux with the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns A new LuminousFlux instance with the results.\r\n     */\r\n    subtract(luminousFlux) {\r\n        return new LuminousFlux(this.value - luminousFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given LuminousFlux with the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns A new LuminousFlux instance with the results.\r\n     */\r\n    multiply(luminousFlux) {\r\n        return new LuminousFlux(this.value * luminousFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given LuminousFlux with the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns A new LuminousFlux instance with the results.\r\n     */\r\n    divide(luminousFlux) {\r\n        return new LuminousFlux(this.value / luminousFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given LuminousFlux with the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns A new LuminousFlux instance with the results.\r\n     */\r\n    modulo(luminousFlux) {\r\n        return new LuminousFlux(this.value % luminousFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given LuminousFlux with the current LuminousFlux.\r\n     * @param luminousFlux The other LuminousFlux.\r\n     * @returns A new LuminousFlux instance with the results.\r\n     */\r\n    pow(luminousFlux) {\r\n        return new LuminousFlux(this.value ** luminousFlux.BaseValue);\r\n    }\r\n}\r\nexports.LuminousFlux = LuminousFlux;\r\n//# sourceMappingURL=luminousflux.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LuminousIntensity = exports.LuminousIntensityUnits = void 0;\r\n/** LuminousIntensityUnits enumeration */\r\nvar LuminousIntensityUnits;\r\n(function (LuminousIntensityUnits) {\r\n    /** */\r\n    LuminousIntensityUnits[LuminousIntensityUnits[\"Candela\"] = 0] = \"Candela\";\r\n})(LuminousIntensityUnits = exports.LuminousIntensityUnits || (exports.LuminousIntensityUnits = {}));\r\n/** In photometry, luminous intensity is a measure of the wavelength-weighted power emitted by a light source in a particular direction per unit solid angle, based on the luminosity function, a standardized model of the sensitivity of the human eye. */\r\nclass LuminousIntensity {\r\n    /**\r\n     * Create a new LuminousIntensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘LuminousIntensity’ unit to create from.\r\n     * The default unit is Candela\r\n     */\r\n    constructor(value, fromUnit = LuminousIntensityUnits.Candela) {\r\n        this.candelaLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of LuminousIntensity is Candela.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Candela() {\r\n        if (this.candelaLazy !== null) {\r\n            return this.candelaLazy;\r\n        }\r\n        return this.candelaLazy = this.convertFromBase(LuminousIntensityUnits.Candela);\r\n    }\r\n    /**\r\n     * Create a new LuminousIntensity instance from a Candela\r\n     *\r\n     * @param value The unit as Candela to create a new LuminousIntensity from.\r\n     * @returns The new LuminousIntensity instance.\r\n     */\r\n    static FromCandela(value) {\r\n        return new LuminousIntensity(value, LuminousIntensityUnits.Candela);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case LuminousIntensityUnits.Candela:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case LuminousIntensityUnits.Candela:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the LuminousIntensity to string.\r\n     * Note! the default format for LuminousIntensity is Candela.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the LuminousIntensity.\r\n     * @returns The string format of the LuminousIntensity.\r\n     */\r\n    toString(toUnit = LuminousIntensityUnits.Candela) {\r\n        switch (toUnit) {\r\n            case LuminousIntensityUnits.Candela:\r\n                return this.Candela + ` cd`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given LuminousIntensity are equals to the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns True if the given LuminousIntensity are equal to the current LuminousIntensity.\r\n     */\r\n    equals(luminousIntensity) {\r\n        return this.value === luminousIntensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given LuminousIntensity against the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns 0 if they are equal, -1 if the current LuminousIntensity is less then other, 1 if the current LuminousIntensity is greater then other.\r\n     */\r\n    compareTo(luminousIntensity) {\r\n        if (this.value > luminousIntensity.BaseValue)\r\n            return 1;\r\n        if (this.value < luminousIntensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given LuminousIntensity with the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns A new LuminousIntensity instance with the results.\r\n     */\r\n    add(luminousIntensity) {\r\n        return new LuminousIntensity(this.value + luminousIntensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given LuminousIntensity with the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns A new LuminousIntensity instance with the results.\r\n     */\r\n    subtract(luminousIntensity) {\r\n        return new LuminousIntensity(this.value - luminousIntensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given LuminousIntensity with the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns A new LuminousIntensity instance with the results.\r\n     */\r\n    multiply(luminousIntensity) {\r\n        return new LuminousIntensity(this.value * luminousIntensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given LuminousIntensity with the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns A new LuminousIntensity instance with the results.\r\n     */\r\n    divide(luminousIntensity) {\r\n        return new LuminousIntensity(this.value / luminousIntensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given LuminousIntensity with the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns A new LuminousIntensity instance with the results.\r\n     */\r\n    modulo(luminousIntensity) {\r\n        return new LuminousIntensity(this.value % luminousIntensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given LuminousIntensity with the current LuminousIntensity.\r\n     * @param luminousIntensity The other LuminousIntensity.\r\n     * @returns A new LuminousIntensity instance with the results.\r\n     */\r\n    pow(luminousIntensity) {\r\n        return new LuminousIntensity(this.value ** luminousIntensity.BaseValue);\r\n    }\r\n}\r\nexports.LuminousIntensity = LuminousIntensity;\r\n//# sourceMappingURL=luminousintensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MagneticField = exports.MagneticFieldUnits = void 0;\r\n/** MagneticFieldUnits enumeration */\r\nvar MagneticFieldUnits;\r\n(function (MagneticFieldUnits) {\r\n    /** */\r\n    MagneticFieldUnits[MagneticFieldUnits[\"Teslas\"] = 0] = \"Teslas\";\r\n    /** */\r\n    MagneticFieldUnits[MagneticFieldUnits[\"Gausses\"] = 1] = \"Gausses\";\r\n    /** */\r\n    MagneticFieldUnits[MagneticFieldUnits[\"Nanoteslas\"] = 2] = \"Nanoteslas\";\r\n    /** */\r\n    MagneticFieldUnits[MagneticFieldUnits[\"Microteslas\"] = 3] = \"Microteslas\";\r\n    /** */\r\n    MagneticFieldUnits[MagneticFieldUnits[\"Milliteslas\"] = 4] = \"Milliteslas\";\r\n    /** */\r\n    MagneticFieldUnits[MagneticFieldUnits[\"Milligausses\"] = 5] = \"Milligausses\";\r\n})(MagneticFieldUnits = exports.MagneticFieldUnits || (exports.MagneticFieldUnits = {}));\r\n/** A magnetic field is a force field that is created by moving electric charges (electric currents) and magnetic dipoles, and exerts a force on other nearby moving charges and magnetic dipoles. */\r\nclass MagneticField {\r\n    /**\r\n     * Create a new MagneticField.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MagneticField’ unit to create from.\r\n     * The default unit is Teslas\r\n     */\r\n    constructor(value, fromUnit = MagneticFieldUnits.Teslas) {\r\n        this.teslasLazy = null;\r\n        this.gaussesLazy = null;\r\n        this.nanoteslasLazy = null;\r\n        this.microteslasLazy = null;\r\n        this.milliteslasLazy = null;\r\n        this.milligaussesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MagneticField is Teslas.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Teslas() {\r\n        if (this.teslasLazy !== null) {\r\n            return this.teslasLazy;\r\n        }\r\n        return this.teslasLazy = this.convertFromBase(MagneticFieldUnits.Teslas);\r\n    }\r\n    /** */\r\n    get Gausses() {\r\n        if (this.gaussesLazy !== null) {\r\n            return this.gaussesLazy;\r\n        }\r\n        return this.gaussesLazy = this.convertFromBase(MagneticFieldUnits.Gausses);\r\n    }\r\n    /** */\r\n    get Nanoteslas() {\r\n        if (this.nanoteslasLazy !== null) {\r\n            return this.nanoteslasLazy;\r\n        }\r\n        return this.nanoteslasLazy = this.convertFromBase(MagneticFieldUnits.Nanoteslas);\r\n    }\r\n    /** */\r\n    get Microteslas() {\r\n        if (this.microteslasLazy !== null) {\r\n            return this.microteslasLazy;\r\n        }\r\n        return this.microteslasLazy = this.convertFromBase(MagneticFieldUnits.Microteslas);\r\n    }\r\n    /** */\r\n    get Milliteslas() {\r\n        if (this.milliteslasLazy !== null) {\r\n            return this.milliteslasLazy;\r\n        }\r\n        return this.milliteslasLazy = this.convertFromBase(MagneticFieldUnits.Milliteslas);\r\n    }\r\n    /** */\r\n    get Milligausses() {\r\n        if (this.milligaussesLazy !== null) {\r\n            return this.milligaussesLazy;\r\n        }\r\n        return this.milligaussesLazy = this.convertFromBase(MagneticFieldUnits.Milligausses);\r\n    }\r\n    /**\r\n     * Create a new MagneticField instance from a Teslas\r\n     *\r\n     * @param value The unit as Teslas to create a new MagneticField from.\r\n     * @returns The new MagneticField instance.\r\n     */\r\n    static FromTeslas(value) {\r\n        return new MagneticField(value, MagneticFieldUnits.Teslas);\r\n    }\r\n    /**\r\n     * Create a new MagneticField instance from a Gausses\r\n     *\r\n     * @param value The unit as Gausses to create a new MagneticField from.\r\n     * @returns The new MagneticField instance.\r\n     */\r\n    static FromGausses(value) {\r\n        return new MagneticField(value, MagneticFieldUnits.Gausses);\r\n    }\r\n    /**\r\n     * Create a new MagneticField instance from a Nanoteslas\r\n     *\r\n     * @param value The unit as Nanoteslas to create a new MagneticField from.\r\n     * @returns The new MagneticField instance.\r\n     */\r\n    static FromNanoteslas(value) {\r\n        return new MagneticField(value, MagneticFieldUnits.Nanoteslas);\r\n    }\r\n    /**\r\n     * Create a new MagneticField instance from a Microteslas\r\n     *\r\n     * @param value The unit as Microteslas to create a new MagneticField from.\r\n     * @returns The new MagneticField instance.\r\n     */\r\n    static FromMicroteslas(value) {\r\n        return new MagneticField(value, MagneticFieldUnits.Microteslas);\r\n    }\r\n    /**\r\n     * Create a new MagneticField instance from a Milliteslas\r\n     *\r\n     * @param value The unit as Milliteslas to create a new MagneticField from.\r\n     * @returns The new MagneticField instance.\r\n     */\r\n    static FromMilliteslas(value) {\r\n        return new MagneticField(value, MagneticFieldUnits.Milliteslas);\r\n    }\r\n    /**\r\n     * Create a new MagneticField instance from a Milligausses\r\n     *\r\n     * @param value The unit as Milligausses to create a new MagneticField from.\r\n     * @returns The new MagneticField instance.\r\n     */\r\n    static FromMilligausses(value) {\r\n        return new MagneticField(value, MagneticFieldUnits.Milligausses);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MagneticFieldUnits.Teslas:\r\n                return this.value;\r\n            case MagneticFieldUnits.Gausses:\r\n                return this.value * 1e4;\r\n            case MagneticFieldUnits.Nanoteslas:\r\n                return (this.value) / 1e-9;\r\n            case MagneticFieldUnits.Microteslas:\r\n                return (this.value) / 0.000001;\r\n            case MagneticFieldUnits.Milliteslas:\r\n                return (this.value) / 0.001;\r\n            case MagneticFieldUnits.Milligausses:\r\n                return (this.value * 1e4) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MagneticFieldUnits.Teslas:\r\n                return value;\r\n            case MagneticFieldUnits.Gausses:\r\n                return value / 1e4;\r\n            case MagneticFieldUnits.Nanoteslas:\r\n                return (value) * 1e-9;\r\n            case MagneticFieldUnits.Microteslas:\r\n                return (value) * 0.000001;\r\n            case MagneticFieldUnits.Milliteslas:\r\n                return (value) * 0.001;\r\n            case MagneticFieldUnits.Milligausses:\r\n                return (value / 1e4) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MagneticField to string.\r\n     * Note! the default format for MagneticField is Teslas.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MagneticField.\r\n     * @returns The string format of the MagneticField.\r\n     */\r\n    toString(toUnit = MagneticFieldUnits.Teslas) {\r\n        switch (toUnit) {\r\n            case MagneticFieldUnits.Teslas:\r\n                return this.Teslas + ` T`;\r\n            case MagneticFieldUnits.Gausses:\r\n                return this.Gausses + ` G`;\r\n            case MagneticFieldUnits.Nanoteslas:\r\n                return this.Nanoteslas + ` `;\r\n            case MagneticFieldUnits.Microteslas:\r\n                return this.Microteslas + ` `;\r\n            case MagneticFieldUnits.Milliteslas:\r\n                return this.Milliteslas + ` `;\r\n            case MagneticFieldUnits.Milligausses:\r\n                return this.Milligausses + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MagneticField are equals to the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns True if the given MagneticField are equal to the current MagneticField.\r\n     */\r\n    equals(magneticField) {\r\n        return this.value === magneticField.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MagneticField against the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns 0 if they are equal, -1 if the current MagneticField is less then other, 1 if the current MagneticField is greater then other.\r\n     */\r\n    compareTo(magneticField) {\r\n        if (this.value > magneticField.BaseValue)\r\n            return 1;\r\n        if (this.value < magneticField.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MagneticField with the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns A new MagneticField instance with the results.\r\n     */\r\n    add(magneticField) {\r\n        return new MagneticField(this.value + magneticField.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MagneticField with the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns A new MagneticField instance with the results.\r\n     */\r\n    subtract(magneticField) {\r\n        return new MagneticField(this.value - magneticField.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MagneticField with the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns A new MagneticField instance with the results.\r\n     */\r\n    multiply(magneticField) {\r\n        return new MagneticField(this.value * magneticField.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MagneticField with the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns A new MagneticField instance with the results.\r\n     */\r\n    divide(magneticField) {\r\n        return new MagneticField(this.value / magneticField.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MagneticField with the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns A new MagneticField instance with the results.\r\n     */\r\n    modulo(magneticField) {\r\n        return new MagneticField(this.value % magneticField.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MagneticField with the current MagneticField.\r\n     * @param magneticField The other MagneticField.\r\n     * @returns A new MagneticField instance with the results.\r\n     */\r\n    pow(magneticField) {\r\n        return new MagneticField(this.value ** magneticField.BaseValue);\r\n    }\r\n}\r\nexports.MagneticField = MagneticField;\r\n//# sourceMappingURL=magneticfield.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MagneticFlux = exports.MagneticFluxUnits = void 0;\r\n/** MagneticFluxUnits enumeration */\r\nvar MagneticFluxUnits;\r\n(function (MagneticFluxUnits) {\r\n    /** */\r\n    MagneticFluxUnits[MagneticFluxUnits[\"Webers\"] = 0] = \"Webers\";\r\n})(MagneticFluxUnits = exports.MagneticFluxUnits || (exports.MagneticFluxUnits = {}));\r\n/** In physics, specifically electromagnetism, the magnetic flux through a surface is the surface integral of the normal component of the magnetic field B passing through that surface. */\r\nclass MagneticFlux {\r\n    /**\r\n     * Create a new MagneticFlux.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MagneticFlux’ unit to create from.\r\n     * The default unit is Webers\r\n     */\r\n    constructor(value, fromUnit = MagneticFluxUnits.Webers) {\r\n        this.webersLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MagneticFlux is Webers.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Webers() {\r\n        if (this.webersLazy !== null) {\r\n            return this.webersLazy;\r\n        }\r\n        return this.webersLazy = this.convertFromBase(MagneticFluxUnits.Webers);\r\n    }\r\n    /**\r\n     * Create a new MagneticFlux instance from a Webers\r\n     *\r\n     * @param value The unit as Webers to create a new MagneticFlux from.\r\n     * @returns The new MagneticFlux instance.\r\n     */\r\n    static FromWebers(value) {\r\n        return new MagneticFlux(value, MagneticFluxUnits.Webers);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MagneticFluxUnits.Webers:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MagneticFluxUnits.Webers:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MagneticFlux to string.\r\n     * Note! the default format for MagneticFlux is Webers.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MagneticFlux.\r\n     * @returns The string format of the MagneticFlux.\r\n     */\r\n    toString(toUnit = MagneticFluxUnits.Webers) {\r\n        switch (toUnit) {\r\n            case MagneticFluxUnits.Webers:\r\n                return this.Webers + ` Wb`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MagneticFlux are equals to the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns True if the given MagneticFlux are equal to the current MagneticFlux.\r\n     */\r\n    equals(magneticFlux) {\r\n        return this.value === magneticFlux.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MagneticFlux against the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns 0 if they are equal, -1 if the current MagneticFlux is less then other, 1 if the current MagneticFlux is greater then other.\r\n     */\r\n    compareTo(magneticFlux) {\r\n        if (this.value > magneticFlux.BaseValue)\r\n            return 1;\r\n        if (this.value < magneticFlux.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MagneticFlux with the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns A new MagneticFlux instance with the results.\r\n     */\r\n    add(magneticFlux) {\r\n        return new MagneticFlux(this.value + magneticFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MagneticFlux with the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns A new MagneticFlux instance with the results.\r\n     */\r\n    subtract(magneticFlux) {\r\n        return new MagneticFlux(this.value - magneticFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MagneticFlux with the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns A new MagneticFlux instance with the results.\r\n     */\r\n    multiply(magneticFlux) {\r\n        return new MagneticFlux(this.value * magneticFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MagneticFlux with the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns A new MagneticFlux instance with the results.\r\n     */\r\n    divide(magneticFlux) {\r\n        return new MagneticFlux(this.value / magneticFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MagneticFlux with the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns A new MagneticFlux instance with the results.\r\n     */\r\n    modulo(magneticFlux) {\r\n        return new MagneticFlux(this.value % magneticFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MagneticFlux with the current MagneticFlux.\r\n     * @param magneticFlux The other MagneticFlux.\r\n     * @returns A new MagneticFlux instance with the results.\r\n     */\r\n    pow(magneticFlux) {\r\n        return new MagneticFlux(this.value ** magneticFlux.BaseValue);\r\n    }\r\n}\r\nexports.MagneticFlux = MagneticFlux;\r\n//# sourceMappingURL=magneticflux.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Magnetization = exports.MagnetizationUnits = void 0;\r\n/** MagnetizationUnits enumeration */\r\nvar MagnetizationUnits;\r\n(function (MagnetizationUnits) {\r\n    /** */\r\n    MagnetizationUnits[MagnetizationUnits[\"AmperesPerMeter\"] = 0] = \"AmperesPerMeter\";\r\n})(MagnetizationUnits = exports.MagnetizationUnits || (exports.MagnetizationUnits = {}));\r\n/** In classical electromagnetism, magnetization is the vector field that expresses the density of permanent or induced magnetic dipole moments in a magnetic material. */\r\nclass Magnetization {\r\n    /**\r\n     * Create a new Magnetization.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Magnetization’ unit to create from.\r\n     * The default unit is AmperesPerMeter\r\n     */\r\n    constructor(value, fromUnit = MagnetizationUnits.AmperesPerMeter) {\r\n        this.amperespermeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Magnetization is AmperesPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get AmperesPerMeter() {\r\n        if (this.amperespermeterLazy !== null) {\r\n            return this.amperespermeterLazy;\r\n        }\r\n        return this.amperespermeterLazy = this.convertFromBase(MagnetizationUnits.AmperesPerMeter);\r\n    }\r\n    /**\r\n     * Create a new Magnetization instance from a AmperesPerMeter\r\n     *\r\n     * @param value The unit as AmperesPerMeter to create a new Magnetization from.\r\n     * @returns The new Magnetization instance.\r\n     */\r\n    static FromAmperesPerMeter(value) {\r\n        return new Magnetization(value, MagnetizationUnits.AmperesPerMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MagnetizationUnits.AmperesPerMeter:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MagnetizationUnits.AmperesPerMeter:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Magnetization to string.\r\n     * Note! the default format for Magnetization is AmperesPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Magnetization.\r\n     * @returns The string format of the Magnetization.\r\n     */\r\n    toString(toUnit = MagnetizationUnits.AmperesPerMeter) {\r\n        switch (toUnit) {\r\n            case MagnetizationUnits.AmperesPerMeter:\r\n                return this.AmperesPerMeter + ` A/m`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Magnetization are equals to the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns True if the given Magnetization are equal to the current Magnetization.\r\n     */\r\n    equals(magnetization) {\r\n        return this.value === magnetization.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Magnetization against the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns 0 if they are equal, -1 if the current Magnetization is less then other, 1 if the current Magnetization is greater then other.\r\n     */\r\n    compareTo(magnetization) {\r\n        if (this.value > magnetization.BaseValue)\r\n            return 1;\r\n        if (this.value < magnetization.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Magnetization with the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns A new Magnetization instance with the results.\r\n     */\r\n    add(magnetization) {\r\n        return new Magnetization(this.value + magnetization.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Magnetization with the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns A new Magnetization instance with the results.\r\n     */\r\n    subtract(magnetization) {\r\n        return new Magnetization(this.value - magnetization.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Magnetization with the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns A new Magnetization instance with the results.\r\n     */\r\n    multiply(magnetization) {\r\n        return new Magnetization(this.value * magnetization.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Magnetization with the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns A new Magnetization instance with the results.\r\n     */\r\n    divide(magnetization) {\r\n        return new Magnetization(this.value / magnetization.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Magnetization with the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns A new Magnetization instance with the results.\r\n     */\r\n    modulo(magnetization) {\r\n        return new Magnetization(this.value % magnetization.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Magnetization with the current Magnetization.\r\n     * @param magnetization The other Magnetization.\r\n     * @returns A new Magnetization instance with the results.\r\n     */\r\n    pow(magnetization) {\r\n        return new Magnetization(this.value ** magnetization.BaseValue);\r\n    }\r\n}\r\nexports.Magnetization = Magnetization;\r\n//# sourceMappingURL=magnetization.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Mass = exports.MassUnits = void 0;\r\n/** MassUnits enumeration */\r\nvar MassUnits;\r\n(function (MassUnits) {\r\n    /** */\r\n    MassUnits[MassUnits[\"Grams\"] = 0] = \"Grams\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Tonnes\"] = 1] = \"Tonnes\";\r\n    /** The short ton is a unit of mass equal to 2,000 pounds (907.18474 kg), that is most commonly used in the United States – known there simply as the ton. */\r\n    MassUnits[MassUnits[\"ShortTons\"] = 2] = \"ShortTons\";\r\n    /** Long ton (weight ton or Imperial ton) is a unit of mass equal to 2,240 pounds (1,016 kg) and is the name for the unit called the \"ton\" in the avoirdupois or Imperial system of measurements that was used in the United Kingdom and several other Commonwealth countries before metrication. */\r\n    MassUnits[MassUnits[\"LongTons\"] = 3] = \"LongTons\";\r\n    /** The pound or pound-mass (abbreviations: lb, lbm) is a unit of mass used in the imperial, United States customary and other systems of measurement. A number of different definitions have been used, the most common today being the international avoirdupois pound which is legally defined as exactly 0.45359237 kilograms, and which is divided into 16 avoirdupois ounces. */\r\n    MassUnits[MassUnits[\"Pounds\"] = 4] = \"Pounds\";\r\n    /** An ounce (abbreviated oz) is usually the international avoirdupois ounce as used in the United States customary and British imperial systems, which is equal to one-sixteenth of a pound or approximately 28 grams. The abbreviation 'oz' derives from the Italian word onza (now spelled oncia). */\r\n    MassUnits[MassUnits[\"Ounces\"] = 5] = \"Ounces\";\r\n    /** The slug (abbreviation slug) is a unit of mass that is accelerated by 1 ft/s² when a force of one pound (lbf) is exerted on it. */\r\n    MassUnits[MassUnits[\"Slugs\"] = 6] = \"Slugs\";\r\n    /** The stone (abbreviation st) is a unit of mass equal to 14 pounds avoirdupois (about 6.35 kilograms) used in Great Britain and Ireland for measuring human body weight. */\r\n    MassUnits[MassUnits[\"Stone\"] = 7] = \"Stone\";\r\n    /** The short hundredweight (abbreviation cwt) is a unit of mass equal to 100 pounds in US and Canada. In British English, the short hundredweight is referred to as the \"cental\". */\r\n    MassUnits[MassUnits[\"ShortHundredweight\"] = 8] = \"ShortHundredweight\";\r\n    /** The long or imperial hundredweight (abbreviation cwt) is a unit of mass equal to 112 pounds in US and Canada. */\r\n    MassUnits[MassUnits[\"LongHundredweight\"] = 9] = \"LongHundredweight\";\r\n    /** A grain is a unit of measurement of mass, and in the troy weight, avoirdupois, and Apothecaries' system, equal to exactly 64.79891 milligrams. */\r\n    MassUnits[MassUnits[\"Grains\"] = 10] = \"Grains\";\r\n    /** Solar mass is a ratio unit to the mass of the solar system star, the sun. */\r\n    MassUnits[MassUnits[\"SolarMasses\"] = 11] = \"SolarMasses\";\r\n    /** Earth mass is a ratio unit to the mass of planet Earth. */\r\n    MassUnits[MassUnits[\"EarthMasses\"] = 12] = \"EarthMasses\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Nanograms\"] = 13] = \"Nanograms\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Micrograms\"] = 14] = \"Micrograms\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Milligrams\"] = 15] = \"Milligrams\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Centigrams\"] = 16] = \"Centigrams\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Decigrams\"] = 17] = \"Decigrams\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Decagrams\"] = 18] = \"Decagrams\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Hectograms\"] = 19] = \"Hectograms\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Kilograms\"] = 20] = \"Kilograms\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Kilotonnes\"] = 21] = \"Kilotonnes\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Megatonnes\"] = 22] = \"Megatonnes\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Kilopounds\"] = 23] = \"Kilopounds\";\r\n    /** */\r\n    MassUnits[MassUnits[\"Megapounds\"] = 24] = \"Megapounds\";\r\n})(MassUnits = exports.MassUnits || (exports.MassUnits = {}));\r\n/** In physics, mass (from Greek μᾶζα \"barley cake, lump [of dough]\") is a property of a physical system or body, giving rise to the phenomena of the body's resistance to being accelerated by a force and the strength of its mutual gravitational attraction with other bodies. Instruments such as mass balances or scales use those phenomena to measure mass. The SI unit of mass is the kilogram (kg). */\r\nclass Mass {\r\n    /**\r\n     * Create a new Mass.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Mass’ unit to create from.\r\n     * The default unit is Kilograms\r\n     */\r\n    constructor(value, fromUnit = MassUnits.Kilograms) {\r\n        this.gramsLazy = null;\r\n        this.tonnesLazy = null;\r\n        this.shorttonsLazy = null;\r\n        this.longtonsLazy = null;\r\n        this.poundsLazy = null;\r\n        this.ouncesLazy = null;\r\n        this.slugsLazy = null;\r\n        this.stoneLazy = null;\r\n        this.shorthundredweightLazy = null;\r\n        this.longhundredweightLazy = null;\r\n        this.grainsLazy = null;\r\n        this.solarmassesLazy = null;\r\n        this.earthmassesLazy = null;\r\n        this.nanogramsLazy = null;\r\n        this.microgramsLazy = null;\r\n        this.milligramsLazy = null;\r\n        this.centigramsLazy = null;\r\n        this.decigramsLazy = null;\r\n        this.decagramsLazy = null;\r\n        this.hectogramsLazy = null;\r\n        this.kilogramsLazy = null;\r\n        this.kilotonnesLazy = null;\r\n        this.megatonnesLazy = null;\r\n        this.kilopoundsLazy = null;\r\n        this.megapoundsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Mass is Kilograms.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Grams() {\r\n        if (this.gramsLazy !== null) {\r\n            return this.gramsLazy;\r\n        }\r\n        return this.gramsLazy = this.convertFromBase(MassUnits.Grams);\r\n    }\r\n    /** */\r\n    get Tonnes() {\r\n        if (this.tonnesLazy !== null) {\r\n            return this.tonnesLazy;\r\n        }\r\n        return this.tonnesLazy = this.convertFromBase(MassUnits.Tonnes);\r\n    }\r\n    /** The short ton is a unit of mass equal to 2,000 pounds (907.18474 kg), that is most commonly used in the United States – known there simply as the ton. */\r\n    get ShortTons() {\r\n        if (this.shorttonsLazy !== null) {\r\n            return this.shorttonsLazy;\r\n        }\r\n        return this.shorttonsLazy = this.convertFromBase(MassUnits.ShortTons);\r\n    }\r\n    /** Long ton (weight ton or Imperial ton) is a unit of mass equal to 2,240 pounds (1,016 kg) and is the name for the unit called the \"ton\" in the avoirdupois or Imperial system of measurements that was used in the United Kingdom and several other Commonwealth countries before metrication. */\r\n    get LongTons() {\r\n        if (this.longtonsLazy !== null) {\r\n            return this.longtonsLazy;\r\n        }\r\n        return this.longtonsLazy = this.convertFromBase(MassUnits.LongTons);\r\n    }\r\n    /** The pound or pound-mass (abbreviations: lb, lbm) is a unit of mass used in the imperial, United States customary and other systems of measurement. A number of different definitions have been used, the most common today being the international avoirdupois pound which is legally defined as exactly 0.45359237 kilograms, and which is divided into 16 avoirdupois ounces. */\r\n    get Pounds() {\r\n        if (this.poundsLazy !== null) {\r\n            return this.poundsLazy;\r\n        }\r\n        return this.poundsLazy = this.convertFromBase(MassUnits.Pounds);\r\n    }\r\n    /** An ounce (abbreviated oz) is usually the international avoirdupois ounce as used in the United States customary and British imperial systems, which is equal to one-sixteenth of a pound or approximately 28 grams. The abbreviation 'oz' derives from the Italian word onza (now spelled oncia). */\r\n    get Ounces() {\r\n        if (this.ouncesLazy !== null) {\r\n            return this.ouncesLazy;\r\n        }\r\n        return this.ouncesLazy = this.convertFromBase(MassUnits.Ounces);\r\n    }\r\n    /** The slug (abbreviation slug) is a unit of mass that is accelerated by 1 ft/s² when a force of one pound (lbf) is exerted on it. */\r\n    get Slugs() {\r\n        if (this.slugsLazy !== null) {\r\n            return this.slugsLazy;\r\n        }\r\n        return this.slugsLazy = this.convertFromBase(MassUnits.Slugs);\r\n    }\r\n    /** The stone (abbreviation st) is a unit of mass equal to 14 pounds avoirdupois (about 6.35 kilograms) used in Great Britain and Ireland for measuring human body weight. */\r\n    get Stone() {\r\n        if (this.stoneLazy !== null) {\r\n            return this.stoneLazy;\r\n        }\r\n        return this.stoneLazy = this.convertFromBase(MassUnits.Stone);\r\n    }\r\n    /** The short hundredweight (abbreviation cwt) is a unit of mass equal to 100 pounds in US and Canada. In British English, the short hundredweight is referred to as the \"cental\". */\r\n    get ShortHundredweight() {\r\n        if (this.shorthundredweightLazy !== null) {\r\n            return this.shorthundredweightLazy;\r\n        }\r\n        return this.shorthundredweightLazy = this.convertFromBase(MassUnits.ShortHundredweight);\r\n    }\r\n    /** The long or imperial hundredweight (abbreviation cwt) is a unit of mass equal to 112 pounds in US and Canada. */\r\n    get LongHundredweight() {\r\n        if (this.longhundredweightLazy !== null) {\r\n            return this.longhundredweightLazy;\r\n        }\r\n        return this.longhundredweightLazy = this.convertFromBase(MassUnits.LongHundredweight);\r\n    }\r\n    /** A grain is a unit of measurement of mass, and in the troy weight, avoirdupois, and Apothecaries' system, equal to exactly 64.79891 milligrams. */\r\n    get Grains() {\r\n        if (this.grainsLazy !== null) {\r\n            return this.grainsLazy;\r\n        }\r\n        return this.grainsLazy = this.convertFromBase(MassUnits.Grains);\r\n    }\r\n    /** Solar mass is a ratio unit to the mass of the solar system star, the sun. */\r\n    get SolarMasses() {\r\n        if (this.solarmassesLazy !== null) {\r\n            return this.solarmassesLazy;\r\n        }\r\n        return this.solarmassesLazy = this.convertFromBase(MassUnits.SolarMasses);\r\n    }\r\n    /** Earth mass is a ratio unit to the mass of planet Earth. */\r\n    get EarthMasses() {\r\n        if (this.earthmassesLazy !== null) {\r\n            return this.earthmassesLazy;\r\n        }\r\n        return this.earthmassesLazy = this.convertFromBase(MassUnits.EarthMasses);\r\n    }\r\n    /** */\r\n    get Nanograms() {\r\n        if (this.nanogramsLazy !== null) {\r\n            return this.nanogramsLazy;\r\n        }\r\n        return this.nanogramsLazy = this.convertFromBase(MassUnits.Nanograms);\r\n    }\r\n    /** */\r\n    get Micrograms() {\r\n        if (this.microgramsLazy !== null) {\r\n            return this.microgramsLazy;\r\n        }\r\n        return this.microgramsLazy = this.convertFromBase(MassUnits.Micrograms);\r\n    }\r\n    /** */\r\n    get Milligrams() {\r\n        if (this.milligramsLazy !== null) {\r\n            return this.milligramsLazy;\r\n        }\r\n        return this.milligramsLazy = this.convertFromBase(MassUnits.Milligrams);\r\n    }\r\n    /** */\r\n    get Centigrams() {\r\n        if (this.centigramsLazy !== null) {\r\n            return this.centigramsLazy;\r\n        }\r\n        return this.centigramsLazy = this.convertFromBase(MassUnits.Centigrams);\r\n    }\r\n    /** */\r\n    get Decigrams() {\r\n        if (this.decigramsLazy !== null) {\r\n            return this.decigramsLazy;\r\n        }\r\n        return this.decigramsLazy = this.convertFromBase(MassUnits.Decigrams);\r\n    }\r\n    /** */\r\n    get Decagrams() {\r\n        if (this.decagramsLazy !== null) {\r\n            return this.decagramsLazy;\r\n        }\r\n        return this.decagramsLazy = this.convertFromBase(MassUnits.Decagrams);\r\n    }\r\n    /** */\r\n    get Hectograms() {\r\n        if (this.hectogramsLazy !== null) {\r\n            return this.hectogramsLazy;\r\n        }\r\n        return this.hectogramsLazy = this.convertFromBase(MassUnits.Hectograms);\r\n    }\r\n    /** */\r\n    get Kilograms() {\r\n        if (this.kilogramsLazy !== null) {\r\n            return this.kilogramsLazy;\r\n        }\r\n        return this.kilogramsLazy = this.convertFromBase(MassUnits.Kilograms);\r\n    }\r\n    /** */\r\n    get Kilotonnes() {\r\n        if (this.kilotonnesLazy !== null) {\r\n            return this.kilotonnesLazy;\r\n        }\r\n        return this.kilotonnesLazy = this.convertFromBase(MassUnits.Kilotonnes);\r\n    }\r\n    /** */\r\n    get Megatonnes() {\r\n        if (this.megatonnesLazy !== null) {\r\n            return this.megatonnesLazy;\r\n        }\r\n        return this.megatonnesLazy = this.convertFromBase(MassUnits.Megatonnes);\r\n    }\r\n    /** */\r\n    get Kilopounds() {\r\n        if (this.kilopoundsLazy !== null) {\r\n            return this.kilopoundsLazy;\r\n        }\r\n        return this.kilopoundsLazy = this.convertFromBase(MassUnits.Kilopounds);\r\n    }\r\n    /** */\r\n    get Megapounds() {\r\n        if (this.megapoundsLazy !== null) {\r\n            return this.megapoundsLazy;\r\n        }\r\n        return this.megapoundsLazy = this.convertFromBase(MassUnits.Megapounds);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Grams\r\n     *\r\n     * @param value The unit as Grams to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromGrams(value) {\r\n        return new Mass(value, MassUnits.Grams);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Tonnes\r\n     *\r\n     * @param value The unit as Tonnes to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromTonnes(value) {\r\n        return new Mass(value, MassUnits.Tonnes);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a ShortTons\r\n     * The short ton is a unit of mass equal to 2,000 pounds (907.18474 kg), that is most commonly used in the United States – known there simply as the ton.\r\n     * @param value The unit as ShortTons to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromShortTons(value) {\r\n        return new Mass(value, MassUnits.ShortTons);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a LongTons\r\n     * Long ton (weight ton or Imperial ton) is a unit of mass equal to 2,240 pounds (1,016 kg) and is the name for the unit called the \"ton\" in the avoirdupois or Imperial system of measurements that was used in the United Kingdom and several other Commonwealth countries before metrication.\r\n     * @param value The unit as LongTons to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromLongTons(value) {\r\n        return new Mass(value, MassUnits.LongTons);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Pounds\r\n     * The pound or pound-mass (abbreviations: lb, lbm) is a unit of mass used in the imperial, United States customary and other systems of measurement. A number of different definitions have been used, the most common today being the international avoirdupois pound which is legally defined as exactly 0.45359237 kilograms, and which is divided into 16 avoirdupois ounces.\r\n     * @param value The unit as Pounds to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromPounds(value) {\r\n        return new Mass(value, MassUnits.Pounds);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Ounces\r\n     * An ounce (abbreviated oz) is usually the international avoirdupois ounce as used in the United States customary and British imperial systems, which is equal to one-sixteenth of a pound or approximately 28 grams. The abbreviation 'oz' derives from the Italian word onza (now spelled oncia).\r\n     * @param value The unit as Ounces to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromOunces(value) {\r\n        return new Mass(value, MassUnits.Ounces);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Slugs\r\n     * The slug (abbreviation slug) is a unit of mass that is accelerated by 1 ft/s² when a force of one pound (lbf) is exerted on it.\r\n     * @param value The unit as Slugs to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromSlugs(value) {\r\n        return new Mass(value, MassUnits.Slugs);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Stone\r\n     * The stone (abbreviation st) is a unit of mass equal to 14 pounds avoirdupois (about 6.35 kilograms) used in Great Britain and Ireland for measuring human body weight.\r\n     * @param value The unit as Stone to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromStone(value) {\r\n        return new Mass(value, MassUnits.Stone);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a ShortHundredweight\r\n     * The short hundredweight (abbreviation cwt) is a unit of mass equal to 100 pounds in US and Canada. In British English, the short hundredweight is referred to as the \"cental\".\r\n     * @param value The unit as ShortHundredweight to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromShortHundredweight(value) {\r\n        return new Mass(value, MassUnits.ShortHundredweight);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a LongHundredweight\r\n     * The long or imperial hundredweight (abbreviation cwt) is a unit of mass equal to 112 pounds in US and Canada.\r\n     * @param value The unit as LongHundredweight to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromLongHundredweight(value) {\r\n        return new Mass(value, MassUnits.LongHundredweight);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Grains\r\n     * A grain is a unit of measurement of mass, and in the troy weight, avoirdupois, and Apothecaries' system, equal to exactly 64.79891 milligrams.\r\n     * @param value The unit as Grains to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromGrains(value) {\r\n        return new Mass(value, MassUnits.Grains);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a SolarMasses\r\n     * Solar mass is a ratio unit to the mass of the solar system star, the sun.\r\n     * @param value The unit as SolarMasses to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromSolarMasses(value) {\r\n        return new Mass(value, MassUnits.SolarMasses);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a EarthMasses\r\n     * Earth mass is a ratio unit to the mass of planet Earth.\r\n     * @param value The unit as EarthMasses to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromEarthMasses(value) {\r\n        return new Mass(value, MassUnits.EarthMasses);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Nanograms\r\n     *\r\n     * @param value The unit as Nanograms to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromNanograms(value) {\r\n        return new Mass(value, MassUnits.Nanograms);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Micrograms\r\n     *\r\n     * @param value The unit as Micrograms to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromMicrograms(value) {\r\n        return new Mass(value, MassUnits.Micrograms);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Milligrams\r\n     *\r\n     * @param value The unit as Milligrams to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromMilligrams(value) {\r\n        return new Mass(value, MassUnits.Milligrams);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Centigrams\r\n     *\r\n     * @param value The unit as Centigrams to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromCentigrams(value) {\r\n        return new Mass(value, MassUnits.Centigrams);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Decigrams\r\n     *\r\n     * @param value The unit as Decigrams to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromDecigrams(value) {\r\n        return new Mass(value, MassUnits.Decigrams);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Decagrams\r\n     *\r\n     * @param value The unit as Decagrams to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromDecagrams(value) {\r\n        return new Mass(value, MassUnits.Decagrams);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Hectograms\r\n     *\r\n     * @param value The unit as Hectograms to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromHectograms(value) {\r\n        return new Mass(value, MassUnits.Hectograms);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Kilograms\r\n     *\r\n     * @param value The unit as Kilograms to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromKilograms(value) {\r\n        return new Mass(value, MassUnits.Kilograms);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Kilotonnes\r\n     *\r\n     * @param value The unit as Kilotonnes to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromKilotonnes(value) {\r\n        return new Mass(value, MassUnits.Kilotonnes);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Megatonnes\r\n     *\r\n     * @param value The unit as Megatonnes to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromMegatonnes(value) {\r\n        return new Mass(value, MassUnits.Megatonnes);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Kilopounds\r\n     *\r\n     * @param value The unit as Kilopounds to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromKilopounds(value) {\r\n        return new Mass(value, MassUnits.Kilopounds);\r\n    }\r\n    /**\r\n     * Create a new Mass instance from a Megapounds\r\n     *\r\n     * @param value The unit as Megapounds to create a new Mass from.\r\n     * @returns The new Mass instance.\r\n     */\r\n    static FromMegapounds(value) {\r\n        return new Mass(value, MassUnits.Megapounds);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MassUnits.Grams:\r\n                return this.value * 1e3;\r\n            case MassUnits.Tonnes:\r\n                return this.value / 1e3;\r\n            case MassUnits.ShortTons:\r\n                return this.value / 9.0718474e2;\r\n            case MassUnits.LongTons:\r\n                return this.value / 1.0160469088e3;\r\n            case MassUnits.Pounds:\r\n                return this.value / 0.45359237;\r\n            case MassUnits.Ounces:\r\n                return this.value * 35.2739619;\r\n            case MassUnits.Slugs:\r\n                return this.value * 6.852176556196105e-2;\r\n            case MassUnits.Stone:\r\n                return this.value * 0.1574731728702698;\r\n            case MassUnits.ShortHundredweight:\r\n                return this.value * 0.022046226218487758;\r\n            case MassUnits.LongHundredweight:\r\n                return this.value * 0.01968413055222121;\r\n            case MassUnits.Grains:\r\n                return this.value * 15432.358352941431;\r\n            case MassUnits.SolarMasses:\r\n                return this.value / 1.98947e30;\r\n            case MassUnits.EarthMasses:\r\n                return this.value / 5.9722E+24;\r\n            case MassUnits.Nanograms:\r\n                return (this.value * 1e3) / 1e-9;\r\n            case MassUnits.Micrograms:\r\n                return (this.value * 1e3) / 0.000001;\r\n            case MassUnits.Milligrams:\r\n                return (this.value * 1e3) / 0.001;\r\n            case MassUnits.Centigrams:\r\n                return (this.value * 1e3) / 0.01;\r\n            case MassUnits.Decigrams:\r\n                return (this.value * 1e3) / 0.1;\r\n            case MassUnits.Decagrams:\r\n                return (this.value * 1e3) / 10;\r\n            case MassUnits.Hectograms:\r\n                return (this.value * 1e3) / 100;\r\n            case MassUnits.Kilograms:\r\n                return (this.value * 1e3) / 1000;\r\n            case MassUnits.Kilotonnes:\r\n                return (this.value / 1e3) / 1000;\r\n            case MassUnits.Megatonnes:\r\n                return (this.value / 1e3) / 1000000;\r\n            case MassUnits.Kilopounds:\r\n                return (this.value / 0.45359237) / 1000;\r\n            case MassUnits.Megapounds:\r\n                return (this.value / 0.45359237) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MassUnits.Grams:\r\n                return value / 1e3;\r\n            case MassUnits.Tonnes:\r\n                return value * 1e3;\r\n            case MassUnits.ShortTons:\r\n                return value * 9.0718474e2;\r\n            case MassUnits.LongTons:\r\n                return value * 1.0160469088e3;\r\n            case MassUnits.Pounds:\r\n                return value * 0.45359237;\r\n            case MassUnits.Ounces:\r\n                return value / 35.2739619;\r\n            case MassUnits.Slugs:\r\n                return value / 6.852176556196105e-2;\r\n            case MassUnits.Stone:\r\n                return value / 0.1574731728702698;\r\n            case MassUnits.ShortHundredweight:\r\n                return value / 0.022046226218487758;\r\n            case MassUnits.LongHundredweight:\r\n                return value / 0.01968413055222121;\r\n            case MassUnits.Grains:\r\n                return value / 15432.358352941431;\r\n            case MassUnits.SolarMasses:\r\n                return value * 1.98947e30;\r\n            case MassUnits.EarthMasses:\r\n                return value * 5.9722E+24;\r\n            case MassUnits.Nanograms:\r\n                return (value / 1e3) * 1e-9;\r\n            case MassUnits.Micrograms:\r\n                return (value / 1e3) * 0.000001;\r\n            case MassUnits.Milligrams:\r\n                return (value / 1e3) * 0.001;\r\n            case MassUnits.Centigrams:\r\n                return (value / 1e3) * 0.01;\r\n            case MassUnits.Decigrams:\r\n                return (value / 1e3) * 0.1;\r\n            case MassUnits.Decagrams:\r\n                return (value / 1e3) * 10;\r\n            case MassUnits.Hectograms:\r\n                return (value / 1e3) * 100;\r\n            case MassUnits.Kilograms:\r\n                return (value / 1e3) * 1000;\r\n            case MassUnits.Kilotonnes:\r\n                return (value * 1e3) * 1000;\r\n            case MassUnits.Megatonnes:\r\n                return (value * 1e3) * 1000000;\r\n            case MassUnits.Kilopounds:\r\n                return (value * 0.45359237) * 1000;\r\n            case MassUnits.Megapounds:\r\n                return (value * 0.45359237) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Mass to string.\r\n     * Note! the default format for Mass is Kilograms.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Mass.\r\n     * @returns The string format of the Mass.\r\n     */\r\n    toString(toUnit = MassUnits.Kilograms) {\r\n        switch (toUnit) {\r\n            case MassUnits.Grams:\r\n                return this.Grams + ` g`;\r\n            case MassUnits.Tonnes:\r\n                return this.Tonnes + ` t`;\r\n            case MassUnits.ShortTons:\r\n                return this.ShortTons + ` t (short)`;\r\n            case MassUnits.LongTons:\r\n                return this.LongTons + ` long tn`;\r\n            case MassUnits.Pounds:\r\n                return this.Pounds + ` lb`;\r\n            case MassUnits.Ounces:\r\n                return this.Ounces + ` oz`;\r\n            case MassUnits.Slugs:\r\n                return this.Slugs + ` slug`;\r\n            case MassUnits.Stone:\r\n                return this.Stone + ` st`;\r\n            case MassUnits.ShortHundredweight:\r\n                return this.ShortHundredweight + ` cwt`;\r\n            case MassUnits.LongHundredweight:\r\n                return this.LongHundredweight + ` cwt`;\r\n            case MassUnits.Grains:\r\n                return this.Grains + ` gr`;\r\n            case MassUnits.SolarMasses:\r\n                return this.SolarMasses + ` M⊙`;\r\n            case MassUnits.EarthMasses:\r\n                return this.EarthMasses + ` em`;\r\n            case MassUnits.Nanograms:\r\n                return this.Nanograms + ` `;\r\n            case MassUnits.Micrograms:\r\n                return this.Micrograms + ` `;\r\n            case MassUnits.Milligrams:\r\n                return this.Milligrams + ` `;\r\n            case MassUnits.Centigrams:\r\n                return this.Centigrams + ` `;\r\n            case MassUnits.Decigrams:\r\n                return this.Decigrams + ` `;\r\n            case MassUnits.Decagrams:\r\n                return this.Decagrams + ` `;\r\n            case MassUnits.Hectograms:\r\n                return this.Hectograms + ` `;\r\n            case MassUnits.Kilograms:\r\n                return this.Kilograms + ` `;\r\n            case MassUnits.Kilotonnes:\r\n                return this.Kilotonnes + ` `;\r\n            case MassUnits.Megatonnes:\r\n                return this.Megatonnes + ` `;\r\n            case MassUnits.Kilopounds:\r\n                return this.Kilopounds + ` `;\r\n            case MassUnits.Megapounds:\r\n                return this.Megapounds + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Mass are equals to the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns True if the given Mass are equal to the current Mass.\r\n     */\r\n    equals(mass) {\r\n        return this.value === mass.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Mass against the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns 0 if they are equal, -1 if the current Mass is less then other, 1 if the current Mass is greater then other.\r\n     */\r\n    compareTo(mass) {\r\n        if (this.value > mass.BaseValue)\r\n            return 1;\r\n        if (this.value < mass.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Mass with the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns A new Mass instance with the results.\r\n     */\r\n    add(mass) {\r\n        return new Mass(this.value + mass.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Mass with the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns A new Mass instance with the results.\r\n     */\r\n    subtract(mass) {\r\n        return new Mass(this.value - mass.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Mass with the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns A new Mass instance with the results.\r\n     */\r\n    multiply(mass) {\r\n        return new Mass(this.value * mass.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Mass with the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns A new Mass instance with the results.\r\n     */\r\n    divide(mass) {\r\n        return new Mass(this.value / mass.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Mass with the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns A new Mass instance with the results.\r\n     */\r\n    modulo(mass) {\r\n        return new Mass(this.value % mass.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Mass with the current Mass.\r\n     * @param mass The other Mass.\r\n     * @returns A new Mass instance with the results.\r\n     */\r\n    pow(mass) {\r\n        return new Mass(this.value ** mass.BaseValue);\r\n    }\r\n}\r\nexports.Mass = Mass;\r\n//# sourceMappingURL=mass.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MassConcentration = exports.MassConcentrationUnits = void 0;\r\n/** MassConcentrationUnits enumeration */\r\nvar MassConcentrationUnits;\r\n(function (MassConcentrationUnits) {\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerCubicMillimeter\"] = 0] = \"GramsPerCubicMillimeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerCubicCentimeter\"] = 1] = \"GramsPerCubicCentimeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerCubicMeter\"] = 2] = \"GramsPerCubicMeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerMicroliter\"] = 3] = \"GramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerMilliliter\"] = 4] = \"GramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerDeciliter\"] = 5] = \"GramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"GramsPerLiter\"] = 6] = \"GramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"TonnesPerCubicMillimeter\"] = 7] = \"TonnesPerCubicMillimeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"TonnesPerCubicCentimeter\"] = 8] = \"TonnesPerCubicCentimeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"TonnesPerCubicMeter\"] = 9] = \"TonnesPerCubicMeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PoundsPerCubicInch\"] = 10] = \"PoundsPerCubicInch\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PoundsPerCubicFoot\"] = 11] = \"PoundsPerCubicFoot\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"SlugsPerCubicFoot\"] = 12] = \"SlugsPerCubicFoot\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PoundsPerUSGallon\"] = 13] = \"PoundsPerUSGallon\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PoundsPerImperialGallon\"] = 14] = \"PoundsPerImperialGallon\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"KilogramsPerCubicMillimeter\"] = 15] = \"KilogramsPerCubicMillimeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"KilogramsPerCubicCentimeter\"] = 16] = \"KilogramsPerCubicCentimeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"KilogramsPerCubicMeter\"] = 17] = \"KilogramsPerCubicMeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MilligramsPerCubicMeter\"] = 18] = \"MilligramsPerCubicMeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MicrogramsPerCubicMeter\"] = 19] = \"MicrogramsPerCubicMeter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PicogramsPerMicroliter\"] = 20] = \"PicogramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"NanogramsPerMicroliter\"] = 21] = \"NanogramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MicrogramsPerMicroliter\"] = 22] = \"MicrogramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MilligramsPerMicroliter\"] = 23] = \"MilligramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"CentigramsPerMicroliter\"] = 24] = \"CentigramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"DecigramsPerMicroliter\"] = 25] = \"DecigramsPerMicroliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PicogramsPerMilliliter\"] = 26] = \"PicogramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"NanogramsPerMilliliter\"] = 27] = \"NanogramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MicrogramsPerMilliliter\"] = 28] = \"MicrogramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MilligramsPerMilliliter\"] = 29] = \"MilligramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"CentigramsPerMilliliter\"] = 30] = \"CentigramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"DecigramsPerMilliliter\"] = 31] = \"DecigramsPerMilliliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PicogramsPerDeciliter\"] = 32] = \"PicogramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"NanogramsPerDeciliter\"] = 33] = \"NanogramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MicrogramsPerDeciliter\"] = 34] = \"MicrogramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MilligramsPerDeciliter\"] = 35] = \"MilligramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"CentigramsPerDeciliter\"] = 36] = \"CentigramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"DecigramsPerDeciliter\"] = 37] = \"DecigramsPerDeciliter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"PicogramsPerLiter\"] = 38] = \"PicogramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"NanogramsPerLiter\"] = 39] = \"NanogramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MicrogramsPerLiter\"] = 40] = \"MicrogramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"MilligramsPerLiter\"] = 41] = \"MilligramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"CentigramsPerLiter\"] = 42] = \"CentigramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"DecigramsPerLiter\"] = 43] = \"DecigramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"KilogramsPerLiter\"] = 44] = \"KilogramsPerLiter\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"KilopoundsPerCubicInch\"] = 45] = \"KilopoundsPerCubicInch\";\r\n    /** */\r\n    MassConcentrationUnits[MassConcentrationUnits[\"KilopoundsPerCubicFoot\"] = 46] = \"KilopoundsPerCubicFoot\";\r\n})(MassConcentrationUnits = exports.MassConcentrationUnits || (exports.MassConcentrationUnits = {}));\r\n/** In chemistry, the mass concentration ρi (or γi) is defined as the mass of a constituent mi divided by the volume of the mixture V */\r\nclass MassConcentration {\r\n    /**\r\n     * Create a new MassConcentration.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MassConcentration’ unit to create from.\r\n     * The default unit is KilogramsPerCubicMeter\r\n     */\r\n    constructor(value, fromUnit = MassConcentrationUnits.KilogramsPerCubicMeter) {\r\n        this.gramspercubicmillimeterLazy = null;\r\n        this.gramspercubiccentimeterLazy = null;\r\n        this.gramspercubicmeterLazy = null;\r\n        this.gramspermicroliterLazy = null;\r\n        this.gramspermilliliterLazy = null;\r\n        this.gramsperdeciliterLazy = null;\r\n        this.gramsperliterLazy = null;\r\n        this.tonnespercubicmillimeterLazy = null;\r\n        this.tonnespercubiccentimeterLazy = null;\r\n        this.tonnespercubicmeterLazy = null;\r\n        this.poundspercubicinchLazy = null;\r\n        this.poundspercubicfootLazy = null;\r\n        this.slugspercubicfootLazy = null;\r\n        this.poundsperusgallonLazy = null;\r\n        this.poundsperimperialgallonLazy = null;\r\n        this.kilogramspercubicmillimeterLazy = null;\r\n        this.kilogramspercubiccentimeterLazy = null;\r\n        this.kilogramspercubicmeterLazy = null;\r\n        this.milligramspercubicmeterLazy = null;\r\n        this.microgramspercubicmeterLazy = null;\r\n        this.picogramspermicroliterLazy = null;\r\n        this.nanogramspermicroliterLazy = null;\r\n        this.microgramspermicroliterLazy = null;\r\n        this.milligramspermicroliterLazy = null;\r\n        this.centigramspermicroliterLazy = null;\r\n        this.decigramspermicroliterLazy = null;\r\n        this.picogramspermilliliterLazy = null;\r\n        this.nanogramspermilliliterLazy = null;\r\n        this.microgramspermilliliterLazy = null;\r\n        this.milligramspermilliliterLazy = null;\r\n        this.centigramspermilliliterLazy = null;\r\n        this.decigramspermilliliterLazy = null;\r\n        this.picogramsperdeciliterLazy = null;\r\n        this.nanogramsperdeciliterLazy = null;\r\n        this.microgramsperdeciliterLazy = null;\r\n        this.milligramsperdeciliterLazy = null;\r\n        this.centigramsperdeciliterLazy = null;\r\n        this.decigramsperdeciliterLazy = null;\r\n        this.picogramsperliterLazy = null;\r\n        this.nanogramsperliterLazy = null;\r\n        this.microgramsperliterLazy = null;\r\n        this.milligramsperliterLazy = null;\r\n        this.centigramsperliterLazy = null;\r\n        this.decigramsperliterLazy = null;\r\n        this.kilogramsperliterLazy = null;\r\n        this.kilopoundspercubicinchLazy = null;\r\n        this.kilopoundspercubicfootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MassConcentration is KilogramsPerCubicMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerCubicMillimeter() {\r\n        if (this.gramspercubicmillimeterLazy !== null) {\r\n            return this.gramspercubicmillimeterLazy;\r\n        }\r\n        return this.gramspercubicmillimeterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get GramsPerCubicCentimeter() {\r\n        if (this.gramspercubiccentimeterLazy !== null) {\r\n            return this.gramspercubiccentimeterLazy;\r\n        }\r\n        return this.gramspercubiccentimeterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get GramsPerCubicMeter() {\r\n        if (this.gramspercubicmeterLazy !== null) {\r\n            return this.gramspercubicmeterLazy;\r\n        }\r\n        return this.gramspercubicmeterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get GramsPerMicroliter() {\r\n        if (this.gramspermicroliterLazy !== null) {\r\n            return this.gramspermicroliterLazy;\r\n        }\r\n        return this.gramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get GramsPerMilliliter() {\r\n        if (this.gramspermilliliterLazy !== null) {\r\n            return this.gramspermilliliterLazy;\r\n        }\r\n        return this.gramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get GramsPerDeciliter() {\r\n        if (this.gramsperdeciliterLazy !== null) {\r\n            return this.gramsperdeciliterLazy;\r\n        }\r\n        return this.gramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get GramsPerLiter() {\r\n        if (this.gramsperliterLazy !== null) {\r\n            return this.gramsperliterLazy;\r\n        }\r\n        return this.gramsperliterLazy = this.convertFromBase(MassConcentrationUnits.GramsPerLiter);\r\n    }\r\n    /** */\r\n    get TonnesPerCubicMillimeter() {\r\n        if (this.tonnespercubicmillimeterLazy !== null) {\r\n            return this.tonnespercubicmillimeterLazy;\r\n        }\r\n        return this.tonnespercubicmillimeterLazy = this.convertFromBase(MassConcentrationUnits.TonnesPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get TonnesPerCubicCentimeter() {\r\n        if (this.tonnespercubiccentimeterLazy !== null) {\r\n            return this.tonnespercubiccentimeterLazy;\r\n        }\r\n        return this.tonnespercubiccentimeterLazy = this.convertFromBase(MassConcentrationUnits.TonnesPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get TonnesPerCubicMeter() {\r\n        if (this.tonnespercubicmeterLazy !== null) {\r\n            return this.tonnespercubicmeterLazy;\r\n        }\r\n        return this.tonnespercubicmeterLazy = this.convertFromBase(MassConcentrationUnits.TonnesPerCubicMeter);\r\n    }\r\n    /** */\r\n    get PoundsPerCubicInch() {\r\n        if (this.poundspercubicinchLazy !== null) {\r\n            return this.poundspercubicinchLazy;\r\n        }\r\n        return this.poundspercubicinchLazy = this.convertFromBase(MassConcentrationUnits.PoundsPerCubicInch);\r\n    }\r\n    /** */\r\n    get PoundsPerCubicFoot() {\r\n        if (this.poundspercubicfootLazy !== null) {\r\n            return this.poundspercubicfootLazy;\r\n        }\r\n        return this.poundspercubicfootLazy = this.convertFromBase(MassConcentrationUnits.PoundsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get SlugsPerCubicFoot() {\r\n        if (this.slugspercubicfootLazy !== null) {\r\n            return this.slugspercubicfootLazy;\r\n        }\r\n        return this.slugspercubicfootLazy = this.convertFromBase(MassConcentrationUnits.SlugsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get PoundsPerUSGallon() {\r\n        if (this.poundsperusgallonLazy !== null) {\r\n            return this.poundsperusgallonLazy;\r\n        }\r\n        return this.poundsperusgallonLazy = this.convertFromBase(MassConcentrationUnits.PoundsPerUSGallon);\r\n    }\r\n    /** */\r\n    get PoundsPerImperialGallon() {\r\n        if (this.poundsperimperialgallonLazy !== null) {\r\n            return this.poundsperimperialgallonLazy;\r\n        }\r\n        return this.poundsperimperialgallonLazy = this.convertFromBase(MassConcentrationUnits.PoundsPerImperialGallon);\r\n    }\r\n    /** */\r\n    get KilogramsPerCubicMillimeter() {\r\n        if (this.kilogramspercubicmillimeterLazy !== null) {\r\n            return this.kilogramspercubicmillimeterLazy;\r\n        }\r\n        return this.kilogramspercubicmillimeterLazy = this.convertFromBase(MassConcentrationUnits.KilogramsPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerCubicCentimeter() {\r\n        if (this.kilogramspercubiccentimeterLazy !== null) {\r\n            return this.kilogramspercubiccentimeterLazy;\r\n        }\r\n        return this.kilogramspercubiccentimeterLazy = this.convertFromBase(MassConcentrationUnits.KilogramsPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerCubicMeter() {\r\n        if (this.kilogramspercubicmeterLazy !== null) {\r\n            return this.kilogramspercubicmeterLazy;\r\n        }\r\n        return this.kilogramspercubicmeterLazy = this.convertFromBase(MassConcentrationUnits.KilogramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MilligramsPerCubicMeter() {\r\n        if (this.milligramspercubicmeterLazy !== null) {\r\n            return this.milligramspercubicmeterLazy;\r\n        }\r\n        return this.milligramspercubicmeterLazy = this.convertFromBase(MassConcentrationUnits.MilligramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerCubicMeter() {\r\n        if (this.microgramspercubicmeterLazy !== null) {\r\n            return this.microgramspercubicmeterLazy;\r\n        }\r\n        return this.microgramspercubicmeterLazy = this.convertFromBase(MassConcentrationUnits.MicrogramsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get PicogramsPerMicroliter() {\r\n        if (this.picogramspermicroliterLazy !== null) {\r\n            return this.picogramspermicroliterLazy;\r\n        }\r\n        return this.picogramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.PicogramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get NanogramsPerMicroliter() {\r\n        if (this.nanogramspermicroliterLazy !== null) {\r\n            return this.nanogramspermicroliterLazy;\r\n        }\r\n        return this.nanogramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.NanogramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerMicroliter() {\r\n        if (this.microgramspermicroliterLazy !== null) {\r\n            return this.microgramspermicroliterLazy;\r\n        }\r\n        return this.microgramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.MicrogramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get MilligramsPerMicroliter() {\r\n        if (this.milligramspermicroliterLazy !== null) {\r\n            return this.milligramspermicroliterLazy;\r\n        }\r\n        return this.milligramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.MilligramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get CentigramsPerMicroliter() {\r\n        if (this.centigramspermicroliterLazy !== null) {\r\n            return this.centigramspermicroliterLazy;\r\n        }\r\n        return this.centigramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.CentigramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get DecigramsPerMicroliter() {\r\n        if (this.decigramspermicroliterLazy !== null) {\r\n            return this.decigramspermicroliterLazy;\r\n        }\r\n        return this.decigramspermicroliterLazy = this.convertFromBase(MassConcentrationUnits.DecigramsPerMicroliter);\r\n    }\r\n    /** */\r\n    get PicogramsPerMilliliter() {\r\n        if (this.picogramspermilliliterLazy !== null) {\r\n            return this.picogramspermilliliterLazy;\r\n        }\r\n        return this.picogramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.PicogramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get NanogramsPerMilliliter() {\r\n        if (this.nanogramspermilliliterLazy !== null) {\r\n            return this.nanogramspermilliliterLazy;\r\n        }\r\n        return this.nanogramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.NanogramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerMilliliter() {\r\n        if (this.microgramspermilliliterLazy !== null) {\r\n            return this.microgramspermilliliterLazy;\r\n        }\r\n        return this.microgramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.MicrogramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get MilligramsPerMilliliter() {\r\n        if (this.milligramspermilliliterLazy !== null) {\r\n            return this.milligramspermilliliterLazy;\r\n        }\r\n        return this.milligramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.MilligramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get CentigramsPerMilliliter() {\r\n        if (this.centigramspermilliliterLazy !== null) {\r\n            return this.centigramspermilliliterLazy;\r\n        }\r\n        return this.centigramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.CentigramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get DecigramsPerMilliliter() {\r\n        if (this.decigramspermilliliterLazy !== null) {\r\n            return this.decigramspermilliliterLazy;\r\n        }\r\n        return this.decigramspermilliliterLazy = this.convertFromBase(MassConcentrationUnits.DecigramsPerMilliliter);\r\n    }\r\n    /** */\r\n    get PicogramsPerDeciliter() {\r\n        if (this.picogramsperdeciliterLazy !== null) {\r\n            return this.picogramsperdeciliterLazy;\r\n        }\r\n        return this.picogramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.PicogramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get NanogramsPerDeciliter() {\r\n        if (this.nanogramsperdeciliterLazy !== null) {\r\n            return this.nanogramsperdeciliterLazy;\r\n        }\r\n        return this.nanogramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.NanogramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerDeciliter() {\r\n        if (this.microgramsperdeciliterLazy !== null) {\r\n            return this.microgramsperdeciliterLazy;\r\n        }\r\n        return this.microgramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.MicrogramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get MilligramsPerDeciliter() {\r\n        if (this.milligramsperdeciliterLazy !== null) {\r\n            return this.milligramsperdeciliterLazy;\r\n        }\r\n        return this.milligramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.MilligramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get CentigramsPerDeciliter() {\r\n        if (this.centigramsperdeciliterLazy !== null) {\r\n            return this.centigramsperdeciliterLazy;\r\n        }\r\n        return this.centigramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.CentigramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get DecigramsPerDeciliter() {\r\n        if (this.decigramsperdeciliterLazy !== null) {\r\n            return this.decigramsperdeciliterLazy;\r\n        }\r\n        return this.decigramsperdeciliterLazy = this.convertFromBase(MassConcentrationUnits.DecigramsPerDeciliter);\r\n    }\r\n    /** */\r\n    get PicogramsPerLiter() {\r\n        if (this.picogramsperliterLazy !== null) {\r\n            return this.picogramsperliterLazy;\r\n        }\r\n        return this.picogramsperliterLazy = this.convertFromBase(MassConcentrationUnits.PicogramsPerLiter);\r\n    }\r\n    /** */\r\n    get NanogramsPerLiter() {\r\n        if (this.nanogramsperliterLazy !== null) {\r\n            return this.nanogramsperliterLazy;\r\n        }\r\n        return this.nanogramsperliterLazy = this.convertFromBase(MassConcentrationUnits.NanogramsPerLiter);\r\n    }\r\n    /** */\r\n    get MicrogramsPerLiter() {\r\n        if (this.microgramsperliterLazy !== null) {\r\n            return this.microgramsperliterLazy;\r\n        }\r\n        return this.microgramsperliterLazy = this.convertFromBase(MassConcentrationUnits.MicrogramsPerLiter);\r\n    }\r\n    /** */\r\n    get MilligramsPerLiter() {\r\n        if (this.milligramsperliterLazy !== null) {\r\n            return this.milligramsperliterLazy;\r\n        }\r\n        return this.milligramsperliterLazy = this.convertFromBase(MassConcentrationUnits.MilligramsPerLiter);\r\n    }\r\n    /** */\r\n    get CentigramsPerLiter() {\r\n        if (this.centigramsperliterLazy !== null) {\r\n            return this.centigramsperliterLazy;\r\n        }\r\n        return this.centigramsperliterLazy = this.convertFromBase(MassConcentrationUnits.CentigramsPerLiter);\r\n    }\r\n    /** */\r\n    get DecigramsPerLiter() {\r\n        if (this.decigramsperliterLazy !== null) {\r\n            return this.decigramsperliterLazy;\r\n        }\r\n        return this.decigramsperliterLazy = this.convertFromBase(MassConcentrationUnits.DecigramsPerLiter);\r\n    }\r\n    /** */\r\n    get KilogramsPerLiter() {\r\n        if (this.kilogramsperliterLazy !== null) {\r\n            return this.kilogramsperliterLazy;\r\n        }\r\n        return this.kilogramsperliterLazy = this.convertFromBase(MassConcentrationUnits.KilogramsPerLiter);\r\n    }\r\n    /** */\r\n    get KilopoundsPerCubicInch() {\r\n        if (this.kilopoundspercubicinchLazy !== null) {\r\n            return this.kilopoundspercubicinchLazy;\r\n        }\r\n        return this.kilopoundspercubicinchLazy = this.convertFromBase(MassConcentrationUnits.KilopoundsPerCubicInch);\r\n    }\r\n    /** */\r\n    get KilopoundsPerCubicFoot() {\r\n        if (this.kilopoundspercubicfootLazy !== null) {\r\n            return this.kilopoundspercubicfootLazy;\r\n        }\r\n        return this.kilopoundspercubicfootLazy = this.convertFromBase(MassConcentrationUnits.KilopoundsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerCubicMillimeter\r\n     *\r\n     * @param value The unit as GramsPerCubicMillimeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerCubicMillimeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerCubicCentimeter\r\n     *\r\n     * @param value The unit as GramsPerCubicCentimeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerCubicCentimeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerCubicMeter\r\n     *\r\n     * @param value The unit as GramsPerCubicMeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerCubicMeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerMicroliter\r\n     *\r\n     * @param value The unit as GramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerMilliliter\r\n     *\r\n     * @param value The unit as GramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerDeciliter\r\n     *\r\n     * @param value The unit as GramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a GramsPerLiter\r\n     *\r\n     * @param value The unit as GramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromGramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.GramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a TonnesPerCubicMillimeter\r\n     *\r\n     * @param value The unit as TonnesPerCubicMillimeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromTonnesPerCubicMillimeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.TonnesPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a TonnesPerCubicCentimeter\r\n     *\r\n     * @param value The unit as TonnesPerCubicCentimeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromTonnesPerCubicCentimeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.TonnesPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a TonnesPerCubicMeter\r\n     *\r\n     * @param value The unit as TonnesPerCubicMeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromTonnesPerCubicMeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.TonnesPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PoundsPerCubicInch\r\n     *\r\n     * @param value The unit as PoundsPerCubicInch to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPoundsPerCubicInch(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PoundsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PoundsPerCubicFoot\r\n     *\r\n     * @param value The unit as PoundsPerCubicFoot to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPoundsPerCubicFoot(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PoundsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a SlugsPerCubicFoot\r\n     *\r\n     * @param value The unit as SlugsPerCubicFoot to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromSlugsPerCubicFoot(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.SlugsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PoundsPerUSGallon\r\n     *\r\n     * @param value The unit as PoundsPerUSGallon to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPoundsPerUSGallon(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PoundsPerUSGallon);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PoundsPerImperialGallon\r\n     *\r\n     * @param value The unit as PoundsPerImperialGallon to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPoundsPerImperialGallon(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PoundsPerImperialGallon);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a KilogramsPerCubicMillimeter\r\n     *\r\n     * @param value The unit as KilogramsPerCubicMillimeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromKilogramsPerCubicMillimeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.KilogramsPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a KilogramsPerCubicCentimeter\r\n     *\r\n     * @param value The unit as KilogramsPerCubicCentimeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromKilogramsPerCubicCentimeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.KilogramsPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a KilogramsPerCubicMeter\r\n     *\r\n     * @param value The unit as KilogramsPerCubicMeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromKilogramsPerCubicMeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.KilogramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MilligramsPerCubicMeter\r\n     *\r\n     * @param value The unit as MilligramsPerCubicMeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMilligramsPerCubicMeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MilligramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MicrogramsPerCubicMeter\r\n     *\r\n     * @param value The unit as MicrogramsPerCubicMeter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMicrogramsPerCubicMeter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MicrogramsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PicogramsPerMicroliter\r\n     *\r\n     * @param value The unit as PicogramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPicogramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PicogramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a NanogramsPerMicroliter\r\n     *\r\n     * @param value The unit as NanogramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromNanogramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.NanogramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MicrogramsPerMicroliter\r\n     *\r\n     * @param value The unit as MicrogramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMicrogramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MicrogramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MilligramsPerMicroliter\r\n     *\r\n     * @param value The unit as MilligramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMilligramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MilligramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a CentigramsPerMicroliter\r\n     *\r\n     * @param value The unit as CentigramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromCentigramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.CentigramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a DecigramsPerMicroliter\r\n     *\r\n     * @param value The unit as DecigramsPerMicroliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromDecigramsPerMicroliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.DecigramsPerMicroliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PicogramsPerMilliliter\r\n     *\r\n     * @param value The unit as PicogramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPicogramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PicogramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a NanogramsPerMilliliter\r\n     *\r\n     * @param value The unit as NanogramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromNanogramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.NanogramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MicrogramsPerMilliliter\r\n     *\r\n     * @param value The unit as MicrogramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMicrogramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MicrogramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MilligramsPerMilliliter\r\n     *\r\n     * @param value The unit as MilligramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMilligramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MilligramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a CentigramsPerMilliliter\r\n     *\r\n     * @param value The unit as CentigramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromCentigramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.CentigramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a DecigramsPerMilliliter\r\n     *\r\n     * @param value The unit as DecigramsPerMilliliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromDecigramsPerMilliliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.DecigramsPerMilliliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PicogramsPerDeciliter\r\n     *\r\n     * @param value The unit as PicogramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPicogramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PicogramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a NanogramsPerDeciliter\r\n     *\r\n     * @param value The unit as NanogramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromNanogramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.NanogramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MicrogramsPerDeciliter\r\n     *\r\n     * @param value The unit as MicrogramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMicrogramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MicrogramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MilligramsPerDeciliter\r\n     *\r\n     * @param value The unit as MilligramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMilligramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MilligramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a CentigramsPerDeciliter\r\n     *\r\n     * @param value The unit as CentigramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromCentigramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.CentigramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a DecigramsPerDeciliter\r\n     *\r\n     * @param value The unit as DecigramsPerDeciliter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromDecigramsPerDeciliter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.DecigramsPerDeciliter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a PicogramsPerLiter\r\n     *\r\n     * @param value The unit as PicogramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromPicogramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.PicogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a NanogramsPerLiter\r\n     *\r\n     * @param value The unit as NanogramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromNanogramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.NanogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MicrogramsPerLiter\r\n     *\r\n     * @param value The unit as MicrogramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMicrogramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MicrogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a MilligramsPerLiter\r\n     *\r\n     * @param value The unit as MilligramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromMilligramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.MilligramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a CentigramsPerLiter\r\n     *\r\n     * @param value The unit as CentigramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromCentigramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.CentigramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a DecigramsPerLiter\r\n     *\r\n     * @param value The unit as DecigramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromDecigramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.DecigramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a KilogramsPerLiter\r\n     *\r\n     * @param value The unit as KilogramsPerLiter to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromKilogramsPerLiter(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.KilogramsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a KilopoundsPerCubicInch\r\n     *\r\n     * @param value The unit as KilopoundsPerCubicInch to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromKilopoundsPerCubicInch(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.KilopoundsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new MassConcentration instance from a KilopoundsPerCubicFoot\r\n     *\r\n     * @param value The unit as KilopoundsPerCubicFoot to create a new MassConcentration from.\r\n     * @returns The new MassConcentration instance.\r\n     */\r\n    static FromKilopoundsPerCubicFoot(value) {\r\n        return new MassConcentration(value, MassConcentrationUnits.KilopoundsPerCubicFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MassConcentrationUnits.GramsPerCubicMillimeter:\r\n                return this.value * 1e-6;\r\n            case MassConcentrationUnits.GramsPerCubicCentimeter:\r\n                return this.value * 1e-3;\r\n            case MassConcentrationUnits.GramsPerCubicMeter:\r\n                return this.value * 1e3;\r\n            case MassConcentrationUnits.GramsPerMicroliter:\r\n                return this.value * 1e-6;\r\n            case MassConcentrationUnits.GramsPerMilliliter:\r\n                return this.value * 1e-3;\r\n            case MassConcentrationUnits.GramsPerDeciliter:\r\n                return this.value * 1e-1;\r\n            case MassConcentrationUnits.GramsPerLiter:\r\n                return this.value;\r\n            case MassConcentrationUnits.TonnesPerCubicMillimeter:\r\n                return this.value * 1e-12;\r\n            case MassConcentrationUnits.TonnesPerCubicCentimeter:\r\n                return this.value * 1e-9;\r\n            case MassConcentrationUnits.TonnesPerCubicMeter:\r\n                return this.value * 0.001;\r\n            case MassConcentrationUnits.PoundsPerCubicInch:\r\n                return this.value * 3.6127298147753e-5;\r\n            case MassConcentrationUnits.PoundsPerCubicFoot:\r\n                return this.value * 0.062427961;\r\n            case MassConcentrationUnits.SlugsPerCubicFoot:\r\n                return this.value * 0.00194032033;\r\n            case MassConcentrationUnits.PoundsPerUSGallon:\r\n                return this.value / 1.19826427e2;\r\n            case MassConcentrationUnits.PoundsPerImperialGallon:\r\n                return this.value / 9.9776398e1;\r\n            case MassConcentrationUnits.KilogramsPerCubicMillimeter:\r\n                return (this.value * 1e-6) / 1000;\r\n            case MassConcentrationUnits.KilogramsPerCubicCentimeter:\r\n                return (this.value * 1e-3) / 1000;\r\n            case MassConcentrationUnits.KilogramsPerCubicMeter:\r\n                return (this.value * 1e3) / 1000;\r\n            case MassConcentrationUnits.MilligramsPerCubicMeter:\r\n                return (this.value * 1e3) / 0.001;\r\n            case MassConcentrationUnits.MicrogramsPerCubicMeter:\r\n                return (this.value * 1e3) / 0.000001;\r\n            case MassConcentrationUnits.PicogramsPerMicroliter:\r\n                return (this.value * 1e-6) / 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerMicroliter:\r\n                return (this.value * 1e-6) / 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerMicroliter:\r\n                return (this.value * 1e-6) / 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerMicroliter:\r\n                return (this.value * 1e-6) / 0.001;\r\n            case MassConcentrationUnits.CentigramsPerMicroliter:\r\n                return (this.value * 1e-6) / 0.01;\r\n            case MassConcentrationUnits.DecigramsPerMicroliter:\r\n                return (this.value * 1e-6) / 0.1;\r\n            case MassConcentrationUnits.PicogramsPerMilliliter:\r\n                return (this.value * 1e-3) / 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerMilliliter:\r\n                return (this.value * 1e-3) / 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.001;\r\n            case MassConcentrationUnits.CentigramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.01;\r\n            case MassConcentrationUnits.DecigramsPerMilliliter:\r\n                return (this.value * 1e-3) / 0.1;\r\n            case MassConcentrationUnits.PicogramsPerDeciliter:\r\n                return (this.value * 1e-1) / 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerDeciliter:\r\n                return (this.value * 1e-1) / 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerDeciliter:\r\n                return (this.value * 1e-1) / 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerDeciliter:\r\n                return (this.value * 1e-1) / 0.001;\r\n            case MassConcentrationUnits.CentigramsPerDeciliter:\r\n                return (this.value * 1e-1) / 0.01;\r\n            case MassConcentrationUnits.DecigramsPerDeciliter:\r\n                return (this.value * 1e-1) / 0.1;\r\n            case MassConcentrationUnits.PicogramsPerLiter:\r\n                return (this.value) / 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerLiter:\r\n                return (this.value) / 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerLiter:\r\n                return (this.value) / 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerLiter:\r\n                return (this.value) / 0.001;\r\n            case MassConcentrationUnits.CentigramsPerLiter:\r\n                return (this.value) / 0.01;\r\n            case MassConcentrationUnits.DecigramsPerLiter:\r\n                return (this.value) / 0.1;\r\n            case MassConcentrationUnits.KilogramsPerLiter:\r\n                return (this.value) / 1000;\r\n            case MassConcentrationUnits.KilopoundsPerCubicInch:\r\n                return (this.value * 3.6127298147753e-5) / 1000;\r\n            case MassConcentrationUnits.KilopoundsPerCubicFoot:\r\n                return (this.value * 0.062427961) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MassConcentrationUnits.GramsPerCubicMillimeter:\r\n                return value / 1e-6;\r\n            case MassConcentrationUnits.GramsPerCubicCentimeter:\r\n                return value / 1e-3;\r\n            case MassConcentrationUnits.GramsPerCubicMeter:\r\n                return value / 1e3;\r\n            case MassConcentrationUnits.GramsPerMicroliter:\r\n                return value / 1e-6;\r\n            case MassConcentrationUnits.GramsPerMilliliter:\r\n                return value / 1e-3;\r\n            case MassConcentrationUnits.GramsPerDeciliter:\r\n                return value / 1e-1;\r\n            case MassConcentrationUnits.GramsPerLiter:\r\n                return value;\r\n            case MassConcentrationUnits.TonnesPerCubicMillimeter:\r\n                return value / 1e-12;\r\n            case MassConcentrationUnits.TonnesPerCubicCentimeter:\r\n                return value / 1e-9;\r\n            case MassConcentrationUnits.TonnesPerCubicMeter:\r\n                return value / 0.001;\r\n            case MassConcentrationUnits.PoundsPerCubicInch:\r\n                return value / 3.6127298147753e-5;\r\n            case MassConcentrationUnits.PoundsPerCubicFoot:\r\n                return value / 0.062427961;\r\n            case MassConcentrationUnits.SlugsPerCubicFoot:\r\n                return value * 515.378818;\r\n            case MassConcentrationUnits.PoundsPerUSGallon:\r\n                return value * 1.19826427e2;\r\n            case MassConcentrationUnits.PoundsPerImperialGallon:\r\n                return value * 9.9776398e1;\r\n            case MassConcentrationUnits.KilogramsPerCubicMillimeter:\r\n                return (value / 1e-6) * 1000;\r\n            case MassConcentrationUnits.KilogramsPerCubicCentimeter:\r\n                return (value / 1e-3) * 1000;\r\n            case MassConcentrationUnits.KilogramsPerCubicMeter:\r\n                return (value / 1e3) * 1000;\r\n            case MassConcentrationUnits.MilligramsPerCubicMeter:\r\n                return (value / 1e3) * 0.001;\r\n            case MassConcentrationUnits.MicrogramsPerCubicMeter:\r\n                return (value / 1e3) * 0.000001;\r\n            case MassConcentrationUnits.PicogramsPerMicroliter:\r\n                return (value / 1e-6) * 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerMicroliter:\r\n                return (value / 1e-6) * 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerMicroliter:\r\n                return (value / 1e-6) * 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerMicroliter:\r\n                return (value / 1e-6) * 0.001;\r\n            case MassConcentrationUnits.CentigramsPerMicroliter:\r\n                return (value / 1e-6) * 0.01;\r\n            case MassConcentrationUnits.DecigramsPerMicroliter:\r\n                return (value / 1e-6) * 0.1;\r\n            case MassConcentrationUnits.PicogramsPerMilliliter:\r\n                return (value / 1e-3) * 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerMilliliter:\r\n                return (value / 1e-3) * 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerMilliliter:\r\n                return (value / 1e-3) * 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerMilliliter:\r\n                return (value / 1e-3) * 0.001;\r\n            case MassConcentrationUnits.CentigramsPerMilliliter:\r\n                return (value / 1e-3) * 0.01;\r\n            case MassConcentrationUnits.DecigramsPerMilliliter:\r\n                return (value / 1e-3) * 0.1;\r\n            case MassConcentrationUnits.PicogramsPerDeciliter:\r\n                return (value / 1e-1) * 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerDeciliter:\r\n                return (value / 1e-1) * 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerDeciliter:\r\n                return (value / 1e-1) * 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerDeciliter:\r\n                return (value / 1e-1) * 0.001;\r\n            case MassConcentrationUnits.CentigramsPerDeciliter:\r\n                return (value / 1e-1) * 0.01;\r\n            case MassConcentrationUnits.DecigramsPerDeciliter:\r\n                return (value / 1e-1) * 0.1;\r\n            case MassConcentrationUnits.PicogramsPerLiter:\r\n                return (value) * 1e-12;\r\n            case MassConcentrationUnits.NanogramsPerLiter:\r\n                return (value) * 1e-9;\r\n            case MassConcentrationUnits.MicrogramsPerLiter:\r\n                return (value) * 0.000001;\r\n            case MassConcentrationUnits.MilligramsPerLiter:\r\n                return (value) * 0.001;\r\n            case MassConcentrationUnits.CentigramsPerLiter:\r\n                return (value) * 0.01;\r\n            case MassConcentrationUnits.DecigramsPerLiter:\r\n                return (value) * 0.1;\r\n            case MassConcentrationUnits.KilogramsPerLiter:\r\n                return (value) * 1000;\r\n            case MassConcentrationUnits.KilopoundsPerCubicInch:\r\n                return (value / 3.6127298147753e-5) * 1000;\r\n            case MassConcentrationUnits.KilopoundsPerCubicFoot:\r\n                return (value / 0.062427961) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MassConcentration to string.\r\n     * Note! the default format for MassConcentration is KilogramsPerCubicMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MassConcentration.\r\n     * @returns The string format of the MassConcentration.\r\n     */\r\n    toString(toUnit = MassConcentrationUnits.KilogramsPerCubicMeter) {\r\n        switch (toUnit) {\r\n            case MassConcentrationUnits.GramsPerCubicMillimeter:\r\n                return this.GramsPerCubicMillimeter + ` g/mm³`;\r\n            case MassConcentrationUnits.GramsPerCubicCentimeter:\r\n                return this.GramsPerCubicCentimeter + ` g/cm³`;\r\n            case MassConcentrationUnits.GramsPerCubicMeter:\r\n                return this.GramsPerCubicMeter + ` g/m³`;\r\n            case MassConcentrationUnits.GramsPerMicroliter:\r\n                return this.GramsPerMicroliter + ` g/μL`;\r\n            case MassConcentrationUnits.GramsPerMilliliter:\r\n                return this.GramsPerMilliliter + ` g/mL`;\r\n            case MassConcentrationUnits.GramsPerDeciliter:\r\n                return this.GramsPerDeciliter + ` g/dL`;\r\n            case MassConcentrationUnits.GramsPerLiter:\r\n                return this.GramsPerLiter + ` g/L`;\r\n            case MassConcentrationUnits.TonnesPerCubicMillimeter:\r\n                return this.TonnesPerCubicMillimeter + ` t/mm³`;\r\n            case MassConcentrationUnits.TonnesPerCubicCentimeter:\r\n                return this.TonnesPerCubicCentimeter + ` t/cm³`;\r\n            case MassConcentrationUnits.TonnesPerCubicMeter:\r\n                return this.TonnesPerCubicMeter + ` t/m³`;\r\n            case MassConcentrationUnits.PoundsPerCubicInch:\r\n                return this.PoundsPerCubicInch + ` lb/in³`;\r\n            case MassConcentrationUnits.PoundsPerCubicFoot:\r\n                return this.PoundsPerCubicFoot + ` lb/ft³`;\r\n            case MassConcentrationUnits.SlugsPerCubicFoot:\r\n                return this.SlugsPerCubicFoot + ` slug/ft³`;\r\n            case MassConcentrationUnits.PoundsPerUSGallon:\r\n                return this.PoundsPerUSGallon + ` ppg (U.S.)`;\r\n            case MassConcentrationUnits.PoundsPerImperialGallon:\r\n                return this.PoundsPerImperialGallon + ` ppg (imp.)`;\r\n            case MassConcentrationUnits.KilogramsPerCubicMillimeter:\r\n                return this.KilogramsPerCubicMillimeter + ` `;\r\n            case MassConcentrationUnits.KilogramsPerCubicCentimeter:\r\n                return this.KilogramsPerCubicCentimeter + ` `;\r\n            case MassConcentrationUnits.KilogramsPerCubicMeter:\r\n                return this.KilogramsPerCubicMeter + ` `;\r\n            case MassConcentrationUnits.MilligramsPerCubicMeter:\r\n                return this.MilligramsPerCubicMeter + ` `;\r\n            case MassConcentrationUnits.MicrogramsPerCubicMeter:\r\n                return this.MicrogramsPerCubicMeter + ` `;\r\n            case MassConcentrationUnits.PicogramsPerMicroliter:\r\n                return this.PicogramsPerMicroliter + ` `;\r\n            case MassConcentrationUnits.NanogramsPerMicroliter:\r\n                return this.NanogramsPerMicroliter + ` `;\r\n            case MassConcentrationUnits.MicrogramsPerMicroliter:\r\n                return this.MicrogramsPerMicroliter + ` `;\r\n            case MassConcentrationUnits.MilligramsPerMicroliter:\r\n                return this.MilligramsPerMicroliter + ` `;\r\n            case MassConcentrationUnits.CentigramsPerMicroliter:\r\n                return this.CentigramsPerMicroliter + ` `;\r\n            case MassConcentrationUnits.DecigramsPerMicroliter:\r\n                return this.DecigramsPerMicroliter + ` `;\r\n            case MassConcentrationUnits.PicogramsPerMilliliter:\r\n                return this.PicogramsPerMilliliter + ` `;\r\n            case MassConcentrationUnits.NanogramsPerMilliliter:\r\n                return this.NanogramsPerMilliliter + ` `;\r\n            case MassConcentrationUnits.MicrogramsPerMilliliter:\r\n                return this.MicrogramsPerMilliliter + ` `;\r\n            case MassConcentrationUnits.MilligramsPerMilliliter:\r\n                return this.MilligramsPerMilliliter + ` `;\r\n            case MassConcentrationUnits.CentigramsPerMilliliter:\r\n                return this.CentigramsPerMilliliter + ` `;\r\n            case MassConcentrationUnits.DecigramsPerMilliliter:\r\n                return this.DecigramsPerMilliliter + ` `;\r\n            case MassConcentrationUnits.PicogramsPerDeciliter:\r\n                return this.PicogramsPerDeciliter + ` `;\r\n            case MassConcentrationUnits.NanogramsPerDeciliter:\r\n                return this.NanogramsPerDeciliter + ` `;\r\n            case MassConcentrationUnits.MicrogramsPerDeciliter:\r\n                return this.MicrogramsPerDeciliter + ` `;\r\n            case MassConcentrationUnits.MilligramsPerDeciliter:\r\n                return this.MilligramsPerDeciliter + ` `;\r\n            case MassConcentrationUnits.CentigramsPerDeciliter:\r\n                return this.CentigramsPerDeciliter + ` `;\r\n            case MassConcentrationUnits.DecigramsPerDeciliter:\r\n                return this.DecigramsPerDeciliter + ` `;\r\n            case MassConcentrationUnits.PicogramsPerLiter:\r\n                return this.PicogramsPerLiter + ` `;\r\n            case MassConcentrationUnits.NanogramsPerLiter:\r\n                return this.NanogramsPerLiter + ` `;\r\n            case MassConcentrationUnits.MicrogramsPerLiter:\r\n                return this.MicrogramsPerLiter + ` `;\r\n            case MassConcentrationUnits.MilligramsPerLiter:\r\n                return this.MilligramsPerLiter + ` `;\r\n            case MassConcentrationUnits.CentigramsPerLiter:\r\n                return this.CentigramsPerLiter + ` `;\r\n            case MassConcentrationUnits.DecigramsPerLiter:\r\n                return this.DecigramsPerLiter + ` `;\r\n            case MassConcentrationUnits.KilogramsPerLiter:\r\n                return this.KilogramsPerLiter + ` `;\r\n            case MassConcentrationUnits.KilopoundsPerCubicInch:\r\n                return this.KilopoundsPerCubicInch + ` `;\r\n            case MassConcentrationUnits.KilopoundsPerCubicFoot:\r\n                return this.KilopoundsPerCubicFoot + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MassConcentration are equals to the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns True if the given MassConcentration are equal to the current MassConcentration.\r\n     */\r\n    equals(massConcentration) {\r\n        return this.value === massConcentration.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MassConcentration against the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns 0 if they are equal, -1 if the current MassConcentration is less then other, 1 if the current MassConcentration is greater then other.\r\n     */\r\n    compareTo(massConcentration) {\r\n        if (this.value > massConcentration.BaseValue)\r\n            return 1;\r\n        if (this.value < massConcentration.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MassConcentration with the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns A new MassConcentration instance with the results.\r\n     */\r\n    add(massConcentration) {\r\n        return new MassConcentration(this.value + massConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MassConcentration with the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns A new MassConcentration instance with the results.\r\n     */\r\n    subtract(massConcentration) {\r\n        return new MassConcentration(this.value - massConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MassConcentration with the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns A new MassConcentration instance with the results.\r\n     */\r\n    multiply(massConcentration) {\r\n        return new MassConcentration(this.value * massConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MassConcentration with the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns A new MassConcentration instance with the results.\r\n     */\r\n    divide(massConcentration) {\r\n        return new MassConcentration(this.value / massConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MassConcentration with the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns A new MassConcentration instance with the results.\r\n     */\r\n    modulo(massConcentration) {\r\n        return new MassConcentration(this.value % massConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MassConcentration with the current MassConcentration.\r\n     * @param massConcentration The other MassConcentration.\r\n     * @returns A new MassConcentration instance with the results.\r\n     */\r\n    pow(massConcentration) {\r\n        return new MassConcentration(this.value ** massConcentration.BaseValue);\r\n    }\r\n}\r\nexports.MassConcentration = MassConcentration;\r\n//# sourceMappingURL=massconcentration.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MassFlow = exports.MassFlowUnits = void 0;\r\n/** MassFlowUnits enumeration */\r\nvar MassFlowUnits;\r\n(function (MassFlowUnits) {\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"GramsPerSecond\"] = 0] = \"GramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"GramsPerDay\"] = 1] = \"GramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"GramsPerHour\"] = 2] = \"GramsPerHour\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"KilogramsPerHour\"] = 3] = \"KilogramsPerHour\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"KilogramsPerMinute\"] = 4] = \"KilogramsPerMinute\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"TonnesPerHour\"] = 5] = \"TonnesPerHour\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"PoundsPerDay\"] = 6] = \"PoundsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"PoundsPerHour\"] = 7] = \"PoundsPerHour\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"PoundsPerMinute\"] = 8] = \"PoundsPerMinute\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"PoundsPerSecond\"] = 9] = \"PoundsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"TonnesPerDay\"] = 10] = \"TonnesPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"ShortTonsPerHour\"] = 11] = \"ShortTonsPerHour\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"NanogramsPerSecond\"] = 12] = \"NanogramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MicrogramsPerSecond\"] = 13] = \"MicrogramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MilligramsPerSecond\"] = 14] = \"MilligramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"CentigramsPerSecond\"] = 15] = \"CentigramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"DecigramsPerSecond\"] = 16] = \"DecigramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"DecagramsPerSecond\"] = 17] = \"DecagramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"HectogramsPerSecond\"] = 18] = \"HectogramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"KilogramsPerSecond\"] = 19] = \"KilogramsPerSecond\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"NanogramsPerDay\"] = 20] = \"NanogramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MicrogramsPerDay\"] = 21] = \"MicrogramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MilligramsPerDay\"] = 22] = \"MilligramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"CentigramsPerDay\"] = 23] = \"CentigramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"DecigramsPerDay\"] = 24] = \"DecigramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"DecagramsPerDay\"] = 25] = \"DecagramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"HectogramsPerDay\"] = 26] = \"HectogramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"KilogramsPerDay\"] = 27] = \"KilogramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MegagramsPerDay\"] = 28] = \"MegagramsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MegapoundsPerDay\"] = 29] = \"MegapoundsPerDay\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MegapoundsPerHour\"] = 30] = \"MegapoundsPerHour\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MegapoundsPerMinute\"] = 31] = \"MegapoundsPerMinute\";\r\n    /** */\r\n    MassFlowUnits[MassFlowUnits[\"MegapoundsPerSecond\"] = 32] = \"MegapoundsPerSecond\";\r\n})(MassFlowUnits = exports.MassFlowUnits || (exports.MassFlowUnits = {}));\r\n/** Mass flow is the ratio of the mass change to the time during which the change occurred (value of mass changes per unit time). */\r\nclass MassFlow {\r\n    /**\r\n     * Create a new MassFlow.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MassFlow’ unit to create from.\r\n     * The default unit is GramsPerSecond\r\n     */\r\n    constructor(value, fromUnit = MassFlowUnits.GramsPerSecond) {\r\n        this.gramspersecondLazy = null;\r\n        this.gramsperdayLazy = null;\r\n        this.gramsperhourLazy = null;\r\n        this.kilogramsperhourLazy = null;\r\n        this.kilogramsperminuteLazy = null;\r\n        this.tonnesperhourLazy = null;\r\n        this.poundsperdayLazy = null;\r\n        this.poundsperhourLazy = null;\r\n        this.poundsperminuteLazy = null;\r\n        this.poundspersecondLazy = null;\r\n        this.tonnesperdayLazy = null;\r\n        this.shorttonsperhourLazy = null;\r\n        this.nanogramspersecondLazy = null;\r\n        this.microgramspersecondLazy = null;\r\n        this.milligramspersecondLazy = null;\r\n        this.centigramspersecondLazy = null;\r\n        this.decigramspersecondLazy = null;\r\n        this.decagramspersecondLazy = null;\r\n        this.hectogramspersecondLazy = null;\r\n        this.kilogramspersecondLazy = null;\r\n        this.nanogramsperdayLazy = null;\r\n        this.microgramsperdayLazy = null;\r\n        this.milligramsperdayLazy = null;\r\n        this.centigramsperdayLazy = null;\r\n        this.decigramsperdayLazy = null;\r\n        this.decagramsperdayLazy = null;\r\n        this.hectogramsperdayLazy = null;\r\n        this.kilogramsperdayLazy = null;\r\n        this.megagramsperdayLazy = null;\r\n        this.megapoundsperdayLazy = null;\r\n        this.megapoundsperhourLazy = null;\r\n        this.megapoundsperminuteLazy = null;\r\n        this.megapoundspersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MassFlow is GramsPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerSecond() {\r\n        if (this.gramspersecondLazy !== null) {\r\n            return this.gramspersecondLazy;\r\n        }\r\n        return this.gramspersecondLazy = this.convertFromBase(MassFlowUnits.GramsPerSecond);\r\n    }\r\n    /** */\r\n    get GramsPerDay() {\r\n        if (this.gramsperdayLazy !== null) {\r\n            return this.gramsperdayLazy;\r\n        }\r\n        return this.gramsperdayLazy = this.convertFromBase(MassFlowUnits.GramsPerDay);\r\n    }\r\n    /** */\r\n    get GramsPerHour() {\r\n        if (this.gramsperhourLazy !== null) {\r\n            return this.gramsperhourLazy;\r\n        }\r\n        return this.gramsperhourLazy = this.convertFromBase(MassFlowUnits.GramsPerHour);\r\n    }\r\n    /** */\r\n    get KilogramsPerHour() {\r\n        if (this.kilogramsperhourLazy !== null) {\r\n            return this.kilogramsperhourLazy;\r\n        }\r\n        return this.kilogramsperhourLazy = this.convertFromBase(MassFlowUnits.KilogramsPerHour);\r\n    }\r\n    /** */\r\n    get KilogramsPerMinute() {\r\n        if (this.kilogramsperminuteLazy !== null) {\r\n            return this.kilogramsperminuteLazy;\r\n        }\r\n        return this.kilogramsperminuteLazy = this.convertFromBase(MassFlowUnits.KilogramsPerMinute);\r\n    }\r\n    /** */\r\n    get TonnesPerHour() {\r\n        if (this.tonnesperhourLazy !== null) {\r\n            return this.tonnesperhourLazy;\r\n        }\r\n        return this.tonnesperhourLazy = this.convertFromBase(MassFlowUnits.TonnesPerHour);\r\n    }\r\n    /** */\r\n    get PoundsPerDay() {\r\n        if (this.poundsperdayLazy !== null) {\r\n            return this.poundsperdayLazy;\r\n        }\r\n        return this.poundsperdayLazy = this.convertFromBase(MassFlowUnits.PoundsPerDay);\r\n    }\r\n    /** */\r\n    get PoundsPerHour() {\r\n        if (this.poundsperhourLazy !== null) {\r\n            return this.poundsperhourLazy;\r\n        }\r\n        return this.poundsperhourLazy = this.convertFromBase(MassFlowUnits.PoundsPerHour);\r\n    }\r\n    /** */\r\n    get PoundsPerMinute() {\r\n        if (this.poundsperminuteLazy !== null) {\r\n            return this.poundsperminuteLazy;\r\n        }\r\n        return this.poundsperminuteLazy = this.convertFromBase(MassFlowUnits.PoundsPerMinute);\r\n    }\r\n    /** */\r\n    get PoundsPerSecond() {\r\n        if (this.poundspersecondLazy !== null) {\r\n            return this.poundspersecondLazy;\r\n        }\r\n        return this.poundspersecondLazy = this.convertFromBase(MassFlowUnits.PoundsPerSecond);\r\n    }\r\n    /** */\r\n    get TonnesPerDay() {\r\n        if (this.tonnesperdayLazy !== null) {\r\n            return this.tonnesperdayLazy;\r\n        }\r\n        return this.tonnesperdayLazy = this.convertFromBase(MassFlowUnits.TonnesPerDay);\r\n    }\r\n    /** */\r\n    get ShortTonsPerHour() {\r\n        if (this.shorttonsperhourLazy !== null) {\r\n            return this.shorttonsperhourLazy;\r\n        }\r\n        return this.shorttonsperhourLazy = this.convertFromBase(MassFlowUnits.ShortTonsPerHour);\r\n    }\r\n    /** */\r\n    get NanogramsPerSecond() {\r\n        if (this.nanogramspersecondLazy !== null) {\r\n            return this.nanogramspersecondLazy;\r\n        }\r\n        return this.nanogramspersecondLazy = this.convertFromBase(MassFlowUnits.NanogramsPerSecond);\r\n    }\r\n    /** */\r\n    get MicrogramsPerSecond() {\r\n        if (this.microgramspersecondLazy !== null) {\r\n            return this.microgramspersecondLazy;\r\n        }\r\n        return this.microgramspersecondLazy = this.convertFromBase(MassFlowUnits.MicrogramsPerSecond);\r\n    }\r\n    /** */\r\n    get MilligramsPerSecond() {\r\n        if (this.milligramspersecondLazy !== null) {\r\n            return this.milligramspersecondLazy;\r\n        }\r\n        return this.milligramspersecondLazy = this.convertFromBase(MassFlowUnits.MilligramsPerSecond);\r\n    }\r\n    /** */\r\n    get CentigramsPerSecond() {\r\n        if (this.centigramspersecondLazy !== null) {\r\n            return this.centigramspersecondLazy;\r\n        }\r\n        return this.centigramspersecondLazy = this.convertFromBase(MassFlowUnits.CentigramsPerSecond);\r\n    }\r\n    /** */\r\n    get DecigramsPerSecond() {\r\n        if (this.decigramspersecondLazy !== null) {\r\n            return this.decigramspersecondLazy;\r\n        }\r\n        return this.decigramspersecondLazy = this.convertFromBase(MassFlowUnits.DecigramsPerSecond);\r\n    }\r\n    /** */\r\n    get DecagramsPerSecond() {\r\n        if (this.decagramspersecondLazy !== null) {\r\n            return this.decagramspersecondLazy;\r\n        }\r\n        return this.decagramspersecondLazy = this.convertFromBase(MassFlowUnits.DecagramsPerSecond);\r\n    }\r\n    /** */\r\n    get HectogramsPerSecond() {\r\n        if (this.hectogramspersecondLazy !== null) {\r\n            return this.hectogramspersecondLazy;\r\n        }\r\n        return this.hectogramspersecondLazy = this.convertFromBase(MassFlowUnits.HectogramsPerSecond);\r\n    }\r\n    /** */\r\n    get KilogramsPerSecond() {\r\n        if (this.kilogramspersecondLazy !== null) {\r\n            return this.kilogramspersecondLazy;\r\n        }\r\n        return this.kilogramspersecondLazy = this.convertFromBase(MassFlowUnits.KilogramsPerSecond);\r\n    }\r\n    /** */\r\n    get NanogramsPerDay() {\r\n        if (this.nanogramsperdayLazy !== null) {\r\n            return this.nanogramsperdayLazy;\r\n        }\r\n        return this.nanogramsperdayLazy = this.convertFromBase(MassFlowUnits.NanogramsPerDay);\r\n    }\r\n    /** */\r\n    get MicrogramsPerDay() {\r\n        if (this.microgramsperdayLazy !== null) {\r\n            return this.microgramsperdayLazy;\r\n        }\r\n        return this.microgramsperdayLazy = this.convertFromBase(MassFlowUnits.MicrogramsPerDay);\r\n    }\r\n    /** */\r\n    get MilligramsPerDay() {\r\n        if (this.milligramsperdayLazy !== null) {\r\n            return this.milligramsperdayLazy;\r\n        }\r\n        return this.milligramsperdayLazy = this.convertFromBase(MassFlowUnits.MilligramsPerDay);\r\n    }\r\n    /** */\r\n    get CentigramsPerDay() {\r\n        if (this.centigramsperdayLazy !== null) {\r\n            return this.centigramsperdayLazy;\r\n        }\r\n        return this.centigramsperdayLazy = this.convertFromBase(MassFlowUnits.CentigramsPerDay);\r\n    }\r\n    /** */\r\n    get DecigramsPerDay() {\r\n        if (this.decigramsperdayLazy !== null) {\r\n            return this.decigramsperdayLazy;\r\n        }\r\n        return this.decigramsperdayLazy = this.convertFromBase(MassFlowUnits.DecigramsPerDay);\r\n    }\r\n    /** */\r\n    get DecagramsPerDay() {\r\n        if (this.decagramsperdayLazy !== null) {\r\n            return this.decagramsperdayLazy;\r\n        }\r\n        return this.decagramsperdayLazy = this.convertFromBase(MassFlowUnits.DecagramsPerDay);\r\n    }\r\n    /** */\r\n    get HectogramsPerDay() {\r\n        if (this.hectogramsperdayLazy !== null) {\r\n            return this.hectogramsperdayLazy;\r\n        }\r\n        return this.hectogramsperdayLazy = this.convertFromBase(MassFlowUnits.HectogramsPerDay);\r\n    }\r\n    /** */\r\n    get KilogramsPerDay() {\r\n        if (this.kilogramsperdayLazy !== null) {\r\n            return this.kilogramsperdayLazy;\r\n        }\r\n        return this.kilogramsperdayLazy = this.convertFromBase(MassFlowUnits.KilogramsPerDay);\r\n    }\r\n    /** */\r\n    get MegagramsPerDay() {\r\n        if (this.megagramsperdayLazy !== null) {\r\n            return this.megagramsperdayLazy;\r\n        }\r\n        return this.megagramsperdayLazy = this.convertFromBase(MassFlowUnits.MegagramsPerDay);\r\n    }\r\n    /** */\r\n    get MegapoundsPerDay() {\r\n        if (this.megapoundsperdayLazy !== null) {\r\n            return this.megapoundsperdayLazy;\r\n        }\r\n        return this.megapoundsperdayLazy = this.convertFromBase(MassFlowUnits.MegapoundsPerDay);\r\n    }\r\n    /** */\r\n    get MegapoundsPerHour() {\r\n        if (this.megapoundsperhourLazy !== null) {\r\n            return this.megapoundsperhourLazy;\r\n        }\r\n        return this.megapoundsperhourLazy = this.convertFromBase(MassFlowUnits.MegapoundsPerHour);\r\n    }\r\n    /** */\r\n    get MegapoundsPerMinute() {\r\n        if (this.megapoundsperminuteLazy !== null) {\r\n            return this.megapoundsperminuteLazy;\r\n        }\r\n        return this.megapoundsperminuteLazy = this.convertFromBase(MassFlowUnits.MegapoundsPerMinute);\r\n    }\r\n    /** */\r\n    get MegapoundsPerSecond() {\r\n        if (this.megapoundspersecondLazy !== null) {\r\n            return this.megapoundspersecondLazy;\r\n        }\r\n        return this.megapoundspersecondLazy = this.convertFromBase(MassFlowUnits.MegapoundsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a GramsPerSecond\r\n     *\r\n     * @param value The unit as GramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromGramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.GramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a GramsPerDay\r\n     *\r\n     * @param value The unit as GramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromGramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.GramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a GramsPerHour\r\n     *\r\n     * @param value The unit as GramsPerHour to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromGramsPerHour(value) {\r\n        return new MassFlow(value, MassFlowUnits.GramsPerHour);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a KilogramsPerHour\r\n     *\r\n     * @param value The unit as KilogramsPerHour to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromKilogramsPerHour(value) {\r\n        return new MassFlow(value, MassFlowUnits.KilogramsPerHour);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a KilogramsPerMinute\r\n     *\r\n     * @param value The unit as KilogramsPerMinute to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromKilogramsPerMinute(value) {\r\n        return new MassFlow(value, MassFlowUnits.KilogramsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a TonnesPerHour\r\n     *\r\n     * @param value The unit as TonnesPerHour to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromTonnesPerHour(value) {\r\n        return new MassFlow(value, MassFlowUnits.TonnesPerHour);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a PoundsPerDay\r\n     *\r\n     * @param value The unit as PoundsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromPoundsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.PoundsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a PoundsPerHour\r\n     *\r\n     * @param value The unit as PoundsPerHour to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromPoundsPerHour(value) {\r\n        return new MassFlow(value, MassFlowUnits.PoundsPerHour);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a PoundsPerMinute\r\n     *\r\n     * @param value The unit as PoundsPerMinute to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromPoundsPerMinute(value) {\r\n        return new MassFlow(value, MassFlowUnits.PoundsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a PoundsPerSecond\r\n     *\r\n     * @param value The unit as PoundsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromPoundsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.PoundsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a TonnesPerDay\r\n     *\r\n     * @param value The unit as TonnesPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromTonnesPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.TonnesPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a ShortTonsPerHour\r\n     *\r\n     * @param value The unit as ShortTonsPerHour to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromShortTonsPerHour(value) {\r\n        return new MassFlow(value, MassFlowUnits.ShortTonsPerHour);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a NanogramsPerSecond\r\n     *\r\n     * @param value The unit as NanogramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromNanogramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.NanogramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MicrogramsPerSecond\r\n     *\r\n     * @param value The unit as MicrogramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMicrogramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.MicrogramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MilligramsPerSecond\r\n     *\r\n     * @param value The unit as MilligramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMilligramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.MilligramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a CentigramsPerSecond\r\n     *\r\n     * @param value The unit as CentigramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromCentigramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.CentigramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a DecigramsPerSecond\r\n     *\r\n     * @param value The unit as DecigramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromDecigramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.DecigramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a DecagramsPerSecond\r\n     *\r\n     * @param value The unit as DecagramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromDecagramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.DecagramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a HectogramsPerSecond\r\n     *\r\n     * @param value The unit as HectogramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromHectogramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.HectogramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a KilogramsPerSecond\r\n     *\r\n     * @param value The unit as KilogramsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromKilogramsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.KilogramsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a NanogramsPerDay\r\n     *\r\n     * @param value The unit as NanogramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromNanogramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.NanogramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MicrogramsPerDay\r\n     *\r\n     * @param value The unit as MicrogramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMicrogramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.MicrogramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MilligramsPerDay\r\n     *\r\n     * @param value The unit as MilligramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMilligramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.MilligramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a CentigramsPerDay\r\n     *\r\n     * @param value The unit as CentigramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromCentigramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.CentigramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a DecigramsPerDay\r\n     *\r\n     * @param value The unit as DecigramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromDecigramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.DecigramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a DecagramsPerDay\r\n     *\r\n     * @param value The unit as DecagramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromDecagramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.DecagramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a HectogramsPerDay\r\n     *\r\n     * @param value The unit as HectogramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromHectogramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.HectogramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a KilogramsPerDay\r\n     *\r\n     * @param value The unit as KilogramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromKilogramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.KilogramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MegagramsPerDay\r\n     *\r\n     * @param value The unit as MegagramsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMegagramsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.MegagramsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MegapoundsPerDay\r\n     *\r\n     * @param value The unit as MegapoundsPerDay to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMegapoundsPerDay(value) {\r\n        return new MassFlow(value, MassFlowUnits.MegapoundsPerDay);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MegapoundsPerHour\r\n     *\r\n     * @param value The unit as MegapoundsPerHour to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMegapoundsPerHour(value) {\r\n        return new MassFlow(value, MassFlowUnits.MegapoundsPerHour);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MegapoundsPerMinute\r\n     *\r\n     * @param value The unit as MegapoundsPerMinute to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMegapoundsPerMinute(value) {\r\n        return new MassFlow(value, MassFlowUnits.MegapoundsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new MassFlow instance from a MegapoundsPerSecond\r\n     *\r\n     * @param value The unit as MegapoundsPerSecond to create a new MassFlow from.\r\n     * @returns The new MassFlow instance.\r\n     */\r\n    static FromMegapoundsPerSecond(value) {\r\n        return new MassFlow(value, MassFlowUnits.MegapoundsPerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MassFlowUnits.GramsPerSecond:\r\n                return this.value;\r\n            case MassFlowUnits.GramsPerDay:\r\n                return this.value * 86400;\r\n            case MassFlowUnits.GramsPerHour:\r\n                return this.value * 3600;\r\n            case MassFlowUnits.KilogramsPerHour:\r\n                return this.value * 3.6;\r\n            case MassFlowUnits.KilogramsPerMinute:\r\n                return this.value * 0.06;\r\n            case MassFlowUnits.TonnesPerHour:\r\n                return this.value * 3.6 / 1000;\r\n            case MassFlowUnits.PoundsPerDay:\r\n                return this.value * 190.47936;\r\n            case MassFlowUnits.PoundsPerHour:\r\n                return this.value * 7.93664;\r\n            case MassFlowUnits.PoundsPerMinute:\r\n                return this.value * 0.132277;\r\n            case MassFlowUnits.PoundsPerSecond:\r\n                return this.value / 453.59237;\r\n            case MassFlowUnits.TonnesPerDay:\r\n                return this.value * 0.0864000;\r\n            case MassFlowUnits.ShortTonsPerHour:\r\n                return this.value / 251.9957611;\r\n            case MassFlowUnits.NanogramsPerSecond:\r\n                return (this.value) / 1e-9;\r\n            case MassFlowUnits.MicrogramsPerSecond:\r\n                return (this.value) / 0.000001;\r\n            case MassFlowUnits.MilligramsPerSecond:\r\n                return (this.value) / 0.001;\r\n            case MassFlowUnits.CentigramsPerSecond:\r\n                return (this.value) / 0.01;\r\n            case MassFlowUnits.DecigramsPerSecond:\r\n                return (this.value) / 0.1;\r\n            case MassFlowUnits.DecagramsPerSecond:\r\n                return (this.value) / 10;\r\n            case MassFlowUnits.HectogramsPerSecond:\r\n                return (this.value) / 100;\r\n            case MassFlowUnits.KilogramsPerSecond:\r\n                return (this.value) / 1000;\r\n            case MassFlowUnits.NanogramsPerDay:\r\n                return (this.value * 86400) / 1e-9;\r\n            case MassFlowUnits.MicrogramsPerDay:\r\n                return (this.value * 86400) / 0.000001;\r\n            case MassFlowUnits.MilligramsPerDay:\r\n                return (this.value * 86400) / 0.001;\r\n            case MassFlowUnits.CentigramsPerDay:\r\n                return (this.value * 86400) / 0.01;\r\n            case MassFlowUnits.DecigramsPerDay:\r\n                return (this.value * 86400) / 0.1;\r\n            case MassFlowUnits.DecagramsPerDay:\r\n                return (this.value * 86400) / 10;\r\n            case MassFlowUnits.HectogramsPerDay:\r\n                return (this.value * 86400) / 100;\r\n            case MassFlowUnits.KilogramsPerDay:\r\n                return (this.value * 86400) / 1000;\r\n            case MassFlowUnits.MegagramsPerDay:\r\n                return (this.value * 86400) / 1000000;\r\n            case MassFlowUnits.MegapoundsPerDay:\r\n                return (this.value * 190.47936) / 1000000;\r\n            case MassFlowUnits.MegapoundsPerHour:\r\n                return (this.value * 7.93664) / 1000000;\r\n            case MassFlowUnits.MegapoundsPerMinute:\r\n                return (this.value * 0.132277) / 1000000;\r\n            case MassFlowUnits.MegapoundsPerSecond:\r\n                return (this.value / 453.59237) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MassFlowUnits.GramsPerSecond:\r\n                return value;\r\n            case MassFlowUnits.GramsPerDay:\r\n                return value / 86400;\r\n            case MassFlowUnits.GramsPerHour:\r\n                return value / 3600;\r\n            case MassFlowUnits.KilogramsPerHour:\r\n                return value / 3.6;\r\n            case MassFlowUnits.KilogramsPerMinute:\r\n                return value / 0.06;\r\n            case MassFlowUnits.TonnesPerHour:\r\n                return 1000 * value / 3.6;\r\n            case MassFlowUnits.PoundsPerDay:\r\n                return value / 190.47936;\r\n            case MassFlowUnits.PoundsPerHour:\r\n                return value / 7.93664;\r\n            case MassFlowUnits.PoundsPerMinute:\r\n                return value / 0.132277;\r\n            case MassFlowUnits.PoundsPerSecond:\r\n                return value * 453.59237;\r\n            case MassFlowUnits.TonnesPerDay:\r\n                return value / 0.0864000;\r\n            case MassFlowUnits.ShortTonsPerHour:\r\n                return value * 251.9957611;\r\n            case MassFlowUnits.NanogramsPerSecond:\r\n                return (value) * 1e-9;\r\n            case MassFlowUnits.MicrogramsPerSecond:\r\n                return (value) * 0.000001;\r\n            case MassFlowUnits.MilligramsPerSecond:\r\n                return (value) * 0.001;\r\n            case MassFlowUnits.CentigramsPerSecond:\r\n                return (value) * 0.01;\r\n            case MassFlowUnits.DecigramsPerSecond:\r\n                return (value) * 0.1;\r\n            case MassFlowUnits.DecagramsPerSecond:\r\n                return (value) * 10;\r\n            case MassFlowUnits.HectogramsPerSecond:\r\n                return (value) * 100;\r\n            case MassFlowUnits.KilogramsPerSecond:\r\n                return (value) * 1000;\r\n            case MassFlowUnits.NanogramsPerDay:\r\n                return (value / 86400) * 1e-9;\r\n            case MassFlowUnits.MicrogramsPerDay:\r\n                return (value / 86400) * 0.000001;\r\n            case MassFlowUnits.MilligramsPerDay:\r\n                return (value / 86400) * 0.001;\r\n            case MassFlowUnits.CentigramsPerDay:\r\n                return (value / 86400) * 0.01;\r\n            case MassFlowUnits.DecigramsPerDay:\r\n                return (value / 86400) * 0.1;\r\n            case MassFlowUnits.DecagramsPerDay:\r\n                return (value / 86400) * 10;\r\n            case MassFlowUnits.HectogramsPerDay:\r\n                return (value / 86400) * 100;\r\n            case MassFlowUnits.KilogramsPerDay:\r\n                return (value / 86400) * 1000;\r\n            case MassFlowUnits.MegagramsPerDay:\r\n                return (value / 86400) * 1000000;\r\n            case MassFlowUnits.MegapoundsPerDay:\r\n                return (value / 190.47936) * 1000000;\r\n            case MassFlowUnits.MegapoundsPerHour:\r\n                return (value / 7.93664) * 1000000;\r\n            case MassFlowUnits.MegapoundsPerMinute:\r\n                return (value / 0.132277) * 1000000;\r\n            case MassFlowUnits.MegapoundsPerSecond:\r\n                return (value * 453.59237) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MassFlow to string.\r\n     * Note! the default format for MassFlow is GramsPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MassFlow.\r\n     * @returns The string format of the MassFlow.\r\n     */\r\n    toString(toUnit = MassFlowUnits.GramsPerSecond) {\r\n        switch (toUnit) {\r\n            case MassFlowUnits.GramsPerSecond:\r\n                return this.GramsPerSecond + ` g/s`;\r\n            case MassFlowUnits.GramsPerDay:\r\n                return this.GramsPerDay + ` g/d`;\r\n            case MassFlowUnits.GramsPerHour:\r\n                return this.GramsPerHour + ` g/h`;\r\n            case MassFlowUnits.KilogramsPerHour:\r\n                return this.KilogramsPerHour + ` kg/h`;\r\n            case MassFlowUnits.KilogramsPerMinute:\r\n                return this.KilogramsPerMinute + ` kg/min`;\r\n            case MassFlowUnits.TonnesPerHour:\r\n                return this.TonnesPerHour + ` t/h`;\r\n            case MassFlowUnits.PoundsPerDay:\r\n                return this.PoundsPerDay + ` lb/d`;\r\n            case MassFlowUnits.PoundsPerHour:\r\n                return this.PoundsPerHour + ` lb/h`;\r\n            case MassFlowUnits.PoundsPerMinute:\r\n                return this.PoundsPerMinute + ` lb/min`;\r\n            case MassFlowUnits.PoundsPerSecond:\r\n                return this.PoundsPerSecond + ` lb/s`;\r\n            case MassFlowUnits.TonnesPerDay:\r\n                return this.TonnesPerDay + ` t/d`;\r\n            case MassFlowUnits.ShortTonsPerHour:\r\n                return this.ShortTonsPerHour + ` short tn/h`;\r\n            case MassFlowUnits.NanogramsPerSecond:\r\n                return this.NanogramsPerSecond + ` `;\r\n            case MassFlowUnits.MicrogramsPerSecond:\r\n                return this.MicrogramsPerSecond + ` `;\r\n            case MassFlowUnits.MilligramsPerSecond:\r\n                return this.MilligramsPerSecond + ` `;\r\n            case MassFlowUnits.CentigramsPerSecond:\r\n                return this.CentigramsPerSecond + ` `;\r\n            case MassFlowUnits.DecigramsPerSecond:\r\n                return this.DecigramsPerSecond + ` `;\r\n            case MassFlowUnits.DecagramsPerSecond:\r\n                return this.DecagramsPerSecond + ` `;\r\n            case MassFlowUnits.HectogramsPerSecond:\r\n                return this.HectogramsPerSecond + ` `;\r\n            case MassFlowUnits.KilogramsPerSecond:\r\n                return this.KilogramsPerSecond + ` `;\r\n            case MassFlowUnits.NanogramsPerDay:\r\n                return this.NanogramsPerDay + ` `;\r\n            case MassFlowUnits.MicrogramsPerDay:\r\n                return this.MicrogramsPerDay + ` `;\r\n            case MassFlowUnits.MilligramsPerDay:\r\n                return this.MilligramsPerDay + ` `;\r\n            case MassFlowUnits.CentigramsPerDay:\r\n                return this.CentigramsPerDay + ` `;\r\n            case MassFlowUnits.DecigramsPerDay:\r\n                return this.DecigramsPerDay + ` `;\r\n            case MassFlowUnits.DecagramsPerDay:\r\n                return this.DecagramsPerDay + ` `;\r\n            case MassFlowUnits.HectogramsPerDay:\r\n                return this.HectogramsPerDay + ` `;\r\n            case MassFlowUnits.KilogramsPerDay:\r\n                return this.KilogramsPerDay + ` `;\r\n            case MassFlowUnits.MegagramsPerDay:\r\n                return this.MegagramsPerDay + ` `;\r\n            case MassFlowUnits.MegapoundsPerDay:\r\n                return this.MegapoundsPerDay + ` `;\r\n            case MassFlowUnits.MegapoundsPerHour:\r\n                return this.MegapoundsPerHour + ` `;\r\n            case MassFlowUnits.MegapoundsPerMinute:\r\n                return this.MegapoundsPerMinute + ` `;\r\n            case MassFlowUnits.MegapoundsPerSecond:\r\n                return this.MegapoundsPerSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MassFlow are equals to the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns True if the given MassFlow are equal to the current MassFlow.\r\n     */\r\n    equals(massFlow) {\r\n        return this.value === massFlow.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MassFlow against the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns 0 if they are equal, -1 if the current MassFlow is less then other, 1 if the current MassFlow is greater then other.\r\n     */\r\n    compareTo(massFlow) {\r\n        if (this.value > massFlow.BaseValue)\r\n            return 1;\r\n        if (this.value < massFlow.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MassFlow with the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns A new MassFlow instance with the results.\r\n     */\r\n    add(massFlow) {\r\n        return new MassFlow(this.value + massFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MassFlow with the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns A new MassFlow instance with the results.\r\n     */\r\n    subtract(massFlow) {\r\n        return new MassFlow(this.value - massFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MassFlow with the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns A new MassFlow instance with the results.\r\n     */\r\n    multiply(massFlow) {\r\n        return new MassFlow(this.value * massFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MassFlow with the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns A new MassFlow instance with the results.\r\n     */\r\n    divide(massFlow) {\r\n        return new MassFlow(this.value / massFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MassFlow with the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns A new MassFlow instance with the results.\r\n     */\r\n    modulo(massFlow) {\r\n        return new MassFlow(this.value % massFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MassFlow with the current MassFlow.\r\n     * @param massFlow The other MassFlow.\r\n     * @returns A new MassFlow instance with the results.\r\n     */\r\n    pow(massFlow) {\r\n        return new MassFlow(this.value ** massFlow.BaseValue);\r\n    }\r\n}\r\nexports.MassFlow = MassFlow;\r\n//# sourceMappingURL=massflow.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MassFlux = exports.MassFluxUnits = void 0;\r\n/** MassFluxUnits enumeration */\r\nvar MassFluxUnits;\r\n(function (MassFluxUnits) {\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"GramsPerSecondPerSquareMeter\"] = 0] = \"GramsPerSecondPerSquareMeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"GramsPerSecondPerSquareCentimeter\"] = 1] = \"GramsPerSecondPerSquareCentimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"GramsPerSecondPerSquareMillimeter\"] = 2] = \"GramsPerSecondPerSquareMillimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"GramsPerHourPerSquareMeter\"] = 3] = \"GramsPerHourPerSquareMeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"GramsPerHourPerSquareCentimeter\"] = 4] = \"GramsPerHourPerSquareCentimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"GramsPerHourPerSquareMillimeter\"] = 5] = \"GramsPerHourPerSquareMillimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"KilogramsPerSecondPerSquareMeter\"] = 6] = \"KilogramsPerSecondPerSquareMeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"KilogramsPerSecondPerSquareCentimeter\"] = 7] = \"KilogramsPerSecondPerSquareCentimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"KilogramsPerSecondPerSquareMillimeter\"] = 8] = \"KilogramsPerSecondPerSquareMillimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"KilogramsPerHourPerSquareMeter\"] = 9] = \"KilogramsPerHourPerSquareMeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"KilogramsPerHourPerSquareCentimeter\"] = 10] = \"KilogramsPerHourPerSquareCentimeter\";\r\n    /** */\r\n    MassFluxUnits[MassFluxUnits[\"KilogramsPerHourPerSquareMillimeter\"] = 11] = \"KilogramsPerHourPerSquareMillimeter\";\r\n})(MassFluxUnits = exports.MassFluxUnits || (exports.MassFluxUnits = {}));\r\n/** Mass flux is the mass flow rate per unit area. */\r\nclass MassFlux {\r\n    /**\r\n     * Create a new MassFlux.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MassFlux’ unit to create from.\r\n     * The default unit is KilogramsPerSecondPerSquareMeter\r\n     */\r\n    constructor(value, fromUnit = MassFluxUnits.KilogramsPerSecondPerSquareMeter) {\r\n        this.gramspersecondpersquaremeterLazy = null;\r\n        this.gramspersecondpersquarecentimeterLazy = null;\r\n        this.gramspersecondpersquaremillimeterLazy = null;\r\n        this.gramsperhourpersquaremeterLazy = null;\r\n        this.gramsperhourpersquarecentimeterLazy = null;\r\n        this.gramsperhourpersquaremillimeterLazy = null;\r\n        this.kilogramspersecondpersquaremeterLazy = null;\r\n        this.kilogramspersecondpersquarecentimeterLazy = null;\r\n        this.kilogramspersecondpersquaremillimeterLazy = null;\r\n        this.kilogramsperhourpersquaremeterLazy = null;\r\n        this.kilogramsperhourpersquarecentimeterLazy = null;\r\n        this.kilogramsperhourpersquaremillimeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MassFlux is KilogramsPerSecondPerSquareMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerSecondPerSquareMeter() {\r\n        if (this.gramspersecondpersquaremeterLazy !== null) {\r\n            return this.gramspersecondpersquaremeterLazy;\r\n        }\r\n        return this.gramspersecondpersquaremeterLazy = this.convertFromBase(MassFluxUnits.GramsPerSecondPerSquareMeter);\r\n    }\r\n    /** */\r\n    get GramsPerSecondPerSquareCentimeter() {\r\n        if (this.gramspersecondpersquarecentimeterLazy !== null) {\r\n            return this.gramspersecondpersquarecentimeterLazy;\r\n        }\r\n        return this.gramspersecondpersquarecentimeterLazy = this.convertFromBase(MassFluxUnits.GramsPerSecondPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get GramsPerSecondPerSquareMillimeter() {\r\n        if (this.gramspersecondpersquaremillimeterLazy !== null) {\r\n            return this.gramspersecondpersquaremillimeterLazy;\r\n        }\r\n        return this.gramspersecondpersquaremillimeterLazy = this.convertFromBase(MassFluxUnits.GramsPerSecondPerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get GramsPerHourPerSquareMeter() {\r\n        if (this.gramsperhourpersquaremeterLazy !== null) {\r\n            return this.gramsperhourpersquaremeterLazy;\r\n        }\r\n        return this.gramsperhourpersquaremeterLazy = this.convertFromBase(MassFluxUnits.GramsPerHourPerSquareMeter);\r\n    }\r\n    /** */\r\n    get GramsPerHourPerSquareCentimeter() {\r\n        if (this.gramsperhourpersquarecentimeterLazy !== null) {\r\n            return this.gramsperhourpersquarecentimeterLazy;\r\n        }\r\n        return this.gramsperhourpersquarecentimeterLazy = this.convertFromBase(MassFluxUnits.GramsPerHourPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get GramsPerHourPerSquareMillimeter() {\r\n        if (this.gramsperhourpersquaremillimeterLazy !== null) {\r\n            return this.gramsperhourpersquaremillimeterLazy;\r\n        }\r\n        return this.gramsperhourpersquaremillimeterLazy = this.convertFromBase(MassFluxUnits.GramsPerHourPerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerSecondPerSquareMeter() {\r\n        if (this.kilogramspersecondpersquaremeterLazy !== null) {\r\n            return this.kilogramspersecondpersquaremeterLazy;\r\n        }\r\n        return this.kilogramspersecondpersquaremeterLazy = this.convertFromBase(MassFluxUnits.KilogramsPerSecondPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerSecondPerSquareCentimeter() {\r\n        if (this.kilogramspersecondpersquarecentimeterLazy !== null) {\r\n            return this.kilogramspersecondpersquarecentimeterLazy;\r\n        }\r\n        return this.kilogramspersecondpersquarecentimeterLazy = this.convertFromBase(MassFluxUnits.KilogramsPerSecondPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerSecondPerSquareMillimeter() {\r\n        if (this.kilogramspersecondpersquaremillimeterLazy !== null) {\r\n            return this.kilogramspersecondpersquaremillimeterLazy;\r\n        }\r\n        return this.kilogramspersecondpersquaremillimeterLazy = this.convertFromBase(MassFluxUnits.KilogramsPerSecondPerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerHourPerSquareMeter() {\r\n        if (this.kilogramsperhourpersquaremeterLazy !== null) {\r\n            return this.kilogramsperhourpersquaremeterLazy;\r\n        }\r\n        return this.kilogramsperhourpersquaremeterLazy = this.convertFromBase(MassFluxUnits.KilogramsPerHourPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerHourPerSquareCentimeter() {\r\n        if (this.kilogramsperhourpersquarecentimeterLazy !== null) {\r\n            return this.kilogramsperhourpersquarecentimeterLazy;\r\n        }\r\n        return this.kilogramsperhourpersquarecentimeterLazy = this.convertFromBase(MassFluxUnits.KilogramsPerHourPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsPerHourPerSquareMillimeter() {\r\n        if (this.kilogramsperhourpersquaremillimeterLazy !== null) {\r\n            return this.kilogramsperhourpersquaremillimeterLazy;\r\n        }\r\n        return this.kilogramsperhourpersquaremillimeterLazy = this.convertFromBase(MassFluxUnits.KilogramsPerHourPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a GramsPerSecondPerSquareMeter\r\n     *\r\n     * @param value The unit as GramsPerSecondPerSquareMeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromGramsPerSecondPerSquareMeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.GramsPerSecondPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a GramsPerSecondPerSquareCentimeter\r\n     *\r\n     * @param value The unit as GramsPerSecondPerSquareCentimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromGramsPerSecondPerSquareCentimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.GramsPerSecondPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a GramsPerSecondPerSquareMillimeter\r\n     *\r\n     * @param value The unit as GramsPerSecondPerSquareMillimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromGramsPerSecondPerSquareMillimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.GramsPerSecondPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a GramsPerHourPerSquareMeter\r\n     *\r\n     * @param value The unit as GramsPerHourPerSquareMeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromGramsPerHourPerSquareMeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.GramsPerHourPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a GramsPerHourPerSquareCentimeter\r\n     *\r\n     * @param value The unit as GramsPerHourPerSquareCentimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromGramsPerHourPerSquareCentimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.GramsPerHourPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a GramsPerHourPerSquareMillimeter\r\n     *\r\n     * @param value The unit as GramsPerHourPerSquareMillimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromGramsPerHourPerSquareMillimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.GramsPerHourPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a KilogramsPerSecondPerSquareMeter\r\n     *\r\n     * @param value The unit as KilogramsPerSecondPerSquareMeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromKilogramsPerSecondPerSquareMeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.KilogramsPerSecondPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a KilogramsPerSecondPerSquareCentimeter\r\n     *\r\n     * @param value The unit as KilogramsPerSecondPerSquareCentimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromKilogramsPerSecondPerSquareCentimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.KilogramsPerSecondPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a KilogramsPerSecondPerSquareMillimeter\r\n     *\r\n     * @param value The unit as KilogramsPerSecondPerSquareMillimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromKilogramsPerSecondPerSquareMillimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.KilogramsPerSecondPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a KilogramsPerHourPerSquareMeter\r\n     *\r\n     * @param value The unit as KilogramsPerHourPerSquareMeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromKilogramsPerHourPerSquareMeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.KilogramsPerHourPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a KilogramsPerHourPerSquareCentimeter\r\n     *\r\n     * @param value The unit as KilogramsPerHourPerSquareCentimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromKilogramsPerHourPerSquareCentimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.KilogramsPerHourPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new MassFlux instance from a KilogramsPerHourPerSquareMillimeter\r\n     *\r\n     * @param value The unit as KilogramsPerHourPerSquareMillimeter to create a new MassFlux from.\r\n     * @returns The new MassFlux instance.\r\n     */\r\n    static FromKilogramsPerHourPerSquareMillimeter(value) {\r\n        return new MassFlux(value, MassFluxUnits.KilogramsPerHourPerSquareMillimeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MassFluxUnits.GramsPerSecondPerSquareMeter:\r\n                return this.value * 1e3;\r\n            case MassFluxUnits.GramsPerSecondPerSquareCentimeter:\r\n                return this.value * 1e-1;\r\n            case MassFluxUnits.GramsPerSecondPerSquareMillimeter:\r\n                return this.value * 1e-3;\r\n            case MassFluxUnits.GramsPerHourPerSquareMeter:\r\n                return this.value * 3.6e6;\r\n            case MassFluxUnits.GramsPerHourPerSquareCentimeter:\r\n                return this.value * 3.6e2;\r\n            case MassFluxUnits.GramsPerHourPerSquareMillimeter:\r\n                return this.value * 3.6e0;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareMeter:\r\n                return (this.value * 1e3) / 1000;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareCentimeter:\r\n                return (this.value * 1e-1) / 1000;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareMillimeter:\r\n                return (this.value * 1e-3) / 1000;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareMeter:\r\n                return (this.value * 3.6e6) / 1000;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareCentimeter:\r\n                return (this.value * 3.6e2) / 1000;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareMillimeter:\r\n                return (this.value * 3.6e0) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MassFluxUnits.GramsPerSecondPerSquareMeter:\r\n                return value / 1e3;\r\n            case MassFluxUnits.GramsPerSecondPerSquareCentimeter:\r\n                return value / 1e-1;\r\n            case MassFluxUnits.GramsPerSecondPerSquareMillimeter:\r\n                return value / 1e-3;\r\n            case MassFluxUnits.GramsPerHourPerSquareMeter:\r\n                return value / 3.6e6;\r\n            case MassFluxUnits.GramsPerHourPerSquareCentimeter:\r\n                return value / 3.6e2;\r\n            case MassFluxUnits.GramsPerHourPerSquareMillimeter:\r\n                return value / 3.6e0;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareMeter:\r\n                return (value / 1e3) * 1000;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareCentimeter:\r\n                return (value / 1e-1) * 1000;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareMillimeter:\r\n                return (value / 1e-3) * 1000;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareMeter:\r\n                return (value / 3.6e6) * 1000;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareCentimeter:\r\n                return (value / 3.6e2) * 1000;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareMillimeter:\r\n                return (value / 3.6e0) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MassFlux to string.\r\n     * Note! the default format for MassFlux is KilogramsPerSecondPerSquareMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MassFlux.\r\n     * @returns The string format of the MassFlux.\r\n     */\r\n    toString(toUnit = MassFluxUnits.KilogramsPerSecondPerSquareMeter) {\r\n        switch (toUnit) {\r\n            case MassFluxUnits.GramsPerSecondPerSquareMeter:\r\n                return this.GramsPerSecondPerSquareMeter + ` g·s⁻¹·m⁻²`;\r\n            case MassFluxUnits.GramsPerSecondPerSquareCentimeter:\r\n                return this.GramsPerSecondPerSquareCentimeter + ` g·s⁻¹·cm⁻²`;\r\n            case MassFluxUnits.GramsPerSecondPerSquareMillimeter:\r\n                return this.GramsPerSecondPerSquareMillimeter + ` g·s⁻¹·mm⁻²`;\r\n            case MassFluxUnits.GramsPerHourPerSquareMeter:\r\n                return this.GramsPerHourPerSquareMeter + ` g·h⁻¹·m⁻²`;\r\n            case MassFluxUnits.GramsPerHourPerSquareCentimeter:\r\n                return this.GramsPerHourPerSquareCentimeter + ` g·h⁻¹·cm⁻²`;\r\n            case MassFluxUnits.GramsPerHourPerSquareMillimeter:\r\n                return this.GramsPerHourPerSquareMillimeter + ` g·h⁻¹·mm⁻²`;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareMeter:\r\n                return this.KilogramsPerSecondPerSquareMeter + ` `;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareCentimeter:\r\n                return this.KilogramsPerSecondPerSquareCentimeter + ` `;\r\n            case MassFluxUnits.KilogramsPerSecondPerSquareMillimeter:\r\n                return this.KilogramsPerSecondPerSquareMillimeter + ` `;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareMeter:\r\n                return this.KilogramsPerHourPerSquareMeter + ` `;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareCentimeter:\r\n                return this.KilogramsPerHourPerSquareCentimeter + ` `;\r\n            case MassFluxUnits.KilogramsPerHourPerSquareMillimeter:\r\n                return this.KilogramsPerHourPerSquareMillimeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MassFlux are equals to the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns True if the given MassFlux are equal to the current MassFlux.\r\n     */\r\n    equals(massFlux) {\r\n        return this.value === massFlux.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MassFlux against the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns 0 if they are equal, -1 if the current MassFlux is less then other, 1 if the current MassFlux is greater then other.\r\n     */\r\n    compareTo(massFlux) {\r\n        if (this.value > massFlux.BaseValue)\r\n            return 1;\r\n        if (this.value < massFlux.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MassFlux with the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns A new MassFlux instance with the results.\r\n     */\r\n    add(massFlux) {\r\n        return new MassFlux(this.value + massFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MassFlux with the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns A new MassFlux instance with the results.\r\n     */\r\n    subtract(massFlux) {\r\n        return new MassFlux(this.value - massFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MassFlux with the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns A new MassFlux instance with the results.\r\n     */\r\n    multiply(massFlux) {\r\n        return new MassFlux(this.value * massFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MassFlux with the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns A new MassFlux instance with the results.\r\n     */\r\n    divide(massFlux) {\r\n        return new MassFlux(this.value / massFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MassFlux with the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns A new MassFlux instance with the results.\r\n     */\r\n    modulo(massFlux) {\r\n        return new MassFlux(this.value % massFlux.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MassFlux with the current MassFlux.\r\n     * @param massFlux The other MassFlux.\r\n     * @returns A new MassFlux instance with the results.\r\n     */\r\n    pow(massFlux) {\r\n        return new MassFlux(this.value ** massFlux.BaseValue);\r\n    }\r\n}\r\nexports.MassFlux = MassFlux;\r\n//# sourceMappingURL=massflux.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MassFraction = exports.MassFractionUnits = void 0;\r\n/** MassFractionUnits enumeration */\r\nvar MassFractionUnits;\r\n(function (MassFractionUnits) {\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"DecimalFractions\"] = 0] = \"DecimalFractions\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"GramsPerGram\"] = 1] = \"GramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"GramsPerKilogram\"] = 2] = \"GramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"Percent\"] = 3] = \"Percent\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"PartsPerThousand\"] = 4] = \"PartsPerThousand\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"PartsPerMillion\"] = 5] = \"PartsPerMillion\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"PartsPerBillion\"] = 6] = \"PartsPerBillion\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"PartsPerTrillion\"] = 7] = \"PartsPerTrillion\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"NanogramsPerGram\"] = 8] = \"NanogramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"MicrogramsPerGram\"] = 9] = \"MicrogramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"MilligramsPerGram\"] = 10] = \"MilligramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"CentigramsPerGram\"] = 11] = \"CentigramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"DecigramsPerGram\"] = 12] = \"DecigramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"DecagramsPerGram\"] = 13] = \"DecagramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"HectogramsPerGram\"] = 14] = \"HectogramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"KilogramsPerGram\"] = 15] = \"KilogramsPerGram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"NanogramsPerKilogram\"] = 16] = \"NanogramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"MicrogramsPerKilogram\"] = 17] = \"MicrogramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"MilligramsPerKilogram\"] = 18] = \"MilligramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"CentigramsPerKilogram\"] = 19] = \"CentigramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"DecigramsPerKilogram\"] = 20] = \"DecigramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"DecagramsPerKilogram\"] = 21] = \"DecagramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"HectogramsPerKilogram\"] = 22] = \"HectogramsPerKilogram\";\r\n    /** */\r\n    MassFractionUnits[MassFractionUnits[\"KilogramsPerKilogram\"] = 23] = \"KilogramsPerKilogram\";\r\n})(MassFractionUnits = exports.MassFractionUnits || (exports.MassFractionUnits = {}));\r\n/** The mass fraction is defined as the mass of a constituent divided by the total mass of the mixture. */\r\nclass MassFraction {\r\n    /**\r\n     * Create a new MassFraction.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MassFraction’ unit to create from.\r\n     * The default unit is DecimalFractions\r\n     */\r\n    constructor(value, fromUnit = MassFractionUnits.DecimalFractions) {\r\n        this.decimalfractionsLazy = null;\r\n        this.gramspergramLazy = null;\r\n        this.gramsperkilogramLazy = null;\r\n        this.percentLazy = null;\r\n        this.partsperthousandLazy = null;\r\n        this.partspermillionLazy = null;\r\n        this.partsperbillionLazy = null;\r\n        this.partspertrillionLazy = null;\r\n        this.nanogramspergramLazy = null;\r\n        this.microgramspergramLazy = null;\r\n        this.milligramspergramLazy = null;\r\n        this.centigramspergramLazy = null;\r\n        this.decigramspergramLazy = null;\r\n        this.decagramspergramLazy = null;\r\n        this.hectogramspergramLazy = null;\r\n        this.kilogramspergramLazy = null;\r\n        this.nanogramsperkilogramLazy = null;\r\n        this.microgramsperkilogramLazy = null;\r\n        this.milligramsperkilogramLazy = null;\r\n        this.centigramsperkilogramLazy = null;\r\n        this.decigramsperkilogramLazy = null;\r\n        this.decagramsperkilogramLazy = null;\r\n        this.hectogramsperkilogramLazy = null;\r\n        this.kilogramsperkilogramLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MassFraction is DecimalFractions.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DecimalFractions() {\r\n        if (this.decimalfractionsLazy !== null) {\r\n            return this.decimalfractionsLazy;\r\n        }\r\n        return this.decimalfractionsLazy = this.convertFromBase(MassFractionUnits.DecimalFractions);\r\n    }\r\n    /** */\r\n    get GramsPerGram() {\r\n        if (this.gramspergramLazy !== null) {\r\n            return this.gramspergramLazy;\r\n        }\r\n        return this.gramspergramLazy = this.convertFromBase(MassFractionUnits.GramsPerGram);\r\n    }\r\n    /** */\r\n    get GramsPerKilogram() {\r\n        if (this.gramsperkilogramLazy !== null) {\r\n            return this.gramsperkilogramLazy;\r\n        }\r\n        return this.gramsperkilogramLazy = this.convertFromBase(MassFractionUnits.GramsPerKilogram);\r\n    }\r\n    /** */\r\n    get Percent() {\r\n        if (this.percentLazy !== null) {\r\n            return this.percentLazy;\r\n        }\r\n        return this.percentLazy = this.convertFromBase(MassFractionUnits.Percent);\r\n    }\r\n    /** */\r\n    get PartsPerThousand() {\r\n        if (this.partsperthousandLazy !== null) {\r\n            return this.partsperthousandLazy;\r\n        }\r\n        return this.partsperthousandLazy = this.convertFromBase(MassFractionUnits.PartsPerThousand);\r\n    }\r\n    /** */\r\n    get PartsPerMillion() {\r\n        if (this.partspermillionLazy !== null) {\r\n            return this.partspermillionLazy;\r\n        }\r\n        return this.partspermillionLazy = this.convertFromBase(MassFractionUnits.PartsPerMillion);\r\n    }\r\n    /** */\r\n    get PartsPerBillion() {\r\n        if (this.partsperbillionLazy !== null) {\r\n            return this.partsperbillionLazy;\r\n        }\r\n        return this.partsperbillionLazy = this.convertFromBase(MassFractionUnits.PartsPerBillion);\r\n    }\r\n    /** */\r\n    get PartsPerTrillion() {\r\n        if (this.partspertrillionLazy !== null) {\r\n            return this.partspertrillionLazy;\r\n        }\r\n        return this.partspertrillionLazy = this.convertFromBase(MassFractionUnits.PartsPerTrillion);\r\n    }\r\n    /** */\r\n    get NanogramsPerGram() {\r\n        if (this.nanogramspergramLazy !== null) {\r\n            return this.nanogramspergramLazy;\r\n        }\r\n        return this.nanogramspergramLazy = this.convertFromBase(MassFractionUnits.NanogramsPerGram);\r\n    }\r\n    /** */\r\n    get MicrogramsPerGram() {\r\n        if (this.microgramspergramLazy !== null) {\r\n            return this.microgramspergramLazy;\r\n        }\r\n        return this.microgramspergramLazy = this.convertFromBase(MassFractionUnits.MicrogramsPerGram);\r\n    }\r\n    /** */\r\n    get MilligramsPerGram() {\r\n        if (this.milligramspergramLazy !== null) {\r\n            return this.milligramspergramLazy;\r\n        }\r\n        return this.milligramspergramLazy = this.convertFromBase(MassFractionUnits.MilligramsPerGram);\r\n    }\r\n    /** */\r\n    get CentigramsPerGram() {\r\n        if (this.centigramspergramLazy !== null) {\r\n            return this.centigramspergramLazy;\r\n        }\r\n        return this.centigramspergramLazy = this.convertFromBase(MassFractionUnits.CentigramsPerGram);\r\n    }\r\n    /** */\r\n    get DecigramsPerGram() {\r\n        if (this.decigramspergramLazy !== null) {\r\n            return this.decigramspergramLazy;\r\n        }\r\n        return this.decigramspergramLazy = this.convertFromBase(MassFractionUnits.DecigramsPerGram);\r\n    }\r\n    /** */\r\n    get DecagramsPerGram() {\r\n        if (this.decagramspergramLazy !== null) {\r\n            return this.decagramspergramLazy;\r\n        }\r\n        return this.decagramspergramLazy = this.convertFromBase(MassFractionUnits.DecagramsPerGram);\r\n    }\r\n    /** */\r\n    get HectogramsPerGram() {\r\n        if (this.hectogramspergramLazy !== null) {\r\n            return this.hectogramspergramLazy;\r\n        }\r\n        return this.hectogramspergramLazy = this.convertFromBase(MassFractionUnits.HectogramsPerGram);\r\n    }\r\n    /** */\r\n    get KilogramsPerGram() {\r\n        if (this.kilogramspergramLazy !== null) {\r\n            return this.kilogramspergramLazy;\r\n        }\r\n        return this.kilogramspergramLazy = this.convertFromBase(MassFractionUnits.KilogramsPerGram);\r\n    }\r\n    /** */\r\n    get NanogramsPerKilogram() {\r\n        if (this.nanogramsperkilogramLazy !== null) {\r\n            return this.nanogramsperkilogramLazy;\r\n        }\r\n        return this.nanogramsperkilogramLazy = this.convertFromBase(MassFractionUnits.NanogramsPerKilogram);\r\n    }\r\n    /** */\r\n    get MicrogramsPerKilogram() {\r\n        if (this.microgramsperkilogramLazy !== null) {\r\n            return this.microgramsperkilogramLazy;\r\n        }\r\n        return this.microgramsperkilogramLazy = this.convertFromBase(MassFractionUnits.MicrogramsPerKilogram);\r\n    }\r\n    /** */\r\n    get MilligramsPerKilogram() {\r\n        if (this.milligramsperkilogramLazy !== null) {\r\n            return this.milligramsperkilogramLazy;\r\n        }\r\n        return this.milligramsperkilogramLazy = this.convertFromBase(MassFractionUnits.MilligramsPerKilogram);\r\n    }\r\n    /** */\r\n    get CentigramsPerKilogram() {\r\n        if (this.centigramsperkilogramLazy !== null) {\r\n            return this.centigramsperkilogramLazy;\r\n        }\r\n        return this.centigramsperkilogramLazy = this.convertFromBase(MassFractionUnits.CentigramsPerKilogram);\r\n    }\r\n    /** */\r\n    get DecigramsPerKilogram() {\r\n        if (this.decigramsperkilogramLazy !== null) {\r\n            return this.decigramsperkilogramLazy;\r\n        }\r\n        return this.decigramsperkilogramLazy = this.convertFromBase(MassFractionUnits.DecigramsPerKilogram);\r\n    }\r\n    /** */\r\n    get DecagramsPerKilogram() {\r\n        if (this.decagramsperkilogramLazy !== null) {\r\n            return this.decagramsperkilogramLazy;\r\n        }\r\n        return this.decagramsperkilogramLazy = this.convertFromBase(MassFractionUnits.DecagramsPerKilogram);\r\n    }\r\n    /** */\r\n    get HectogramsPerKilogram() {\r\n        if (this.hectogramsperkilogramLazy !== null) {\r\n            return this.hectogramsperkilogramLazy;\r\n        }\r\n        return this.hectogramsperkilogramLazy = this.convertFromBase(MassFractionUnits.HectogramsPerKilogram);\r\n    }\r\n    /** */\r\n    get KilogramsPerKilogram() {\r\n        if (this.kilogramsperkilogramLazy !== null) {\r\n            return this.kilogramsperkilogramLazy;\r\n        }\r\n        return this.kilogramsperkilogramLazy = this.convertFromBase(MassFractionUnits.KilogramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a DecimalFractions\r\n     *\r\n     * @param value The unit as DecimalFractions to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromDecimalFractions(value) {\r\n        return new MassFraction(value, MassFractionUnits.DecimalFractions);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a GramsPerGram\r\n     *\r\n     * @param value The unit as GramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromGramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.GramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a GramsPerKilogram\r\n     *\r\n     * @param value The unit as GramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromGramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.GramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a Percent\r\n     *\r\n     * @param value The unit as Percent to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromPercent(value) {\r\n        return new MassFraction(value, MassFractionUnits.Percent);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a PartsPerThousand\r\n     *\r\n     * @param value The unit as PartsPerThousand to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromPartsPerThousand(value) {\r\n        return new MassFraction(value, MassFractionUnits.PartsPerThousand);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a PartsPerMillion\r\n     *\r\n     * @param value The unit as PartsPerMillion to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromPartsPerMillion(value) {\r\n        return new MassFraction(value, MassFractionUnits.PartsPerMillion);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a PartsPerBillion\r\n     *\r\n     * @param value The unit as PartsPerBillion to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromPartsPerBillion(value) {\r\n        return new MassFraction(value, MassFractionUnits.PartsPerBillion);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a PartsPerTrillion\r\n     *\r\n     * @param value The unit as PartsPerTrillion to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromPartsPerTrillion(value) {\r\n        return new MassFraction(value, MassFractionUnits.PartsPerTrillion);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a NanogramsPerGram\r\n     *\r\n     * @param value The unit as NanogramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromNanogramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.NanogramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a MicrogramsPerGram\r\n     *\r\n     * @param value The unit as MicrogramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromMicrogramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.MicrogramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a MilligramsPerGram\r\n     *\r\n     * @param value The unit as MilligramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromMilligramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.MilligramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a CentigramsPerGram\r\n     *\r\n     * @param value The unit as CentigramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromCentigramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.CentigramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a DecigramsPerGram\r\n     *\r\n     * @param value The unit as DecigramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromDecigramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.DecigramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a DecagramsPerGram\r\n     *\r\n     * @param value The unit as DecagramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromDecagramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.DecagramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a HectogramsPerGram\r\n     *\r\n     * @param value The unit as HectogramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromHectogramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.HectogramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a KilogramsPerGram\r\n     *\r\n     * @param value The unit as KilogramsPerGram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromKilogramsPerGram(value) {\r\n        return new MassFraction(value, MassFractionUnits.KilogramsPerGram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a NanogramsPerKilogram\r\n     *\r\n     * @param value The unit as NanogramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromNanogramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.NanogramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a MicrogramsPerKilogram\r\n     *\r\n     * @param value The unit as MicrogramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromMicrogramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.MicrogramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a MilligramsPerKilogram\r\n     *\r\n     * @param value The unit as MilligramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromMilligramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.MilligramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a CentigramsPerKilogram\r\n     *\r\n     * @param value The unit as CentigramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromCentigramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.CentigramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a DecigramsPerKilogram\r\n     *\r\n     * @param value The unit as DecigramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromDecigramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.DecigramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a DecagramsPerKilogram\r\n     *\r\n     * @param value The unit as DecagramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromDecagramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.DecagramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a HectogramsPerKilogram\r\n     *\r\n     * @param value The unit as HectogramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromHectogramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.HectogramsPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new MassFraction instance from a KilogramsPerKilogram\r\n     *\r\n     * @param value The unit as KilogramsPerKilogram to create a new MassFraction from.\r\n     * @returns The new MassFraction instance.\r\n     */\r\n    static FromKilogramsPerKilogram(value) {\r\n        return new MassFraction(value, MassFractionUnits.KilogramsPerKilogram);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MassFractionUnits.DecimalFractions:\r\n                return this.value;\r\n            case MassFractionUnits.GramsPerGram:\r\n                return this.value;\r\n            case MassFractionUnits.GramsPerKilogram:\r\n                return this.value * 1e3;\r\n            case MassFractionUnits.Percent:\r\n                return this.value * 1e2;\r\n            case MassFractionUnits.PartsPerThousand:\r\n                return this.value * 1e3;\r\n            case MassFractionUnits.PartsPerMillion:\r\n                return this.value * 1e6;\r\n            case MassFractionUnits.PartsPerBillion:\r\n                return this.value * 1e9;\r\n            case MassFractionUnits.PartsPerTrillion:\r\n                return this.value * 1e12;\r\n            case MassFractionUnits.NanogramsPerGram:\r\n                return (this.value) / 1e-9;\r\n            case MassFractionUnits.MicrogramsPerGram:\r\n                return (this.value) / 0.000001;\r\n            case MassFractionUnits.MilligramsPerGram:\r\n                return (this.value) / 0.001;\r\n            case MassFractionUnits.CentigramsPerGram:\r\n                return (this.value) / 0.01;\r\n            case MassFractionUnits.DecigramsPerGram:\r\n                return (this.value) / 0.1;\r\n            case MassFractionUnits.DecagramsPerGram:\r\n                return (this.value) / 10;\r\n            case MassFractionUnits.HectogramsPerGram:\r\n                return (this.value) / 100;\r\n            case MassFractionUnits.KilogramsPerGram:\r\n                return (this.value) / 1000;\r\n            case MassFractionUnits.NanogramsPerKilogram:\r\n                return (this.value * 1e3) / 1e-9;\r\n            case MassFractionUnits.MicrogramsPerKilogram:\r\n                return (this.value * 1e3) / 0.000001;\r\n            case MassFractionUnits.MilligramsPerKilogram:\r\n                return (this.value * 1e3) / 0.001;\r\n            case MassFractionUnits.CentigramsPerKilogram:\r\n                return (this.value * 1e3) / 0.01;\r\n            case MassFractionUnits.DecigramsPerKilogram:\r\n                return (this.value * 1e3) / 0.1;\r\n            case MassFractionUnits.DecagramsPerKilogram:\r\n                return (this.value * 1e3) / 10;\r\n            case MassFractionUnits.HectogramsPerKilogram:\r\n                return (this.value * 1e3) / 100;\r\n            case MassFractionUnits.KilogramsPerKilogram:\r\n                return (this.value * 1e3) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MassFractionUnits.DecimalFractions:\r\n                return value;\r\n            case MassFractionUnits.GramsPerGram:\r\n                return value;\r\n            case MassFractionUnits.GramsPerKilogram:\r\n                return value / 1e3;\r\n            case MassFractionUnits.Percent:\r\n                return value / 1e2;\r\n            case MassFractionUnits.PartsPerThousand:\r\n                return value / 1e3;\r\n            case MassFractionUnits.PartsPerMillion:\r\n                return value / 1e6;\r\n            case MassFractionUnits.PartsPerBillion:\r\n                return value / 1e9;\r\n            case MassFractionUnits.PartsPerTrillion:\r\n                return value / 1e12;\r\n            case MassFractionUnits.NanogramsPerGram:\r\n                return (value) * 1e-9;\r\n            case MassFractionUnits.MicrogramsPerGram:\r\n                return (value) * 0.000001;\r\n            case MassFractionUnits.MilligramsPerGram:\r\n                return (value) * 0.001;\r\n            case MassFractionUnits.CentigramsPerGram:\r\n                return (value) * 0.01;\r\n            case MassFractionUnits.DecigramsPerGram:\r\n                return (value) * 0.1;\r\n            case MassFractionUnits.DecagramsPerGram:\r\n                return (value) * 10;\r\n            case MassFractionUnits.HectogramsPerGram:\r\n                return (value) * 100;\r\n            case MassFractionUnits.KilogramsPerGram:\r\n                return (value) * 1000;\r\n            case MassFractionUnits.NanogramsPerKilogram:\r\n                return (value / 1e3) * 1e-9;\r\n            case MassFractionUnits.MicrogramsPerKilogram:\r\n                return (value / 1e3) * 0.000001;\r\n            case MassFractionUnits.MilligramsPerKilogram:\r\n                return (value / 1e3) * 0.001;\r\n            case MassFractionUnits.CentigramsPerKilogram:\r\n                return (value / 1e3) * 0.01;\r\n            case MassFractionUnits.DecigramsPerKilogram:\r\n                return (value / 1e3) * 0.1;\r\n            case MassFractionUnits.DecagramsPerKilogram:\r\n                return (value / 1e3) * 10;\r\n            case MassFractionUnits.HectogramsPerKilogram:\r\n                return (value / 1e3) * 100;\r\n            case MassFractionUnits.KilogramsPerKilogram:\r\n                return (value / 1e3) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MassFraction to string.\r\n     * Note! the default format for MassFraction is DecimalFractions.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MassFraction.\r\n     * @returns The string format of the MassFraction.\r\n     */\r\n    toString(toUnit = MassFractionUnits.DecimalFractions) {\r\n        switch (toUnit) {\r\n            case MassFractionUnits.DecimalFractions:\r\n                return this.DecimalFractions + ` `;\r\n            case MassFractionUnits.GramsPerGram:\r\n                return this.GramsPerGram + ` g/g`;\r\n            case MassFractionUnits.GramsPerKilogram:\r\n                return this.GramsPerKilogram + ` g/kg`;\r\n            case MassFractionUnits.Percent:\r\n                return this.Percent + ` %`;\r\n            case MassFractionUnits.PartsPerThousand:\r\n                return this.PartsPerThousand + ` ‰`;\r\n            case MassFractionUnits.PartsPerMillion:\r\n                return this.PartsPerMillion + ` ppm`;\r\n            case MassFractionUnits.PartsPerBillion:\r\n                return this.PartsPerBillion + ` ppb`;\r\n            case MassFractionUnits.PartsPerTrillion:\r\n                return this.PartsPerTrillion + ` ppt`;\r\n            case MassFractionUnits.NanogramsPerGram:\r\n                return this.NanogramsPerGram + ` `;\r\n            case MassFractionUnits.MicrogramsPerGram:\r\n                return this.MicrogramsPerGram + ` `;\r\n            case MassFractionUnits.MilligramsPerGram:\r\n                return this.MilligramsPerGram + ` `;\r\n            case MassFractionUnits.CentigramsPerGram:\r\n                return this.CentigramsPerGram + ` `;\r\n            case MassFractionUnits.DecigramsPerGram:\r\n                return this.DecigramsPerGram + ` `;\r\n            case MassFractionUnits.DecagramsPerGram:\r\n                return this.DecagramsPerGram + ` `;\r\n            case MassFractionUnits.HectogramsPerGram:\r\n                return this.HectogramsPerGram + ` `;\r\n            case MassFractionUnits.KilogramsPerGram:\r\n                return this.KilogramsPerGram + ` `;\r\n            case MassFractionUnits.NanogramsPerKilogram:\r\n                return this.NanogramsPerKilogram + ` `;\r\n            case MassFractionUnits.MicrogramsPerKilogram:\r\n                return this.MicrogramsPerKilogram + ` `;\r\n            case MassFractionUnits.MilligramsPerKilogram:\r\n                return this.MilligramsPerKilogram + ` `;\r\n            case MassFractionUnits.CentigramsPerKilogram:\r\n                return this.CentigramsPerKilogram + ` `;\r\n            case MassFractionUnits.DecigramsPerKilogram:\r\n                return this.DecigramsPerKilogram + ` `;\r\n            case MassFractionUnits.DecagramsPerKilogram:\r\n                return this.DecagramsPerKilogram + ` `;\r\n            case MassFractionUnits.HectogramsPerKilogram:\r\n                return this.HectogramsPerKilogram + ` `;\r\n            case MassFractionUnits.KilogramsPerKilogram:\r\n                return this.KilogramsPerKilogram + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MassFraction are equals to the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns True if the given MassFraction are equal to the current MassFraction.\r\n     */\r\n    equals(massFraction) {\r\n        return this.value === massFraction.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MassFraction against the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns 0 if they are equal, -1 if the current MassFraction is less then other, 1 if the current MassFraction is greater then other.\r\n     */\r\n    compareTo(massFraction) {\r\n        if (this.value > massFraction.BaseValue)\r\n            return 1;\r\n        if (this.value < massFraction.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MassFraction with the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns A new MassFraction instance with the results.\r\n     */\r\n    add(massFraction) {\r\n        return new MassFraction(this.value + massFraction.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MassFraction with the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns A new MassFraction instance with the results.\r\n     */\r\n    subtract(massFraction) {\r\n        return new MassFraction(this.value - massFraction.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MassFraction with the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns A new MassFraction instance with the results.\r\n     */\r\n    multiply(massFraction) {\r\n        return new MassFraction(this.value * massFraction.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MassFraction with the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns A new MassFraction instance with the results.\r\n     */\r\n    divide(massFraction) {\r\n        return new MassFraction(this.value / massFraction.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MassFraction with the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns A new MassFraction instance with the results.\r\n     */\r\n    modulo(massFraction) {\r\n        return new MassFraction(this.value % massFraction.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MassFraction with the current MassFraction.\r\n     * @param massFraction The other MassFraction.\r\n     * @returns A new MassFraction instance with the results.\r\n     */\r\n    pow(massFraction) {\r\n        return new MassFraction(this.value ** massFraction.BaseValue);\r\n    }\r\n}\r\nexports.MassFraction = MassFraction;\r\n//# sourceMappingURL=massfraction.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MassMomentOfInertia = exports.MassMomentOfInertiaUnits = void 0;\r\n/** MassMomentOfInertiaUnits enumeration */\r\nvar MassMomentOfInertiaUnits;\r\n(function (MassMomentOfInertiaUnits) {\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"GramSquareMeters\"] = 0] = \"GramSquareMeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"GramSquareDecimeters\"] = 1] = \"GramSquareDecimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"GramSquareCentimeters\"] = 2] = \"GramSquareCentimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"GramSquareMillimeters\"] = 3] = \"GramSquareMillimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"TonneSquareMeters\"] = 4] = \"TonneSquareMeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"TonneSquareDecimeters\"] = 5] = \"TonneSquareDecimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"TonneSquareCentimeters\"] = 6] = \"TonneSquareCentimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"TonneSquareMilimeters\"] = 7] = \"TonneSquareMilimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"PoundSquareFeet\"] = 8] = \"PoundSquareFeet\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"PoundSquareInches\"] = 9] = \"PoundSquareInches\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"SlugSquareFeet\"] = 10] = \"SlugSquareFeet\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"SlugSquareInches\"] = 11] = \"SlugSquareInches\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MilligramSquareMeters\"] = 12] = \"MilligramSquareMeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilogramSquareMeters\"] = 13] = \"KilogramSquareMeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MilligramSquareDecimeters\"] = 14] = \"MilligramSquareDecimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilogramSquareDecimeters\"] = 15] = \"KilogramSquareDecimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MilligramSquareCentimeters\"] = 16] = \"MilligramSquareCentimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilogramSquareCentimeters\"] = 17] = \"KilogramSquareCentimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MilligramSquareMillimeters\"] = 18] = \"MilligramSquareMillimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilogramSquareMillimeters\"] = 19] = \"KilogramSquareMillimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilotonneSquareMeters\"] = 20] = \"KilotonneSquareMeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MegatonneSquareMeters\"] = 21] = \"MegatonneSquareMeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilotonneSquareDecimeters\"] = 22] = \"KilotonneSquareDecimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MegatonneSquareDecimeters\"] = 23] = \"MegatonneSquareDecimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilotonneSquareCentimeters\"] = 24] = \"KilotonneSquareCentimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MegatonneSquareCentimeters\"] = 25] = \"MegatonneSquareCentimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"KilotonneSquareMilimeters\"] = 26] = \"KilotonneSquareMilimeters\";\r\n    /** */\r\n    MassMomentOfInertiaUnits[MassMomentOfInertiaUnits[\"MegatonneSquareMilimeters\"] = 27] = \"MegatonneSquareMilimeters\";\r\n})(MassMomentOfInertiaUnits = exports.MassMomentOfInertiaUnits || (exports.MassMomentOfInertiaUnits = {}));\r\n/** A property of body reflects how its mass is distributed with regard to an axis. */\r\nclass MassMomentOfInertia {\r\n    /**\r\n     * Create a new MassMomentOfInertia.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MassMomentOfInertia’ unit to create from.\r\n     * The default unit is KilogramSquareMeters\r\n     */\r\n    constructor(value, fromUnit = MassMomentOfInertiaUnits.KilogramSquareMeters) {\r\n        this.gramsquaremetersLazy = null;\r\n        this.gramsquaredecimetersLazy = null;\r\n        this.gramsquarecentimetersLazy = null;\r\n        this.gramsquaremillimetersLazy = null;\r\n        this.tonnesquaremetersLazy = null;\r\n        this.tonnesquaredecimetersLazy = null;\r\n        this.tonnesquarecentimetersLazy = null;\r\n        this.tonnesquaremilimetersLazy = null;\r\n        this.poundsquarefeetLazy = null;\r\n        this.poundsquareinchesLazy = null;\r\n        this.slugsquarefeetLazy = null;\r\n        this.slugsquareinchesLazy = null;\r\n        this.milligramsquaremetersLazy = null;\r\n        this.kilogramsquaremetersLazy = null;\r\n        this.milligramsquaredecimetersLazy = null;\r\n        this.kilogramsquaredecimetersLazy = null;\r\n        this.milligramsquarecentimetersLazy = null;\r\n        this.kilogramsquarecentimetersLazy = null;\r\n        this.milligramsquaremillimetersLazy = null;\r\n        this.kilogramsquaremillimetersLazy = null;\r\n        this.kilotonnesquaremetersLazy = null;\r\n        this.megatonnesquaremetersLazy = null;\r\n        this.kilotonnesquaredecimetersLazy = null;\r\n        this.megatonnesquaredecimetersLazy = null;\r\n        this.kilotonnesquarecentimetersLazy = null;\r\n        this.megatonnesquarecentimetersLazy = null;\r\n        this.kilotonnesquaremilimetersLazy = null;\r\n        this.megatonnesquaremilimetersLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MassMomentOfInertia is KilogramSquareMeters.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramSquareMeters() {\r\n        if (this.gramsquaremetersLazy !== null) {\r\n            return this.gramsquaremetersLazy;\r\n        }\r\n        return this.gramsquaremetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.GramSquareMeters);\r\n    }\r\n    /** */\r\n    get GramSquareDecimeters() {\r\n        if (this.gramsquaredecimetersLazy !== null) {\r\n            return this.gramsquaredecimetersLazy;\r\n        }\r\n        return this.gramsquaredecimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.GramSquareDecimeters);\r\n    }\r\n    /** */\r\n    get GramSquareCentimeters() {\r\n        if (this.gramsquarecentimetersLazy !== null) {\r\n            return this.gramsquarecentimetersLazy;\r\n        }\r\n        return this.gramsquarecentimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.GramSquareCentimeters);\r\n    }\r\n    /** */\r\n    get GramSquareMillimeters() {\r\n        if (this.gramsquaremillimetersLazy !== null) {\r\n            return this.gramsquaremillimetersLazy;\r\n        }\r\n        return this.gramsquaremillimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.GramSquareMillimeters);\r\n    }\r\n    /** */\r\n    get TonneSquareMeters() {\r\n        if (this.tonnesquaremetersLazy !== null) {\r\n            return this.tonnesquaremetersLazy;\r\n        }\r\n        return this.tonnesquaremetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.TonneSquareMeters);\r\n    }\r\n    /** */\r\n    get TonneSquareDecimeters() {\r\n        if (this.tonnesquaredecimetersLazy !== null) {\r\n            return this.tonnesquaredecimetersLazy;\r\n        }\r\n        return this.tonnesquaredecimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.TonneSquareDecimeters);\r\n    }\r\n    /** */\r\n    get TonneSquareCentimeters() {\r\n        if (this.tonnesquarecentimetersLazy !== null) {\r\n            return this.tonnesquarecentimetersLazy;\r\n        }\r\n        return this.tonnesquarecentimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.TonneSquareCentimeters);\r\n    }\r\n    /** */\r\n    get TonneSquareMilimeters() {\r\n        if (this.tonnesquaremilimetersLazy !== null) {\r\n            return this.tonnesquaremilimetersLazy;\r\n        }\r\n        return this.tonnesquaremilimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.TonneSquareMilimeters);\r\n    }\r\n    /** */\r\n    get PoundSquareFeet() {\r\n        if (this.poundsquarefeetLazy !== null) {\r\n            return this.poundsquarefeetLazy;\r\n        }\r\n        return this.poundsquarefeetLazy = this.convertFromBase(MassMomentOfInertiaUnits.PoundSquareFeet);\r\n    }\r\n    /** */\r\n    get PoundSquareInches() {\r\n        if (this.poundsquareinchesLazy !== null) {\r\n            return this.poundsquareinchesLazy;\r\n        }\r\n        return this.poundsquareinchesLazy = this.convertFromBase(MassMomentOfInertiaUnits.PoundSquareInches);\r\n    }\r\n    /** */\r\n    get SlugSquareFeet() {\r\n        if (this.slugsquarefeetLazy !== null) {\r\n            return this.slugsquarefeetLazy;\r\n        }\r\n        return this.slugsquarefeetLazy = this.convertFromBase(MassMomentOfInertiaUnits.SlugSquareFeet);\r\n    }\r\n    /** */\r\n    get SlugSquareInches() {\r\n        if (this.slugsquareinchesLazy !== null) {\r\n            return this.slugsquareinchesLazy;\r\n        }\r\n        return this.slugsquareinchesLazy = this.convertFromBase(MassMomentOfInertiaUnits.SlugSquareInches);\r\n    }\r\n    /** */\r\n    get MilligramSquareMeters() {\r\n        if (this.milligramsquaremetersLazy !== null) {\r\n            return this.milligramsquaremetersLazy;\r\n        }\r\n        return this.milligramsquaremetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MilligramSquareMeters);\r\n    }\r\n    /** */\r\n    get KilogramSquareMeters() {\r\n        if (this.kilogramsquaremetersLazy !== null) {\r\n            return this.kilogramsquaremetersLazy;\r\n        }\r\n        return this.kilogramsquaremetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilogramSquareMeters);\r\n    }\r\n    /** */\r\n    get MilligramSquareDecimeters() {\r\n        if (this.milligramsquaredecimetersLazy !== null) {\r\n            return this.milligramsquaredecimetersLazy;\r\n        }\r\n        return this.milligramsquaredecimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MilligramSquareDecimeters);\r\n    }\r\n    /** */\r\n    get KilogramSquareDecimeters() {\r\n        if (this.kilogramsquaredecimetersLazy !== null) {\r\n            return this.kilogramsquaredecimetersLazy;\r\n        }\r\n        return this.kilogramsquaredecimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilogramSquareDecimeters);\r\n    }\r\n    /** */\r\n    get MilligramSquareCentimeters() {\r\n        if (this.milligramsquarecentimetersLazy !== null) {\r\n            return this.milligramsquarecentimetersLazy;\r\n        }\r\n        return this.milligramsquarecentimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MilligramSquareCentimeters);\r\n    }\r\n    /** */\r\n    get KilogramSquareCentimeters() {\r\n        if (this.kilogramsquarecentimetersLazy !== null) {\r\n            return this.kilogramsquarecentimetersLazy;\r\n        }\r\n        return this.kilogramsquarecentimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilogramSquareCentimeters);\r\n    }\r\n    /** */\r\n    get MilligramSquareMillimeters() {\r\n        if (this.milligramsquaremillimetersLazy !== null) {\r\n            return this.milligramsquaremillimetersLazy;\r\n        }\r\n        return this.milligramsquaremillimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MilligramSquareMillimeters);\r\n    }\r\n    /** */\r\n    get KilogramSquareMillimeters() {\r\n        if (this.kilogramsquaremillimetersLazy !== null) {\r\n            return this.kilogramsquaremillimetersLazy;\r\n        }\r\n        return this.kilogramsquaremillimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilogramSquareMillimeters);\r\n    }\r\n    /** */\r\n    get KilotonneSquareMeters() {\r\n        if (this.kilotonnesquaremetersLazy !== null) {\r\n            return this.kilotonnesquaremetersLazy;\r\n        }\r\n        return this.kilotonnesquaremetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilotonneSquareMeters);\r\n    }\r\n    /** */\r\n    get MegatonneSquareMeters() {\r\n        if (this.megatonnesquaremetersLazy !== null) {\r\n            return this.megatonnesquaremetersLazy;\r\n        }\r\n        return this.megatonnesquaremetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MegatonneSquareMeters);\r\n    }\r\n    /** */\r\n    get KilotonneSquareDecimeters() {\r\n        if (this.kilotonnesquaredecimetersLazy !== null) {\r\n            return this.kilotonnesquaredecimetersLazy;\r\n        }\r\n        return this.kilotonnesquaredecimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilotonneSquareDecimeters);\r\n    }\r\n    /** */\r\n    get MegatonneSquareDecimeters() {\r\n        if (this.megatonnesquaredecimetersLazy !== null) {\r\n            return this.megatonnesquaredecimetersLazy;\r\n        }\r\n        return this.megatonnesquaredecimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MegatonneSquareDecimeters);\r\n    }\r\n    /** */\r\n    get KilotonneSquareCentimeters() {\r\n        if (this.kilotonnesquarecentimetersLazy !== null) {\r\n            return this.kilotonnesquarecentimetersLazy;\r\n        }\r\n        return this.kilotonnesquarecentimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilotonneSquareCentimeters);\r\n    }\r\n    /** */\r\n    get MegatonneSquareCentimeters() {\r\n        if (this.megatonnesquarecentimetersLazy !== null) {\r\n            return this.megatonnesquarecentimetersLazy;\r\n        }\r\n        return this.megatonnesquarecentimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MegatonneSquareCentimeters);\r\n    }\r\n    /** */\r\n    get KilotonneSquareMilimeters() {\r\n        if (this.kilotonnesquaremilimetersLazy !== null) {\r\n            return this.kilotonnesquaremilimetersLazy;\r\n        }\r\n        return this.kilotonnesquaremilimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.KilotonneSquareMilimeters);\r\n    }\r\n    /** */\r\n    get MegatonneSquareMilimeters() {\r\n        if (this.megatonnesquaremilimetersLazy !== null) {\r\n            return this.megatonnesquaremilimetersLazy;\r\n        }\r\n        return this.megatonnesquaremilimetersLazy = this.convertFromBase(MassMomentOfInertiaUnits.MegatonneSquareMilimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a GramSquareMeters\r\n     *\r\n     * @param value The unit as GramSquareMeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromGramSquareMeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.GramSquareMeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a GramSquareDecimeters\r\n     *\r\n     * @param value The unit as GramSquareDecimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromGramSquareDecimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.GramSquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a GramSquareCentimeters\r\n     *\r\n     * @param value The unit as GramSquareCentimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromGramSquareCentimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.GramSquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a GramSquareMillimeters\r\n     *\r\n     * @param value The unit as GramSquareMillimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromGramSquareMillimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.GramSquareMillimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a TonneSquareMeters\r\n     *\r\n     * @param value The unit as TonneSquareMeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromTonneSquareMeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.TonneSquareMeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a TonneSquareDecimeters\r\n     *\r\n     * @param value The unit as TonneSquareDecimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromTonneSquareDecimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.TonneSquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a TonneSquareCentimeters\r\n     *\r\n     * @param value The unit as TonneSquareCentimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromTonneSquareCentimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.TonneSquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a TonneSquareMilimeters\r\n     *\r\n     * @param value The unit as TonneSquareMilimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromTonneSquareMilimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.TonneSquareMilimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a PoundSquareFeet\r\n     *\r\n     * @param value The unit as PoundSquareFeet to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromPoundSquareFeet(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.PoundSquareFeet);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a PoundSquareInches\r\n     *\r\n     * @param value The unit as PoundSquareInches to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromPoundSquareInches(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.PoundSquareInches);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a SlugSquareFeet\r\n     *\r\n     * @param value The unit as SlugSquareFeet to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromSlugSquareFeet(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.SlugSquareFeet);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a SlugSquareInches\r\n     *\r\n     * @param value The unit as SlugSquareInches to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromSlugSquareInches(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.SlugSquareInches);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MilligramSquareMeters\r\n     *\r\n     * @param value The unit as MilligramSquareMeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMilligramSquareMeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MilligramSquareMeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilogramSquareMeters\r\n     *\r\n     * @param value The unit as KilogramSquareMeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilogramSquareMeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilogramSquareMeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MilligramSquareDecimeters\r\n     *\r\n     * @param value The unit as MilligramSquareDecimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMilligramSquareDecimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MilligramSquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilogramSquareDecimeters\r\n     *\r\n     * @param value The unit as KilogramSquareDecimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilogramSquareDecimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilogramSquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MilligramSquareCentimeters\r\n     *\r\n     * @param value The unit as MilligramSquareCentimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMilligramSquareCentimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MilligramSquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilogramSquareCentimeters\r\n     *\r\n     * @param value The unit as KilogramSquareCentimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilogramSquareCentimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilogramSquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MilligramSquareMillimeters\r\n     *\r\n     * @param value The unit as MilligramSquareMillimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMilligramSquareMillimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MilligramSquareMillimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilogramSquareMillimeters\r\n     *\r\n     * @param value The unit as KilogramSquareMillimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilogramSquareMillimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilogramSquareMillimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilotonneSquareMeters\r\n     *\r\n     * @param value The unit as KilotonneSquareMeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilotonneSquareMeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilotonneSquareMeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MegatonneSquareMeters\r\n     *\r\n     * @param value The unit as MegatonneSquareMeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMegatonneSquareMeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MegatonneSquareMeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilotonneSquareDecimeters\r\n     *\r\n     * @param value The unit as KilotonneSquareDecimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilotonneSquareDecimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilotonneSquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MegatonneSquareDecimeters\r\n     *\r\n     * @param value The unit as MegatonneSquareDecimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMegatonneSquareDecimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MegatonneSquareDecimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilotonneSquareCentimeters\r\n     *\r\n     * @param value The unit as KilotonneSquareCentimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilotonneSquareCentimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilotonneSquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MegatonneSquareCentimeters\r\n     *\r\n     * @param value The unit as MegatonneSquareCentimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMegatonneSquareCentimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MegatonneSquareCentimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a KilotonneSquareMilimeters\r\n     *\r\n     * @param value The unit as KilotonneSquareMilimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromKilotonneSquareMilimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.KilotonneSquareMilimeters);\r\n    }\r\n    /**\r\n     * Create a new MassMomentOfInertia instance from a MegatonneSquareMilimeters\r\n     *\r\n     * @param value The unit as MegatonneSquareMilimeters to create a new MassMomentOfInertia from.\r\n     * @returns The new MassMomentOfInertia instance.\r\n     */\r\n    static FromMegatonneSquareMilimeters(value) {\r\n        return new MassMomentOfInertia(value, MassMomentOfInertiaUnits.MegatonneSquareMilimeters);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MassMomentOfInertiaUnits.GramSquareMeters:\r\n                return this.value * 1e3;\r\n            case MassMomentOfInertiaUnits.GramSquareDecimeters:\r\n                return this.value * 1e5;\r\n            case MassMomentOfInertiaUnits.GramSquareCentimeters:\r\n                return this.value * 1e7;\r\n            case MassMomentOfInertiaUnits.GramSquareMillimeters:\r\n                return this.value * 1e9;\r\n            case MassMomentOfInertiaUnits.TonneSquareMeters:\r\n                return this.value * 1e-3;\r\n            case MassMomentOfInertiaUnits.TonneSquareDecimeters:\r\n                return this.value * 1e-1;\r\n            case MassMomentOfInertiaUnits.TonneSquareCentimeters:\r\n                return this.value * 1e1;\r\n            case MassMomentOfInertiaUnits.TonneSquareMilimeters:\r\n                return this.value * 1e3;\r\n            case MassMomentOfInertiaUnits.PoundSquareFeet:\r\n                return this.value / 4.21401101e-2;\r\n            case MassMomentOfInertiaUnits.PoundSquareInches:\r\n                return this.value / 2.9263965e-4;\r\n            case MassMomentOfInertiaUnits.SlugSquareFeet:\r\n                return this.value / 1.3558179619;\r\n            case MassMomentOfInertiaUnits.SlugSquareInches:\r\n                return this.value / 9.41540242e-3;\r\n            case MassMomentOfInertiaUnits.MilligramSquareMeters:\r\n                return (this.value * 1e3) / 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareMeters:\r\n                return (this.value * 1e3) / 1000;\r\n            case MassMomentOfInertiaUnits.MilligramSquareDecimeters:\r\n                return (this.value * 1e5) / 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareDecimeters:\r\n                return (this.value * 1e5) / 1000;\r\n            case MassMomentOfInertiaUnits.MilligramSquareCentimeters:\r\n                return (this.value * 1e7) / 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareCentimeters:\r\n                return (this.value * 1e7) / 1000;\r\n            case MassMomentOfInertiaUnits.MilligramSquareMillimeters:\r\n                return (this.value * 1e9) / 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareMillimeters:\r\n                return (this.value * 1e9) / 1000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareMeters:\r\n                return (this.value * 1e-3) / 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareMeters:\r\n                return (this.value * 1e-3) / 1000000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareDecimeters:\r\n                return (this.value * 1e-1) / 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareDecimeters:\r\n                return (this.value * 1e-1) / 1000000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareCentimeters:\r\n                return (this.value * 1e1) / 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareCentimeters:\r\n                return (this.value * 1e1) / 1000000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareMilimeters:\r\n                return (this.value * 1e3) / 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareMilimeters:\r\n                return (this.value * 1e3) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MassMomentOfInertiaUnits.GramSquareMeters:\r\n                return value / 1e3;\r\n            case MassMomentOfInertiaUnits.GramSquareDecimeters:\r\n                return value / 1e5;\r\n            case MassMomentOfInertiaUnits.GramSquareCentimeters:\r\n                return value / 1e7;\r\n            case MassMomentOfInertiaUnits.GramSquareMillimeters:\r\n                return value / 1e9;\r\n            case MassMomentOfInertiaUnits.TonneSquareMeters:\r\n                return value / 1e-3;\r\n            case MassMomentOfInertiaUnits.TonneSquareDecimeters:\r\n                return value / 1e-1;\r\n            case MassMomentOfInertiaUnits.TonneSquareCentimeters:\r\n                return value / 1e1;\r\n            case MassMomentOfInertiaUnits.TonneSquareMilimeters:\r\n                return value / 1e3;\r\n            case MassMomentOfInertiaUnits.PoundSquareFeet:\r\n                return value * 4.21401101e-2;\r\n            case MassMomentOfInertiaUnits.PoundSquareInches:\r\n                return value * 2.9263965e-4;\r\n            case MassMomentOfInertiaUnits.SlugSquareFeet:\r\n                return value * 1.3558179619;\r\n            case MassMomentOfInertiaUnits.SlugSquareInches:\r\n                return value * 9.41540242e-3;\r\n            case MassMomentOfInertiaUnits.MilligramSquareMeters:\r\n                return (value / 1e3) * 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareMeters:\r\n                return (value / 1e3) * 1000;\r\n            case MassMomentOfInertiaUnits.MilligramSquareDecimeters:\r\n                return (value / 1e5) * 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareDecimeters:\r\n                return (value / 1e5) * 1000;\r\n            case MassMomentOfInertiaUnits.MilligramSquareCentimeters:\r\n                return (value / 1e7) * 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareCentimeters:\r\n                return (value / 1e7) * 1000;\r\n            case MassMomentOfInertiaUnits.MilligramSquareMillimeters:\r\n                return (value / 1e9) * 0.001;\r\n            case MassMomentOfInertiaUnits.KilogramSquareMillimeters:\r\n                return (value / 1e9) * 1000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareMeters:\r\n                return (value / 1e-3) * 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareMeters:\r\n                return (value / 1e-3) * 1000000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareDecimeters:\r\n                return (value / 1e-1) * 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareDecimeters:\r\n                return (value / 1e-1) * 1000000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareCentimeters:\r\n                return (value / 1e1) * 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareCentimeters:\r\n                return (value / 1e1) * 1000000;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareMilimeters:\r\n                return (value / 1e3) * 1000;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareMilimeters:\r\n                return (value / 1e3) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MassMomentOfInertia to string.\r\n     * Note! the default format for MassMomentOfInertia is KilogramSquareMeters.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MassMomentOfInertia.\r\n     * @returns The string format of the MassMomentOfInertia.\r\n     */\r\n    toString(toUnit = MassMomentOfInertiaUnits.KilogramSquareMeters) {\r\n        switch (toUnit) {\r\n            case MassMomentOfInertiaUnits.GramSquareMeters:\r\n                return this.GramSquareMeters + ` g·m²`;\r\n            case MassMomentOfInertiaUnits.GramSquareDecimeters:\r\n                return this.GramSquareDecimeters + ` g·dm²`;\r\n            case MassMomentOfInertiaUnits.GramSquareCentimeters:\r\n                return this.GramSquareCentimeters + ` g·cm²`;\r\n            case MassMomentOfInertiaUnits.GramSquareMillimeters:\r\n                return this.GramSquareMillimeters + ` g·mm²`;\r\n            case MassMomentOfInertiaUnits.TonneSquareMeters:\r\n                return this.TonneSquareMeters + ` t·m²`;\r\n            case MassMomentOfInertiaUnits.TonneSquareDecimeters:\r\n                return this.TonneSquareDecimeters + ` t·dm²`;\r\n            case MassMomentOfInertiaUnits.TonneSquareCentimeters:\r\n                return this.TonneSquareCentimeters + ` t·cm²`;\r\n            case MassMomentOfInertiaUnits.TonneSquareMilimeters:\r\n                return this.TonneSquareMilimeters + ` t·mm²`;\r\n            case MassMomentOfInertiaUnits.PoundSquareFeet:\r\n                return this.PoundSquareFeet + ` lb·ft²`;\r\n            case MassMomentOfInertiaUnits.PoundSquareInches:\r\n                return this.PoundSquareInches + ` lb·in²`;\r\n            case MassMomentOfInertiaUnits.SlugSquareFeet:\r\n                return this.SlugSquareFeet + ` slug·ft²`;\r\n            case MassMomentOfInertiaUnits.SlugSquareInches:\r\n                return this.SlugSquareInches + ` slug·in²`;\r\n            case MassMomentOfInertiaUnits.MilligramSquareMeters:\r\n                return this.MilligramSquareMeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilogramSquareMeters:\r\n                return this.KilogramSquareMeters + ` `;\r\n            case MassMomentOfInertiaUnits.MilligramSquareDecimeters:\r\n                return this.MilligramSquareDecimeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilogramSquareDecimeters:\r\n                return this.KilogramSquareDecimeters + ` `;\r\n            case MassMomentOfInertiaUnits.MilligramSquareCentimeters:\r\n                return this.MilligramSquareCentimeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilogramSquareCentimeters:\r\n                return this.KilogramSquareCentimeters + ` `;\r\n            case MassMomentOfInertiaUnits.MilligramSquareMillimeters:\r\n                return this.MilligramSquareMillimeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilogramSquareMillimeters:\r\n                return this.KilogramSquareMillimeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareMeters:\r\n                return this.KilotonneSquareMeters + ` `;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareMeters:\r\n                return this.MegatonneSquareMeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareDecimeters:\r\n                return this.KilotonneSquareDecimeters + ` `;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareDecimeters:\r\n                return this.MegatonneSquareDecimeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareCentimeters:\r\n                return this.KilotonneSquareCentimeters + ` `;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareCentimeters:\r\n                return this.MegatonneSquareCentimeters + ` `;\r\n            case MassMomentOfInertiaUnits.KilotonneSquareMilimeters:\r\n                return this.KilotonneSquareMilimeters + ` `;\r\n            case MassMomentOfInertiaUnits.MegatonneSquareMilimeters:\r\n                return this.MegatonneSquareMilimeters + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MassMomentOfInertia are equals to the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns True if the given MassMomentOfInertia are equal to the current MassMomentOfInertia.\r\n     */\r\n    equals(massMomentOfInertia) {\r\n        return this.value === massMomentOfInertia.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MassMomentOfInertia against the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns 0 if they are equal, -1 if the current MassMomentOfInertia is less then other, 1 if the current MassMomentOfInertia is greater then other.\r\n     */\r\n    compareTo(massMomentOfInertia) {\r\n        if (this.value > massMomentOfInertia.BaseValue)\r\n            return 1;\r\n        if (this.value < massMomentOfInertia.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MassMomentOfInertia with the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns A new MassMomentOfInertia instance with the results.\r\n     */\r\n    add(massMomentOfInertia) {\r\n        return new MassMomentOfInertia(this.value + massMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MassMomentOfInertia with the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns A new MassMomentOfInertia instance with the results.\r\n     */\r\n    subtract(massMomentOfInertia) {\r\n        return new MassMomentOfInertia(this.value - massMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MassMomentOfInertia with the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns A new MassMomentOfInertia instance with the results.\r\n     */\r\n    multiply(massMomentOfInertia) {\r\n        return new MassMomentOfInertia(this.value * massMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MassMomentOfInertia with the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns A new MassMomentOfInertia instance with the results.\r\n     */\r\n    divide(massMomentOfInertia) {\r\n        return new MassMomentOfInertia(this.value / massMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MassMomentOfInertia with the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns A new MassMomentOfInertia instance with the results.\r\n     */\r\n    modulo(massMomentOfInertia) {\r\n        return new MassMomentOfInertia(this.value % massMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MassMomentOfInertia with the current MassMomentOfInertia.\r\n     * @param massMomentOfInertia The other MassMomentOfInertia.\r\n     * @returns A new MassMomentOfInertia instance with the results.\r\n     */\r\n    pow(massMomentOfInertia) {\r\n        return new MassMomentOfInertia(this.value ** massMomentOfInertia.BaseValue);\r\n    }\r\n}\r\nexports.MassMomentOfInertia = MassMomentOfInertia;\r\n//# sourceMappingURL=massmomentofinertia.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MolarEnergy = exports.MolarEnergyUnits = void 0;\r\n/** MolarEnergyUnits enumeration */\r\nvar MolarEnergyUnits;\r\n(function (MolarEnergyUnits) {\r\n    /** */\r\n    MolarEnergyUnits[MolarEnergyUnits[\"JoulesPerMole\"] = 0] = \"JoulesPerMole\";\r\n    /** */\r\n    MolarEnergyUnits[MolarEnergyUnits[\"KilojoulesPerMole\"] = 1] = \"KilojoulesPerMole\";\r\n    /** */\r\n    MolarEnergyUnits[MolarEnergyUnits[\"MegajoulesPerMole\"] = 2] = \"MegajoulesPerMole\";\r\n})(MolarEnergyUnits = exports.MolarEnergyUnits || (exports.MolarEnergyUnits = {}));\r\n/** Molar energy is the amount of energy stored in 1 mole of a substance. */\r\nclass MolarEnergy {\r\n    /**\r\n     * Create a new MolarEnergy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MolarEnergy’ unit to create from.\r\n     * The default unit is JoulesPerMole\r\n     */\r\n    constructor(value, fromUnit = MolarEnergyUnits.JoulesPerMole) {\r\n        this.joulespermoleLazy = null;\r\n        this.kilojoulespermoleLazy = null;\r\n        this.megajoulespermoleLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MolarEnergy is JoulesPerMole.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get JoulesPerMole() {\r\n        if (this.joulespermoleLazy !== null) {\r\n            return this.joulespermoleLazy;\r\n        }\r\n        return this.joulespermoleLazy = this.convertFromBase(MolarEnergyUnits.JoulesPerMole);\r\n    }\r\n    /** */\r\n    get KilojoulesPerMole() {\r\n        if (this.kilojoulespermoleLazy !== null) {\r\n            return this.kilojoulespermoleLazy;\r\n        }\r\n        return this.kilojoulespermoleLazy = this.convertFromBase(MolarEnergyUnits.KilojoulesPerMole);\r\n    }\r\n    /** */\r\n    get MegajoulesPerMole() {\r\n        if (this.megajoulespermoleLazy !== null) {\r\n            return this.megajoulespermoleLazy;\r\n        }\r\n        return this.megajoulespermoleLazy = this.convertFromBase(MolarEnergyUnits.MegajoulesPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarEnergy instance from a JoulesPerMole\r\n     *\r\n     * @param value The unit as JoulesPerMole to create a new MolarEnergy from.\r\n     * @returns The new MolarEnergy instance.\r\n     */\r\n    static FromJoulesPerMole(value) {\r\n        return new MolarEnergy(value, MolarEnergyUnits.JoulesPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarEnergy instance from a KilojoulesPerMole\r\n     *\r\n     * @param value The unit as KilojoulesPerMole to create a new MolarEnergy from.\r\n     * @returns The new MolarEnergy instance.\r\n     */\r\n    static FromKilojoulesPerMole(value) {\r\n        return new MolarEnergy(value, MolarEnergyUnits.KilojoulesPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarEnergy instance from a MegajoulesPerMole\r\n     *\r\n     * @param value The unit as MegajoulesPerMole to create a new MolarEnergy from.\r\n     * @returns The new MolarEnergy instance.\r\n     */\r\n    static FromMegajoulesPerMole(value) {\r\n        return new MolarEnergy(value, MolarEnergyUnits.MegajoulesPerMole);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MolarEnergyUnits.JoulesPerMole:\r\n                return this.value;\r\n            case MolarEnergyUnits.KilojoulesPerMole:\r\n                return (this.value) / 1000;\r\n            case MolarEnergyUnits.MegajoulesPerMole:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MolarEnergyUnits.JoulesPerMole:\r\n                return value;\r\n            case MolarEnergyUnits.KilojoulesPerMole:\r\n                return (value) * 1000;\r\n            case MolarEnergyUnits.MegajoulesPerMole:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MolarEnergy to string.\r\n     * Note! the default format for MolarEnergy is JoulesPerMole.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MolarEnergy.\r\n     * @returns The string format of the MolarEnergy.\r\n     */\r\n    toString(toUnit = MolarEnergyUnits.JoulesPerMole) {\r\n        switch (toUnit) {\r\n            case MolarEnergyUnits.JoulesPerMole:\r\n                return this.JoulesPerMole + ` J/mol`;\r\n            case MolarEnergyUnits.KilojoulesPerMole:\r\n                return this.KilojoulesPerMole + ` `;\r\n            case MolarEnergyUnits.MegajoulesPerMole:\r\n                return this.MegajoulesPerMole + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MolarEnergy are equals to the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns True if the given MolarEnergy are equal to the current MolarEnergy.\r\n     */\r\n    equals(molarEnergy) {\r\n        return this.value === molarEnergy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MolarEnergy against the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns 0 if they are equal, -1 if the current MolarEnergy is less then other, 1 if the current MolarEnergy is greater then other.\r\n     */\r\n    compareTo(molarEnergy) {\r\n        if (this.value > molarEnergy.BaseValue)\r\n            return 1;\r\n        if (this.value < molarEnergy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MolarEnergy with the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns A new MolarEnergy instance with the results.\r\n     */\r\n    add(molarEnergy) {\r\n        return new MolarEnergy(this.value + molarEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MolarEnergy with the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns A new MolarEnergy instance with the results.\r\n     */\r\n    subtract(molarEnergy) {\r\n        return new MolarEnergy(this.value - molarEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MolarEnergy with the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns A new MolarEnergy instance with the results.\r\n     */\r\n    multiply(molarEnergy) {\r\n        return new MolarEnergy(this.value * molarEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MolarEnergy with the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns A new MolarEnergy instance with the results.\r\n     */\r\n    divide(molarEnergy) {\r\n        return new MolarEnergy(this.value / molarEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MolarEnergy with the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns A new MolarEnergy instance with the results.\r\n     */\r\n    modulo(molarEnergy) {\r\n        return new MolarEnergy(this.value % molarEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MolarEnergy with the current MolarEnergy.\r\n     * @param molarEnergy The other MolarEnergy.\r\n     * @returns A new MolarEnergy instance with the results.\r\n     */\r\n    pow(molarEnergy) {\r\n        return new MolarEnergy(this.value ** molarEnergy.BaseValue);\r\n    }\r\n}\r\nexports.MolarEnergy = MolarEnergy;\r\n//# sourceMappingURL=molarenergy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MolarEntropy = exports.MolarEntropyUnits = void 0;\r\n/** MolarEntropyUnits enumeration */\r\nvar MolarEntropyUnits;\r\n(function (MolarEntropyUnits) {\r\n    /** */\r\n    MolarEntropyUnits[MolarEntropyUnits[\"JoulesPerMoleKelvin\"] = 0] = \"JoulesPerMoleKelvin\";\r\n    /** */\r\n    MolarEntropyUnits[MolarEntropyUnits[\"KilojoulesPerMoleKelvin\"] = 1] = \"KilojoulesPerMoleKelvin\";\r\n    /** */\r\n    MolarEntropyUnits[MolarEntropyUnits[\"MegajoulesPerMoleKelvin\"] = 2] = \"MegajoulesPerMoleKelvin\";\r\n})(MolarEntropyUnits = exports.MolarEntropyUnits || (exports.MolarEntropyUnits = {}));\r\n/** Molar entropy is amount of energy required to increase temperature of 1 mole substance by 1 Kelvin. */\r\nclass MolarEntropy {\r\n    /**\r\n     * Create a new MolarEntropy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MolarEntropy’ unit to create from.\r\n     * The default unit is JoulesPerMoleKelvin\r\n     */\r\n    constructor(value, fromUnit = MolarEntropyUnits.JoulesPerMoleKelvin) {\r\n        this.joulespermolekelvinLazy = null;\r\n        this.kilojoulespermolekelvinLazy = null;\r\n        this.megajoulespermolekelvinLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MolarEntropy is JoulesPerMoleKelvin.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get JoulesPerMoleKelvin() {\r\n        if (this.joulespermolekelvinLazy !== null) {\r\n            return this.joulespermolekelvinLazy;\r\n        }\r\n        return this.joulespermolekelvinLazy = this.convertFromBase(MolarEntropyUnits.JoulesPerMoleKelvin);\r\n    }\r\n    /** */\r\n    get KilojoulesPerMoleKelvin() {\r\n        if (this.kilojoulespermolekelvinLazy !== null) {\r\n            return this.kilojoulespermolekelvinLazy;\r\n        }\r\n        return this.kilojoulespermolekelvinLazy = this.convertFromBase(MolarEntropyUnits.KilojoulesPerMoleKelvin);\r\n    }\r\n    /** */\r\n    get MegajoulesPerMoleKelvin() {\r\n        if (this.megajoulespermolekelvinLazy !== null) {\r\n            return this.megajoulespermolekelvinLazy;\r\n        }\r\n        return this.megajoulespermolekelvinLazy = this.convertFromBase(MolarEntropyUnits.MegajoulesPerMoleKelvin);\r\n    }\r\n    /**\r\n     * Create a new MolarEntropy instance from a JoulesPerMoleKelvin\r\n     *\r\n     * @param value The unit as JoulesPerMoleKelvin to create a new MolarEntropy from.\r\n     * @returns The new MolarEntropy instance.\r\n     */\r\n    static FromJoulesPerMoleKelvin(value) {\r\n        return new MolarEntropy(value, MolarEntropyUnits.JoulesPerMoleKelvin);\r\n    }\r\n    /**\r\n     * Create a new MolarEntropy instance from a KilojoulesPerMoleKelvin\r\n     *\r\n     * @param value The unit as KilojoulesPerMoleKelvin to create a new MolarEntropy from.\r\n     * @returns The new MolarEntropy instance.\r\n     */\r\n    static FromKilojoulesPerMoleKelvin(value) {\r\n        return new MolarEntropy(value, MolarEntropyUnits.KilojoulesPerMoleKelvin);\r\n    }\r\n    /**\r\n     * Create a new MolarEntropy instance from a MegajoulesPerMoleKelvin\r\n     *\r\n     * @param value The unit as MegajoulesPerMoleKelvin to create a new MolarEntropy from.\r\n     * @returns The new MolarEntropy instance.\r\n     */\r\n    static FromMegajoulesPerMoleKelvin(value) {\r\n        return new MolarEntropy(value, MolarEntropyUnits.MegajoulesPerMoleKelvin);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MolarEntropyUnits.JoulesPerMoleKelvin:\r\n                return this.value;\r\n            case MolarEntropyUnits.KilojoulesPerMoleKelvin:\r\n                return (this.value) / 1000;\r\n            case MolarEntropyUnits.MegajoulesPerMoleKelvin:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MolarEntropyUnits.JoulesPerMoleKelvin:\r\n                return value;\r\n            case MolarEntropyUnits.KilojoulesPerMoleKelvin:\r\n                return (value) * 1000;\r\n            case MolarEntropyUnits.MegajoulesPerMoleKelvin:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MolarEntropy to string.\r\n     * Note! the default format for MolarEntropy is JoulesPerMoleKelvin.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MolarEntropy.\r\n     * @returns The string format of the MolarEntropy.\r\n     */\r\n    toString(toUnit = MolarEntropyUnits.JoulesPerMoleKelvin) {\r\n        switch (toUnit) {\r\n            case MolarEntropyUnits.JoulesPerMoleKelvin:\r\n                return this.JoulesPerMoleKelvin + ` J/(mol*K)`;\r\n            case MolarEntropyUnits.KilojoulesPerMoleKelvin:\r\n                return this.KilojoulesPerMoleKelvin + ` `;\r\n            case MolarEntropyUnits.MegajoulesPerMoleKelvin:\r\n                return this.MegajoulesPerMoleKelvin + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MolarEntropy are equals to the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns True if the given MolarEntropy are equal to the current MolarEntropy.\r\n     */\r\n    equals(molarEntropy) {\r\n        return this.value === molarEntropy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MolarEntropy against the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns 0 if they are equal, -1 if the current MolarEntropy is less then other, 1 if the current MolarEntropy is greater then other.\r\n     */\r\n    compareTo(molarEntropy) {\r\n        if (this.value > molarEntropy.BaseValue)\r\n            return 1;\r\n        if (this.value < molarEntropy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MolarEntropy with the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns A new MolarEntropy instance with the results.\r\n     */\r\n    add(molarEntropy) {\r\n        return new MolarEntropy(this.value + molarEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MolarEntropy with the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns A new MolarEntropy instance with the results.\r\n     */\r\n    subtract(molarEntropy) {\r\n        return new MolarEntropy(this.value - molarEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MolarEntropy with the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns A new MolarEntropy instance with the results.\r\n     */\r\n    multiply(molarEntropy) {\r\n        return new MolarEntropy(this.value * molarEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MolarEntropy with the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns A new MolarEntropy instance with the results.\r\n     */\r\n    divide(molarEntropy) {\r\n        return new MolarEntropy(this.value / molarEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MolarEntropy with the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns A new MolarEntropy instance with the results.\r\n     */\r\n    modulo(molarEntropy) {\r\n        return new MolarEntropy(this.value % molarEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MolarEntropy with the current MolarEntropy.\r\n     * @param molarEntropy The other MolarEntropy.\r\n     * @returns A new MolarEntropy instance with the results.\r\n     */\r\n    pow(molarEntropy) {\r\n        return new MolarEntropy(this.value ** molarEntropy.BaseValue);\r\n    }\r\n}\r\nexports.MolarEntropy = MolarEntropy;\r\n//# sourceMappingURL=molarentropy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MolarMass = exports.MolarMassUnits = void 0;\r\n/** MolarMassUnits enumeration */\r\nvar MolarMassUnits;\r\n(function (MolarMassUnits) {\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"GramsPerMole\"] = 0] = \"GramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"PoundsPerMole\"] = 1] = \"PoundsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"NanogramsPerMole\"] = 2] = \"NanogramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"MicrogramsPerMole\"] = 3] = \"MicrogramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"MilligramsPerMole\"] = 4] = \"MilligramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"CentigramsPerMole\"] = 5] = \"CentigramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"DecigramsPerMole\"] = 6] = \"DecigramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"DecagramsPerMole\"] = 7] = \"DecagramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"HectogramsPerMole\"] = 8] = \"HectogramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"KilogramsPerMole\"] = 9] = \"KilogramsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"KilopoundsPerMole\"] = 10] = \"KilopoundsPerMole\";\r\n    /** */\r\n    MolarMassUnits[MolarMassUnits[\"MegapoundsPerMole\"] = 11] = \"MegapoundsPerMole\";\r\n})(MolarMassUnits = exports.MolarMassUnits || (exports.MolarMassUnits = {}));\r\n/** In chemistry, the molar mass M is a physical property defined as the mass of a given substance (chemical element or chemical compound) divided by the amount of substance. */\r\nclass MolarMass {\r\n    /**\r\n     * Create a new MolarMass.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘MolarMass’ unit to create from.\r\n     * The default unit is KilogramsPerMole\r\n     */\r\n    constructor(value, fromUnit = MolarMassUnits.KilogramsPerMole) {\r\n        this.gramspermoleLazy = null;\r\n        this.poundspermoleLazy = null;\r\n        this.nanogramspermoleLazy = null;\r\n        this.microgramspermoleLazy = null;\r\n        this.milligramspermoleLazy = null;\r\n        this.centigramspermoleLazy = null;\r\n        this.decigramspermoleLazy = null;\r\n        this.decagramspermoleLazy = null;\r\n        this.hectogramspermoleLazy = null;\r\n        this.kilogramspermoleLazy = null;\r\n        this.kilopoundspermoleLazy = null;\r\n        this.megapoundspermoleLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of MolarMass is KilogramsPerMole.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get GramsPerMole() {\r\n        if (this.gramspermoleLazy !== null) {\r\n            return this.gramspermoleLazy;\r\n        }\r\n        return this.gramspermoleLazy = this.convertFromBase(MolarMassUnits.GramsPerMole);\r\n    }\r\n    /** */\r\n    get PoundsPerMole() {\r\n        if (this.poundspermoleLazy !== null) {\r\n            return this.poundspermoleLazy;\r\n        }\r\n        return this.poundspermoleLazy = this.convertFromBase(MolarMassUnits.PoundsPerMole);\r\n    }\r\n    /** */\r\n    get NanogramsPerMole() {\r\n        if (this.nanogramspermoleLazy !== null) {\r\n            return this.nanogramspermoleLazy;\r\n        }\r\n        return this.nanogramspermoleLazy = this.convertFromBase(MolarMassUnits.NanogramsPerMole);\r\n    }\r\n    /** */\r\n    get MicrogramsPerMole() {\r\n        if (this.microgramspermoleLazy !== null) {\r\n            return this.microgramspermoleLazy;\r\n        }\r\n        return this.microgramspermoleLazy = this.convertFromBase(MolarMassUnits.MicrogramsPerMole);\r\n    }\r\n    /** */\r\n    get MilligramsPerMole() {\r\n        if (this.milligramspermoleLazy !== null) {\r\n            return this.milligramspermoleLazy;\r\n        }\r\n        return this.milligramspermoleLazy = this.convertFromBase(MolarMassUnits.MilligramsPerMole);\r\n    }\r\n    /** */\r\n    get CentigramsPerMole() {\r\n        if (this.centigramspermoleLazy !== null) {\r\n            return this.centigramspermoleLazy;\r\n        }\r\n        return this.centigramspermoleLazy = this.convertFromBase(MolarMassUnits.CentigramsPerMole);\r\n    }\r\n    /** */\r\n    get DecigramsPerMole() {\r\n        if (this.decigramspermoleLazy !== null) {\r\n            return this.decigramspermoleLazy;\r\n        }\r\n        return this.decigramspermoleLazy = this.convertFromBase(MolarMassUnits.DecigramsPerMole);\r\n    }\r\n    /** */\r\n    get DecagramsPerMole() {\r\n        if (this.decagramspermoleLazy !== null) {\r\n            return this.decagramspermoleLazy;\r\n        }\r\n        return this.decagramspermoleLazy = this.convertFromBase(MolarMassUnits.DecagramsPerMole);\r\n    }\r\n    /** */\r\n    get HectogramsPerMole() {\r\n        if (this.hectogramspermoleLazy !== null) {\r\n            return this.hectogramspermoleLazy;\r\n        }\r\n        return this.hectogramspermoleLazy = this.convertFromBase(MolarMassUnits.HectogramsPerMole);\r\n    }\r\n    /** */\r\n    get KilogramsPerMole() {\r\n        if (this.kilogramspermoleLazy !== null) {\r\n            return this.kilogramspermoleLazy;\r\n        }\r\n        return this.kilogramspermoleLazy = this.convertFromBase(MolarMassUnits.KilogramsPerMole);\r\n    }\r\n    /** */\r\n    get KilopoundsPerMole() {\r\n        if (this.kilopoundspermoleLazy !== null) {\r\n            return this.kilopoundspermoleLazy;\r\n        }\r\n        return this.kilopoundspermoleLazy = this.convertFromBase(MolarMassUnits.KilopoundsPerMole);\r\n    }\r\n    /** */\r\n    get MegapoundsPerMole() {\r\n        if (this.megapoundspermoleLazy !== null) {\r\n            return this.megapoundspermoleLazy;\r\n        }\r\n        return this.megapoundspermoleLazy = this.convertFromBase(MolarMassUnits.MegapoundsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a GramsPerMole\r\n     *\r\n     * @param value The unit as GramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromGramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.GramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a PoundsPerMole\r\n     *\r\n     * @param value The unit as PoundsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromPoundsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.PoundsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a NanogramsPerMole\r\n     *\r\n     * @param value The unit as NanogramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromNanogramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.NanogramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a MicrogramsPerMole\r\n     *\r\n     * @param value The unit as MicrogramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromMicrogramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.MicrogramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a MilligramsPerMole\r\n     *\r\n     * @param value The unit as MilligramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromMilligramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.MilligramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a CentigramsPerMole\r\n     *\r\n     * @param value The unit as CentigramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromCentigramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.CentigramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a DecigramsPerMole\r\n     *\r\n     * @param value The unit as DecigramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromDecigramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.DecigramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a DecagramsPerMole\r\n     *\r\n     * @param value The unit as DecagramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromDecagramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.DecagramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a HectogramsPerMole\r\n     *\r\n     * @param value The unit as HectogramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromHectogramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.HectogramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a KilogramsPerMole\r\n     *\r\n     * @param value The unit as KilogramsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromKilogramsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.KilogramsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a KilopoundsPerMole\r\n     *\r\n     * @param value The unit as KilopoundsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromKilopoundsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.KilopoundsPerMole);\r\n    }\r\n    /**\r\n     * Create a new MolarMass instance from a MegapoundsPerMole\r\n     *\r\n     * @param value The unit as MegapoundsPerMole to create a new MolarMass from.\r\n     * @returns The new MolarMass instance.\r\n     */\r\n    static FromMegapoundsPerMole(value) {\r\n        return new MolarMass(value, MolarMassUnits.MegapoundsPerMole);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MolarMassUnits.GramsPerMole:\r\n                return this.value * 1e3;\r\n            case MolarMassUnits.PoundsPerMole:\r\n                return this.value / 0.45359237;\r\n            case MolarMassUnits.NanogramsPerMole:\r\n                return (this.value * 1e3) / 1e-9;\r\n            case MolarMassUnits.MicrogramsPerMole:\r\n                return (this.value * 1e3) / 0.000001;\r\n            case MolarMassUnits.MilligramsPerMole:\r\n                return (this.value * 1e3) / 0.001;\r\n            case MolarMassUnits.CentigramsPerMole:\r\n                return (this.value * 1e3) / 0.01;\r\n            case MolarMassUnits.DecigramsPerMole:\r\n                return (this.value * 1e3) / 0.1;\r\n            case MolarMassUnits.DecagramsPerMole:\r\n                return (this.value * 1e3) / 10;\r\n            case MolarMassUnits.HectogramsPerMole:\r\n                return (this.value * 1e3) / 100;\r\n            case MolarMassUnits.KilogramsPerMole:\r\n                return (this.value * 1e3) / 1000;\r\n            case MolarMassUnits.KilopoundsPerMole:\r\n                return (this.value / 0.45359237) / 1000;\r\n            case MolarMassUnits.MegapoundsPerMole:\r\n                return (this.value / 0.45359237) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MolarMassUnits.GramsPerMole:\r\n                return value / 1e3;\r\n            case MolarMassUnits.PoundsPerMole:\r\n                return value * 0.45359237;\r\n            case MolarMassUnits.NanogramsPerMole:\r\n                return (value / 1e3) * 1e-9;\r\n            case MolarMassUnits.MicrogramsPerMole:\r\n                return (value / 1e3) * 0.000001;\r\n            case MolarMassUnits.MilligramsPerMole:\r\n                return (value / 1e3) * 0.001;\r\n            case MolarMassUnits.CentigramsPerMole:\r\n                return (value / 1e3) * 0.01;\r\n            case MolarMassUnits.DecigramsPerMole:\r\n                return (value / 1e3) * 0.1;\r\n            case MolarMassUnits.DecagramsPerMole:\r\n                return (value / 1e3) * 10;\r\n            case MolarMassUnits.HectogramsPerMole:\r\n                return (value / 1e3) * 100;\r\n            case MolarMassUnits.KilogramsPerMole:\r\n                return (value / 1e3) * 1000;\r\n            case MolarMassUnits.KilopoundsPerMole:\r\n                return (value * 0.45359237) * 1000;\r\n            case MolarMassUnits.MegapoundsPerMole:\r\n                return (value * 0.45359237) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the MolarMass to string.\r\n     * Note! the default format for MolarMass is KilogramsPerMole.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the MolarMass.\r\n     * @returns The string format of the MolarMass.\r\n     */\r\n    toString(toUnit = MolarMassUnits.KilogramsPerMole) {\r\n        switch (toUnit) {\r\n            case MolarMassUnits.GramsPerMole:\r\n                return this.GramsPerMole + ` g/mol`;\r\n            case MolarMassUnits.PoundsPerMole:\r\n                return this.PoundsPerMole + ` lb/mol`;\r\n            case MolarMassUnits.NanogramsPerMole:\r\n                return this.NanogramsPerMole + ` `;\r\n            case MolarMassUnits.MicrogramsPerMole:\r\n                return this.MicrogramsPerMole + ` `;\r\n            case MolarMassUnits.MilligramsPerMole:\r\n                return this.MilligramsPerMole + ` `;\r\n            case MolarMassUnits.CentigramsPerMole:\r\n                return this.CentigramsPerMole + ` `;\r\n            case MolarMassUnits.DecigramsPerMole:\r\n                return this.DecigramsPerMole + ` `;\r\n            case MolarMassUnits.DecagramsPerMole:\r\n                return this.DecagramsPerMole + ` `;\r\n            case MolarMassUnits.HectogramsPerMole:\r\n                return this.HectogramsPerMole + ` `;\r\n            case MolarMassUnits.KilogramsPerMole:\r\n                return this.KilogramsPerMole + ` `;\r\n            case MolarMassUnits.KilopoundsPerMole:\r\n                return this.KilopoundsPerMole + ` `;\r\n            case MolarMassUnits.MegapoundsPerMole:\r\n                return this.MegapoundsPerMole + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given MolarMass are equals to the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns True if the given MolarMass are equal to the current MolarMass.\r\n     */\r\n    equals(molarMass) {\r\n        return this.value === molarMass.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given MolarMass against the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns 0 if they are equal, -1 if the current MolarMass is less then other, 1 if the current MolarMass is greater then other.\r\n     */\r\n    compareTo(molarMass) {\r\n        if (this.value > molarMass.BaseValue)\r\n            return 1;\r\n        if (this.value < molarMass.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given MolarMass with the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns A new MolarMass instance with the results.\r\n     */\r\n    add(molarMass) {\r\n        return new MolarMass(this.value + molarMass.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given MolarMass with the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns A new MolarMass instance with the results.\r\n     */\r\n    subtract(molarMass) {\r\n        return new MolarMass(this.value - molarMass.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given MolarMass with the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns A new MolarMass instance with the results.\r\n     */\r\n    multiply(molarMass) {\r\n        return new MolarMass(this.value * molarMass.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given MolarMass with the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns A new MolarMass instance with the results.\r\n     */\r\n    divide(molarMass) {\r\n        return new MolarMass(this.value / molarMass.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given MolarMass with the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns A new MolarMass instance with the results.\r\n     */\r\n    modulo(molarMass) {\r\n        return new MolarMass(this.value % molarMass.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given MolarMass with the current MolarMass.\r\n     * @param molarMass The other MolarMass.\r\n     * @returns A new MolarMass instance with the results.\r\n     */\r\n    pow(molarMass) {\r\n        return new MolarMass(this.value ** molarMass.BaseValue);\r\n    }\r\n}\r\nexports.MolarMass = MolarMass;\r\n//# sourceMappingURL=molarmass.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Molarity = exports.MolarityUnits = void 0;\r\n/** MolarityUnits enumeration */\r\nvar MolarityUnits;\r\n(function (MolarityUnits) {\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"MolesPerCubicMeter\"] = 0] = \"MolesPerCubicMeter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"MolesPerLiter\"] = 1] = \"MolesPerLiter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"PicomolesPerLiter\"] = 2] = \"PicomolesPerLiter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"NanomolesPerLiter\"] = 3] = \"NanomolesPerLiter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"MicromolesPerLiter\"] = 4] = \"MicromolesPerLiter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"MillimolesPerLiter\"] = 5] = \"MillimolesPerLiter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"CentimolesPerLiter\"] = 6] = \"CentimolesPerLiter\";\r\n    /** */\r\n    MolarityUnits[MolarityUnits[\"DecimolesPerLiter\"] = 7] = \"DecimolesPerLiter\";\r\n})(MolarityUnits = exports.MolarityUnits || (exports.MolarityUnits = {}));\r\n/** Molar concentration, also called molarity, amount concentration or substance concentration, is a measure of the concentration of a solute in a solution, or of any chemical species, in terms of amount of substance in a given volume. */\r\nclass Molarity {\r\n    /**\r\n     * Create a new Molarity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Molarity’ unit to create from.\r\n     * The default unit is MolesPerCubicMeter\r\n     */\r\n    constructor(value, fromUnit = MolarityUnits.MolesPerCubicMeter) {\r\n        this.molespercubicmeterLazy = null;\r\n        this.molesperliterLazy = null;\r\n        this.picomolesperliterLazy = null;\r\n        this.nanomolesperliterLazy = null;\r\n        this.micromolesperliterLazy = null;\r\n        this.millimolesperliterLazy = null;\r\n        this.centimolesperliterLazy = null;\r\n        this.decimolesperliterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Molarity is MolesPerCubicMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get MolesPerCubicMeter() {\r\n        if (this.molespercubicmeterLazy !== null) {\r\n            return this.molespercubicmeterLazy;\r\n        }\r\n        return this.molespercubicmeterLazy = this.convertFromBase(MolarityUnits.MolesPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MolesPerLiter() {\r\n        if (this.molesperliterLazy !== null) {\r\n            return this.molesperliterLazy;\r\n        }\r\n        return this.molesperliterLazy = this.convertFromBase(MolarityUnits.MolesPerLiter);\r\n    }\r\n    /** */\r\n    get PicomolesPerLiter() {\r\n        if (this.picomolesperliterLazy !== null) {\r\n            return this.picomolesperliterLazy;\r\n        }\r\n        return this.picomolesperliterLazy = this.convertFromBase(MolarityUnits.PicomolesPerLiter);\r\n    }\r\n    /** */\r\n    get NanomolesPerLiter() {\r\n        if (this.nanomolesperliterLazy !== null) {\r\n            return this.nanomolesperliterLazy;\r\n        }\r\n        return this.nanomolesperliterLazy = this.convertFromBase(MolarityUnits.NanomolesPerLiter);\r\n    }\r\n    /** */\r\n    get MicromolesPerLiter() {\r\n        if (this.micromolesperliterLazy !== null) {\r\n            return this.micromolesperliterLazy;\r\n        }\r\n        return this.micromolesperliterLazy = this.convertFromBase(MolarityUnits.MicromolesPerLiter);\r\n    }\r\n    /** */\r\n    get MillimolesPerLiter() {\r\n        if (this.millimolesperliterLazy !== null) {\r\n            return this.millimolesperliterLazy;\r\n        }\r\n        return this.millimolesperliterLazy = this.convertFromBase(MolarityUnits.MillimolesPerLiter);\r\n    }\r\n    /** */\r\n    get CentimolesPerLiter() {\r\n        if (this.centimolesperliterLazy !== null) {\r\n            return this.centimolesperliterLazy;\r\n        }\r\n        return this.centimolesperliterLazy = this.convertFromBase(MolarityUnits.CentimolesPerLiter);\r\n    }\r\n    /** */\r\n    get DecimolesPerLiter() {\r\n        if (this.decimolesperliterLazy !== null) {\r\n            return this.decimolesperliterLazy;\r\n        }\r\n        return this.decimolesperliterLazy = this.convertFromBase(MolarityUnits.DecimolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a MolesPerCubicMeter\r\n     *\r\n     * @param value The unit as MolesPerCubicMeter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromMolesPerCubicMeter(value) {\r\n        return new Molarity(value, MolarityUnits.MolesPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a MolesPerLiter\r\n     *\r\n     * @param value The unit as MolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromMolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.MolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a PicomolesPerLiter\r\n     *\r\n     * @param value The unit as PicomolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromPicomolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.PicomolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a NanomolesPerLiter\r\n     *\r\n     * @param value The unit as NanomolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromNanomolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.NanomolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a MicromolesPerLiter\r\n     *\r\n     * @param value The unit as MicromolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromMicromolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.MicromolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a MillimolesPerLiter\r\n     *\r\n     * @param value The unit as MillimolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromMillimolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.MillimolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a CentimolesPerLiter\r\n     *\r\n     * @param value The unit as CentimolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromCentimolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.CentimolesPerLiter);\r\n    }\r\n    /**\r\n     * Create a new Molarity instance from a DecimolesPerLiter\r\n     *\r\n     * @param value The unit as DecimolesPerLiter to create a new Molarity from.\r\n     * @returns The new Molarity instance.\r\n     */\r\n    static FromDecimolesPerLiter(value) {\r\n        return new Molarity(value, MolarityUnits.DecimolesPerLiter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case MolarityUnits.MolesPerCubicMeter:\r\n                return this.value;\r\n            case MolarityUnits.MolesPerLiter:\r\n                return this.value * 1e-3;\r\n            case MolarityUnits.PicomolesPerLiter:\r\n                return (this.value * 1e-3) / 1e-12;\r\n            case MolarityUnits.NanomolesPerLiter:\r\n                return (this.value * 1e-3) / 1e-9;\r\n            case MolarityUnits.MicromolesPerLiter:\r\n                return (this.value * 1e-3) / 0.000001;\r\n            case MolarityUnits.MillimolesPerLiter:\r\n                return (this.value * 1e-3) / 0.001;\r\n            case MolarityUnits.CentimolesPerLiter:\r\n                return (this.value * 1e-3) / 0.01;\r\n            case MolarityUnits.DecimolesPerLiter:\r\n                return (this.value * 1e-3) / 0.1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case MolarityUnits.MolesPerCubicMeter:\r\n                return value;\r\n            case MolarityUnits.MolesPerLiter:\r\n                return value / 1e-3;\r\n            case MolarityUnits.PicomolesPerLiter:\r\n                return (value / 1e-3) * 1e-12;\r\n            case MolarityUnits.NanomolesPerLiter:\r\n                return (value / 1e-3) * 1e-9;\r\n            case MolarityUnits.MicromolesPerLiter:\r\n                return (value / 1e-3) * 0.000001;\r\n            case MolarityUnits.MillimolesPerLiter:\r\n                return (value / 1e-3) * 0.001;\r\n            case MolarityUnits.CentimolesPerLiter:\r\n                return (value / 1e-3) * 0.01;\r\n            case MolarityUnits.DecimolesPerLiter:\r\n                return (value / 1e-3) * 0.1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Molarity to string.\r\n     * Note! the default format for Molarity is MolesPerCubicMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Molarity.\r\n     * @returns The string format of the Molarity.\r\n     */\r\n    toString(toUnit = MolarityUnits.MolesPerCubicMeter) {\r\n        switch (toUnit) {\r\n            case MolarityUnits.MolesPerCubicMeter:\r\n                return this.MolesPerCubicMeter + ` mol/m³`;\r\n            case MolarityUnits.MolesPerLiter:\r\n                return this.MolesPerLiter + ` mol/L`;\r\n            case MolarityUnits.PicomolesPerLiter:\r\n                return this.PicomolesPerLiter + ` `;\r\n            case MolarityUnits.NanomolesPerLiter:\r\n                return this.NanomolesPerLiter + ` `;\r\n            case MolarityUnits.MicromolesPerLiter:\r\n                return this.MicromolesPerLiter + ` `;\r\n            case MolarityUnits.MillimolesPerLiter:\r\n                return this.MillimolesPerLiter + ` `;\r\n            case MolarityUnits.CentimolesPerLiter:\r\n                return this.CentimolesPerLiter + ` `;\r\n            case MolarityUnits.DecimolesPerLiter:\r\n                return this.DecimolesPerLiter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Molarity are equals to the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns True if the given Molarity are equal to the current Molarity.\r\n     */\r\n    equals(molarity) {\r\n        return this.value === molarity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Molarity against the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns 0 if they are equal, -1 if the current Molarity is less then other, 1 if the current Molarity is greater then other.\r\n     */\r\n    compareTo(molarity) {\r\n        if (this.value > molarity.BaseValue)\r\n            return 1;\r\n        if (this.value < molarity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Molarity with the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns A new Molarity instance with the results.\r\n     */\r\n    add(molarity) {\r\n        return new Molarity(this.value + molarity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Molarity with the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns A new Molarity instance with the results.\r\n     */\r\n    subtract(molarity) {\r\n        return new Molarity(this.value - molarity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Molarity with the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns A new Molarity instance with the results.\r\n     */\r\n    multiply(molarity) {\r\n        return new Molarity(this.value * molarity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Molarity with the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns A new Molarity instance with the results.\r\n     */\r\n    divide(molarity) {\r\n        return new Molarity(this.value / molarity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Molarity with the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns A new Molarity instance with the results.\r\n     */\r\n    modulo(molarity) {\r\n        return new Molarity(this.value % molarity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Molarity with the current Molarity.\r\n     * @param molarity The other Molarity.\r\n     * @returns A new Molarity instance with the results.\r\n     */\r\n    pow(molarity) {\r\n        return new Molarity(this.value ** molarity.BaseValue);\r\n    }\r\n}\r\nexports.Molarity = Molarity;\r\n//# sourceMappingURL=molarity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Permeability = exports.PermeabilityUnits = void 0;\r\n/** PermeabilityUnits enumeration */\r\nvar PermeabilityUnits;\r\n(function (PermeabilityUnits) {\r\n    /** */\r\n    PermeabilityUnits[PermeabilityUnits[\"HenriesPerMeter\"] = 0] = \"HenriesPerMeter\";\r\n})(PermeabilityUnits = exports.PermeabilityUnits || (exports.PermeabilityUnits = {}));\r\n/** In electromagnetism, permeability is the measure of the ability of a material to support the formation of a magnetic field within itself. */\r\nclass Permeability {\r\n    /**\r\n     * Create a new Permeability.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Permeability’ unit to create from.\r\n     * The default unit is HenriesPerMeter\r\n     */\r\n    constructor(value, fromUnit = PermeabilityUnits.HenriesPerMeter) {\r\n        this.henriespermeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Permeability is HenriesPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get HenriesPerMeter() {\r\n        if (this.henriespermeterLazy !== null) {\r\n            return this.henriespermeterLazy;\r\n        }\r\n        return this.henriespermeterLazy = this.convertFromBase(PermeabilityUnits.HenriesPerMeter);\r\n    }\r\n    /**\r\n     * Create a new Permeability instance from a HenriesPerMeter\r\n     *\r\n     * @param value The unit as HenriesPerMeter to create a new Permeability from.\r\n     * @returns The new Permeability instance.\r\n     */\r\n    static FromHenriesPerMeter(value) {\r\n        return new Permeability(value, PermeabilityUnits.HenriesPerMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PermeabilityUnits.HenriesPerMeter:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PermeabilityUnits.HenriesPerMeter:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Permeability to string.\r\n     * Note! the default format for Permeability is HenriesPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Permeability.\r\n     * @returns The string format of the Permeability.\r\n     */\r\n    toString(toUnit = PermeabilityUnits.HenriesPerMeter) {\r\n        switch (toUnit) {\r\n            case PermeabilityUnits.HenriesPerMeter:\r\n                return this.HenriesPerMeter + ` H/m`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Permeability are equals to the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns True if the given Permeability are equal to the current Permeability.\r\n     */\r\n    equals(permeability) {\r\n        return this.value === permeability.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Permeability against the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns 0 if they are equal, -1 if the current Permeability is less then other, 1 if the current Permeability is greater then other.\r\n     */\r\n    compareTo(permeability) {\r\n        if (this.value > permeability.BaseValue)\r\n            return 1;\r\n        if (this.value < permeability.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Permeability with the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns A new Permeability instance with the results.\r\n     */\r\n    add(permeability) {\r\n        return new Permeability(this.value + permeability.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Permeability with the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns A new Permeability instance with the results.\r\n     */\r\n    subtract(permeability) {\r\n        return new Permeability(this.value - permeability.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Permeability with the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns A new Permeability instance with the results.\r\n     */\r\n    multiply(permeability) {\r\n        return new Permeability(this.value * permeability.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Permeability with the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns A new Permeability instance with the results.\r\n     */\r\n    divide(permeability) {\r\n        return new Permeability(this.value / permeability.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Permeability with the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns A new Permeability instance with the results.\r\n     */\r\n    modulo(permeability) {\r\n        return new Permeability(this.value % permeability.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Permeability with the current Permeability.\r\n     * @param permeability The other Permeability.\r\n     * @returns A new Permeability instance with the results.\r\n     */\r\n    pow(permeability) {\r\n        return new Permeability(this.value ** permeability.BaseValue);\r\n    }\r\n}\r\nexports.Permeability = Permeability;\r\n//# sourceMappingURL=permeability.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Permittivity = exports.PermittivityUnits = void 0;\r\n/** PermittivityUnits enumeration */\r\nvar PermittivityUnits;\r\n(function (PermittivityUnits) {\r\n    /** */\r\n    PermittivityUnits[PermittivityUnits[\"FaradsPerMeter\"] = 0] = \"FaradsPerMeter\";\r\n})(PermittivityUnits = exports.PermittivityUnits || (exports.PermittivityUnits = {}));\r\n/** In electromagnetism, permittivity is the measure of resistance that is encountered when forming an electric field in a particular medium. */\r\nclass Permittivity {\r\n    /**\r\n     * Create a new Permittivity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Permittivity’ unit to create from.\r\n     * The default unit is FaradsPerMeter\r\n     */\r\n    constructor(value, fromUnit = PermittivityUnits.FaradsPerMeter) {\r\n        this.faradspermeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Permittivity is FaradsPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get FaradsPerMeter() {\r\n        if (this.faradspermeterLazy !== null) {\r\n            return this.faradspermeterLazy;\r\n        }\r\n        return this.faradspermeterLazy = this.convertFromBase(PermittivityUnits.FaradsPerMeter);\r\n    }\r\n    /**\r\n     * Create a new Permittivity instance from a FaradsPerMeter\r\n     *\r\n     * @param value The unit as FaradsPerMeter to create a new Permittivity from.\r\n     * @returns The new Permittivity instance.\r\n     */\r\n    static FromFaradsPerMeter(value) {\r\n        return new Permittivity(value, PermittivityUnits.FaradsPerMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PermittivityUnits.FaradsPerMeter:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PermittivityUnits.FaradsPerMeter:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Permittivity to string.\r\n     * Note! the default format for Permittivity is FaradsPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Permittivity.\r\n     * @returns The string format of the Permittivity.\r\n     */\r\n    toString(toUnit = PermittivityUnits.FaradsPerMeter) {\r\n        switch (toUnit) {\r\n            case PermittivityUnits.FaradsPerMeter:\r\n                return this.FaradsPerMeter + ` F/m`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Permittivity are equals to the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns True if the given Permittivity are equal to the current Permittivity.\r\n     */\r\n    equals(permittivity) {\r\n        return this.value === permittivity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Permittivity against the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns 0 if they are equal, -1 if the current Permittivity is less then other, 1 if the current Permittivity is greater then other.\r\n     */\r\n    compareTo(permittivity) {\r\n        if (this.value > permittivity.BaseValue)\r\n            return 1;\r\n        if (this.value < permittivity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Permittivity with the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns A new Permittivity instance with the results.\r\n     */\r\n    add(permittivity) {\r\n        return new Permittivity(this.value + permittivity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Permittivity with the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns A new Permittivity instance with the results.\r\n     */\r\n    subtract(permittivity) {\r\n        return new Permittivity(this.value - permittivity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Permittivity with the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns A new Permittivity instance with the results.\r\n     */\r\n    multiply(permittivity) {\r\n        return new Permittivity(this.value * permittivity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Permittivity with the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns A new Permittivity instance with the results.\r\n     */\r\n    divide(permittivity) {\r\n        return new Permittivity(this.value / permittivity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Permittivity with the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns A new Permittivity instance with the results.\r\n     */\r\n    modulo(permittivity) {\r\n        return new Permittivity(this.value % permittivity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Permittivity with the current Permittivity.\r\n     * @param permittivity The other Permittivity.\r\n     * @returns A new Permittivity instance with the results.\r\n     */\r\n    pow(permittivity) {\r\n        return new Permittivity(this.value ** permittivity.BaseValue);\r\n    }\r\n}\r\nexports.Permittivity = Permittivity;\r\n//# sourceMappingURL=permittivity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Power = exports.PowerUnits = void 0;\r\n/** PowerUnits enumeration */\r\nvar PowerUnits;\r\n(function (PowerUnits) {\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Watts\"] = 0] = \"Watts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"MechanicalHorsepower\"] = 1] = \"MechanicalHorsepower\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"MetricHorsepower\"] = 2] = \"MetricHorsepower\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"ElectricalHorsepower\"] = 3] = \"ElectricalHorsepower\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"BoilerHorsepower\"] = 4] = \"BoilerHorsepower\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"HydraulicHorsepower\"] = 5] = \"HydraulicHorsepower\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"BritishThermalUnitsPerHour\"] = 6] = \"BritishThermalUnitsPerHour\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"JoulesPerHour\"] = 7] = \"JoulesPerHour\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Femtowatts\"] = 8] = \"Femtowatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Picowatts\"] = 9] = \"Picowatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Nanowatts\"] = 10] = \"Nanowatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Microwatts\"] = 11] = \"Microwatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Milliwatts\"] = 12] = \"Milliwatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Deciwatts\"] = 13] = \"Deciwatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Decawatts\"] = 14] = \"Decawatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Kilowatts\"] = 15] = \"Kilowatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Megawatts\"] = 16] = \"Megawatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Gigawatts\"] = 17] = \"Gigawatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Terawatts\"] = 18] = \"Terawatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"Petawatts\"] = 19] = \"Petawatts\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"KilobritishThermalUnitsPerHour\"] = 20] = \"KilobritishThermalUnitsPerHour\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"MillijoulesPerHour\"] = 21] = \"MillijoulesPerHour\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"KilojoulesPerHour\"] = 22] = \"KilojoulesPerHour\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"MegajoulesPerHour\"] = 23] = \"MegajoulesPerHour\";\r\n    /** */\r\n    PowerUnits[PowerUnits[\"GigajoulesPerHour\"] = 24] = \"GigajoulesPerHour\";\r\n})(PowerUnits = exports.PowerUnits || (exports.PowerUnits = {}));\r\n/** In physics, power is the rate of doing work. It is equivalent to an amount of energy consumed per unit time. */\r\nclass Power {\r\n    /**\r\n     * Create a new Power.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Power’ unit to create from.\r\n     * The default unit is Watts\r\n     */\r\n    constructor(value, fromUnit = PowerUnits.Watts) {\r\n        this.wattsLazy = null;\r\n        this.mechanicalhorsepowerLazy = null;\r\n        this.metrichorsepowerLazy = null;\r\n        this.electricalhorsepowerLazy = null;\r\n        this.boilerhorsepowerLazy = null;\r\n        this.hydraulichorsepowerLazy = null;\r\n        this.britishthermalunitsperhourLazy = null;\r\n        this.joulesperhourLazy = null;\r\n        this.femtowattsLazy = null;\r\n        this.picowattsLazy = null;\r\n        this.nanowattsLazy = null;\r\n        this.microwattsLazy = null;\r\n        this.milliwattsLazy = null;\r\n        this.deciwattsLazy = null;\r\n        this.decawattsLazy = null;\r\n        this.kilowattsLazy = null;\r\n        this.megawattsLazy = null;\r\n        this.gigawattsLazy = null;\r\n        this.terawattsLazy = null;\r\n        this.petawattsLazy = null;\r\n        this.kilobritishthermalunitsperhourLazy = null;\r\n        this.millijoulesperhourLazy = null;\r\n        this.kilojoulesperhourLazy = null;\r\n        this.megajoulesperhourLazy = null;\r\n        this.gigajoulesperhourLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Power is Watts.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Watts() {\r\n        if (this.wattsLazy !== null) {\r\n            return this.wattsLazy;\r\n        }\r\n        return this.wattsLazy = this.convertFromBase(PowerUnits.Watts);\r\n    }\r\n    /** */\r\n    get MechanicalHorsepower() {\r\n        if (this.mechanicalhorsepowerLazy !== null) {\r\n            return this.mechanicalhorsepowerLazy;\r\n        }\r\n        return this.mechanicalhorsepowerLazy = this.convertFromBase(PowerUnits.MechanicalHorsepower);\r\n    }\r\n    /** */\r\n    get MetricHorsepower() {\r\n        if (this.metrichorsepowerLazy !== null) {\r\n            return this.metrichorsepowerLazy;\r\n        }\r\n        return this.metrichorsepowerLazy = this.convertFromBase(PowerUnits.MetricHorsepower);\r\n    }\r\n    /** */\r\n    get ElectricalHorsepower() {\r\n        if (this.electricalhorsepowerLazy !== null) {\r\n            return this.electricalhorsepowerLazy;\r\n        }\r\n        return this.electricalhorsepowerLazy = this.convertFromBase(PowerUnits.ElectricalHorsepower);\r\n    }\r\n    /** */\r\n    get BoilerHorsepower() {\r\n        if (this.boilerhorsepowerLazy !== null) {\r\n            return this.boilerhorsepowerLazy;\r\n        }\r\n        return this.boilerhorsepowerLazy = this.convertFromBase(PowerUnits.BoilerHorsepower);\r\n    }\r\n    /** */\r\n    get HydraulicHorsepower() {\r\n        if (this.hydraulichorsepowerLazy !== null) {\r\n            return this.hydraulichorsepowerLazy;\r\n        }\r\n        return this.hydraulichorsepowerLazy = this.convertFromBase(PowerUnits.HydraulicHorsepower);\r\n    }\r\n    /** */\r\n    get BritishThermalUnitsPerHour() {\r\n        if (this.britishthermalunitsperhourLazy !== null) {\r\n            return this.britishthermalunitsperhourLazy;\r\n        }\r\n        return this.britishthermalunitsperhourLazy = this.convertFromBase(PowerUnits.BritishThermalUnitsPerHour);\r\n    }\r\n    /** */\r\n    get JoulesPerHour() {\r\n        if (this.joulesperhourLazy !== null) {\r\n            return this.joulesperhourLazy;\r\n        }\r\n        return this.joulesperhourLazy = this.convertFromBase(PowerUnits.JoulesPerHour);\r\n    }\r\n    /** */\r\n    get Femtowatts() {\r\n        if (this.femtowattsLazy !== null) {\r\n            return this.femtowattsLazy;\r\n        }\r\n        return this.femtowattsLazy = this.convertFromBase(PowerUnits.Femtowatts);\r\n    }\r\n    /** */\r\n    get Picowatts() {\r\n        if (this.picowattsLazy !== null) {\r\n            return this.picowattsLazy;\r\n        }\r\n        return this.picowattsLazy = this.convertFromBase(PowerUnits.Picowatts);\r\n    }\r\n    /** */\r\n    get Nanowatts() {\r\n        if (this.nanowattsLazy !== null) {\r\n            return this.nanowattsLazy;\r\n        }\r\n        return this.nanowattsLazy = this.convertFromBase(PowerUnits.Nanowatts);\r\n    }\r\n    /** */\r\n    get Microwatts() {\r\n        if (this.microwattsLazy !== null) {\r\n            return this.microwattsLazy;\r\n        }\r\n        return this.microwattsLazy = this.convertFromBase(PowerUnits.Microwatts);\r\n    }\r\n    /** */\r\n    get Milliwatts() {\r\n        if (this.milliwattsLazy !== null) {\r\n            return this.milliwattsLazy;\r\n        }\r\n        return this.milliwattsLazy = this.convertFromBase(PowerUnits.Milliwatts);\r\n    }\r\n    /** */\r\n    get Deciwatts() {\r\n        if (this.deciwattsLazy !== null) {\r\n            return this.deciwattsLazy;\r\n        }\r\n        return this.deciwattsLazy = this.convertFromBase(PowerUnits.Deciwatts);\r\n    }\r\n    /** */\r\n    get Decawatts() {\r\n        if (this.decawattsLazy !== null) {\r\n            return this.decawattsLazy;\r\n        }\r\n        return this.decawattsLazy = this.convertFromBase(PowerUnits.Decawatts);\r\n    }\r\n    /** */\r\n    get Kilowatts() {\r\n        if (this.kilowattsLazy !== null) {\r\n            return this.kilowattsLazy;\r\n        }\r\n        return this.kilowattsLazy = this.convertFromBase(PowerUnits.Kilowatts);\r\n    }\r\n    /** */\r\n    get Megawatts() {\r\n        if (this.megawattsLazy !== null) {\r\n            return this.megawattsLazy;\r\n        }\r\n        return this.megawattsLazy = this.convertFromBase(PowerUnits.Megawatts);\r\n    }\r\n    /** */\r\n    get Gigawatts() {\r\n        if (this.gigawattsLazy !== null) {\r\n            return this.gigawattsLazy;\r\n        }\r\n        return this.gigawattsLazy = this.convertFromBase(PowerUnits.Gigawatts);\r\n    }\r\n    /** */\r\n    get Terawatts() {\r\n        if (this.terawattsLazy !== null) {\r\n            return this.terawattsLazy;\r\n        }\r\n        return this.terawattsLazy = this.convertFromBase(PowerUnits.Terawatts);\r\n    }\r\n    /** */\r\n    get Petawatts() {\r\n        if (this.petawattsLazy !== null) {\r\n            return this.petawattsLazy;\r\n        }\r\n        return this.petawattsLazy = this.convertFromBase(PowerUnits.Petawatts);\r\n    }\r\n    /** */\r\n    get KilobritishThermalUnitsPerHour() {\r\n        if (this.kilobritishthermalunitsperhourLazy !== null) {\r\n            return this.kilobritishthermalunitsperhourLazy;\r\n        }\r\n        return this.kilobritishthermalunitsperhourLazy = this.convertFromBase(PowerUnits.KilobritishThermalUnitsPerHour);\r\n    }\r\n    /** */\r\n    get MillijoulesPerHour() {\r\n        if (this.millijoulesperhourLazy !== null) {\r\n            return this.millijoulesperhourLazy;\r\n        }\r\n        return this.millijoulesperhourLazy = this.convertFromBase(PowerUnits.MillijoulesPerHour);\r\n    }\r\n    /** */\r\n    get KilojoulesPerHour() {\r\n        if (this.kilojoulesperhourLazy !== null) {\r\n            return this.kilojoulesperhourLazy;\r\n        }\r\n        return this.kilojoulesperhourLazy = this.convertFromBase(PowerUnits.KilojoulesPerHour);\r\n    }\r\n    /** */\r\n    get MegajoulesPerHour() {\r\n        if (this.megajoulesperhourLazy !== null) {\r\n            return this.megajoulesperhourLazy;\r\n        }\r\n        return this.megajoulesperhourLazy = this.convertFromBase(PowerUnits.MegajoulesPerHour);\r\n    }\r\n    /** */\r\n    get GigajoulesPerHour() {\r\n        if (this.gigajoulesperhourLazy !== null) {\r\n            return this.gigajoulesperhourLazy;\r\n        }\r\n        return this.gigajoulesperhourLazy = this.convertFromBase(PowerUnits.GigajoulesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Watts\r\n     *\r\n     * @param value The unit as Watts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromWatts(value) {\r\n        return new Power(value, PowerUnits.Watts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a MechanicalHorsepower\r\n     *\r\n     * @param value The unit as MechanicalHorsepower to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMechanicalHorsepower(value) {\r\n        return new Power(value, PowerUnits.MechanicalHorsepower);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a MetricHorsepower\r\n     *\r\n     * @param value The unit as MetricHorsepower to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMetricHorsepower(value) {\r\n        return new Power(value, PowerUnits.MetricHorsepower);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a ElectricalHorsepower\r\n     *\r\n     * @param value The unit as ElectricalHorsepower to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromElectricalHorsepower(value) {\r\n        return new Power(value, PowerUnits.ElectricalHorsepower);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a BoilerHorsepower\r\n     *\r\n     * @param value The unit as BoilerHorsepower to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromBoilerHorsepower(value) {\r\n        return new Power(value, PowerUnits.BoilerHorsepower);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a HydraulicHorsepower\r\n     *\r\n     * @param value The unit as HydraulicHorsepower to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromHydraulicHorsepower(value) {\r\n        return new Power(value, PowerUnits.HydraulicHorsepower);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a BritishThermalUnitsPerHour\r\n     *\r\n     * @param value The unit as BritishThermalUnitsPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromBritishThermalUnitsPerHour(value) {\r\n        return new Power(value, PowerUnits.BritishThermalUnitsPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a JoulesPerHour\r\n     *\r\n     * @param value The unit as JoulesPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromJoulesPerHour(value) {\r\n        return new Power(value, PowerUnits.JoulesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Femtowatts\r\n     *\r\n     * @param value The unit as Femtowatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromFemtowatts(value) {\r\n        return new Power(value, PowerUnits.Femtowatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Picowatts\r\n     *\r\n     * @param value The unit as Picowatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromPicowatts(value) {\r\n        return new Power(value, PowerUnits.Picowatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Nanowatts\r\n     *\r\n     * @param value The unit as Nanowatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromNanowatts(value) {\r\n        return new Power(value, PowerUnits.Nanowatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Microwatts\r\n     *\r\n     * @param value The unit as Microwatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMicrowatts(value) {\r\n        return new Power(value, PowerUnits.Microwatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Milliwatts\r\n     *\r\n     * @param value The unit as Milliwatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMilliwatts(value) {\r\n        return new Power(value, PowerUnits.Milliwatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Deciwatts\r\n     *\r\n     * @param value The unit as Deciwatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromDeciwatts(value) {\r\n        return new Power(value, PowerUnits.Deciwatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Decawatts\r\n     *\r\n     * @param value The unit as Decawatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromDecawatts(value) {\r\n        return new Power(value, PowerUnits.Decawatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Kilowatts\r\n     *\r\n     * @param value The unit as Kilowatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromKilowatts(value) {\r\n        return new Power(value, PowerUnits.Kilowatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Megawatts\r\n     *\r\n     * @param value The unit as Megawatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMegawatts(value) {\r\n        return new Power(value, PowerUnits.Megawatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Gigawatts\r\n     *\r\n     * @param value The unit as Gigawatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromGigawatts(value) {\r\n        return new Power(value, PowerUnits.Gigawatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Terawatts\r\n     *\r\n     * @param value The unit as Terawatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromTerawatts(value) {\r\n        return new Power(value, PowerUnits.Terawatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a Petawatts\r\n     *\r\n     * @param value The unit as Petawatts to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromPetawatts(value) {\r\n        return new Power(value, PowerUnits.Petawatts);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a KilobritishThermalUnitsPerHour\r\n     *\r\n     * @param value The unit as KilobritishThermalUnitsPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromKilobritishThermalUnitsPerHour(value) {\r\n        return new Power(value, PowerUnits.KilobritishThermalUnitsPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a MillijoulesPerHour\r\n     *\r\n     * @param value The unit as MillijoulesPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMillijoulesPerHour(value) {\r\n        return new Power(value, PowerUnits.MillijoulesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a KilojoulesPerHour\r\n     *\r\n     * @param value The unit as KilojoulesPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromKilojoulesPerHour(value) {\r\n        return new Power(value, PowerUnits.KilojoulesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a MegajoulesPerHour\r\n     *\r\n     * @param value The unit as MegajoulesPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromMegajoulesPerHour(value) {\r\n        return new Power(value, PowerUnits.MegajoulesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Power instance from a GigajoulesPerHour\r\n     *\r\n     * @param value The unit as GigajoulesPerHour to create a new Power from.\r\n     * @returns The new Power instance.\r\n     */\r\n    static FromGigajoulesPerHour(value) {\r\n        return new Power(value, PowerUnits.GigajoulesPerHour);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PowerUnits.Watts:\r\n                return this.value;\r\n            case PowerUnits.MechanicalHorsepower:\r\n                return this.value / 745.69;\r\n            case PowerUnits.MetricHorsepower:\r\n                return this.value / 735.49875;\r\n            case PowerUnits.ElectricalHorsepower:\r\n                return this.value / 746;\r\n            case PowerUnits.BoilerHorsepower:\r\n                return this.value / 9812.5;\r\n            case PowerUnits.HydraulicHorsepower:\r\n                return this.value / 745.69988145;\r\n            case PowerUnits.BritishThermalUnitsPerHour:\r\n                return this.value / 0.293071;\r\n            case PowerUnits.JoulesPerHour:\r\n                return this.value * 3600;\r\n            case PowerUnits.Femtowatts:\r\n                return (this.value) / 1e-15;\r\n            case PowerUnits.Picowatts:\r\n                return (this.value) / 1e-12;\r\n            case PowerUnits.Nanowatts:\r\n                return (this.value) / 1e-9;\r\n            case PowerUnits.Microwatts:\r\n                return (this.value) / 0.000001;\r\n            case PowerUnits.Milliwatts:\r\n                return (this.value) / 0.001;\r\n            case PowerUnits.Deciwatts:\r\n                return (this.value) / 0.1;\r\n            case PowerUnits.Decawatts:\r\n                return (this.value) / 10;\r\n            case PowerUnits.Kilowatts:\r\n                return (this.value) / 1000;\r\n            case PowerUnits.Megawatts:\r\n                return (this.value) / 1000000;\r\n            case PowerUnits.Gigawatts:\r\n                return (this.value) / 1000000000;\r\n            case PowerUnits.Terawatts:\r\n                return (this.value) / 1000000000000;\r\n            case PowerUnits.Petawatts:\r\n                return (this.value) / 1000000000000000;\r\n            case PowerUnits.KilobritishThermalUnitsPerHour:\r\n                return (this.value / 0.293071) / 1000;\r\n            case PowerUnits.MillijoulesPerHour:\r\n                return (this.value * 3600) / 0.001;\r\n            case PowerUnits.KilojoulesPerHour:\r\n                return (this.value * 3600) / 1000;\r\n            case PowerUnits.MegajoulesPerHour:\r\n                return (this.value * 3600) / 1000000;\r\n            case PowerUnits.GigajoulesPerHour:\r\n                return (this.value * 3600) / 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PowerUnits.Watts:\r\n                return value;\r\n            case PowerUnits.MechanicalHorsepower:\r\n                return value * 745.69;\r\n            case PowerUnits.MetricHorsepower:\r\n                return value * 735.49875;\r\n            case PowerUnits.ElectricalHorsepower:\r\n                return value * 746;\r\n            case PowerUnits.BoilerHorsepower:\r\n                return value * 9812.5;\r\n            case PowerUnits.HydraulicHorsepower:\r\n                return value * 745.69988145;\r\n            case PowerUnits.BritishThermalUnitsPerHour:\r\n                return value * 0.293071;\r\n            case PowerUnits.JoulesPerHour:\r\n                return value / 3600;\r\n            case PowerUnits.Femtowatts:\r\n                return (value) * 1e-15;\r\n            case PowerUnits.Picowatts:\r\n                return (value) * 1e-12;\r\n            case PowerUnits.Nanowatts:\r\n                return (value) * 1e-9;\r\n            case PowerUnits.Microwatts:\r\n                return (value) * 0.000001;\r\n            case PowerUnits.Milliwatts:\r\n                return (value) * 0.001;\r\n            case PowerUnits.Deciwatts:\r\n                return (value) * 0.1;\r\n            case PowerUnits.Decawatts:\r\n                return (value) * 10;\r\n            case PowerUnits.Kilowatts:\r\n                return (value) * 1000;\r\n            case PowerUnits.Megawatts:\r\n                return (value) * 1000000;\r\n            case PowerUnits.Gigawatts:\r\n                return (value) * 1000000000;\r\n            case PowerUnits.Terawatts:\r\n                return (value) * 1000000000000;\r\n            case PowerUnits.Petawatts:\r\n                return (value) * 1000000000000000;\r\n            case PowerUnits.KilobritishThermalUnitsPerHour:\r\n                return (value * 0.293071) * 1000;\r\n            case PowerUnits.MillijoulesPerHour:\r\n                return (value / 3600) * 0.001;\r\n            case PowerUnits.KilojoulesPerHour:\r\n                return (value / 3600) * 1000;\r\n            case PowerUnits.MegajoulesPerHour:\r\n                return (value / 3600) * 1000000;\r\n            case PowerUnits.GigajoulesPerHour:\r\n                return (value / 3600) * 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Power to string.\r\n     * Note! the default format for Power is Watts.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Power.\r\n     * @returns The string format of the Power.\r\n     */\r\n    toString(toUnit = PowerUnits.Watts) {\r\n        switch (toUnit) {\r\n            case PowerUnits.Watts:\r\n                return this.Watts + ` W`;\r\n            case PowerUnits.MechanicalHorsepower:\r\n                return this.MechanicalHorsepower + ` hp(I)`;\r\n            case PowerUnits.MetricHorsepower:\r\n                return this.MetricHorsepower + ` hp(M)`;\r\n            case PowerUnits.ElectricalHorsepower:\r\n                return this.ElectricalHorsepower + ` hp(E)`;\r\n            case PowerUnits.BoilerHorsepower:\r\n                return this.BoilerHorsepower + ` hp(S)`;\r\n            case PowerUnits.HydraulicHorsepower:\r\n                return this.HydraulicHorsepower + ` hp(H)`;\r\n            case PowerUnits.BritishThermalUnitsPerHour:\r\n                return this.BritishThermalUnitsPerHour + ` Btu/h`;\r\n            case PowerUnits.JoulesPerHour:\r\n                return this.JoulesPerHour + ` J/h`;\r\n            case PowerUnits.Femtowatts:\r\n                return this.Femtowatts + ` `;\r\n            case PowerUnits.Picowatts:\r\n                return this.Picowatts + ` `;\r\n            case PowerUnits.Nanowatts:\r\n                return this.Nanowatts + ` `;\r\n            case PowerUnits.Microwatts:\r\n                return this.Microwatts + ` `;\r\n            case PowerUnits.Milliwatts:\r\n                return this.Milliwatts + ` `;\r\n            case PowerUnits.Deciwatts:\r\n                return this.Deciwatts + ` `;\r\n            case PowerUnits.Decawatts:\r\n                return this.Decawatts + ` `;\r\n            case PowerUnits.Kilowatts:\r\n                return this.Kilowatts + ` `;\r\n            case PowerUnits.Megawatts:\r\n                return this.Megawatts + ` `;\r\n            case PowerUnits.Gigawatts:\r\n                return this.Gigawatts + ` `;\r\n            case PowerUnits.Terawatts:\r\n                return this.Terawatts + ` `;\r\n            case PowerUnits.Petawatts:\r\n                return this.Petawatts + ` `;\r\n            case PowerUnits.KilobritishThermalUnitsPerHour:\r\n                return this.KilobritishThermalUnitsPerHour + ` `;\r\n            case PowerUnits.MillijoulesPerHour:\r\n                return this.MillijoulesPerHour + ` `;\r\n            case PowerUnits.KilojoulesPerHour:\r\n                return this.KilojoulesPerHour + ` `;\r\n            case PowerUnits.MegajoulesPerHour:\r\n                return this.MegajoulesPerHour + ` `;\r\n            case PowerUnits.GigajoulesPerHour:\r\n                return this.GigajoulesPerHour + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Power are equals to the current Power.\r\n     * @param power The other Power.\r\n     * @returns True if the given Power are equal to the current Power.\r\n     */\r\n    equals(power) {\r\n        return this.value === power.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Power against the current Power.\r\n     * @param power The other Power.\r\n     * @returns 0 if they are equal, -1 if the current Power is less then other, 1 if the current Power is greater then other.\r\n     */\r\n    compareTo(power) {\r\n        if (this.value > power.BaseValue)\r\n            return 1;\r\n        if (this.value < power.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Power with the current Power.\r\n     * @param power The other Power.\r\n     * @returns A new Power instance with the results.\r\n     */\r\n    add(power) {\r\n        return new Power(this.value + power.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Power with the current Power.\r\n     * @param power The other Power.\r\n     * @returns A new Power instance with the results.\r\n     */\r\n    subtract(power) {\r\n        return new Power(this.value - power.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Power with the current Power.\r\n     * @param power The other Power.\r\n     * @returns A new Power instance with the results.\r\n     */\r\n    multiply(power) {\r\n        return new Power(this.value * power.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Power with the current Power.\r\n     * @param power The other Power.\r\n     * @returns A new Power instance with the results.\r\n     */\r\n    divide(power) {\r\n        return new Power(this.value / power.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Power with the current Power.\r\n     * @param power The other Power.\r\n     * @returns A new Power instance with the results.\r\n     */\r\n    modulo(power) {\r\n        return new Power(this.value % power.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Power with the current Power.\r\n     * @param power The other Power.\r\n     * @returns A new Power instance with the results.\r\n     */\r\n    pow(power) {\r\n        return new Power(this.value ** power.BaseValue);\r\n    }\r\n}\r\nexports.Power = Power;\r\n//# sourceMappingURL=power.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PowerDensity = exports.PowerDensityUnits = void 0;\r\n/** PowerDensityUnits enumeration */\r\nvar PowerDensityUnits;\r\n(function (PowerDensityUnits) {\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"WattsPerCubicMeter\"] = 0] = \"WattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"WattsPerCubicInch\"] = 1] = \"WattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"WattsPerCubicFoot\"] = 2] = \"WattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"WattsPerLiter\"] = 3] = \"WattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"PicowattsPerCubicMeter\"] = 4] = \"PicowattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"NanowattsPerCubicMeter\"] = 5] = \"NanowattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MicrowattsPerCubicMeter\"] = 6] = \"MicrowattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MilliwattsPerCubicMeter\"] = 7] = \"MilliwattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DeciwattsPerCubicMeter\"] = 8] = \"DeciwattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DecawattsPerCubicMeter\"] = 9] = \"DecawattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"KilowattsPerCubicMeter\"] = 10] = \"KilowattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MegawattsPerCubicMeter\"] = 11] = \"MegawattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"GigawattsPerCubicMeter\"] = 12] = \"GigawattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"TerawattsPerCubicMeter\"] = 13] = \"TerawattsPerCubicMeter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"PicowattsPerCubicInch\"] = 14] = \"PicowattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"NanowattsPerCubicInch\"] = 15] = \"NanowattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MicrowattsPerCubicInch\"] = 16] = \"MicrowattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MilliwattsPerCubicInch\"] = 17] = \"MilliwattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DeciwattsPerCubicInch\"] = 18] = \"DeciwattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DecawattsPerCubicInch\"] = 19] = \"DecawattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"KilowattsPerCubicInch\"] = 20] = \"KilowattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MegawattsPerCubicInch\"] = 21] = \"MegawattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"GigawattsPerCubicInch\"] = 22] = \"GigawattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"TerawattsPerCubicInch\"] = 23] = \"TerawattsPerCubicInch\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"PicowattsPerCubicFoot\"] = 24] = \"PicowattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"NanowattsPerCubicFoot\"] = 25] = \"NanowattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MicrowattsPerCubicFoot\"] = 26] = \"MicrowattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MilliwattsPerCubicFoot\"] = 27] = \"MilliwattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DeciwattsPerCubicFoot\"] = 28] = \"DeciwattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DecawattsPerCubicFoot\"] = 29] = \"DecawattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"KilowattsPerCubicFoot\"] = 30] = \"KilowattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MegawattsPerCubicFoot\"] = 31] = \"MegawattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"GigawattsPerCubicFoot\"] = 32] = \"GigawattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"TerawattsPerCubicFoot\"] = 33] = \"TerawattsPerCubicFoot\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"PicowattsPerLiter\"] = 34] = \"PicowattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"NanowattsPerLiter\"] = 35] = \"NanowattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MicrowattsPerLiter\"] = 36] = \"MicrowattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MilliwattsPerLiter\"] = 37] = \"MilliwattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DeciwattsPerLiter\"] = 38] = \"DeciwattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"DecawattsPerLiter\"] = 39] = \"DecawattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"KilowattsPerLiter\"] = 40] = \"KilowattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"MegawattsPerLiter\"] = 41] = \"MegawattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"GigawattsPerLiter\"] = 42] = \"GigawattsPerLiter\";\r\n    /** */\r\n    PowerDensityUnits[PowerDensityUnits[\"TerawattsPerLiter\"] = 43] = \"TerawattsPerLiter\";\r\n})(PowerDensityUnits = exports.PowerDensityUnits || (exports.PowerDensityUnits = {}));\r\n/** The amount of power in a volume. */\r\nclass PowerDensity {\r\n    /**\r\n     * Create a new PowerDensity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘PowerDensity’ unit to create from.\r\n     * The default unit is WattsPerCubicMeter\r\n     */\r\n    constructor(value, fromUnit = PowerDensityUnits.WattsPerCubicMeter) {\r\n        this.wattspercubicmeterLazy = null;\r\n        this.wattspercubicinchLazy = null;\r\n        this.wattspercubicfootLazy = null;\r\n        this.wattsperliterLazy = null;\r\n        this.picowattspercubicmeterLazy = null;\r\n        this.nanowattspercubicmeterLazy = null;\r\n        this.microwattspercubicmeterLazy = null;\r\n        this.milliwattspercubicmeterLazy = null;\r\n        this.deciwattspercubicmeterLazy = null;\r\n        this.decawattspercubicmeterLazy = null;\r\n        this.kilowattspercubicmeterLazy = null;\r\n        this.megawattspercubicmeterLazy = null;\r\n        this.gigawattspercubicmeterLazy = null;\r\n        this.terawattspercubicmeterLazy = null;\r\n        this.picowattspercubicinchLazy = null;\r\n        this.nanowattspercubicinchLazy = null;\r\n        this.microwattspercubicinchLazy = null;\r\n        this.milliwattspercubicinchLazy = null;\r\n        this.deciwattspercubicinchLazy = null;\r\n        this.decawattspercubicinchLazy = null;\r\n        this.kilowattspercubicinchLazy = null;\r\n        this.megawattspercubicinchLazy = null;\r\n        this.gigawattspercubicinchLazy = null;\r\n        this.terawattspercubicinchLazy = null;\r\n        this.picowattspercubicfootLazy = null;\r\n        this.nanowattspercubicfootLazy = null;\r\n        this.microwattspercubicfootLazy = null;\r\n        this.milliwattspercubicfootLazy = null;\r\n        this.deciwattspercubicfootLazy = null;\r\n        this.decawattspercubicfootLazy = null;\r\n        this.kilowattspercubicfootLazy = null;\r\n        this.megawattspercubicfootLazy = null;\r\n        this.gigawattspercubicfootLazy = null;\r\n        this.terawattspercubicfootLazy = null;\r\n        this.picowattsperliterLazy = null;\r\n        this.nanowattsperliterLazy = null;\r\n        this.microwattsperliterLazy = null;\r\n        this.milliwattsperliterLazy = null;\r\n        this.deciwattsperliterLazy = null;\r\n        this.decawattsperliterLazy = null;\r\n        this.kilowattsperliterLazy = null;\r\n        this.megawattsperliterLazy = null;\r\n        this.gigawattsperliterLazy = null;\r\n        this.terawattsperliterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of PowerDensity is WattsPerCubicMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get WattsPerCubicMeter() {\r\n        if (this.wattspercubicmeterLazy !== null) {\r\n            return this.wattspercubicmeterLazy;\r\n        }\r\n        return this.wattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.WattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get WattsPerCubicInch() {\r\n        if (this.wattspercubicinchLazy !== null) {\r\n            return this.wattspercubicinchLazy;\r\n        }\r\n        return this.wattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.WattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get WattsPerCubicFoot() {\r\n        if (this.wattspercubicfootLazy !== null) {\r\n            return this.wattspercubicfootLazy;\r\n        }\r\n        return this.wattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.WattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get WattsPerLiter() {\r\n        if (this.wattsperliterLazy !== null) {\r\n            return this.wattsperliterLazy;\r\n        }\r\n        return this.wattsperliterLazy = this.convertFromBase(PowerDensityUnits.WattsPerLiter);\r\n    }\r\n    /** */\r\n    get PicowattsPerCubicMeter() {\r\n        if (this.picowattspercubicmeterLazy !== null) {\r\n            return this.picowattspercubicmeterLazy;\r\n        }\r\n        return this.picowattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.PicowattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get NanowattsPerCubicMeter() {\r\n        if (this.nanowattspercubicmeterLazy !== null) {\r\n            return this.nanowattspercubicmeterLazy;\r\n        }\r\n        return this.nanowattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.NanowattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MicrowattsPerCubicMeter() {\r\n        if (this.microwattspercubicmeterLazy !== null) {\r\n            return this.microwattspercubicmeterLazy;\r\n        }\r\n        return this.microwattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.MicrowattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerCubicMeter() {\r\n        if (this.milliwattspercubicmeterLazy !== null) {\r\n            return this.milliwattspercubicmeterLazy;\r\n        }\r\n        return this.milliwattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.MilliwattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get DeciwattsPerCubicMeter() {\r\n        if (this.deciwattspercubicmeterLazy !== null) {\r\n            return this.deciwattspercubicmeterLazy;\r\n        }\r\n        return this.deciwattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.DeciwattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get DecawattsPerCubicMeter() {\r\n        if (this.decawattspercubicmeterLazy !== null) {\r\n            return this.decawattspercubicmeterLazy;\r\n        }\r\n        return this.decawattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.DecawattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get KilowattsPerCubicMeter() {\r\n        if (this.kilowattspercubicmeterLazy !== null) {\r\n            return this.kilowattspercubicmeterLazy;\r\n        }\r\n        return this.kilowattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.KilowattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MegawattsPerCubicMeter() {\r\n        if (this.megawattspercubicmeterLazy !== null) {\r\n            return this.megawattspercubicmeterLazy;\r\n        }\r\n        return this.megawattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.MegawattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get GigawattsPerCubicMeter() {\r\n        if (this.gigawattspercubicmeterLazy !== null) {\r\n            return this.gigawattspercubicmeterLazy;\r\n        }\r\n        return this.gigawattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.GigawattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get TerawattsPerCubicMeter() {\r\n        if (this.terawattspercubicmeterLazy !== null) {\r\n            return this.terawattspercubicmeterLazy;\r\n        }\r\n        return this.terawattspercubicmeterLazy = this.convertFromBase(PowerDensityUnits.TerawattsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get PicowattsPerCubicInch() {\r\n        if (this.picowattspercubicinchLazy !== null) {\r\n            return this.picowattspercubicinchLazy;\r\n        }\r\n        return this.picowattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.PicowattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get NanowattsPerCubicInch() {\r\n        if (this.nanowattspercubicinchLazy !== null) {\r\n            return this.nanowattspercubicinchLazy;\r\n        }\r\n        return this.nanowattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.NanowattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get MicrowattsPerCubicInch() {\r\n        if (this.microwattspercubicinchLazy !== null) {\r\n            return this.microwattspercubicinchLazy;\r\n        }\r\n        return this.microwattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.MicrowattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get MilliwattsPerCubicInch() {\r\n        if (this.milliwattspercubicinchLazy !== null) {\r\n            return this.milliwattspercubicinchLazy;\r\n        }\r\n        return this.milliwattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.MilliwattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get DeciwattsPerCubicInch() {\r\n        if (this.deciwattspercubicinchLazy !== null) {\r\n            return this.deciwattspercubicinchLazy;\r\n        }\r\n        return this.deciwattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.DeciwattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get DecawattsPerCubicInch() {\r\n        if (this.decawattspercubicinchLazy !== null) {\r\n            return this.decawattspercubicinchLazy;\r\n        }\r\n        return this.decawattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.DecawattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get KilowattsPerCubicInch() {\r\n        if (this.kilowattspercubicinchLazy !== null) {\r\n            return this.kilowattspercubicinchLazy;\r\n        }\r\n        return this.kilowattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.KilowattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get MegawattsPerCubicInch() {\r\n        if (this.megawattspercubicinchLazy !== null) {\r\n            return this.megawattspercubicinchLazy;\r\n        }\r\n        return this.megawattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.MegawattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get GigawattsPerCubicInch() {\r\n        if (this.gigawattspercubicinchLazy !== null) {\r\n            return this.gigawattspercubicinchLazy;\r\n        }\r\n        return this.gigawattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.GigawattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get TerawattsPerCubicInch() {\r\n        if (this.terawattspercubicinchLazy !== null) {\r\n            return this.terawattspercubicinchLazy;\r\n        }\r\n        return this.terawattspercubicinchLazy = this.convertFromBase(PowerDensityUnits.TerawattsPerCubicInch);\r\n    }\r\n    /** */\r\n    get PicowattsPerCubicFoot() {\r\n        if (this.picowattspercubicfootLazy !== null) {\r\n            return this.picowattspercubicfootLazy;\r\n        }\r\n        return this.picowattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.PicowattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get NanowattsPerCubicFoot() {\r\n        if (this.nanowattspercubicfootLazy !== null) {\r\n            return this.nanowattspercubicfootLazy;\r\n        }\r\n        return this.nanowattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.NanowattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get MicrowattsPerCubicFoot() {\r\n        if (this.microwattspercubicfootLazy !== null) {\r\n            return this.microwattspercubicfootLazy;\r\n        }\r\n        return this.microwattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.MicrowattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get MilliwattsPerCubicFoot() {\r\n        if (this.milliwattspercubicfootLazy !== null) {\r\n            return this.milliwattspercubicfootLazy;\r\n        }\r\n        return this.milliwattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.MilliwattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get DeciwattsPerCubicFoot() {\r\n        if (this.deciwattspercubicfootLazy !== null) {\r\n            return this.deciwattspercubicfootLazy;\r\n        }\r\n        return this.deciwattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.DeciwattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get DecawattsPerCubicFoot() {\r\n        if (this.decawattspercubicfootLazy !== null) {\r\n            return this.decawattspercubicfootLazy;\r\n        }\r\n        return this.decawattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.DecawattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get KilowattsPerCubicFoot() {\r\n        if (this.kilowattspercubicfootLazy !== null) {\r\n            return this.kilowattspercubicfootLazy;\r\n        }\r\n        return this.kilowattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.KilowattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get MegawattsPerCubicFoot() {\r\n        if (this.megawattspercubicfootLazy !== null) {\r\n            return this.megawattspercubicfootLazy;\r\n        }\r\n        return this.megawattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.MegawattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get GigawattsPerCubicFoot() {\r\n        if (this.gigawattspercubicfootLazy !== null) {\r\n            return this.gigawattspercubicfootLazy;\r\n        }\r\n        return this.gigawattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.GigawattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get TerawattsPerCubicFoot() {\r\n        if (this.terawattspercubicfootLazy !== null) {\r\n            return this.terawattspercubicfootLazy;\r\n        }\r\n        return this.terawattspercubicfootLazy = this.convertFromBase(PowerDensityUnits.TerawattsPerCubicFoot);\r\n    }\r\n    /** */\r\n    get PicowattsPerLiter() {\r\n        if (this.picowattsperliterLazy !== null) {\r\n            return this.picowattsperliterLazy;\r\n        }\r\n        return this.picowattsperliterLazy = this.convertFromBase(PowerDensityUnits.PicowattsPerLiter);\r\n    }\r\n    /** */\r\n    get NanowattsPerLiter() {\r\n        if (this.nanowattsperliterLazy !== null) {\r\n            return this.nanowattsperliterLazy;\r\n        }\r\n        return this.nanowattsperliterLazy = this.convertFromBase(PowerDensityUnits.NanowattsPerLiter);\r\n    }\r\n    /** */\r\n    get MicrowattsPerLiter() {\r\n        if (this.microwattsperliterLazy !== null) {\r\n            return this.microwattsperliterLazy;\r\n        }\r\n        return this.microwattsperliterLazy = this.convertFromBase(PowerDensityUnits.MicrowattsPerLiter);\r\n    }\r\n    /** */\r\n    get MilliwattsPerLiter() {\r\n        if (this.milliwattsperliterLazy !== null) {\r\n            return this.milliwattsperliterLazy;\r\n        }\r\n        return this.milliwattsperliterLazy = this.convertFromBase(PowerDensityUnits.MilliwattsPerLiter);\r\n    }\r\n    /** */\r\n    get DeciwattsPerLiter() {\r\n        if (this.deciwattsperliterLazy !== null) {\r\n            return this.deciwattsperliterLazy;\r\n        }\r\n        return this.deciwattsperliterLazy = this.convertFromBase(PowerDensityUnits.DeciwattsPerLiter);\r\n    }\r\n    /** */\r\n    get DecawattsPerLiter() {\r\n        if (this.decawattsperliterLazy !== null) {\r\n            return this.decawattsperliterLazy;\r\n        }\r\n        return this.decawattsperliterLazy = this.convertFromBase(PowerDensityUnits.DecawattsPerLiter);\r\n    }\r\n    /** */\r\n    get KilowattsPerLiter() {\r\n        if (this.kilowattsperliterLazy !== null) {\r\n            return this.kilowattsperliterLazy;\r\n        }\r\n        return this.kilowattsperliterLazy = this.convertFromBase(PowerDensityUnits.KilowattsPerLiter);\r\n    }\r\n    /** */\r\n    get MegawattsPerLiter() {\r\n        if (this.megawattsperliterLazy !== null) {\r\n            return this.megawattsperliterLazy;\r\n        }\r\n        return this.megawattsperliterLazy = this.convertFromBase(PowerDensityUnits.MegawattsPerLiter);\r\n    }\r\n    /** */\r\n    get GigawattsPerLiter() {\r\n        if (this.gigawattsperliterLazy !== null) {\r\n            return this.gigawattsperliterLazy;\r\n        }\r\n        return this.gigawattsperliterLazy = this.convertFromBase(PowerDensityUnits.GigawattsPerLiter);\r\n    }\r\n    /** */\r\n    get TerawattsPerLiter() {\r\n        if (this.terawattsperliterLazy !== null) {\r\n            return this.terawattsperliterLazy;\r\n        }\r\n        return this.terawattsperliterLazy = this.convertFromBase(PowerDensityUnits.TerawattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a WattsPerCubicMeter\r\n     *\r\n     * @param value The unit as WattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromWattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.WattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a WattsPerCubicInch\r\n     *\r\n     * @param value The unit as WattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromWattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.WattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a WattsPerCubicFoot\r\n     *\r\n     * @param value The unit as WattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromWattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.WattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a WattsPerLiter\r\n     *\r\n     * @param value The unit as WattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromWattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.WattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a PicowattsPerCubicMeter\r\n     *\r\n     * @param value The unit as PicowattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromPicowattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.PicowattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a NanowattsPerCubicMeter\r\n     *\r\n     * @param value The unit as NanowattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromNanowattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.NanowattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MicrowattsPerCubicMeter\r\n     *\r\n     * @param value The unit as MicrowattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMicrowattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MicrowattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MilliwattsPerCubicMeter\r\n     *\r\n     * @param value The unit as MilliwattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MilliwattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DeciwattsPerCubicMeter\r\n     *\r\n     * @param value The unit as DeciwattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDeciwattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DeciwattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DecawattsPerCubicMeter\r\n     *\r\n     * @param value The unit as DecawattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDecawattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DecawattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a KilowattsPerCubicMeter\r\n     *\r\n     * @param value The unit as KilowattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromKilowattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.KilowattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MegawattsPerCubicMeter\r\n     *\r\n     * @param value The unit as MegawattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMegawattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MegawattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a GigawattsPerCubicMeter\r\n     *\r\n     * @param value The unit as GigawattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromGigawattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.GigawattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a TerawattsPerCubicMeter\r\n     *\r\n     * @param value The unit as TerawattsPerCubicMeter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromTerawattsPerCubicMeter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.TerawattsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a PicowattsPerCubicInch\r\n     *\r\n     * @param value The unit as PicowattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromPicowattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.PicowattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a NanowattsPerCubicInch\r\n     *\r\n     * @param value The unit as NanowattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromNanowattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.NanowattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MicrowattsPerCubicInch\r\n     *\r\n     * @param value The unit as MicrowattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMicrowattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MicrowattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MilliwattsPerCubicInch\r\n     *\r\n     * @param value The unit as MilliwattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MilliwattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DeciwattsPerCubicInch\r\n     *\r\n     * @param value The unit as DeciwattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDeciwattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DeciwattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DecawattsPerCubicInch\r\n     *\r\n     * @param value The unit as DecawattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDecawattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DecawattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a KilowattsPerCubicInch\r\n     *\r\n     * @param value The unit as KilowattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromKilowattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.KilowattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MegawattsPerCubicInch\r\n     *\r\n     * @param value The unit as MegawattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMegawattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MegawattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a GigawattsPerCubicInch\r\n     *\r\n     * @param value The unit as GigawattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromGigawattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.GigawattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a TerawattsPerCubicInch\r\n     *\r\n     * @param value The unit as TerawattsPerCubicInch to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromTerawattsPerCubicInch(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.TerawattsPerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a PicowattsPerCubicFoot\r\n     *\r\n     * @param value The unit as PicowattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromPicowattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.PicowattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a NanowattsPerCubicFoot\r\n     *\r\n     * @param value The unit as NanowattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromNanowattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.NanowattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MicrowattsPerCubicFoot\r\n     *\r\n     * @param value The unit as MicrowattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMicrowattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MicrowattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MilliwattsPerCubicFoot\r\n     *\r\n     * @param value The unit as MilliwattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MilliwattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DeciwattsPerCubicFoot\r\n     *\r\n     * @param value The unit as DeciwattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDeciwattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DeciwattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DecawattsPerCubicFoot\r\n     *\r\n     * @param value The unit as DecawattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDecawattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DecawattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a KilowattsPerCubicFoot\r\n     *\r\n     * @param value The unit as KilowattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromKilowattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.KilowattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MegawattsPerCubicFoot\r\n     *\r\n     * @param value The unit as MegawattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMegawattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MegawattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a GigawattsPerCubicFoot\r\n     *\r\n     * @param value The unit as GigawattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromGigawattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.GigawattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a TerawattsPerCubicFoot\r\n     *\r\n     * @param value The unit as TerawattsPerCubicFoot to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromTerawattsPerCubicFoot(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.TerawattsPerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a PicowattsPerLiter\r\n     *\r\n     * @param value The unit as PicowattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromPicowattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.PicowattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a NanowattsPerLiter\r\n     *\r\n     * @param value The unit as NanowattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromNanowattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.NanowattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MicrowattsPerLiter\r\n     *\r\n     * @param value The unit as MicrowattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMicrowattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MicrowattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MilliwattsPerLiter\r\n     *\r\n     * @param value The unit as MilliwattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMilliwattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MilliwattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DeciwattsPerLiter\r\n     *\r\n     * @param value The unit as DeciwattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDeciwattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DeciwattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a DecawattsPerLiter\r\n     *\r\n     * @param value The unit as DecawattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromDecawattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.DecawattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a KilowattsPerLiter\r\n     *\r\n     * @param value The unit as KilowattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromKilowattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.KilowattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a MegawattsPerLiter\r\n     *\r\n     * @param value The unit as MegawattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromMegawattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.MegawattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a GigawattsPerLiter\r\n     *\r\n     * @param value The unit as GigawattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromGigawattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.GigawattsPerLiter);\r\n    }\r\n    /**\r\n     * Create a new PowerDensity instance from a TerawattsPerLiter\r\n     *\r\n     * @param value The unit as TerawattsPerLiter to create a new PowerDensity from.\r\n     * @returns The new PowerDensity instance.\r\n     */\r\n    static FromTerawattsPerLiter(value) {\r\n        return new PowerDensity(value, PowerDensityUnits.TerawattsPerLiter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PowerDensityUnits.WattsPerCubicMeter:\r\n                return this.value;\r\n            case PowerDensityUnits.WattsPerCubicInch:\r\n                return this.value / 6.102374409473228e4;\r\n            case PowerDensityUnits.WattsPerCubicFoot:\r\n                return this.value / 3.531466672148859e1;\r\n            case PowerDensityUnits.WattsPerLiter:\r\n                return this.value / 1.0e3;\r\n            case PowerDensityUnits.PicowattsPerCubicMeter:\r\n                return (this.value) / 1e-12;\r\n            case PowerDensityUnits.NanowattsPerCubicMeter:\r\n                return (this.value) / 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerCubicMeter:\r\n                return (this.value) / 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerCubicMeter:\r\n                return (this.value) / 0.001;\r\n            case PowerDensityUnits.DeciwattsPerCubicMeter:\r\n                return (this.value) / 0.1;\r\n            case PowerDensityUnits.DecawattsPerCubicMeter:\r\n                return (this.value) / 10;\r\n            case PowerDensityUnits.KilowattsPerCubicMeter:\r\n                return (this.value) / 1000;\r\n            case PowerDensityUnits.MegawattsPerCubicMeter:\r\n                return (this.value) / 1000000;\r\n            case PowerDensityUnits.GigawattsPerCubicMeter:\r\n                return (this.value) / 1000000000;\r\n            case PowerDensityUnits.TerawattsPerCubicMeter:\r\n                return (this.value) / 1000000000000;\r\n            case PowerDensityUnits.PicowattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 1e-12;\r\n            case PowerDensityUnits.NanowattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 0.001;\r\n            case PowerDensityUnits.DeciwattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 0.1;\r\n            case PowerDensityUnits.DecawattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 10;\r\n            case PowerDensityUnits.KilowattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 1000;\r\n            case PowerDensityUnits.MegawattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 1000000;\r\n            case PowerDensityUnits.GigawattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 1000000000;\r\n            case PowerDensityUnits.TerawattsPerCubicInch:\r\n                return (this.value / 6.102374409473228e4) / 1000000000000;\r\n            case PowerDensityUnits.PicowattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 1e-12;\r\n            case PowerDensityUnits.NanowattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 0.001;\r\n            case PowerDensityUnits.DeciwattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 0.1;\r\n            case PowerDensityUnits.DecawattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 10;\r\n            case PowerDensityUnits.KilowattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 1000;\r\n            case PowerDensityUnits.MegawattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 1000000;\r\n            case PowerDensityUnits.GigawattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 1000000000;\r\n            case PowerDensityUnits.TerawattsPerCubicFoot:\r\n                return (this.value / 3.531466672148859e1) / 1000000000000;\r\n            case PowerDensityUnits.PicowattsPerLiter:\r\n                return (this.value / 1.0e3) / 1e-12;\r\n            case PowerDensityUnits.NanowattsPerLiter:\r\n                return (this.value / 1.0e3) / 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerLiter:\r\n                return (this.value / 1.0e3) / 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerLiter:\r\n                return (this.value / 1.0e3) / 0.001;\r\n            case PowerDensityUnits.DeciwattsPerLiter:\r\n                return (this.value / 1.0e3) / 0.1;\r\n            case PowerDensityUnits.DecawattsPerLiter:\r\n                return (this.value / 1.0e3) / 10;\r\n            case PowerDensityUnits.KilowattsPerLiter:\r\n                return (this.value / 1.0e3) / 1000;\r\n            case PowerDensityUnits.MegawattsPerLiter:\r\n                return (this.value / 1.0e3) / 1000000;\r\n            case PowerDensityUnits.GigawattsPerLiter:\r\n                return (this.value / 1.0e3) / 1000000000;\r\n            case PowerDensityUnits.TerawattsPerLiter:\r\n                return (this.value / 1.0e3) / 1000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PowerDensityUnits.WattsPerCubicMeter:\r\n                return value;\r\n            case PowerDensityUnits.WattsPerCubicInch:\r\n                return value * 6.102374409473228e4;\r\n            case PowerDensityUnits.WattsPerCubicFoot:\r\n                return value * 3.531466672148859e1;\r\n            case PowerDensityUnits.WattsPerLiter:\r\n                return value * 1.0e3;\r\n            case PowerDensityUnits.PicowattsPerCubicMeter:\r\n                return (value) * 1e-12;\r\n            case PowerDensityUnits.NanowattsPerCubicMeter:\r\n                return (value) * 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerCubicMeter:\r\n                return (value) * 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerCubicMeter:\r\n                return (value) * 0.001;\r\n            case PowerDensityUnits.DeciwattsPerCubicMeter:\r\n                return (value) * 0.1;\r\n            case PowerDensityUnits.DecawattsPerCubicMeter:\r\n                return (value) * 10;\r\n            case PowerDensityUnits.KilowattsPerCubicMeter:\r\n                return (value) * 1000;\r\n            case PowerDensityUnits.MegawattsPerCubicMeter:\r\n                return (value) * 1000000;\r\n            case PowerDensityUnits.GigawattsPerCubicMeter:\r\n                return (value) * 1000000000;\r\n            case PowerDensityUnits.TerawattsPerCubicMeter:\r\n                return (value) * 1000000000000;\r\n            case PowerDensityUnits.PicowattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 1e-12;\r\n            case PowerDensityUnits.NanowattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 0.001;\r\n            case PowerDensityUnits.DeciwattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 0.1;\r\n            case PowerDensityUnits.DecawattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 10;\r\n            case PowerDensityUnits.KilowattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 1000;\r\n            case PowerDensityUnits.MegawattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 1000000;\r\n            case PowerDensityUnits.GigawattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 1000000000;\r\n            case PowerDensityUnits.TerawattsPerCubicInch:\r\n                return (value * 6.102374409473228e4) * 1000000000000;\r\n            case PowerDensityUnits.PicowattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 1e-12;\r\n            case PowerDensityUnits.NanowattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 0.001;\r\n            case PowerDensityUnits.DeciwattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 0.1;\r\n            case PowerDensityUnits.DecawattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 10;\r\n            case PowerDensityUnits.KilowattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 1000;\r\n            case PowerDensityUnits.MegawattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 1000000;\r\n            case PowerDensityUnits.GigawattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 1000000000;\r\n            case PowerDensityUnits.TerawattsPerCubicFoot:\r\n                return (value * 3.531466672148859e1) * 1000000000000;\r\n            case PowerDensityUnits.PicowattsPerLiter:\r\n                return (value * 1.0e3) * 1e-12;\r\n            case PowerDensityUnits.NanowattsPerLiter:\r\n                return (value * 1.0e3) * 1e-9;\r\n            case PowerDensityUnits.MicrowattsPerLiter:\r\n                return (value * 1.0e3) * 0.000001;\r\n            case PowerDensityUnits.MilliwattsPerLiter:\r\n                return (value * 1.0e3) * 0.001;\r\n            case PowerDensityUnits.DeciwattsPerLiter:\r\n                return (value * 1.0e3) * 0.1;\r\n            case PowerDensityUnits.DecawattsPerLiter:\r\n                return (value * 1.0e3) * 10;\r\n            case PowerDensityUnits.KilowattsPerLiter:\r\n                return (value * 1.0e3) * 1000;\r\n            case PowerDensityUnits.MegawattsPerLiter:\r\n                return (value * 1.0e3) * 1000000;\r\n            case PowerDensityUnits.GigawattsPerLiter:\r\n                return (value * 1.0e3) * 1000000000;\r\n            case PowerDensityUnits.TerawattsPerLiter:\r\n                return (value * 1.0e3) * 1000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the PowerDensity to string.\r\n     * Note! the default format for PowerDensity is WattsPerCubicMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the PowerDensity.\r\n     * @returns The string format of the PowerDensity.\r\n     */\r\n    toString(toUnit = PowerDensityUnits.WattsPerCubicMeter) {\r\n        switch (toUnit) {\r\n            case PowerDensityUnits.WattsPerCubicMeter:\r\n                return this.WattsPerCubicMeter + ` W/m³`;\r\n            case PowerDensityUnits.WattsPerCubicInch:\r\n                return this.WattsPerCubicInch + ` W/in³`;\r\n            case PowerDensityUnits.WattsPerCubicFoot:\r\n                return this.WattsPerCubicFoot + ` W/ft³`;\r\n            case PowerDensityUnits.WattsPerLiter:\r\n                return this.WattsPerLiter + ` W/l`;\r\n            case PowerDensityUnits.PicowattsPerCubicMeter:\r\n                return this.PicowattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.NanowattsPerCubicMeter:\r\n                return this.NanowattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.MicrowattsPerCubicMeter:\r\n                return this.MicrowattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.MilliwattsPerCubicMeter:\r\n                return this.MilliwattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.DeciwattsPerCubicMeter:\r\n                return this.DeciwattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.DecawattsPerCubicMeter:\r\n                return this.DecawattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.KilowattsPerCubicMeter:\r\n                return this.KilowattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.MegawattsPerCubicMeter:\r\n                return this.MegawattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.GigawattsPerCubicMeter:\r\n                return this.GigawattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.TerawattsPerCubicMeter:\r\n                return this.TerawattsPerCubicMeter + ` `;\r\n            case PowerDensityUnits.PicowattsPerCubicInch:\r\n                return this.PicowattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.NanowattsPerCubicInch:\r\n                return this.NanowattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.MicrowattsPerCubicInch:\r\n                return this.MicrowattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.MilliwattsPerCubicInch:\r\n                return this.MilliwattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.DeciwattsPerCubicInch:\r\n                return this.DeciwattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.DecawattsPerCubicInch:\r\n                return this.DecawattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.KilowattsPerCubicInch:\r\n                return this.KilowattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.MegawattsPerCubicInch:\r\n                return this.MegawattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.GigawattsPerCubicInch:\r\n                return this.GigawattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.TerawattsPerCubicInch:\r\n                return this.TerawattsPerCubicInch + ` `;\r\n            case PowerDensityUnits.PicowattsPerCubicFoot:\r\n                return this.PicowattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.NanowattsPerCubicFoot:\r\n                return this.NanowattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.MicrowattsPerCubicFoot:\r\n                return this.MicrowattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.MilliwattsPerCubicFoot:\r\n                return this.MilliwattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.DeciwattsPerCubicFoot:\r\n                return this.DeciwattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.DecawattsPerCubicFoot:\r\n                return this.DecawattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.KilowattsPerCubicFoot:\r\n                return this.KilowattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.MegawattsPerCubicFoot:\r\n                return this.MegawattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.GigawattsPerCubicFoot:\r\n                return this.GigawattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.TerawattsPerCubicFoot:\r\n                return this.TerawattsPerCubicFoot + ` `;\r\n            case PowerDensityUnits.PicowattsPerLiter:\r\n                return this.PicowattsPerLiter + ` `;\r\n            case PowerDensityUnits.NanowattsPerLiter:\r\n                return this.NanowattsPerLiter + ` `;\r\n            case PowerDensityUnits.MicrowattsPerLiter:\r\n                return this.MicrowattsPerLiter + ` `;\r\n            case PowerDensityUnits.MilliwattsPerLiter:\r\n                return this.MilliwattsPerLiter + ` `;\r\n            case PowerDensityUnits.DeciwattsPerLiter:\r\n                return this.DeciwattsPerLiter + ` `;\r\n            case PowerDensityUnits.DecawattsPerLiter:\r\n                return this.DecawattsPerLiter + ` `;\r\n            case PowerDensityUnits.KilowattsPerLiter:\r\n                return this.KilowattsPerLiter + ` `;\r\n            case PowerDensityUnits.MegawattsPerLiter:\r\n                return this.MegawattsPerLiter + ` `;\r\n            case PowerDensityUnits.GigawattsPerLiter:\r\n                return this.GigawattsPerLiter + ` `;\r\n            case PowerDensityUnits.TerawattsPerLiter:\r\n                return this.TerawattsPerLiter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given PowerDensity are equals to the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns True if the given PowerDensity are equal to the current PowerDensity.\r\n     */\r\n    equals(powerDensity) {\r\n        return this.value === powerDensity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given PowerDensity against the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns 0 if they are equal, -1 if the current PowerDensity is less then other, 1 if the current PowerDensity is greater then other.\r\n     */\r\n    compareTo(powerDensity) {\r\n        if (this.value > powerDensity.BaseValue)\r\n            return 1;\r\n        if (this.value < powerDensity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given PowerDensity with the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns A new PowerDensity instance with the results.\r\n     */\r\n    add(powerDensity) {\r\n        return new PowerDensity(this.value + powerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given PowerDensity with the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns A new PowerDensity instance with the results.\r\n     */\r\n    subtract(powerDensity) {\r\n        return new PowerDensity(this.value - powerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given PowerDensity with the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns A new PowerDensity instance with the results.\r\n     */\r\n    multiply(powerDensity) {\r\n        return new PowerDensity(this.value * powerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given PowerDensity with the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns A new PowerDensity instance with the results.\r\n     */\r\n    divide(powerDensity) {\r\n        return new PowerDensity(this.value / powerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given PowerDensity with the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns A new PowerDensity instance with the results.\r\n     */\r\n    modulo(powerDensity) {\r\n        return new PowerDensity(this.value % powerDensity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given PowerDensity with the current PowerDensity.\r\n     * @param powerDensity The other PowerDensity.\r\n     * @returns A new PowerDensity instance with the results.\r\n     */\r\n    pow(powerDensity) {\r\n        return new PowerDensity(this.value ** powerDensity.BaseValue);\r\n    }\r\n}\r\nexports.PowerDensity = PowerDensity;\r\n//# sourceMappingURL=powerdensity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PowerRatio = exports.PowerRatioUnits = void 0;\r\n/** PowerRatioUnits enumeration */\r\nvar PowerRatioUnits;\r\n(function (PowerRatioUnits) {\r\n    /** */\r\n    PowerRatioUnits[PowerRatioUnits[\"DecibelWatts\"] = 0] = \"DecibelWatts\";\r\n    /** */\r\n    PowerRatioUnits[PowerRatioUnits[\"DecibelMilliwatts\"] = 1] = \"DecibelMilliwatts\";\r\n})(PowerRatioUnits = exports.PowerRatioUnits || (exports.PowerRatioUnits = {}));\r\n/** The strength of a signal expressed in decibels (dB) relative to one watt. */\r\nclass PowerRatio {\r\n    /**\r\n     * Create a new PowerRatio.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘PowerRatio’ unit to create from.\r\n     * The default unit is DecibelWatts\r\n     */\r\n    constructor(value, fromUnit = PowerRatioUnits.DecibelWatts) {\r\n        this.decibelwattsLazy = null;\r\n        this.decibelmilliwattsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of PowerRatio is DecibelWatts.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DecibelWatts() {\r\n        if (this.decibelwattsLazy !== null) {\r\n            return this.decibelwattsLazy;\r\n        }\r\n        return this.decibelwattsLazy = this.convertFromBase(PowerRatioUnits.DecibelWatts);\r\n    }\r\n    /** */\r\n    get DecibelMilliwatts() {\r\n        if (this.decibelmilliwattsLazy !== null) {\r\n            return this.decibelmilliwattsLazy;\r\n        }\r\n        return this.decibelmilliwattsLazy = this.convertFromBase(PowerRatioUnits.DecibelMilliwatts);\r\n    }\r\n    /**\r\n     * Create a new PowerRatio instance from a DecibelWatts\r\n     *\r\n     * @param value The unit as DecibelWatts to create a new PowerRatio from.\r\n     * @returns The new PowerRatio instance.\r\n     */\r\n    static FromDecibelWatts(value) {\r\n        return new PowerRatio(value, PowerRatioUnits.DecibelWatts);\r\n    }\r\n    /**\r\n     * Create a new PowerRatio instance from a DecibelMilliwatts\r\n     *\r\n     * @param value The unit as DecibelMilliwatts to create a new PowerRatio from.\r\n     * @returns The new PowerRatio instance.\r\n     */\r\n    static FromDecibelMilliwatts(value) {\r\n        return new PowerRatio(value, PowerRatioUnits.DecibelMilliwatts);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PowerRatioUnits.DecibelWatts:\r\n                return this.value;\r\n            case PowerRatioUnits.DecibelMilliwatts:\r\n                return this.value + 30;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PowerRatioUnits.DecibelWatts:\r\n                return value;\r\n            case PowerRatioUnits.DecibelMilliwatts:\r\n                return value - 30;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the PowerRatio to string.\r\n     * Note! the default format for PowerRatio is DecibelWatts.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the PowerRatio.\r\n     * @returns The string format of the PowerRatio.\r\n     */\r\n    toString(toUnit = PowerRatioUnits.DecibelWatts) {\r\n        switch (toUnit) {\r\n            case PowerRatioUnits.DecibelWatts:\r\n                return this.DecibelWatts + ` dBW`;\r\n            case PowerRatioUnits.DecibelMilliwatts:\r\n                return this.DecibelMilliwatts + ` dBmW`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given PowerRatio are equals to the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns True if the given PowerRatio are equal to the current PowerRatio.\r\n     */\r\n    equals(powerRatio) {\r\n        return this.value === powerRatio.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given PowerRatio against the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns 0 if they are equal, -1 if the current PowerRatio is less then other, 1 if the current PowerRatio is greater then other.\r\n     */\r\n    compareTo(powerRatio) {\r\n        if (this.value > powerRatio.BaseValue)\r\n            return 1;\r\n        if (this.value < powerRatio.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given PowerRatio with the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns A new PowerRatio instance with the results.\r\n     */\r\n    add(powerRatio) {\r\n        return new PowerRatio(this.value + powerRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given PowerRatio with the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns A new PowerRatio instance with the results.\r\n     */\r\n    subtract(powerRatio) {\r\n        return new PowerRatio(this.value - powerRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given PowerRatio with the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns A new PowerRatio instance with the results.\r\n     */\r\n    multiply(powerRatio) {\r\n        return new PowerRatio(this.value * powerRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given PowerRatio with the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns A new PowerRatio instance with the results.\r\n     */\r\n    divide(powerRatio) {\r\n        return new PowerRatio(this.value / powerRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given PowerRatio with the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns A new PowerRatio instance with the results.\r\n     */\r\n    modulo(powerRatio) {\r\n        return new PowerRatio(this.value % powerRatio.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given PowerRatio with the current PowerRatio.\r\n     * @param powerRatio The other PowerRatio.\r\n     * @returns A new PowerRatio instance with the results.\r\n     */\r\n    pow(powerRatio) {\r\n        return new PowerRatio(this.value ** powerRatio.BaseValue);\r\n    }\r\n}\r\nexports.PowerRatio = PowerRatio;\r\n//# sourceMappingURL=powerratio.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Pressure = exports.PressureUnits = void 0;\r\n/** PressureUnits enumeration */\r\nvar PressureUnits;\r\n(function (PressureUnits) {\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Pascals\"] = 0] = \"Pascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Atmospheres\"] = 1] = \"Atmospheres\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Bars\"] = 2] = \"Bars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilogramsForcePerSquareMeter\"] = 3] = \"KilogramsForcePerSquareMeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilogramsForcePerSquareCentimeter\"] = 4] = \"KilogramsForcePerSquareCentimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilogramsForcePerSquareMillimeter\"] = 5] = \"KilogramsForcePerSquareMillimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"NewtonsPerSquareMeter\"] = 6] = \"NewtonsPerSquareMeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"NewtonsPerSquareCentimeter\"] = 7] = \"NewtonsPerSquareCentimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"NewtonsPerSquareMillimeter\"] = 8] = \"NewtonsPerSquareMillimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"TechnicalAtmospheres\"] = 9] = \"TechnicalAtmospheres\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Torrs\"] = 10] = \"Torrs\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"PoundsForcePerSquareInch\"] = 11] = \"PoundsForcePerSquareInch\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"PoundsForcePerSquareFoot\"] = 12] = \"PoundsForcePerSquareFoot\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"TonnesForcePerSquareMillimeter\"] = 13] = \"TonnesForcePerSquareMillimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"TonnesForcePerSquareMeter\"] = 14] = \"TonnesForcePerSquareMeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"MetersOfHead\"] = 15] = \"MetersOfHead\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"TonnesForcePerSquareCentimeter\"] = 16] = \"TonnesForcePerSquareCentimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"FeetOfHead\"] = 17] = \"FeetOfHead\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"MillimetersOfMercury\"] = 18] = \"MillimetersOfMercury\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"InchesOfMercury\"] = 19] = \"InchesOfMercury\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"DynesPerSquareCentimeter\"] = 20] = \"DynesPerSquareCentimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"PoundsPerInchSecondSquared\"] = 21] = \"PoundsPerInchSecondSquared\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"InchesOfWaterColumn\"] = 22] = \"InchesOfWaterColumn\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"MetersOfElevation\"] = 23] = \"MetersOfElevation\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"FeetOfElevation\"] = 24] = \"FeetOfElevation\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Micropascals\"] = 25] = \"Micropascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Millipascals\"] = 26] = \"Millipascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Decapascals\"] = 27] = \"Decapascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Hectopascals\"] = 28] = \"Hectopascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Kilopascals\"] = 29] = \"Kilopascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Megapascals\"] = 30] = \"Megapascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Gigapascals\"] = 31] = \"Gigapascals\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Microbars\"] = 32] = \"Microbars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Millibars\"] = 33] = \"Millibars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Centibars\"] = 34] = \"Centibars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Decibars\"] = 35] = \"Decibars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Kilobars\"] = 36] = \"Kilobars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"Megabars\"] = 37] = \"Megabars\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilonewtonsPerSquareMeter\"] = 38] = \"KilonewtonsPerSquareMeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"MeganewtonsPerSquareMeter\"] = 39] = \"MeganewtonsPerSquareMeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilonewtonsPerSquareCentimeter\"] = 40] = \"KilonewtonsPerSquareCentimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilonewtonsPerSquareMillimeter\"] = 41] = \"KilonewtonsPerSquareMillimeter\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilopoundsForcePerSquareInch\"] = 42] = \"KilopoundsForcePerSquareInch\";\r\n    /** */\r\n    PressureUnits[PressureUnits[\"KilopoundsForcePerSquareFoot\"] = 43] = \"KilopoundsForcePerSquareFoot\";\r\n})(PressureUnits = exports.PressureUnits || (exports.PressureUnits = {}));\r\n/** Pressure (symbol: P or p) is the ratio of force to the area over which that force is distributed. Pressure is force per unit area applied in a direction perpendicular to the surface of an object. Gauge pressure (also spelled gage pressure)[a] is the pressure relative to the local atmospheric or ambient pressure. Pressure is measured in any unit of force divided by any unit of area. The SI unit of pressure is the newton per square metre, which is called the pascal (Pa) after the seventeenth-century philosopher and scientist Blaise Pascal. A pressure of 1 Pa is small; it approximately equals the pressure exerted by a dollar bill resting flat on a table. Everyday pressures are often stated in kilopascals (1 kPa = 1000 Pa). */\r\nclass Pressure {\r\n    /**\r\n     * Create a new Pressure.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Pressure’ unit to create from.\r\n     * The default unit is Pascals\r\n     */\r\n    constructor(value, fromUnit = PressureUnits.Pascals) {\r\n        this.pascalsLazy = null;\r\n        this.atmospheresLazy = null;\r\n        this.barsLazy = null;\r\n        this.kilogramsforcepersquaremeterLazy = null;\r\n        this.kilogramsforcepersquarecentimeterLazy = null;\r\n        this.kilogramsforcepersquaremillimeterLazy = null;\r\n        this.newtonspersquaremeterLazy = null;\r\n        this.newtonspersquarecentimeterLazy = null;\r\n        this.newtonspersquaremillimeterLazy = null;\r\n        this.technicalatmospheresLazy = null;\r\n        this.torrsLazy = null;\r\n        this.poundsforcepersquareinchLazy = null;\r\n        this.poundsforcepersquarefootLazy = null;\r\n        this.tonnesforcepersquaremillimeterLazy = null;\r\n        this.tonnesforcepersquaremeterLazy = null;\r\n        this.metersofheadLazy = null;\r\n        this.tonnesforcepersquarecentimeterLazy = null;\r\n        this.feetofheadLazy = null;\r\n        this.millimetersofmercuryLazy = null;\r\n        this.inchesofmercuryLazy = null;\r\n        this.dynespersquarecentimeterLazy = null;\r\n        this.poundsperinchsecondsquaredLazy = null;\r\n        this.inchesofwatercolumnLazy = null;\r\n        this.metersofelevationLazy = null;\r\n        this.feetofelevationLazy = null;\r\n        this.micropascalsLazy = null;\r\n        this.millipascalsLazy = null;\r\n        this.decapascalsLazy = null;\r\n        this.hectopascalsLazy = null;\r\n        this.kilopascalsLazy = null;\r\n        this.megapascalsLazy = null;\r\n        this.gigapascalsLazy = null;\r\n        this.microbarsLazy = null;\r\n        this.millibarsLazy = null;\r\n        this.centibarsLazy = null;\r\n        this.decibarsLazy = null;\r\n        this.kilobarsLazy = null;\r\n        this.megabarsLazy = null;\r\n        this.kilonewtonspersquaremeterLazy = null;\r\n        this.meganewtonspersquaremeterLazy = null;\r\n        this.kilonewtonspersquarecentimeterLazy = null;\r\n        this.kilonewtonspersquaremillimeterLazy = null;\r\n        this.kilopoundsforcepersquareinchLazy = null;\r\n        this.kilopoundsforcepersquarefootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Pressure is Pascals.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Pascals() {\r\n        if (this.pascalsLazy !== null) {\r\n            return this.pascalsLazy;\r\n        }\r\n        return this.pascalsLazy = this.convertFromBase(PressureUnits.Pascals);\r\n    }\r\n    /** */\r\n    get Atmospheres() {\r\n        if (this.atmospheresLazy !== null) {\r\n            return this.atmospheresLazy;\r\n        }\r\n        return this.atmospheresLazy = this.convertFromBase(PressureUnits.Atmospheres);\r\n    }\r\n    /** */\r\n    get Bars() {\r\n        if (this.barsLazy !== null) {\r\n            return this.barsLazy;\r\n        }\r\n        return this.barsLazy = this.convertFromBase(PressureUnits.Bars);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerSquareMeter() {\r\n        if (this.kilogramsforcepersquaremeterLazy !== null) {\r\n            return this.kilogramsforcepersquaremeterLazy;\r\n        }\r\n        return this.kilogramsforcepersquaremeterLazy = this.convertFromBase(PressureUnits.KilogramsForcePerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerSquareCentimeter() {\r\n        if (this.kilogramsforcepersquarecentimeterLazy !== null) {\r\n            return this.kilogramsforcepersquarecentimeterLazy;\r\n        }\r\n        return this.kilogramsforcepersquarecentimeterLazy = this.convertFromBase(PressureUnits.KilogramsForcePerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerSquareMillimeter() {\r\n        if (this.kilogramsforcepersquaremillimeterLazy !== null) {\r\n            return this.kilogramsforcepersquaremillimeterLazy;\r\n        }\r\n        return this.kilogramsforcepersquaremillimeterLazy = this.convertFromBase(PressureUnits.KilogramsForcePerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerSquareMeter() {\r\n        if (this.newtonspersquaremeterLazy !== null) {\r\n            return this.newtonspersquaremeterLazy;\r\n        }\r\n        return this.newtonspersquaremeterLazy = this.convertFromBase(PressureUnits.NewtonsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerSquareCentimeter() {\r\n        if (this.newtonspersquarecentimeterLazy !== null) {\r\n            return this.newtonspersquarecentimeterLazy;\r\n        }\r\n        return this.newtonspersquarecentimeterLazy = this.convertFromBase(PressureUnits.NewtonsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerSquareMillimeter() {\r\n        if (this.newtonspersquaremillimeterLazy !== null) {\r\n            return this.newtonspersquaremillimeterLazy;\r\n        }\r\n        return this.newtonspersquaremillimeterLazy = this.convertFromBase(PressureUnits.NewtonsPerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get TechnicalAtmospheres() {\r\n        if (this.technicalatmospheresLazy !== null) {\r\n            return this.technicalatmospheresLazy;\r\n        }\r\n        return this.technicalatmospheresLazy = this.convertFromBase(PressureUnits.TechnicalAtmospheres);\r\n    }\r\n    /** */\r\n    get Torrs() {\r\n        if (this.torrsLazy !== null) {\r\n            return this.torrsLazy;\r\n        }\r\n        return this.torrsLazy = this.convertFromBase(PressureUnits.Torrs);\r\n    }\r\n    /** */\r\n    get PoundsForcePerSquareInch() {\r\n        if (this.poundsforcepersquareinchLazy !== null) {\r\n            return this.poundsforcepersquareinchLazy;\r\n        }\r\n        return this.poundsforcepersquareinchLazy = this.convertFromBase(PressureUnits.PoundsForcePerSquareInch);\r\n    }\r\n    /** */\r\n    get PoundsForcePerSquareFoot() {\r\n        if (this.poundsforcepersquarefootLazy !== null) {\r\n            return this.poundsforcepersquarefootLazy;\r\n        }\r\n        return this.poundsforcepersquarefootLazy = this.convertFromBase(PressureUnits.PoundsForcePerSquareFoot);\r\n    }\r\n    /** */\r\n    get TonnesForcePerSquareMillimeter() {\r\n        if (this.tonnesforcepersquaremillimeterLazy !== null) {\r\n            return this.tonnesforcepersquaremillimeterLazy;\r\n        }\r\n        return this.tonnesforcepersquaremillimeterLazy = this.convertFromBase(PressureUnits.TonnesForcePerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get TonnesForcePerSquareMeter() {\r\n        if (this.tonnesforcepersquaremeterLazy !== null) {\r\n            return this.tonnesforcepersquaremeterLazy;\r\n        }\r\n        return this.tonnesforcepersquaremeterLazy = this.convertFromBase(PressureUnits.TonnesForcePerSquareMeter);\r\n    }\r\n    /** */\r\n    get MetersOfHead() {\r\n        if (this.metersofheadLazy !== null) {\r\n            return this.metersofheadLazy;\r\n        }\r\n        return this.metersofheadLazy = this.convertFromBase(PressureUnits.MetersOfHead);\r\n    }\r\n    /** */\r\n    get TonnesForcePerSquareCentimeter() {\r\n        if (this.tonnesforcepersquarecentimeterLazy !== null) {\r\n            return this.tonnesforcepersquarecentimeterLazy;\r\n        }\r\n        return this.tonnesforcepersquarecentimeterLazy = this.convertFromBase(PressureUnits.TonnesForcePerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get FeetOfHead() {\r\n        if (this.feetofheadLazy !== null) {\r\n            return this.feetofheadLazy;\r\n        }\r\n        return this.feetofheadLazy = this.convertFromBase(PressureUnits.FeetOfHead);\r\n    }\r\n    /** */\r\n    get MillimetersOfMercury() {\r\n        if (this.millimetersofmercuryLazy !== null) {\r\n            return this.millimetersofmercuryLazy;\r\n        }\r\n        return this.millimetersofmercuryLazy = this.convertFromBase(PressureUnits.MillimetersOfMercury);\r\n    }\r\n    /** */\r\n    get InchesOfMercury() {\r\n        if (this.inchesofmercuryLazy !== null) {\r\n            return this.inchesofmercuryLazy;\r\n        }\r\n        return this.inchesofmercuryLazy = this.convertFromBase(PressureUnits.InchesOfMercury);\r\n    }\r\n    /** */\r\n    get DynesPerSquareCentimeter() {\r\n        if (this.dynespersquarecentimeterLazy !== null) {\r\n            return this.dynespersquarecentimeterLazy;\r\n        }\r\n        return this.dynespersquarecentimeterLazy = this.convertFromBase(PressureUnits.DynesPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get PoundsPerInchSecondSquared() {\r\n        if (this.poundsperinchsecondsquaredLazy !== null) {\r\n            return this.poundsperinchsecondsquaredLazy;\r\n        }\r\n        return this.poundsperinchsecondsquaredLazy = this.convertFromBase(PressureUnits.PoundsPerInchSecondSquared);\r\n    }\r\n    /** */\r\n    get InchesOfWaterColumn() {\r\n        if (this.inchesofwatercolumnLazy !== null) {\r\n            return this.inchesofwatercolumnLazy;\r\n        }\r\n        return this.inchesofwatercolumnLazy = this.convertFromBase(PressureUnits.InchesOfWaterColumn);\r\n    }\r\n    /** */\r\n    get MetersOfElevation() {\r\n        if (this.metersofelevationLazy !== null) {\r\n            return this.metersofelevationLazy;\r\n        }\r\n        return this.metersofelevationLazy = this.convertFromBase(PressureUnits.MetersOfElevation);\r\n    }\r\n    /** */\r\n    get FeetOfElevation() {\r\n        if (this.feetofelevationLazy !== null) {\r\n            return this.feetofelevationLazy;\r\n        }\r\n        return this.feetofelevationLazy = this.convertFromBase(PressureUnits.FeetOfElevation);\r\n    }\r\n    /** */\r\n    get Micropascals() {\r\n        if (this.micropascalsLazy !== null) {\r\n            return this.micropascalsLazy;\r\n        }\r\n        return this.micropascalsLazy = this.convertFromBase(PressureUnits.Micropascals);\r\n    }\r\n    /** */\r\n    get Millipascals() {\r\n        if (this.millipascalsLazy !== null) {\r\n            return this.millipascalsLazy;\r\n        }\r\n        return this.millipascalsLazy = this.convertFromBase(PressureUnits.Millipascals);\r\n    }\r\n    /** */\r\n    get Decapascals() {\r\n        if (this.decapascalsLazy !== null) {\r\n            return this.decapascalsLazy;\r\n        }\r\n        return this.decapascalsLazy = this.convertFromBase(PressureUnits.Decapascals);\r\n    }\r\n    /** */\r\n    get Hectopascals() {\r\n        if (this.hectopascalsLazy !== null) {\r\n            return this.hectopascalsLazy;\r\n        }\r\n        return this.hectopascalsLazy = this.convertFromBase(PressureUnits.Hectopascals);\r\n    }\r\n    /** */\r\n    get Kilopascals() {\r\n        if (this.kilopascalsLazy !== null) {\r\n            return this.kilopascalsLazy;\r\n        }\r\n        return this.kilopascalsLazy = this.convertFromBase(PressureUnits.Kilopascals);\r\n    }\r\n    /** */\r\n    get Megapascals() {\r\n        if (this.megapascalsLazy !== null) {\r\n            return this.megapascalsLazy;\r\n        }\r\n        return this.megapascalsLazy = this.convertFromBase(PressureUnits.Megapascals);\r\n    }\r\n    /** */\r\n    get Gigapascals() {\r\n        if (this.gigapascalsLazy !== null) {\r\n            return this.gigapascalsLazy;\r\n        }\r\n        return this.gigapascalsLazy = this.convertFromBase(PressureUnits.Gigapascals);\r\n    }\r\n    /** */\r\n    get Microbars() {\r\n        if (this.microbarsLazy !== null) {\r\n            return this.microbarsLazy;\r\n        }\r\n        return this.microbarsLazy = this.convertFromBase(PressureUnits.Microbars);\r\n    }\r\n    /** */\r\n    get Millibars() {\r\n        if (this.millibarsLazy !== null) {\r\n            return this.millibarsLazy;\r\n        }\r\n        return this.millibarsLazy = this.convertFromBase(PressureUnits.Millibars);\r\n    }\r\n    /** */\r\n    get Centibars() {\r\n        if (this.centibarsLazy !== null) {\r\n            return this.centibarsLazy;\r\n        }\r\n        return this.centibarsLazy = this.convertFromBase(PressureUnits.Centibars);\r\n    }\r\n    /** */\r\n    get Decibars() {\r\n        if (this.decibarsLazy !== null) {\r\n            return this.decibarsLazy;\r\n        }\r\n        return this.decibarsLazy = this.convertFromBase(PressureUnits.Decibars);\r\n    }\r\n    /** */\r\n    get Kilobars() {\r\n        if (this.kilobarsLazy !== null) {\r\n            return this.kilobarsLazy;\r\n        }\r\n        return this.kilobarsLazy = this.convertFromBase(PressureUnits.Kilobars);\r\n    }\r\n    /** */\r\n    get Megabars() {\r\n        if (this.megabarsLazy !== null) {\r\n            return this.megabarsLazy;\r\n        }\r\n        return this.megabarsLazy = this.convertFromBase(PressureUnits.Megabars);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerSquareMeter() {\r\n        if (this.kilonewtonspersquaremeterLazy !== null) {\r\n            return this.kilonewtonspersquaremeterLazy;\r\n        }\r\n        return this.kilonewtonspersquaremeterLazy = this.convertFromBase(PressureUnits.KilonewtonsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonsPerSquareMeter() {\r\n        if (this.meganewtonspersquaremeterLazy !== null) {\r\n            return this.meganewtonspersquaremeterLazy;\r\n        }\r\n        return this.meganewtonspersquaremeterLazy = this.convertFromBase(PressureUnits.MeganewtonsPerSquareMeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerSquareCentimeter() {\r\n        if (this.kilonewtonspersquarecentimeterLazy !== null) {\r\n            return this.kilonewtonspersquarecentimeterLazy;\r\n        }\r\n        return this.kilonewtonspersquarecentimeterLazy = this.convertFromBase(PressureUnits.KilonewtonsPerSquareCentimeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerSquareMillimeter() {\r\n        if (this.kilonewtonspersquaremillimeterLazy !== null) {\r\n            return this.kilonewtonspersquaremillimeterLazy;\r\n        }\r\n        return this.kilonewtonspersquaremillimeterLazy = this.convertFromBase(PressureUnits.KilonewtonsPerSquareMillimeter);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerSquareInch() {\r\n        if (this.kilopoundsforcepersquareinchLazy !== null) {\r\n            return this.kilopoundsforcepersquareinchLazy;\r\n        }\r\n        return this.kilopoundsforcepersquareinchLazy = this.convertFromBase(PressureUnits.KilopoundsForcePerSquareInch);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerSquareFoot() {\r\n        if (this.kilopoundsforcepersquarefootLazy !== null) {\r\n            return this.kilopoundsforcepersquarefootLazy;\r\n        }\r\n        return this.kilopoundsforcepersquarefootLazy = this.convertFromBase(PressureUnits.KilopoundsForcePerSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Pascals\r\n     *\r\n     * @param value The unit as Pascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromPascals(value) {\r\n        return new Pressure(value, PressureUnits.Pascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Atmospheres\r\n     *\r\n     * @param value The unit as Atmospheres to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromAtmospheres(value) {\r\n        return new Pressure(value, PressureUnits.Atmospheres);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Bars\r\n     *\r\n     * @param value The unit as Bars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromBars(value) {\r\n        return new Pressure(value, PressureUnits.Bars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilogramsForcePerSquareMeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerSquareMeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilogramsForcePerSquareMeter(value) {\r\n        return new Pressure(value, PressureUnits.KilogramsForcePerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilogramsForcePerSquareCentimeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerSquareCentimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilogramsForcePerSquareCentimeter(value) {\r\n        return new Pressure(value, PressureUnits.KilogramsForcePerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilogramsForcePerSquareMillimeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerSquareMillimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilogramsForcePerSquareMillimeter(value) {\r\n        return new Pressure(value, PressureUnits.KilogramsForcePerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a NewtonsPerSquareMeter\r\n     *\r\n     * @param value The unit as NewtonsPerSquareMeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromNewtonsPerSquareMeter(value) {\r\n        return new Pressure(value, PressureUnits.NewtonsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a NewtonsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as NewtonsPerSquareCentimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromNewtonsPerSquareCentimeter(value) {\r\n        return new Pressure(value, PressureUnits.NewtonsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a NewtonsPerSquareMillimeter\r\n     *\r\n     * @param value The unit as NewtonsPerSquareMillimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromNewtonsPerSquareMillimeter(value) {\r\n        return new Pressure(value, PressureUnits.NewtonsPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a TechnicalAtmospheres\r\n     *\r\n     * @param value The unit as TechnicalAtmospheres to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromTechnicalAtmospheres(value) {\r\n        return new Pressure(value, PressureUnits.TechnicalAtmospheres);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Torrs\r\n     *\r\n     * @param value The unit as Torrs to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromTorrs(value) {\r\n        return new Pressure(value, PressureUnits.Torrs);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a PoundsForcePerSquareInch\r\n     *\r\n     * @param value The unit as PoundsForcePerSquareInch to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromPoundsForcePerSquareInch(value) {\r\n        return new Pressure(value, PressureUnits.PoundsForcePerSquareInch);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a PoundsForcePerSquareFoot\r\n     *\r\n     * @param value The unit as PoundsForcePerSquareFoot to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromPoundsForcePerSquareFoot(value) {\r\n        return new Pressure(value, PressureUnits.PoundsForcePerSquareFoot);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a TonnesForcePerSquareMillimeter\r\n     *\r\n     * @param value The unit as TonnesForcePerSquareMillimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromTonnesForcePerSquareMillimeter(value) {\r\n        return new Pressure(value, PressureUnits.TonnesForcePerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a TonnesForcePerSquareMeter\r\n     *\r\n     * @param value The unit as TonnesForcePerSquareMeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromTonnesForcePerSquareMeter(value) {\r\n        return new Pressure(value, PressureUnits.TonnesForcePerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a MetersOfHead\r\n     *\r\n     * @param value The unit as MetersOfHead to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMetersOfHead(value) {\r\n        return new Pressure(value, PressureUnits.MetersOfHead);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a TonnesForcePerSquareCentimeter\r\n     *\r\n     * @param value The unit as TonnesForcePerSquareCentimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromTonnesForcePerSquareCentimeter(value) {\r\n        return new Pressure(value, PressureUnits.TonnesForcePerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a FeetOfHead\r\n     *\r\n     * @param value The unit as FeetOfHead to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromFeetOfHead(value) {\r\n        return new Pressure(value, PressureUnits.FeetOfHead);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a MillimetersOfMercury\r\n     *\r\n     * @param value The unit as MillimetersOfMercury to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMillimetersOfMercury(value) {\r\n        return new Pressure(value, PressureUnits.MillimetersOfMercury);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a InchesOfMercury\r\n     *\r\n     * @param value The unit as InchesOfMercury to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromInchesOfMercury(value) {\r\n        return new Pressure(value, PressureUnits.InchesOfMercury);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a DynesPerSquareCentimeter\r\n     *\r\n     * @param value The unit as DynesPerSquareCentimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromDynesPerSquareCentimeter(value) {\r\n        return new Pressure(value, PressureUnits.DynesPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a PoundsPerInchSecondSquared\r\n     *\r\n     * @param value The unit as PoundsPerInchSecondSquared to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromPoundsPerInchSecondSquared(value) {\r\n        return new Pressure(value, PressureUnits.PoundsPerInchSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a InchesOfWaterColumn\r\n     *\r\n     * @param value The unit as InchesOfWaterColumn to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromInchesOfWaterColumn(value) {\r\n        return new Pressure(value, PressureUnits.InchesOfWaterColumn);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a MetersOfElevation\r\n     *\r\n     * @param value The unit as MetersOfElevation to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMetersOfElevation(value) {\r\n        return new Pressure(value, PressureUnits.MetersOfElevation);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a FeetOfElevation\r\n     *\r\n     * @param value The unit as FeetOfElevation to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromFeetOfElevation(value) {\r\n        return new Pressure(value, PressureUnits.FeetOfElevation);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Micropascals\r\n     *\r\n     * @param value The unit as Micropascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMicropascals(value) {\r\n        return new Pressure(value, PressureUnits.Micropascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Millipascals\r\n     *\r\n     * @param value The unit as Millipascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMillipascals(value) {\r\n        return new Pressure(value, PressureUnits.Millipascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Decapascals\r\n     *\r\n     * @param value The unit as Decapascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromDecapascals(value) {\r\n        return new Pressure(value, PressureUnits.Decapascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Hectopascals\r\n     *\r\n     * @param value The unit as Hectopascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromHectopascals(value) {\r\n        return new Pressure(value, PressureUnits.Hectopascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Kilopascals\r\n     *\r\n     * @param value The unit as Kilopascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilopascals(value) {\r\n        return new Pressure(value, PressureUnits.Kilopascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Megapascals\r\n     *\r\n     * @param value The unit as Megapascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMegapascals(value) {\r\n        return new Pressure(value, PressureUnits.Megapascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Gigapascals\r\n     *\r\n     * @param value The unit as Gigapascals to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromGigapascals(value) {\r\n        return new Pressure(value, PressureUnits.Gigapascals);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Microbars\r\n     *\r\n     * @param value The unit as Microbars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMicrobars(value) {\r\n        return new Pressure(value, PressureUnits.Microbars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Millibars\r\n     *\r\n     * @param value The unit as Millibars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMillibars(value) {\r\n        return new Pressure(value, PressureUnits.Millibars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Centibars\r\n     *\r\n     * @param value The unit as Centibars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromCentibars(value) {\r\n        return new Pressure(value, PressureUnits.Centibars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Decibars\r\n     *\r\n     * @param value The unit as Decibars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromDecibars(value) {\r\n        return new Pressure(value, PressureUnits.Decibars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Kilobars\r\n     *\r\n     * @param value The unit as Kilobars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilobars(value) {\r\n        return new Pressure(value, PressureUnits.Kilobars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a Megabars\r\n     *\r\n     * @param value The unit as Megabars to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMegabars(value) {\r\n        return new Pressure(value, PressureUnits.Megabars);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilonewtonsPerSquareMeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerSquareMeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilonewtonsPerSquareMeter(value) {\r\n        return new Pressure(value, PressureUnits.KilonewtonsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a MeganewtonsPerSquareMeter\r\n     *\r\n     * @param value The unit as MeganewtonsPerSquareMeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromMeganewtonsPerSquareMeter(value) {\r\n        return new Pressure(value, PressureUnits.MeganewtonsPerSquareMeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilonewtonsPerSquareCentimeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerSquareCentimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilonewtonsPerSquareCentimeter(value) {\r\n        return new Pressure(value, PressureUnits.KilonewtonsPerSquareCentimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilonewtonsPerSquareMillimeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerSquareMillimeter to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilonewtonsPerSquareMillimeter(value) {\r\n        return new Pressure(value, PressureUnits.KilonewtonsPerSquareMillimeter);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilopoundsForcePerSquareInch\r\n     *\r\n     * @param value The unit as KilopoundsForcePerSquareInch to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilopoundsForcePerSquareInch(value) {\r\n        return new Pressure(value, PressureUnits.KilopoundsForcePerSquareInch);\r\n    }\r\n    /**\r\n     * Create a new Pressure instance from a KilopoundsForcePerSquareFoot\r\n     *\r\n     * @param value The unit as KilopoundsForcePerSquareFoot to create a new Pressure from.\r\n     * @returns The new Pressure instance.\r\n     */\r\n    static FromKilopoundsForcePerSquareFoot(value) {\r\n        return new Pressure(value, PressureUnits.KilopoundsForcePerSquareFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PressureUnits.Pascals:\r\n                return this.value;\r\n            case PressureUnits.Atmospheres:\r\n                return this.value / (1.01325 * 1e5);\r\n            case PressureUnits.Bars:\r\n                return this.value / 1e5;\r\n            case PressureUnits.KilogramsForcePerSquareMeter:\r\n                return this.value * 0.101971619222242;\r\n            case PressureUnits.KilogramsForcePerSquareCentimeter:\r\n                return this.value / 9.80665e4;\r\n            case PressureUnits.KilogramsForcePerSquareMillimeter:\r\n                return this.value / 9.80665e6;\r\n            case PressureUnits.NewtonsPerSquareMeter:\r\n                return this.value;\r\n            case PressureUnits.NewtonsPerSquareCentimeter:\r\n                return this.value / 1e4;\r\n            case PressureUnits.NewtonsPerSquareMillimeter:\r\n                return this.value / 1e6;\r\n            case PressureUnits.TechnicalAtmospheres:\r\n                return this.value / (9.80680592331 * 1e4);\r\n            case PressureUnits.Torrs:\r\n                return this.value / (1.3332266752 * 1e2);\r\n            case PressureUnits.PoundsForcePerSquareInch:\r\n                return this.value / 6.894757293168361e3;\r\n            case PressureUnits.PoundsForcePerSquareFoot:\r\n                return this.value / 4.788025898033584e1;\r\n            case PressureUnits.TonnesForcePerSquareMillimeter:\r\n                return this.value / 9.80665e9;\r\n            case PressureUnits.TonnesForcePerSquareMeter:\r\n                return this.value / 9.80665e3;\r\n            case PressureUnits.MetersOfHead:\r\n                return this.value * 0.0001019977334;\r\n            case PressureUnits.TonnesForcePerSquareCentimeter:\r\n                return this.value / 9.80665e7;\r\n            case PressureUnits.FeetOfHead:\r\n                return this.value * 0.000334552565551;\r\n            case PressureUnits.MillimetersOfMercury:\r\n                return this.value * 7.50061561302643e-3;\r\n            case PressureUnits.InchesOfMercury:\r\n                return this.value * 2.95299830714159e-4;\r\n            case PressureUnits.DynesPerSquareCentimeter:\r\n                return this.value / 1.0e-1;\r\n            case PressureUnits.PoundsPerInchSecondSquared:\r\n                return this.value / 1.785796732283465e1;\r\n            case PressureUnits.InchesOfWaterColumn:\r\n                return this.value / 249.08890833333;\r\n            case PressureUnits.MetersOfElevation:\r\n                return (1.0 - Math.pow(this.value / 101325.0, 0.190284)) * 44307.69396;\r\n            case PressureUnits.FeetOfElevation:\r\n                return (1.0 - Math.pow(this.value / 101325.0, 0.190284)) * 145366.45;\r\n            case PressureUnits.Micropascals:\r\n                return (this.value) / 0.000001;\r\n            case PressureUnits.Millipascals:\r\n                return (this.value) / 0.001;\r\n            case PressureUnits.Decapascals:\r\n                return (this.value) / 10;\r\n            case PressureUnits.Hectopascals:\r\n                return (this.value) / 100;\r\n            case PressureUnits.Kilopascals:\r\n                return (this.value) / 1000;\r\n            case PressureUnits.Megapascals:\r\n                return (this.value) / 1000000;\r\n            case PressureUnits.Gigapascals:\r\n                return (this.value) / 1000000000;\r\n            case PressureUnits.Microbars:\r\n                return (this.value / 1e5) / 0.000001;\r\n            case PressureUnits.Millibars:\r\n                return (this.value / 1e5) / 0.001;\r\n            case PressureUnits.Centibars:\r\n                return (this.value / 1e5) / 0.01;\r\n            case PressureUnits.Decibars:\r\n                return (this.value / 1e5) / 0.1;\r\n            case PressureUnits.Kilobars:\r\n                return (this.value / 1e5) / 1000;\r\n            case PressureUnits.Megabars:\r\n                return (this.value / 1e5) / 1000000;\r\n            case PressureUnits.KilonewtonsPerSquareMeter:\r\n                return (this.value) / 1000;\r\n            case PressureUnits.MeganewtonsPerSquareMeter:\r\n                return (this.value) / 1000000;\r\n            case PressureUnits.KilonewtonsPerSquareCentimeter:\r\n                return (this.value / 1e4) / 1000;\r\n            case PressureUnits.KilonewtonsPerSquareMillimeter:\r\n                return (this.value / 1e6) / 1000;\r\n            case PressureUnits.KilopoundsForcePerSquareInch:\r\n                return (this.value / 6.894757293168361e3) / 1000;\r\n            case PressureUnits.KilopoundsForcePerSquareFoot:\r\n                return (this.value / 4.788025898033584e1) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PressureUnits.Pascals:\r\n                return value;\r\n            case PressureUnits.Atmospheres:\r\n                return value * 1.01325 * 1e5;\r\n            case PressureUnits.Bars:\r\n                return value * 1e5;\r\n            case PressureUnits.KilogramsForcePerSquareMeter:\r\n                return value * 9.80665019960652;\r\n            case PressureUnits.KilogramsForcePerSquareCentimeter:\r\n                return value * 9.80665e4;\r\n            case PressureUnits.KilogramsForcePerSquareMillimeter:\r\n                return value * 9.80665e6;\r\n            case PressureUnits.NewtonsPerSquareMeter:\r\n                return value;\r\n            case PressureUnits.NewtonsPerSquareCentimeter:\r\n                return value * 1e4;\r\n            case PressureUnits.NewtonsPerSquareMillimeter:\r\n                return value * 1e6;\r\n            case PressureUnits.TechnicalAtmospheres:\r\n                return value * 9.80680592331 * 1e4;\r\n            case PressureUnits.Torrs:\r\n                return value * 1.3332266752 * 1e2;\r\n            case PressureUnits.PoundsForcePerSquareInch:\r\n                return value * 6.894757293168361e3;\r\n            case PressureUnits.PoundsForcePerSquareFoot:\r\n                return value * 4.788025898033584e1;\r\n            case PressureUnits.TonnesForcePerSquareMillimeter:\r\n                return value * 9.80665e9;\r\n            case PressureUnits.TonnesForcePerSquareMeter:\r\n                return value * 9.80665e3;\r\n            case PressureUnits.MetersOfHead:\r\n                return value * 9804.139432;\r\n            case PressureUnits.TonnesForcePerSquareCentimeter:\r\n                return value * 9.80665e7;\r\n            case PressureUnits.FeetOfHead:\r\n                return value * 2989.0669;\r\n            case PressureUnits.MillimetersOfMercury:\r\n                return value / 7.50061561302643e-3;\r\n            case PressureUnits.InchesOfMercury:\r\n                return value / 2.95299830714159e-4;\r\n            case PressureUnits.DynesPerSquareCentimeter:\r\n                return value * 1.0e-1;\r\n            case PressureUnits.PoundsPerInchSecondSquared:\r\n                return value * 1.785796732283465e1;\r\n            case PressureUnits.InchesOfWaterColumn:\r\n                return value * 249.08890833333;\r\n            case PressureUnits.MetersOfElevation:\r\n                return Math.pow(1.0 - (value / 44307.69396), 5.2553026003237266401799415610351) * 101325.0;\r\n            case PressureUnits.FeetOfElevation:\r\n                return Math.pow(1.0 - (value / 145366.45), 5.2553026003237266401799415610351) * 101325.0;\r\n            case PressureUnits.Micropascals:\r\n                return (value) * 0.000001;\r\n            case PressureUnits.Millipascals:\r\n                return (value) * 0.001;\r\n            case PressureUnits.Decapascals:\r\n                return (value) * 10;\r\n            case PressureUnits.Hectopascals:\r\n                return (value) * 100;\r\n            case PressureUnits.Kilopascals:\r\n                return (value) * 1000;\r\n            case PressureUnits.Megapascals:\r\n                return (value) * 1000000;\r\n            case PressureUnits.Gigapascals:\r\n                return (value) * 1000000000;\r\n            case PressureUnits.Microbars:\r\n                return (value * 1e5) * 0.000001;\r\n            case PressureUnits.Millibars:\r\n                return (value * 1e5) * 0.001;\r\n            case PressureUnits.Centibars:\r\n                return (value * 1e5) * 0.01;\r\n            case PressureUnits.Decibars:\r\n                return (value * 1e5) * 0.1;\r\n            case PressureUnits.Kilobars:\r\n                return (value * 1e5) * 1000;\r\n            case PressureUnits.Megabars:\r\n                return (value * 1e5) * 1000000;\r\n            case PressureUnits.KilonewtonsPerSquareMeter:\r\n                return (value) * 1000;\r\n            case PressureUnits.MeganewtonsPerSquareMeter:\r\n                return (value) * 1000000;\r\n            case PressureUnits.KilonewtonsPerSquareCentimeter:\r\n                return (value * 1e4) * 1000;\r\n            case PressureUnits.KilonewtonsPerSquareMillimeter:\r\n                return (value * 1e6) * 1000;\r\n            case PressureUnits.KilopoundsForcePerSquareInch:\r\n                return (value * 6.894757293168361e3) * 1000;\r\n            case PressureUnits.KilopoundsForcePerSquareFoot:\r\n                return (value * 4.788025898033584e1) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Pressure to string.\r\n     * Note! the default format for Pressure is Pascals.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Pressure.\r\n     * @returns The string format of the Pressure.\r\n     */\r\n    toString(toUnit = PressureUnits.Pascals) {\r\n        switch (toUnit) {\r\n            case PressureUnits.Pascals:\r\n                return this.Pascals + ` Pa`;\r\n            case PressureUnits.Atmospheres:\r\n                return this.Atmospheres + ` atm`;\r\n            case PressureUnits.Bars:\r\n                return this.Bars + ` bar`;\r\n            case PressureUnits.KilogramsForcePerSquareMeter:\r\n                return this.KilogramsForcePerSquareMeter + ` kgf/m²`;\r\n            case PressureUnits.KilogramsForcePerSquareCentimeter:\r\n                return this.KilogramsForcePerSquareCentimeter + ` kgf/cm²`;\r\n            case PressureUnits.KilogramsForcePerSquareMillimeter:\r\n                return this.KilogramsForcePerSquareMillimeter + ` kgf/mm²`;\r\n            case PressureUnits.NewtonsPerSquareMeter:\r\n                return this.NewtonsPerSquareMeter + ` N/m²`;\r\n            case PressureUnits.NewtonsPerSquareCentimeter:\r\n                return this.NewtonsPerSquareCentimeter + ` N/cm²`;\r\n            case PressureUnits.NewtonsPerSquareMillimeter:\r\n                return this.NewtonsPerSquareMillimeter + ` N/mm²`;\r\n            case PressureUnits.TechnicalAtmospheres:\r\n                return this.TechnicalAtmospheres + ` at`;\r\n            case PressureUnits.Torrs:\r\n                return this.Torrs + ` torr`;\r\n            case PressureUnits.PoundsForcePerSquareInch:\r\n                return this.PoundsForcePerSquareInch + ` psi`;\r\n            case PressureUnits.PoundsForcePerSquareFoot:\r\n                return this.PoundsForcePerSquareFoot + ` lb/ft²`;\r\n            case PressureUnits.TonnesForcePerSquareMillimeter:\r\n                return this.TonnesForcePerSquareMillimeter + ` tf/mm²`;\r\n            case PressureUnits.TonnesForcePerSquareMeter:\r\n                return this.TonnesForcePerSquareMeter + ` tf/m²`;\r\n            case PressureUnits.MetersOfHead:\r\n                return this.MetersOfHead + ` m of head`;\r\n            case PressureUnits.TonnesForcePerSquareCentimeter:\r\n                return this.TonnesForcePerSquareCentimeter + ` tf/cm²`;\r\n            case PressureUnits.FeetOfHead:\r\n                return this.FeetOfHead + ` ft of head`;\r\n            case PressureUnits.MillimetersOfMercury:\r\n                return this.MillimetersOfMercury + ` mmHg`;\r\n            case PressureUnits.InchesOfMercury:\r\n                return this.InchesOfMercury + ` inHg`;\r\n            case PressureUnits.DynesPerSquareCentimeter:\r\n                return this.DynesPerSquareCentimeter + ` dyn/cm²`;\r\n            case PressureUnits.PoundsPerInchSecondSquared:\r\n                return this.PoundsPerInchSecondSquared + ` lbm/(in·s²)`;\r\n            case PressureUnits.InchesOfWaterColumn:\r\n                return this.InchesOfWaterColumn + ` wc`;\r\n            case PressureUnits.MetersOfElevation:\r\n                return this.MetersOfElevation + ` m of elevation`;\r\n            case PressureUnits.FeetOfElevation:\r\n                return this.FeetOfElevation + ` ft of elevation`;\r\n            case PressureUnits.Micropascals:\r\n                return this.Micropascals + ` `;\r\n            case PressureUnits.Millipascals:\r\n                return this.Millipascals + ` `;\r\n            case PressureUnits.Decapascals:\r\n                return this.Decapascals + ` `;\r\n            case PressureUnits.Hectopascals:\r\n                return this.Hectopascals + ` `;\r\n            case PressureUnits.Kilopascals:\r\n                return this.Kilopascals + ` `;\r\n            case PressureUnits.Megapascals:\r\n                return this.Megapascals + ` `;\r\n            case PressureUnits.Gigapascals:\r\n                return this.Gigapascals + ` `;\r\n            case PressureUnits.Microbars:\r\n                return this.Microbars + ` `;\r\n            case PressureUnits.Millibars:\r\n                return this.Millibars + ` `;\r\n            case PressureUnits.Centibars:\r\n                return this.Centibars + ` `;\r\n            case PressureUnits.Decibars:\r\n                return this.Decibars + ` `;\r\n            case PressureUnits.Kilobars:\r\n                return this.Kilobars + ` `;\r\n            case PressureUnits.Megabars:\r\n                return this.Megabars + ` `;\r\n            case PressureUnits.KilonewtonsPerSquareMeter:\r\n                return this.KilonewtonsPerSquareMeter + ` `;\r\n            case PressureUnits.MeganewtonsPerSquareMeter:\r\n                return this.MeganewtonsPerSquareMeter + ` `;\r\n            case PressureUnits.KilonewtonsPerSquareCentimeter:\r\n                return this.KilonewtonsPerSquareCentimeter + ` `;\r\n            case PressureUnits.KilonewtonsPerSquareMillimeter:\r\n                return this.KilonewtonsPerSquareMillimeter + ` `;\r\n            case PressureUnits.KilopoundsForcePerSquareInch:\r\n                return this.KilopoundsForcePerSquareInch + ` `;\r\n            case PressureUnits.KilopoundsForcePerSquareFoot:\r\n                return this.KilopoundsForcePerSquareFoot + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Pressure are equals to the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns True if the given Pressure are equal to the current Pressure.\r\n     */\r\n    equals(pressure) {\r\n        return this.value === pressure.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Pressure against the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns 0 if they are equal, -1 if the current Pressure is less then other, 1 if the current Pressure is greater then other.\r\n     */\r\n    compareTo(pressure) {\r\n        if (this.value > pressure.BaseValue)\r\n            return 1;\r\n        if (this.value < pressure.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Pressure with the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns A new Pressure instance with the results.\r\n     */\r\n    add(pressure) {\r\n        return new Pressure(this.value + pressure.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Pressure with the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns A new Pressure instance with the results.\r\n     */\r\n    subtract(pressure) {\r\n        return new Pressure(this.value - pressure.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Pressure with the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns A new Pressure instance with the results.\r\n     */\r\n    multiply(pressure) {\r\n        return new Pressure(this.value * pressure.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Pressure with the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns A new Pressure instance with the results.\r\n     */\r\n    divide(pressure) {\r\n        return new Pressure(this.value / pressure.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Pressure with the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns A new Pressure instance with the results.\r\n     */\r\n    modulo(pressure) {\r\n        return new Pressure(this.value % pressure.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Pressure with the current Pressure.\r\n     * @param pressure The other Pressure.\r\n     * @returns A new Pressure instance with the results.\r\n     */\r\n    pow(pressure) {\r\n        return new Pressure(this.value ** pressure.BaseValue);\r\n    }\r\n}\r\nexports.Pressure = Pressure;\r\n//# sourceMappingURL=pressure.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PressureChangeRate = exports.PressureChangeRateUnits = void 0;\r\n/** PressureChangeRateUnits enumeration */\r\nvar PressureChangeRateUnits;\r\n(function (PressureChangeRateUnits) {\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"PascalsPerSecond\"] = 0] = \"PascalsPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"PascalsPerMinute\"] = 1] = \"PascalsPerMinute\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"AtmospheresPerSecond\"] = 2] = \"AtmospheresPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"PoundsForcePerSquareInchPerSecond\"] = 3] = \"PoundsForcePerSquareInchPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"PoundsForcePerSquareInchPerMinute\"] = 4] = \"PoundsForcePerSquareInchPerMinute\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"KilopascalsPerSecond\"] = 5] = \"KilopascalsPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"MegapascalsPerSecond\"] = 6] = \"MegapascalsPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"KilopascalsPerMinute\"] = 7] = \"KilopascalsPerMinute\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"MegapascalsPerMinute\"] = 8] = \"MegapascalsPerMinute\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"KilopoundsForcePerSquareInchPerSecond\"] = 9] = \"KilopoundsForcePerSquareInchPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"MegapoundsForcePerSquareInchPerSecond\"] = 10] = \"MegapoundsForcePerSquareInchPerSecond\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"KilopoundsForcePerSquareInchPerMinute\"] = 11] = \"KilopoundsForcePerSquareInchPerMinute\";\r\n    /** */\r\n    PressureChangeRateUnits[PressureChangeRateUnits[\"MegapoundsForcePerSquareInchPerMinute\"] = 12] = \"MegapoundsForcePerSquareInchPerMinute\";\r\n})(PressureChangeRateUnits = exports.PressureChangeRateUnits || (exports.PressureChangeRateUnits = {}));\r\n/** Pressure change rate is the ratio of the pressure change to the time during which the change occurred (value of pressure changes per unit time). */\r\nclass PressureChangeRate {\r\n    /**\r\n     * Create a new PressureChangeRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘PressureChangeRate’ unit to create from.\r\n     * The default unit is PascalsPerSecond\r\n     */\r\n    constructor(value, fromUnit = PressureChangeRateUnits.PascalsPerSecond) {\r\n        this.pascalspersecondLazy = null;\r\n        this.pascalsperminuteLazy = null;\r\n        this.atmospherespersecondLazy = null;\r\n        this.poundsforcepersquareinchpersecondLazy = null;\r\n        this.poundsforcepersquareinchperminuteLazy = null;\r\n        this.kilopascalspersecondLazy = null;\r\n        this.megapascalspersecondLazy = null;\r\n        this.kilopascalsperminuteLazy = null;\r\n        this.megapascalsperminuteLazy = null;\r\n        this.kilopoundsforcepersquareinchpersecondLazy = null;\r\n        this.megapoundsforcepersquareinchpersecondLazy = null;\r\n        this.kilopoundsforcepersquareinchperminuteLazy = null;\r\n        this.megapoundsforcepersquareinchperminuteLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of PressureChangeRate is PascalsPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get PascalsPerSecond() {\r\n        if (this.pascalspersecondLazy !== null) {\r\n            return this.pascalspersecondLazy;\r\n        }\r\n        return this.pascalspersecondLazy = this.convertFromBase(PressureChangeRateUnits.PascalsPerSecond);\r\n    }\r\n    /** */\r\n    get PascalsPerMinute() {\r\n        if (this.pascalsperminuteLazy !== null) {\r\n            return this.pascalsperminuteLazy;\r\n        }\r\n        return this.pascalsperminuteLazy = this.convertFromBase(PressureChangeRateUnits.PascalsPerMinute);\r\n    }\r\n    /** */\r\n    get AtmospheresPerSecond() {\r\n        if (this.atmospherespersecondLazy !== null) {\r\n            return this.atmospherespersecondLazy;\r\n        }\r\n        return this.atmospherespersecondLazy = this.convertFromBase(PressureChangeRateUnits.AtmospheresPerSecond);\r\n    }\r\n    /** */\r\n    get PoundsForcePerSquareInchPerSecond() {\r\n        if (this.poundsforcepersquareinchpersecondLazy !== null) {\r\n            return this.poundsforcepersquareinchpersecondLazy;\r\n        }\r\n        return this.poundsforcepersquareinchpersecondLazy = this.convertFromBase(PressureChangeRateUnits.PoundsForcePerSquareInchPerSecond);\r\n    }\r\n    /** */\r\n    get PoundsForcePerSquareInchPerMinute() {\r\n        if (this.poundsforcepersquareinchperminuteLazy !== null) {\r\n            return this.poundsforcepersquareinchperminuteLazy;\r\n        }\r\n        return this.poundsforcepersquareinchperminuteLazy = this.convertFromBase(PressureChangeRateUnits.PoundsForcePerSquareInchPerMinute);\r\n    }\r\n    /** */\r\n    get KilopascalsPerSecond() {\r\n        if (this.kilopascalspersecondLazy !== null) {\r\n            return this.kilopascalspersecondLazy;\r\n        }\r\n        return this.kilopascalspersecondLazy = this.convertFromBase(PressureChangeRateUnits.KilopascalsPerSecond);\r\n    }\r\n    /** */\r\n    get MegapascalsPerSecond() {\r\n        if (this.megapascalspersecondLazy !== null) {\r\n            return this.megapascalspersecondLazy;\r\n        }\r\n        return this.megapascalspersecondLazy = this.convertFromBase(PressureChangeRateUnits.MegapascalsPerSecond);\r\n    }\r\n    /** */\r\n    get KilopascalsPerMinute() {\r\n        if (this.kilopascalsperminuteLazy !== null) {\r\n            return this.kilopascalsperminuteLazy;\r\n        }\r\n        return this.kilopascalsperminuteLazy = this.convertFromBase(PressureChangeRateUnits.KilopascalsPerMinute);\r\n    }\r\n    /** */\r\n    get MegapascalsPerMinute() {\r\n        if (this.megapascalsperminuteLazy !== null) {\r\n            return this.megapascalsperminuteLazy;\r\n        }\r\n        return this.megapascalsperminuteLazy = this.convertFromBase(PressureChangeRateUnits.MegapascalsPerMinute);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerSquareInchPerSecond() {\r\n        if (this.kilopoundsforcepersquareinchpersecondLazy !== null) {\r\n            return this.kilopoundsforcepersquareinchpersecondLazy;\r\n        }\r\n        return this.kilopoundsforcepersquareinchpersecondLazy = this.convertFromBase(PressureChangeRateUnits.KilopoundsForcePerSquareInchPerSecond);\r\n    }\r\n    /** */\r\n    get MegapoundsForcePerSquareInchPerSecond() {\r\n        if (this.megapoundsforcepersquareinchpersecondLazy !== null) {\r\n            return this.megapoundsforcepersquareinchpersecondLazy;\r\n        }\r\n        return this.megapoundsforcepersquareinchpersecondLazy = this.convertFromBase(PressureChangeRateUnits.MegapoundsForcePerSquareInchPerSecond);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerSquareInchPerMinute() {\r\n        if (this.kilopoundsforcepersquareinchperminuteLazy !== null) {\r\n            return this.kilopoundsforcepersquareinchperminuteLazy;\r\n        }\r\n        return this.kilopoundsforcepersquareinchperminuteLazy = this.convertFromBase(PressureChangeRateUnits.KilopoundsForcePerSquareInchPerMinute);\r\n    }\r\n    /** */\r\n    get MegapoundsForcePerSquareInchPerMinute() {\r\n        if (this.megapoundsforcepersquareinchperminuteLazy !== null) {\r\n            return this.megapoundsforcepersquareinchperminuteLazy;\r\n        }\r\n        return this.megapoundsforcepersquareinchperminuteLazy = this.convertFromBase(PressureChangeRateUnits.MegapoundsForcePerSquareInchPerMinute);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a PascalsPerSecond\r\n     *\r\n     * @param value The unit as PascalsPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromPascalsPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.PascalsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a PascalsPerMinute\r\n     *\r\n     * @param value The unit as PascalsPerMinute to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromPascalsPerMinute(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.PascalsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a AtmospheresPerSecond\r\n     *\r\n     * @param value The unit as AtmospheresPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromAtmospheresPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.AtmospheresPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a PoundsForcePerSquareInchPerSecond\r\n     *\r\n     * @param value The unit as PoundsForcePerSquareInchPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromPoundsForcePerSquareInchPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.PoundsForcePerSquareInchPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a PoundsForcePerSquareInchPerMinute\r\n     *\r\n     * @param value The unit as PoundsForcePerSquareInchPerMinute to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromPoundsForcePerSquareInchPerMinute(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.PoundsForcePerSquareInchPerMinute);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a KilopascalsPerSecond\r\n     *\r\n     * @param value The unit as KilopascalsPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromKilopascalsPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.KilopascalsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a MegapascalsPerSecond\r\n     *\r\n     * @param value The unit as MegapascalsPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromMegapascalsPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.MegapascalsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a KilopascalsPerMinute\r\n     *\r\n     * @param value The unit as KilopascalsPerMinute to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromKilopascalsPerMinute(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.KilopascalsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a MegapascalsPerMinute\r\n     *\r\n     * @param value The unit as MegapascalsPerMinute to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromMegapascalsPerMinute(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.MegapascalsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a KilopoundsForcePerSquareInchPerSecond\r\n     *\r\n     * @param value The unit as KilopoundsForcePerSquareInchPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromKilopoundsForcePerSquareInchPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.KilopoundsForcePerSquareInchPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a MegapoundsForcePerSquareInchPerSecond\r\n     *\r\n     * @param value The unit as MegapoundsForcePerSquareInchPerSecond to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromMegapoundsForcePerSquareInchPerSecond(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.MegapoundsForcePerSquareInchPerSecond);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a KilopoundsForcePerSquareInchPerMinute\r\n     *\r\n     * @param value The unit as KilopoundsForcePerSquareInchPerMinute to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromKilopoundsForcePerSquareInchPerMinute(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.KilopoundsForcePerSquareInchPerMinute);\r\n    }\r\n    /**\r\n     * Create a new PressureChangeRate instance from a MegapoundsForcePerSquareInchPerMinute\r\n     *\r\n     * @param value The unit as MegapoundsForcePerSquareInchPerMinute to create a new PressureChangeRate from.\r\n     * @returns The new PressureChangeRate instance.\r\n     */\r\n    static FromMegapoundsForcePerSquareInchPerMinute(value) {\r\n        return new PressureChangeRate(value, PressureChangeRateUnits.MegapoundsForcePerSquareInchPerMinute);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case PressureChangeRateUnits.PascalsPerSecond:\r\n                return this.value;\r\n            case PressureChangeRateUnits.PascalsPerMinute:\r\n                return this.value * 60;\r\n            case PressureChangeRateUnits.AtmospheresPerSecond:\r\n                return this.value / (1.01325 * 1e5);\r\n            case PressureChangeRateUnits.PoundsForcePerSquareInchPerSecond:\r\n                return this.value / 6.894757293168361e3;\r\n            case PressureChangeRateUnits.PoundsForcePerSquareInchPerMinute:\r\n                return this.value / 6.894757293168361e3 * 60;\r\n            case PressureChangeRateUnits.KilopascalsPerSecond:\r\n                return (this.value) / 1000;\r\n            case PressureChangeRateUnits.MegapascalsPerSecond:\r\n                return (this.value) / 1000000;\r\n            case PressureChangeRateUnits.KilopascalsPerMinute:\r\n                return (this.value * 60) / 1000;\r\n            case PressureChangeRateUnits.MegapascalsPerMinute:\r\n                return (this.value * 60) / 1000000;\r\n            case PressureChangeRateUnits.KilopoundsForcePerSquareInchPerSecond:\r\n                return (this.value / 6.894757293168361e3) / 1000;\r\n            case PressureChangeRateUnits.MegapoundsForcePerSquareInchPerSecond:\r\n                return (this.value / 6.894757293168361e3) / 1000000;\r\n            case PressureChangeRateUnits.KilopoundsForcePerSquareInchPerMinute:\r\n                return (this.value / 6.894757293168361e3 * 60) / 1000;\r\n            case PressureChangeRateUnits.MegapoundsForcePerSquareInchPerMinute:\r\n                return (this.value / 6.894757293168361e3 * 60) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case PressureChangeRateUnits.PascalsPerSecond:\r\n                return value;\r\n            case PressureChangeRateUnits.PascalsPerMinute:\r\n                return value / 60;\r\n            case PressureChangeRateUnits.AtmospheresPerSecond:\r\n                return value * 1.01325 * 1e5;\r\n            case PressureChangeRateUnits.PoundsForcePerSquareInchPerSecond:\r\n                return value * 6.894757293168361e3;\r\n            case PressureChangeRateUnits.PoundsForcePerSquareInchPerMinute:\r\n                return value * 6.894757293168361e3 / 60;\r\n            case PressureChangeRateUnits.KilopascalsPerSecond:\r\n                return (value) * 1000;\r\n            case PressureChangeRateUnits.MegapascalsPerSecond:\r\n                return (value) * 1000000;\r\n            case PressureChangeRateUnits.KilopascalsPerMinute:\r\n                return (value / 60) * 1000;\r\n            case PressureChangeRateUnits.MegapascalsPerMinute:\r\n                return (value / 60) * 1000000;\r\n            case PressureChangeRateUnits.KilopoundsForcePerSquareInchPerSecond:\r\n                return (value * 6.894757293168361e3) * 1000;\r\n            case PressureChangeRateUnits.MegapoundsForcePerSquareInchPerSecond:\r\n                return (value * 6.894757293168361e3) * 1000000;\r\n            case PressureChangeRateUnits.KilopoundsForcePerSquareInchPerMinute:\r\n                return (value * 6.894757293168361e3 / 60) * 1000;\r\n            case PressureChangeRateUnits.MegapoundsForcePerSquareInchPerMinute:\r\n                return (value * 6.894757293168361e3 / 60) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the PressureChangeRate to string.\r\n     * Note! the default format for PressureChangeRate is PascalsPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the PressureChangeRate.\r\n     * @returns The string format of the PressureChangeRate.\r\n     */\r\n    toString(toUnit = PressureChangeRateUnits.PascalsPerSecond) {\r\n        switch (toUnit) {\r\n            case PressureChangeRateUnits.PascalsPerSecond:\r\n                return this.PascalsPerSecond + ` Pa/s`;\r\n            case PressureChangeRateUnits.PascalsPerMinute:\r\n                return this.PascalsPerMinute + ` Pa/min`;\r\n            case PressureChangeRateUnits.AtmospheresPerSecond:\r\n                return this.AtmospheresPerSecond + ` atm/s`;\r\n            case PressureChangeRateUnits.PoundsForcePerSquareInchPerSecond:\r\n                return this.PoundsForcePerSquareInchPerSecond + ` psi/s`;\r\n            case PressureChangeRateUnits.PoundsForcePerSquareInchPerMinute:\r\n                return this.PoundsForcePerSquareInchPerMinute + ` psi/min`;\r\n            case PressureChangeRateUnits.KilopascalsPerSecond:\r\n                return this.KilopascalsPerSecond + ` `;\r\n            case PressureChangeRateUnits.MegapascalsPerSecond:\r\n                return this.MegapascalsPerSecond + ` `;\r\n            case PressureChangeRateUnits.KilopascalsPerMinute:\r\n                return this.KilopascalsPerMinute + ` `;\r\n            case PressureChangeRateUnits.MegapascalsPerMinute:\r\n                return this.MegapascalsPerMinute + ` `;\r\n            case PressureChangeRateUnits.KilopoundsForcePerSquareInchPerSecond:\r\n                return this.KilopoundsForcePerSquareInchPerSecond + ` `;\r\n            case PressureChangeRateUnits.MegapoundsForcePerSquareInchPerSecond:\r\n                return this.MegapoundsForcePerSquareInchPerSecond + ` `;\r\n            case PressureChangeRateUnits.KilopoundsForcePerSquareInchPerMinute:\r\n                return this.KilopoundsForcePerSquareInchPerMinute + ` `;\r\n            case PressureChangeRateUnits.MegapoundsForcePerSquareInchPerMinute:\r\n                return this.MegapoundsForcePerSquareInchPerMinute + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given PressureChangeRate are equals to the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns True if the given PressureChangeRate are equal to the current PressureChangeRate.\r\n     */\r\n    equals(pressureChangeRate) {\r\n        return this.value === pressureChangeRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given PressureChangeRate against the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns 0 if they are equal, -1 if the current PressureChangeRate is less then other, 1 if the current PressureChangeRate is greater then other.\r\n     */\r\n    compareTo(pressureChangeRate) {\r\n        if (this.value > pressureChangeRate.BaseValue)\r\n            return 1;\r\n        if (this.value < pressureChangeRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given PressureChangeRate with the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns A new PressureChangeRate instance with the results.\r\n     */\r\n    add(pressureChangeRate) {\r\n        return new PressureChangeRate(this.value + pressureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given PressureChangeRate with the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns A new PressureChangeRate instance with the results.\r\n     */\r\n    subtract(pressureChangeRate) {\r\n        return new PressureChangeRate(this.value - pressureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given PressureChangeRate with the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns A new PressureChangeRate instance with the results.\r\n     */\r\n    multiply(pressureChangeRate) {\r\n        return new PressureChangeRate(this.value * pressureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given PressureChangeRate with the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns A new PressureChangeRate instance with the results.\r\n     */\r\n    divide(pressureChangeRate) {\r\n        return new PressureChangeRate(this.value / pressureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given PressureChangeRate with the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns A new PressureChangeRate instance with the results.\r\n     */\r\n    modulo(pressureChangeRate) {\r\n        return new PressureChangeRate(this.value % pressureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given PressureChangeRate with the current PressureChangeRate.\r\n     * @param pressureChangeRate The other PressureChangeRate.\r\n     * @returns A new PressureChangeRate instance with the results.\r\n     */\r\n    pow(pressureChangeRate) {\r\n        return new PressureChangeRate(this.value ** pressureChangeRate.BaseValue);\r\n    }\r\n}\r\nexports.PressureChangeRate = PressureChangeRate;\r\n//# sourceMappingURL=pressurechangerate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Ratio = exports.RatioUnits = void 0;\r\n/** RatioUnits enumeration */\r\nvar RatioUnits;\r\n(function (RatioUnits) {\r\n    /** */\r\n    RatioUnits[RatioUnits[\"DecimalFractions\"] = 0] = \"DecimalFractions\";\r\n    /** */\r\n    RatioUnits[RatioUnits[\"Percent\"] = 1] = \"Percent\";\r\n    /** */\r\n    RatioUnits[RatioUnits[\"PartsPerThousand\"] = 2] = \"PartsPerThousand\";\r\n    /** */\r\n    RatioUnits[RatioUnits[\"PartsPerMillion\"] = 3] = \"PartsPerMillion\";\r\n    /** */\r\n    RatioUnits[RatioUnits[\"PartsPerBillion\"] = 4] = \"PartsPerBillion\";\r\n    /** */\r\n    RatioUnits[RatioUnits[\"PartsPerTrillion\"] = 5] = \"PartsPerTrillion\";\r\n})(RatioUnits = exports.RatioUnits || (exports.RatioUnits = {}));\r\n/** In mathematics, a ratio is a relationship between two numbers of the same kind (e.g., objects, persons, students, spoonfuls, units of whatever identical dimension), usually expressed as \"a to b\" or a:b, sometimes expressed arithmetically as a dimensionless quotient of the two that explicitly indicates how many times the first number contains the second (not necessarily an integer). */\r\nclass Ratio {\r\n    /**\r\n     * Create a new Ratio.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Ratio’ unit to create from.\r\n     * The default unit is DecimalFractions\r\n     */\r\n    constructor(value, fromUnit = RatioUnits.DecimalFractions) {\r\n        this.decimalfractionsLazy = null;\r\n        this.percentLazy = null;\r\n        this.partsperthousandLazy = null;\r\n        this.partspermillionLazy = null;\r\n        this.partsperbillionLazy = null;\r\n        this.partspertrillionLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Ratio is DecimalFractions.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DecimalFractions() {\r\n        if (this.decimalfractionsLazy !== null) {\r\n            return this.decimalfractionsLazy;\r\n        }\r\n        return this.decimalfractionsLazy = this.convertFromBase(RatioUnits.DecimalFractions);\r\n    }\r\n    /** */\r\n    get Percent() {\r\n        if (this.percentLazy !== null) {\r\n            return this.percentLazy;\r\n        }\r\n        return this.percentLazy = this.convertFromBase(RatioUnits.Percent);\r\n    }\r\n    /** */\r\n    get PartsPerThousand() {\r\n        if (this.partsperthousandLazy !== null) {\r\n            return this.partsperthousandLazy;\r\n        }\r\n        return this.partsperthousandLazy = this.convertFromBase(RatioUnits.PartsPerThousand);\r\n    }\r\n    /** */\r\n    get PartsPerMillion() {\r\n        if (this.partspermillionLazy !== null) {\r\n            return this.partspermillionLazy;\r\n        }\r\n        return this.partspermillionLazy = this.convertFromBase(RatioUnits.PartsPerMillion);\r\n    }\r\n    /** */\r\n    get PartsPerBillion() {\r\n        if (this.partsperbillionLazy !== null) {\r\n            return this.partsperbillionLazy;\r\n        }\r\n        return this.partsperbillionLazy = this.convertFromBase(RatioUnits.PartsPerBillion);\r\n    }\r\n    /** */\r\n    get PartsPerTrillion() {\r\n        if (this.partspertrillionLazy !== null) {\r\n            return this.partspertrillionLazy;\r\n        }\r\n        return this.partspertrillionLazy = this.convertFromBase(RatioUnits.PartsPerTrillion);\r\n    }\r\n    /**\r\n     * Create a new Ratio instance from a DecimalFractions\r\n     *\r\n     * @param value The unit as DecimalFractions to create a new Ratio from.\r\n     * @returns The new Ratio instance.\r\n     */\r\n    static FromDecimalFractions(value) {\r\n        return new Ratio(value, RatioUnits.DecimalFractions);\r\n    }\r\n    /**\r\n     * Create a new Ratio instance from a Percent\r\n     *\r\n     * @param value The unit as Percent to create a new Ratio from.\r\n     * @returns The new Ratio instance.\r\n     */\r\n    static FromPercent(value) {\r\n        return new Ratio(value, RatioUnits.Percent);\r\n    }\r\n    /**\r\n     * Create a new Ratio instance from a PartsPerThousand\r\n     *\r\n     * @param value The unit as PartsPerThousand to create a new Ratio from.\r\n     * @returns The new Ratio instance.\r\n     */\r\n    static FromPartsPerThousand(value) {\r\n        return new Ratio(value, RatioUnits.PartsPerThousand);\r\n    }\r\n    /**\r\n     * Create a new Ratio instance from a PartsPerMillion\r\n     *\r\n     * @param value The unit as PartsPerMillion to create a new Ratio from.\r\n     * @returns The new Ratio instance.\r\n     */\r\n    static FromPartsPerMillion(value) {\r\n        return new Ratio(value, RatioUnits.PartsPerMillion);\r\n    }\r\n    /**\r\n     * Create a new Ratio instance from a PartsPerBillion\r\n     *\r\n     * @param value The unit as PartsPerBillion to create a new Ratio from.\r\n     * @returns The new Ratio instance.\r\n     */\r\n    static FromPartsPerBillion(value) {\r\n        return new Ratio(value, RatioUnits.PartsPerBillion);\r\n    }\r\n    /**\r\n     * Create a new Ratio instance from a PartsPerTrillion\r\n     *\r\n     * @param value The unit as PartsPerTrillion to create a new Ratio from.\r\n     * @returns The new Ratio instance.\r\n     */\r\n    static FromPartsPerTrillion(value) {\r\n        return new Ratio(value, RatioUnits.PartsPerTrillion);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RatioUnits.DecimalFractions:\r\n                return this.value;\r\n            case RatioUnits.Percent:\r\n                return this.value * 1e2;\r\n            case RatioUnits.PartsPerThousand:\r\n                return this.value * 1e3;\r\n            case RatioUnits.PartsPerMillion:\r\n                return this.value * 1e6;\r\n            case RatioUnits.PartsPerBillion:\r\n                return this.value * 1e9;\r\n            case RatioUnits.PartsPerTrillion:\r\n                return this.value * 1e12;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RatioUnits.DecimalFractions:\r\n                return value;\r\n            case RatioUnits.Percent:\r\n                return value / 1e2;\r\n            case RatioUnits.PartsPerThousand:\r\n                return value / 1e3;\r\n            case RatioUnits.PartsPerMillion:\r\n                return value / 1e6;\r\n            case RatioUnits.PartsPerBillion:\r\n                return value / 1e9;\r\n            case RatioUnits.PartsPerTrillion:\r\n                return value / 1e12;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Ratio to string.\r\n     * Note! the default format for Ratio is DecimalFractions.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Ratio.\r\n     * @returns The string format of the Ratio.\r\n     */\r\n    toString(toUnit = RatioUnits.DecimalFractions) {\r\n        switch (toUnit) {\r\n            case RatioUnits.DecimalFractions:\r\n                return this.DecimalFractions + ` `;\r\n            case RatioUnits.Percent:\r\n                return this.Percent + ` %`;\r\n            case RatioUnits.PartsPerThousand:\r\n                return this.PartsPerThousand + ` ‰`;\r\n            case RatioUnits.PartsPerMillion:\r\n                return this.PartsPerMillion + ` ppm`;\r\n            case RatioUnits.PartsPerBillion:\r\n                return this.PartsPerBillion + ` ppb`;\r\n            case RatioUnits.PartsPerTrillion:\r\n                return this.PartsPerTrillion + ` ppt`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Ratio are equals to the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns True if the given Ratio are equal to the current Ratio.\r\n     */\r\n    equals(ratio) {\r\n        return this.value === ratio.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Ratio against the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns 0 if they are equal, -1 if the current Ratio is less then other, 1 if the current Ratio is greater then other.\r\n     */\r\n    compareTo(ratio) {\r\n        if (this.value > ratio.BaseValue)\r\n            return 1;\r\n        if (this.value < ratio.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Ratio with the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns A new Ratio instance with the results.\r\n     */\r\n    add(ratio) {\r\n        return new Ratio(this.value + ratio.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Ratio with the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns A new Ratio instance with the results.\r\n     */\r\n    subtract(ratio) {\r\n        return new Ratio(this.value - ratio.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Ratio with the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns A new Ratio instance with the results.\r\n     */\r\n    multiply(ratio) {\r\n        return new Ratio(this.value * ratio.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Ratio with the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns A new Ratio instance with the results.\r\n     */\r\n    divide(ratio) {\r\n        return new Ratio(this.value / ratio.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Ratio with the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns A new Ratio instance with the results.\r\n     */\r\n    modulo(ratio) {\r\n        return new Ratio(this.value % ratio.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Ratio with the current Ratio.\r\n     * @param ratio The other Ratio.\r\n     * @returns A new Ratio instance with the results.\r\n     */\r\n    pow(ratio) {\r\n        return new Ratio(this.value ** ratio.BaseValue);\r\n    }\r\n}\r\nexports.Ratio = Ratio;\r\n//# sourceMappingURL=ratio.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RatioChangeRate = exports.RatioChangeRateUnits = void 0;\r\n/** RatioChangeRateUnits enumeration */\r\nvar RatioChangeRateUnits;\r\n(function (RatioChangeRateUnits) {\r\n    /** */\r\n    RatioChangeRateUnits[RatioChangeRateUnits[\"PercentsPerSecond\"] = 0] = \"PercentsPerSecond\";\r\n    /** */\r\n    RatioChangeRateUnits[RatioChangeRateUnits[\"DecimalFractionsPerSecond\"] = 1] = \"DecimalFractionsPerSecond\";\r\n})(RatioChangeRateUnits = exports.RatioChangeRateUnits || (exports.RatioChangeRateUnits = {}));\r\n/** The change in ratio per unit of time. */\r\nclass RatioChangeRate {\r\n    /**\r\n     * Create a new RatioChangeRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘RatioChangeRate’ unit to create from.\r\n     * The default unit is DecimalFractionsPerSecond\r\n     */\r\n    constructor(value, fromUnit = RatioChangeRateUnits.DecimalFractionsPerSecond) {\r\n        this.percentspersecondLazy = null;\r\n        this.decimalfractionspersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of RatioChangeRate is DecimalFractionsPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get PercentsPerSecond() {\r\n        if (this.percentspersecondLazy !== null) {\r\n            return this.percentspersecondLazy;\r\n        }\r\n        return this.percentspersecondLazy = this.convertFromBase(RatioChangeRateUnits.PercentsPerSecond);\r\n    }\r\n    /** */\r\n    get DecimalFractionsPerSecond() {\r\n        if (this.decimalfractionspersecondLazy !== null) {\r\n            return this.decimalfractionspersecondLazy;\r\n        }\r\n        return this.decimalfractionspersecondLazy = this.convertFromBase(RatioChangeRateUnits.DecimalFractionsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RatioChangeRate instance from a PercentsPerSecond\r\n     *\r\n     * @param value The unit as PercentsPerSecond to create a new RatioChangeRate from.\r\n     * @returns The new RatioChangeRate instance.\r\n     */\r\n    static FromPercentsPerSecond(value) {\r\n        return new RatioChangeRate(value, RatioChangeRateUnits.PercentsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RatioChangeRate instance from a DecimalFractionsPerSecond\r\n     *\r\n     * @param value The unit as DecimalFractionsPerSecond to create a new RatioChangeRate from.\r\n     * @returns The new RatioChangeRate instance.\r\n     */\r\n    static FromDecimalFractionsPerSecond(value) {\r\n        return new RatioChangeRate(value, RatioChangeRateUnits.DecimalFractionsPerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RatioChangeRateUnits.PercentsPerSecond:\r\n                return this.value * 1e2;\r\n            case RatioChangeRateUnits.DecimalFractionsPerSecond:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RatioChangeRateUnits.PercentsPerSecond:\r\n                return value / 1e2;\r\n            case RatioChangeRateUnits.DecimalFractionsPerSecond:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the RatioChangeRate to string.\r\n     * Note! the default format for RatioChangeRate is DecimalFractionsPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the RatioChangeRate.\r\n     * @returns The string format of the RatioChangeRate.\r\n     */\r\n    toString(toUnit = RatioChangeRateUnits.DecimalFractionsPerSecond) {\r\n        switch (toUnit) {\r\n            case RatioChangeRateUnits.PercentsPerSecond:\r\n                return this.PercentsPerSecond + ` %/s`;\r\n            case RatioChangeRateUnits.DecimalFractionsPerSecond:\r\n                return this.DecimalFractionsPerSecond + ` /s`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given RatioChangeRate are equals to the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns True if the given RatioChangeRate are equal to the current RatioChangeRate.\r\n     */\r\n    equals(ratioChangeRate) {\r\n        return this.value === ratioChangeRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given RatioChangeRate against the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns 0 if they are equal, -1 if the current RatioChangeRate is less then other, 1 if the current RatioChangeRate is greater then other.\r\n     */\r\n    compareTo(ratioChangeRate) {\r\n        if (this.value > ratioChangeRate.BaseValue)\r\n            return 1;\r\n        if (this.value < ratioChangeRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given RatioChangeRate with the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns A new RatioChangeRate instance with the results.\r\n     */\r\n    add(ratioChangeRate) {\r\n        return new RatioChangeRate(this.value + ratioChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given RatioChangeRate with the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns A new RatioChangeRate instance with the results.\r\n     */\r\n    subtract(ratioChangeRate) {\r\n        return new RatioChangeRate(this.value - ratioChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given RatioChangeRate with the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns A new RatioChangeRate instance with the results.\r\n     */\r\n    multiply(ratioChangeRate) {\r\n        return new RatioChangeRate(this.value * ratioChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given RatioChangeRate with the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns A new RatioChangeRate instance with the results.\r\n     */\r\n    divide(ratioChangeRate) {\r\n        return new RatioChangeRate(this.value / ratioChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given RatioChangeRate with the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns A new RatioChangeRate instance with the results.\r\n     */\r\n    modulo(ratioChangeRate) {\r\n        return new RatioChangeRate(this.value % ratioChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given RatioChangeRate with the current RatioChangeRate.\r\n     * @param ratioChangeRate The other RatioChangeRate.\r\n     * @returns A new RatioChangeRate instance with the results.\r\n     */\r\n    pow(ratioChangeRate) {\r\n        return new RatioChangeRate(this.value ** ratioChangeRate.BaseValue);\r\n    }\r\n}\r\nexports.RatioChangeRate = RatioChangeRate;\r\n//# sourceMappingURL=ratiochangerate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ReactiveEnergy = exports.ReactiveEnergyUnits = void 0;\r\n/** ReactiveEnergyUnits enumeration */\r\nvar ReactiveEnergyUnits;\r\n(function (ReactiveEnergyUnits) {\r\n    /** */\r\n    ReactiveEnergyUnits[ReactiveEnergyUnits[\"VoltampereReactiveHours\"] = 0] = \"VoltampereReactiveHours\";\r\n    /** */\r\n    ReactiveEnergyUnits[ReactiveEnergyUnits[\"KilovoltampereReactiveHours\"] = 1] = \"KilovoltampereReactiveHours\";\r\n    /** */\r\n    ReactiveEnergyUnits[ReactiveEnergyUnits[\"MegavoltampereReactiveHours\"] = 2] = \"MegavoltampereReactiveHours\";\r\n})(ReactiveEnergyUnits = exports.ReactiveEnergyUnits || (exports.ReactiveEnergyUnits = {}));\r\n/** The Volt-ampere reactive hour (expressed as varh) is the reactive power of one Volt-ampere reactive produced in one hour. */\r\nclass ReactiveEnergy {\r\n    /**\r\n     * Create a new ReactiveEnergy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ReactiveEnergy’ unit to create from.\r\n     * The default unit is VoltampereReactiveHours\r\n     */\r\n    constructor(value, fromUnit = ReactiveEnergyUnits.VoltampereReactiveHours) {\r\n        this.voltamperereactivehoursLazy = null;\r\n        this.kilovoltamperereactivehoursLazy = null;\r\n        this.megavoltamperereactivehoursLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ReactiveEnergy is VoltampereReactiveHours.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltampereReactiveHours() {\r\n        if (this.voltamperereactivehoursLazy !== null) {\r\n            return this.voltamperereactivehoursLazy;\r\n        }\r\n        return this.voltamperereactivehoursLazy = this.convertFromBase(ReactiveEnergyUnits.VoltampereReactiveHours);\r\n    }\r\n    /** */\r\n    get KilovoltampereReactiveHours() {\r\n        if (this.kilovoltamperereactivehoursLazy !== null) {\r\n            return this.kilovoltamperereactivehoursLazy;\r\n        }\r\n        return this.kilovoltamperereactivehoursLazy = this.convertFromBase(ReactiveEnergyUnits.KilovoltampereReactiveHours);\r\n    }\r\n    /** */\r\n    get MegavoltampereReactiveHours() {\r\n        if (this.megavoltamperereactivehoursLazy !== null) {\r\n            return this.megavoltamperereactivehoursLazy;\r\n        }\r\n        return this.megavoltamperereactivehoursLazy = this.convertFromBase(ReactiveEnergyUnits.MegavoltampereReactiveHours);\r\n    }\r\n    /**\r\n     * Create a new ReactiveEnergy instance from a VoltampereReactiveHours\r\n     *\r\n     * @param value The unit as VoltampereReactiveHours to create a new ReactiveEnergy from.\r\n     * @returns The new ReactiveEnergy instance.\r\n     */\r\n    static FromVoltampereReactiveHours(value) {\r\n        return new ReactiveEnergy(value, ReactiveEnergyUnits.VoltampereReactiveHours);\r\n    }\r\n    /**\r\n     * Create a new ReactiveEnergy instance from a KilovoltampereReactiveHours\r\n     *\r\n     * @param value The unit as KilovoltampereReactiveHours to create a new ReactiveEnergy from.\r\n     * @returns The new ReactiveEnergy instance.\r\n     */\r\n    static FromKilovoltampereReactiveHours(value) {\r\n        return new ReactiveEnergy(value, ReactiveEnergyUnits.KilovoltampereReactiveHours);\r\n    }\r\n    /**\r\n     * Create a new ReactiveEnergy instance from a MegavoltampereReactiveHours\r\n     *\r\n     * @param value The unit as MegavoltampereReactiveHours to create a new ReactiveEnergy from.\r\n     * @returns The new ReactiveEnergy instance.\r\n     */\r\n    static FromMegavoltampereReactiveHours(value) {\r\n        return new ReactiveEnergy(value, ReactiveEnergyUnits.MegavoltampereReactiveHours);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ReactiveEnergyUnits.VoltampereReactiveHours:\r\n                return this.value;\r\n            case ReactiveEnergyUnits.KilovoltampereReactiveHours:\r\n                return (this.value) / 1000;\r\n            case ReactiveEnergyUnits.MegavoltampereReactiveHours:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ReactiveEnergyUnits.VoltampereReactiveHours:\r\n                return value;\r\n            case ReactiveEnergyUnits.KilovoltampereReactiveHours:\r\n                return (value) * 1000;\r\n            case ReactiveEnergyUnits.MegavoltampereReactiveHours:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ReactiveEnergy to string.\r\n     * Note! the default format for ReactiveEnergy is VoltampereReactiveHours.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ReactiveEnergy.\r\n     * @returns The string format of the ReactiveEnergy.\r\n     */\r\n    toString(toUnit = ReactiveEnergyUnits.VoltampereReactiveHours) {\r\n        switch (toUnit) {\r\n            case ReactiveEnergyUnits.VoltampereReactiveHours:\r\n                return this.VoltampereReactiveHours + ` varh`;\r\n            case ReactiveEnergyUnits.KilovoltampereReactiveHours:\r\n                return this.KilovoltampereReactiveHours + ` `;\r\n            case ReactiveEnergyUnits.MegavoltampereReactiveHours:\r\n                return this.MegavoltampereReactiveHours + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ReactiveEnergy are equals to the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns True if the given ReactiveEnergy are equal to the current ReactiveEnergy.\r\n     */\r\n    equals(reactiveEnergy) {\r\n        return this.value === reactiveEnergy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ReactiveEnergy against the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns 0 if they are equal, -1 if the current ReactiveEnergy is less then other, 1 if the current ReactiveEnergy is greater then other.\r\n     */\r\n    compareTo(reactiveEnergy) {\r\n        if (this.value > reactiveEnergy.BaseValue)\r\n            return 1;\r\n        if (this.value < reactiveEnergy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ReactiveEnergy with the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns A new ReactiveEnergy instance with the results.\r\n     */\r\n    add(reactiveEnergy) {\r\n        return new ReactiveEnergy(this.value + reactiveEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ReactiveEnergy with the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns A new ReactiveEnergy instance with the results.\r\n     */\r\n    subtract(reactiveEnergy) {\r\n        return new ReactiveEnergy(this.value - reactiveEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ReactiveEnergy with the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns A new ReactiveEnergy instance with the results.\r\n     */\r\n    multiply(reactiveEnergy) {\r\n        return new ReactiveEnergy(this.value * reactiveEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ReactiveEnergy with the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns A new ReactiveEnergy instance with the results.\r\n     */\r\n    divide(reactiveEnergy) {\r\n        return new ReactiveEnergy(this.value / reactiveEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ReactiveEnergy with the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns A new ReactiveEnergy instance with the results.\r\n     */\r\n    modulo(reactiveEnergy) {\r\n        return new ReactiveEnergy(this.value % reactiveEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ReactiveEnergy with the current ReactiveEnergy.\r\n     * @param reactiveEnergy The other ReactiveEnergy.\r\n     * @returns A new ReactiveEnergy instance with the results.\r\n     */\r\n    pow(reactiveEnergy) {\r\n        return new ReactiveEnergy(this.value ** reactiveEnergy.BaseValue);\r\n    }\r\n}\r\nexports.ReactiveEnergy = ReactiveEnergy;\r\n//# sourceMappingURL=reactiveenergy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ReactivePower = exports.ReactivePowerUnits = void 0;\r\n/** ReactivePowerUnits enumeration */\r\nvar ReactivePowerUnits;\r\n(function (ReactivePowerUnits) {\r\n    /** */\r\n    ReactivePowerUnits[ReactivePowerUnits[\"VoltamperesReactive\"] = 0] = \"VoltamperesReactive\";\r\n    /** */\r\n    ReactivePowerUnits[ReactivePowerUnits[\"KilovoltamperesReactive\"] = 1] = \"KilovoltamperesReactive\";\r\n    /** */\r\n    ReactivePowerUnits[ReactivePowerUnits[\"MegavoltamperesReactive\"] = 2] = \"MegavoltamperesReactive\";\r\n    /** */\r\n    ReactivePowerUnits[ReactivePowerUnits[\"GigavoltamperesReactive\"] = 3] = \"GigavoltamperesReactive\";\r\n})(ReactivePowerUnits = exports.ReactivePowerUnits || (exports.ReactivePowerUnits = {}));\r\n/** Volt-ampere reactive (var) is a unit by which reactive power is expressed in an AC electric power system. Reactive power exists in an AC circuit when the current and voltage are not in phase. */\r\nclass ReactivePower {\r\n    /**\r\n     * Create a new ReactivePower.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ReactivePower’ unit to create from.\r\n     * The default unit is VoltamperesReactive\r\n     */\r\n    constructor(value, fromUnit = ReactivePowerUnits.VoltamperesReactive) {\r\n        this.voltamperesreactiveLazy = null;\r\n        this.kilovoltamperesreactiveLazy = null;\r\n        this.megavoltamperesreactiveLazy = null;\r\n        this.gigavoltamperesreactiveLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ReactivePower is VoltamperesReactive.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get VoltamperesReactive() {\r\n        if (this.voltamperesreactiveLazy !== null) {\r\n            return this.voltamperesreactiveLazy;\r\n        }\r\n        return this.voltamperesreactiveLazy = this.convertFromBase(ReactivePowerUnits.VoltamperesReactive);\r\n    }\r\n    /** */\r\n    get KilovoltamperesReactive() {\r\n        if (this.kilovoltamperesreactiveLazy !== null) {\r\n            return this.kilovoltamperesreactiveLazy;\r\n        }\r\n        return this.kilovoltamperesreactiveLazy = this.convertFromBase(ReactivePowerUnits.KilovoltamperesReactive);\r\n    }\r\n    /** */\r\n    get MegavoltamperesReactive() {\r\n        if (this.megavoltamperesreactiveLazy !== null) {\r\n            return this.megavoltamperesreactiveLazy;\r\n        }\r\n        return this.megavoltamperesreactiveLazy = this.convertFromBase(ReactivePowerUnits.MegavoltamperesReactive);\r\n    }\r\n    /** */\r\n    get GigavoltamperesReactive() {\r\n        if (this.gigavoltamperesreactiveLazy !== null) {\r\n            return this.gigavoltamperesreactiveLazy;\r\n        }\r\n        return this.gigavoltamperesreactiveLazy = this.convertFromBase(ReactivePowerUnits.GigavoltamperesReactive);\r\n    }\r\n    /**\r\n     * Create a new ReactivePower instance from a VoltamperesReactive\r\n     *\r\n     * @param value The unit as VoltamperesReactive to create a new ReactivePower from.\r\n     * @returns The new ReactivePower instance.\r\n     */\r\n    static FromVoltamperesReactive(value) {\r\n        return new ReactivePower(value, ReactivePowerUnits.VoltamperesReactive);\r\n    }\r\n    /**\r\n     * Create a new ReactivePower instance from a KilovoltamperesReactive\r\n     *\r\n     * @param value The unit as KilovoltamperesReactive to create a new ReactivePower from.\r\n     * @returns The new ReactivePower instance.\r\n     */\r\n    static FromKilovoltamperesReactive(value) {\r\n        return new ReactivePower(value, ReactivePowerUnits.KilovoltamperesReactive);\r\n    }\r\n    /**\r\n     * Create a new ReactivePower instance from a MegavoltamperesReactive\r\n     *\r\n     * @param value The unit as MegavoltamperesReactive to create a new ReactivePower from.\r\n     * @returns The new ReactivePower instance.\r\n     */\r\n    static FromMegavoltamperesReactive(value) {\r\n        return new ReactivePower(value, ReactivePowerUnits.MegavoltamperesReactive);\r\n    }\r\n    /**\r\n     * Create a new ReactivePower instance from a GigavoltamperesReactive\r\n     *\r\n     * @param value The unit as GigavoltamperesReactive to create a new ReactivePower from.\r\n     * @returns The new ReactivePower instance.\r\n     */\r\n    static FromGigavoltamperesReactive(value) {\r\n        return new ReactivePower(value, ReactivePowerUnits.GigavoltamperesReactive);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ReactivePowerUnits.VoltamperesReactive:\r\n                return this.value;\r\n            case ReactivePowerUnits.KilovoltamperesReactive:\r\n                return (this.value) / 1000;\r\n            case ReactivePowerUnits.MegavoltamperesReactive:\r\n                return (this.value) / 1000000;\r\n            case ReactivePowerUnits.GigavoltamperesReactive:\r\n                return (this.value) / 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ReactivePowerUnits.VoltamperesReactive:\r\n                return value;\r\n            case ReactivePowerUnits.KilovoltamperesReactive:\r\n                return (value) * 1000;\r\n            case ReactivePowerUnits.MegavoltamperesReactive:\r\n                return (value) * 1000000;\r\n            case ReactivePowerUnits.GigavoltamperesReactive:\r\n                return (value) * 1000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ReactivePower to string.\r\n     * Note! the default format for ReactivePower is VoltamperesReactive.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ReactivePower.\r\n     * @returns The string format of the ReactivePower.\r\n     */\r\n    toString(toUnit = ReactivePowerUnits.VoltamperesReactive) {\r\n        switch (toUnit) {\r\n            case ReactivePowerUnits.VoltamperesReactive:\r\n                return this.VoltamperesReactive + ` var`;\r\n            case ReactivePowerUnits.KilovoltamperesReactive:\r\n                return this.KilovoltamperesReactive + ` `;\r\n            case ReactivePowerUnits.MegavoltamperesReactive:\r\n                return this.MegavoltamperesReactive + ` `;\r\n            case ReactivePowerUnits.GigavoltamperesReactive:\r\n                return this.GigavoltamperesReactive + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ReactivePower are equals to the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns True if the given ReactivePower are equal to the current ReactivePower.\r\n     */\r\n    equals(reactivePower) {\r\n        return this.value === reactivePower.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ReactivePower against the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns 0 if they are equal, -1 if the current ReactivePower is less then other, 1 if the current ReactivePower is greater then other.\r\n     */\r\n    compareTo(reactivePower) {\r\n        if (this.value > reactivePower.BaseValue)\r\n            return 1;\r\n        if (this.value < reactivePower.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ReactivePower with the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns A new ReactivePower instance with the results.\r\n     */\r\n    add(reactivePower) {\r\n        return new ReactivePower(this.value + reactivePower.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ReactivePower with the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns A new ReactivePower instance with the results.\r\n     */\r\n    subtract(reactivePower) {\r\n        return new ReactivePower(this.value - reactivePower.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ReactivePower with the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns A new ReactivePower instance with the results.\r\n     */\r\n    multiply(reactivePower) {\r\n        return new ReactivePower(this.value * reactivePower.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ReactivePower with the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns A new ReactivePower instance with the results.\r\n     */\r\n    divide(reactivePower) {\r\n        return new ReactivePower(this.value / reactivePower.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ReactivePower with the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns A new ReactivePower instance with the results.\r\n     */\r\n    modulo(reactivePower) {\r\n        return new ReactivePower(this.value % reactivePower.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ReactivePower with the current ReactivePower.\r\n     * @param reactivePower The other ReactivePower.\r\n     * @returns A new ReactivePower instance with the results.\r\n     */\r\n    pow(reactivePower) {\r\n        return new ReactivePower(this.value ** reactivePower.BaseValue);\r\n    }\r\n}\r\nexports.ReactivePower = ReactivePower;\r\n//# sourceMappingURL=reactivepower.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RelativeHumidity = exports.RelativeHumidityUnits = void 0;\r\n/** RelativeHumidityUnits enumeration */\r\nvar RelativeHumidityUnits;\r\n(function (RelativeHumidityUnits) {\r\n    /** */\r\n    RelativeHumidityUnits[RelativeHumidityUnits[\"Percent\"] = 0] = \"Percent\";\r\n})(RelativeHumidityUnits = exports.RelativeHumidityUnits || (exports.RelativeHumidityUnits = {}));\r\n/** Relative humidity is a ratio of the actual water vapor present in the air to the maximum water vapor in the air at the given temperature. */\r\nclass RelativeHumidity {\r\n    /**\r\n     * Create a new RelativeHumidity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘RelativeHumidity’ unit to create from.\r\n     * The default unit is Percent\r\n     */\r\n    constructor(value, fromUnit = RelativeHumidityUnits.Percent) {\r\n        this.percentLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of RelativeHumidity is Percent.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Percent() {\r\n        if (this.percentLazy !== null) {\r\n            return this.percentLazy;\r\n        }\r\n        return this.percentLazy = this.convertFromBase(RelativeHumidityUnits.Percent);\r\n    }\r\n    /**\r\n     * Create a new RelativeHumidity instance from a Percent\r\n     *\r\n     * @param value The unit as Percent to create a new RelativeHumidity from.\r\n     * @returns The new RelativeHumidity instance.\r\n     */\r\n    static FromPercent(value) {\r\n        return new RelativeHumidity(value, RelativeHumidityUnits.Percent);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RelativeHumidityUnits.Percent:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RelativeHumidityUnits.Percent:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the RelativeHumidity to string.\r\n     * Note! the default format for RelativeHumidity is Percent.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the RelativeHumidity.\r\n     * @returns The string format of the RelativeHumidity.\r\n     */\r\n    toString(toUnit = RelativeHumidityUnits.Percent) {\r\n        switch (toUnit) {\r\n            case RelativeHumidityUnits.Percent:\r\n                return this.Percent + ` %RH`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given RelativeHumidity are equals to the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns True if the given RelativeHumidity are equal to the current RelativeHumidity.\r\n     */\r\n    equals(relativeHumidity) {\r\n        return this.value === relativeHumidity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given RelativeHumidity against the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns 0 if they are equal, -1 if the current RelativeHumidity is less then other, 1 if the current RelativeHumidity is greater then other.\r\n     */\r\n    compareTo(relativeHumidity) {\r\n        if (this.value > relativeHumidity.BaseValue)\r\n            return 1;\r\n        if (this.value < relativeHumidity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given RelativeHumidity with the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns A new RelativeHumidity instance with the results.\r\n     */\r\n    add(relativeHumidity) {\r\n        return new RelativeHumidity(this.value + relativeHumidity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given RelativeHumidity with the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns A new RelativeHumidity instance with the results.\r\n     */\r\n    subtract(relativeHumidity) {\r\n        return new RelativeHumidity(this.value - relativeHumidity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given RelativeHumidity with the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns A new RelativeHumidity instance with the results.\r\n     */\r\n    multiply(relativeHumidity) {\r\n        return new RelativeHumidity(this.value * relativeHumidity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given RelativeHumidity with the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns A new RelativeHumidity instance with the results.\r\n     */\r\n    divide(relativeHumidity) {\r\n        return new RelativeHumidity(this.value / relativeHumidity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given RelativeHumidity with the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns A new RelativeHumidity instance with the results.\r\n     */\r\n    modulo(relativeHumidity) {\r\n        return new RelativeHumidity(this.value % relativeHumidity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given RelativeHumidity with the current RelativeHumidity.\r\n     * @param relativeHumidity The other RelativeHumidity.\r\n     * @returns A new RelativeHumidity instance with the results.\r\n     */\r\n    pow(relativeHumidity) {\r\n        return new RelativeHumidity(this.value ** relativeHumidity.BaseValue);\r\n    }\r\n}\r\nexports.RelativeHumidity = RelativeHumidity;\r\n//# sourceMappingURL=relativehumidity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RotationalAcceleration = exports.RotationalAccelerationUnits = void 0;\r\n/** RotationalAccelerationUnits enumeration */\r\nvar RotationalAccelerationUnits;\r\n(function (RotationalAccelerationUnits) {\r\n    /** */\r\n    RotationalAccelerationUnits[RotationalAccelerationUnits[\"RadiansPerSecondSquared\"] = 0] = \"RadiansPerSecondSquared\";\r\n    /** */\r\n    RotationalAccelerationUnits[RotationalAccelerationUnits[\"DegreesPerSecondSquared\"] = 1] = \"DegreesPerSecondSquared\";\r\n    /** */\r\n    RotationalAccelerationUnits[RotationalAccelerationUnits[\"RevolutionsPerMinutePerSecond\"] = 2] = \"RevolutionsPerMinutePerSecond\";\r\n    /** */\r\n    RotationalAccelerationUnits[RotationalAccelerationUnits[\"RevolutionsPerSecondSquared\"] = 3] = \"RevolutionsPerSecondSquared\";\r\n})(RotationalAccelerationUnits = exports.RotationalAccelerationUnits || (exports.RotationalAccelerationUnits = {}));\r\n/** Angular acceleration is the rate of change of rotational speed. */\r\nclass RotationalAcceleration {\r\n    /**\r\n     * Create a new RotationalAcceleration.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘RotationalAcceleration’ unit to create from.\r\n     * The default unit is RadiansPerSecondSquared\r\n     */\r\n    constructor(value, fromUnit = RotationalAccelerationUnits.RadiansPerSecondSquared) {\r\n        this.radianspersecondsquaredLazy = null;\r\n        this.degreespersecondsquaredLazy = null;\r\n        this.revolutionsperminutepersecondLazy = null;\r\n        this.revolutionspersecondsquaredLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of RotationalAcceleration is RadiansPerSecondSquared.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get RadiansPerSecondSquared() {\r\n        if (this.radianspersecondsquaredLazy !== null) {\r\n            return this.radianspersecondsquaredLazy;\r\n        }\r\n        return this.radianspersecondsquaredLazy = this.convertFromBase(RotationalAccelerationUnits.RadiansPerSecondSquared);\r\n    }\r\n    /** */\r\n    get DegreesPerSecondSquared() {\r\n        if (this.degreespersecondsquaredLazy !== null) {\r\n            return this.degreespersecondsquaredLazy;\r\n        }\r\n        return this.degreespersecondsquaredLazy = this.convertFromBase(RotationalAccelerationUnits.DegreesPerSecondSquared);\r\n    }\r\n    /** */\r\n    get RevolutionsPerMinutePerSecond() {\r\n        if (this.revolutionsperminutepersecondLazy !== null) {\r\n            return this.revolutionsperminutepersecondLazy;\r\n        }\r\n        return this.revolutionsperminutepersecondLazy = this.convertFromBase(RotationalAccelerationUnits.RevolutionsPerMinutePerSecond);\r\n    }\r\n    /** */\r\n    get RevolutionsPerSecondSquared() {\r\n        if (this.revolutionspersecondsquaredLazy !== null) {\r\n            return this.revolutionspersecondsquaredLazy;\r\n        }\r\n        return this.revolutionspersecondsquaredLazy = this.convertFromBase(RotationalAccelerationUnits.RevolutionsPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new RotationalAcceleration instance from a RadiansPerSecondSquared\r\n     *\r\n     * @param value The unit as RadiansPerSecondSquared to create a new RotationalAcceleration from.\r\n     * @returns The new RotationalAcceleration instance.\r\n     */\r\n    static FromRadiansPerSecondSquared(value) {\r\n        return new RotationalAcceleration(value, RotationalAccelerationUnits.RadiansPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new RotationalAcceleration instance from a DegreesPerSecondSquared\r\n     *\r\n     * @param value The unit as DegreesPerSecondSquared to create a new RotationalAcceleration from.\r\n     * @returns The new RotationalAcceleration instance.\r\n     */\r\n    static FromDegreesPerSecondSquared(value) {\r\n        return new RotationalAcceleration(value, RotationalAccelerationUnits.DegreesPerSecondSquared);\r\n    }\r\n    /**\r\n     * Create a new RotationalAcceleration instance from a RevolutionsPerMinutePerSecond\r\n     *\r\n     * @param value The unit as RevolutionsPerMinutePerSecond to create a new RotationalAcceleration from.\r\n     * @returns The new RotationalAcceleration instance.\r\n     */\r\n    static FromRevolutionsPerMinutePerSecond(value) {\r\n        return new RotationalAcceleration(value, RotationalAccelerationUnits.RevolutionsPerMinutePerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalAcceleration instance from a RevolutionsPerSecondSquared\r\n     *\r\n     * @param value The unit as RevolutionsPerSecondSquared to create a new RotationalAcceleration from.\r\n     * @returns The new RotationalAcceleration instance.\r\n     */\r\n    static FromRevolutionsPerSecondSquared(value) {\r\n        return new RotationalAcceleration(value, RotationalAccelerationUnits.RevolutionsPerSecondSquared);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RotationalAccelerationUnits.RadiansPerSecondSquared:\r\n                return this.value;\r\n            case RotationalAccelerationUnits.DegreesPerSecondSquared:\r\n                return (180 / Math.PI) * this.value;\r\n            case RotationalAccelerationUnits.RevolutionsPerMinutePerSecond:\r\n                return (60 / (2 * Math.PI)) * this.value;\r\n            case RotationalAccelerationUnits.RevolutionsPerSecondSquared:\r\n                return (1 / (2 * Math.PI)) * this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RotationalAccelerationUnits.RadiansPerSecondSquared:\r\n                return value;\r\n            case RotationalAccelerationUnits.DegreesPerSecondSquared:\r\n                return (Math.PI / 180) * value;\r\n            case RotationalAccelerationUnits.RevolutionsPerMinutePerSecond:\r\n                return ((2 * Math.PI) / 60) * value;\r\n            case RotationalAccelerationUnits.RevolutionsPerSecondSquared:\r\n                return (2 * Math.PI) * value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the RotationalAcceleration to string.\r\n     * Note! the default format for RotationalAcceleration is RadiansPerSecondSquared.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the RotationalAcceleration.\r\n     * @returns The string format of the RotationalAcceleration.\r\n     */\r\n    toString(toUnit = RotationalAccelerationUnits.RadiansPerSecondSquared) {\r\n        switch (toUnit) {\r\n            case RotationalAccelerationUnits.RadiansPerSecondSquared:\r\n                return this.RadiansPerSecondSquared + ` rad/s²`;\r\n            case RotationalAccelerationUnits.DegreesPerSecondSquared:\r\n                return this.DegreesPerSecondSquared + ` °/s²`;\r\n            case RotationalAccelerationUnits.RevolutionsPerMinutePerSecond:\r\n                return this.RevolutionsPerMinutePerSecond + ` rpm/s`;\r\n            case RotationalAccelerationUnits.RevolutionsPerSecondSquared:\r\n                return this.RevolutionsPerSecondSquared + ` r/s²`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given RotationalAcceleration are equals to the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns True if the given RotationalAcceleration are equal to the current RotationalAcceleration.\r\n     */\r\n    equals(rotationalAcceleration) {\r\n        return this.value === rotationalAcceleration.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given RotationalAcceleration against the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns 0 if they are equal, -1 if the current RotationalAcceleration is less then other, 1 if the current RotationalAcceleration is greater then other.\r\n     */\r\n    compareTo(rotationalAcceleration) {\r\n        if (this.value > rotationalAcceleration.BaseValue)\r\n            return 1;\r\n        if (this.value < rotationalAcceleration.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given RotationalAcceleration with the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns A new RotationalAcceleration instance with the results.\r\n     */\r\n    add(rotationalAcceleration) {\r\n        return new RotationalAcceleration(this.value + rotationalAcceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given RotationalAcceleration with the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns A new RotationalAcceleration instance with the results.\r\n     */\r\n    subtract(rotationalAcceleration) {\r\n        return new RotationalAcceleration(this.value - rotationalAcceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given RotationalAcceleration with the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns A new RotationalAcceleration instance with the results.\r\n     */\r\n    multiply(rotationalAcceleration) {\r\n        return new RotationalAcceleration(this.value * rotationalAcceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given RotationalAcceleration with the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns A new RotationalAcceleration instance with the results.\r\n     */\r\n    divide(rotationalAcceleration) {\r\n        return new RotationalAcceleration(this.value / rotationalAcceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given RotationalAcceleration with the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns A new RotationalAcceleration instance with the results.\r\n     */\r\n    modulo(rotationalAcceleration) {\r\n        return new RotationalAcceleration(this.value % rotationalAcceleration.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given RotationalAcceleration with the current RotationalAcceleration.\r\n     * @param rotationalAcceleration The other RotationalAcceleration.\r\n     * @returns A new RotationalAcceleration instance with the results.\r\n     */\r\n    pow(rotationalAcceleration) {\r\n        return new RotationalAcceleration(this.value ** rotationalAcceleration.BaseValue);\r\n    }\r\n}\r\nexports.RotationalAcceleration = RotationalAcceleration;\r\n//# sourceMappingURL=rotationalacceleration.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RotationalSpeed = exports.RotationalSpeedUnits = void 0;\r\n/** RotationalSpeedUnits enumeration */\r\nvar RotationalSpeedUnits;\r\n(function (RotationalSpeedUnits) {\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"RadiansPerSecond\"] = 0] = \"RadiansPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"DegreesPerSecond\"] = 1] = \"DegreesPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"DegreesPerMinute\"] = 2] = \"DegreesPerMinute\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"RevolutionsPerSecond\"] = 3] = \"RevolutionsPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"RevolutionsPerMinute\"] = 4] = \"RevolutionsPerMinute\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"NanoradiansPerSecond\"] = 5] = \"NanoradiansPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"MicroradiansPerSecond\"] = 6] = \"MicroradiansPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"MilliradiansPerSecond\"] = 7] = \"MilliradiansPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"CentiradiansPerSecond\"] = 8] = \"CentiradiansPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"DeciradiansPerSecond\"] = 9] = \"DeciradiansPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"NanodegreesPerSecond\"] = 10] = \"NanodegreesPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"MicrodegreesPerSecond\"] = 11] = \"MicrodegreesPerSecond\";\r\n    /** */\r\n    RotationalSpeedUnits[RotationalSpeedUnits[\"MillidegreesPerSecond\"] = 12] = \"MillidegreesPerSecond\";\r\n})(RotationalSpeedUnits = exports.RotationalSpeedUnits || (exports.RotationalSpeedUnits = {}));\r\n/** Rotational speed (sometimes called speed of revolution) is the number of complete rotations, revolutions, cycles, or turns per time unit. Rotational speed is a cyclic frequency, measured in radians per second or in hertz in the SI System by scientists, or in revolutions per minute (rpm or min-1) or revolutions per second in everyday life. The symbol for rotational speed is ω (the Greek lowercase letter \"omega\"). */\r\nclass RotationalSpeed {\r\n    /**\r\n     * Create a new RotationalSpeed.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘RotationalSpeed’ unit to create from.\r\n     * The default unit is RadiansPerSecond\r\n     */\r\n    constructor(value, fromUnit = RotationalSpeedUnits.RadiansPerSecond) {\r\n        this.radianspersecondLazy = null;\r\n        this.degreespersecondLazy = null;\r\n        this.degreesperminuteLazy = null;\r\n        this.revolutionspersecondLazy = null;\r\n        this.revolutionsperminuteLazy = null;\r\n        this.nanoradianspersecondLazy = null;\r\n        this.microradianspersecondLazy = null;\r\n        this.milliradianspersecondLazy = null;\r\n        this.centiradianspersecondLazy = null;\r\n        this.deciradianspersecondLazy = null;\r\n        this.nanodegreespersecondLazy = null;\r\n        this.microdegreespersecondLazy = null;\r\n        this.millidegreespersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of RotationalSpeed is RadiansPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get RadiansPerSecond() {\r\n        if (this.radianspersecondLazy !== null) {\r\n            return this.radianspersecondLazy;\r\n        }\r\n        return this.radianspersecondLazy = this.convertFromBase(RotationalSpeedUnits.RadiansPerSecond);\r\n    }\r\n    /** */\r\n    get DegreesPerSecond() {\r\n        if (this.degreespersecondLazy !== null) {\r\n            return this.degreespersecondLazy;\r\n        }\r\n        return this.degreespersecondLazy = this.convertFromBase(RotationalSpeedUnits.DegreesPerSecond);\r\n    }\r\n    /** */\r\n    get DegreesPerMinute() {\r\n        if (this.degreesperminuteLazy !== null) {\r\n            return this.degreesperminuteLazy;\r\n        }\r\n        return this.degreesperminuteLazy = this.convertFromBase(RotationalSpeedUnits.DegreesPerMinute);\r\n    }\r\n    /** */\r\n    get RevolutionsPerSecond() {\r\n        if (this.revolutionspersecondLazy !== null) {\r\n            return this.revolutionspersecondLazy;\r\n        }\r\n        return this.revolutionspersecondLazy = this.convertFromBase(RotationalSpeedUnits.RevolutionsPerSecond);\r\n    }\r\n    /** */\r\n    get RevolutionsPerMinute() {\r\n        if (this.revolutionsperminuteLazy !== null) {\r\n            return this.revolutionsperminuteLazy;\r\n        }\r\n        return this.revolutionsperminuteLazy = this.convertFromBase(RotationalSpeedUnits.RevolutionsPerMinute);\r\n    }\r\n    /** */\r\n    get NanoradiansPerSecond() {\r\n        if (this.nanoradianspersecondLazy !== null) {\r\n            return this.nanoradianspersecondLazy;\r\n        }\r\n        return this.nanoradianspersecondLazy = this.convertFromBase(RotationalSpeedUnits.NanoradiansPerSecond);\r\n    }\r\n    /** */\r\n    get MicroradiansPerSecond() {\r\n        if (this.microradianspersecondLazy !== null) {\r\n            return this.microradianspersecondLazy;\r\n        }\r\n        return this.microradianspersecondLazy = this.convertFromBase(RotationalSpeedUnits.MicroradiansPerSecond);\r\n    }\r\n    /** */\r\n    get MilliradiansPerSecond() {\r\n        if (this.milliradianspersecondLazy !== null) {\r\n            return this.milliradianspersecondLazy;\r\n        }\r\n        return this.milliradianspersecondLazy = this.convertFromBase(RotationalSpeedUnits.MilliradiansPerSecond);\r\n    }\r\n    /** */\r\n    get CentiradiansPerSecond() {\r\n        if (this.centiradianspersecondLazy !== null) {\r\n            return this.centiradianspersecondLazy;\r\n        }\r\n        return this.centiradianspersecondLazy = this.convertFromBase(RotationalSpeedUnits.CentiradiansPerSecond);\r\n    }\r\n    /** */\r\n    get DeciradiansPerSecond() {\r\n        if (this.deciradianspersecondLazy !== null) {\r\n            return this.deciradianspersecondLazy;\r\n        }\r\n        return this.deciradianspersecondLazy = this.convertFromBase(RotationalSpeedUnits.DeciradiansPerSecond);\r\n    }\r\n    /** */\r\n    get NanodegreesPerSecond() {\r\n        if (this.nanodegreespersecondLazy !== null) {\r\n            return this.nanodegreespersecondLazy;\r\n        }\r\n        return this.nanodegreespersecondLazy = this.convertFromBase(RotationalSpeedUnits.NanodegreesPerSecond);\r\n    }\r\n    /** */\r\n    get MicrodegreesPerSecond() {\r\n        if (this.microdegreespersecondLazy !== null) {\r\n            return this.microdegreespersecondLazy;\r\n        }\r\n        return this.microdegreespersecondLazy = this.convertFromBase(RotationalSpeedUnits.MicrodegreesPerSecond);\r\n    }\r\n    /** */\r\n    get MillidegreesPerSecond() {\r\n        if (this.millidegreespersecondLazy !== null) {\r\n            return this.millidegreespersecondLazy;\r\n        }\r\n        return this.millidegreespersecondLazy = this.convertFromBase(RotationalSpeedUnits.MillidegreesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a RadiansPerSecond\r\n     *\r\n     * @param value The unit as RadiansPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromRadiansPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.RadiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a DegreesPerSecond\r\n     *\r\n     * @param value The unit as DegreesPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromDegreesPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.DegreesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a DegreesPerMinute\r\n     *\r\n     * @param value The unit as DegreesPerMinute to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromDegreesPerMinute(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.DegreesPerMinute);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a RevolutionsPerSecond\r\n     *\r\n     * @param value The unit as RevolutionsPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromRevolutionsPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.RevolutionsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a RevolutionsPerMinute\r\n     *\r\n     * @param value The unit as RevolutionsPerMinute to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromRevolutionsPerMinute(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.RevolutionsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a NanoradiansPerSecond\r\n     *\r\n     * @param value The unit as NanoradiansPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromNanoradiansPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.NanoradiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a MicroradiansPerSecond\r\n     *\r\n     * @param value The unit as MicroradiansPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromMicroradiansPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.MicroradiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a MilliradiansPerSecond\r\n     *\r\n     * @param value The unit as MilliradiansPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromMilliradiansPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.MilliradiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a CentiradiansPerSecond\r\n     *\r\n     * @param value The unit as CentiradiansPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromCentiradiansPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.CentiradiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a DeciradiansPerSecond\r\n     *\r\n     * @param value The unit as DeciradiansPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromDeciradiansPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.DeciradiansPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a NanodegreesPerSecond\r\n     *\r\n     * @param value The unit as NanodegreesPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromNanodegreesPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.NanodegreesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a MicrodegreesPerSecond\r\n     *\r\n     * @param value The unit as MicrodegreesPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromMicrodegreesPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.MicrodegreesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new RotationalSpeed instance from a MillidegreesPerSecond\r\n     *\r\n     * @param value The unit as MillidegreesPerSecond to create a new RotationalSpeed from.\r\n     * @returns The new RotationalSpeed instance.\r\n     */\r\n    static FromMillidegreesPerSecond(value) {\r\n        return new RotationalSpeed(value, RotationalSpeedUnits.MillidegreesPerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RotationalSpeedUnits.RadiansPerSecond:\r\n                return this.value;\r\n            case RotationalSpeedUnits.DegreesPerSecond:\r\n                return (180 / Math.PI) * this.value;\r\n            case RotationalSpeedUnits.DegreesPerMinute:\r\n                return (180 * 60 / Math.PI) * this.value;\r\n            case RotationalSpeedUnits.RevolutionsPerSecond:\r\n                return this.value / 6.2831853072;\r\n            case RotationalSpeedUnits.RevolutionsPerMinute:\r\n                return (this.value / 6.2831853072) * 60;\r\n            case RotationalSpeedUnits.NanoradiansPerSecond:\r\n                return (this.value) / 1e-9;\r\n            case RotationalSpeedUnits.MicroradiansPerSecond:\r\n                return (this.value) / 0.000001;\r\n            case RotationalSpeedUnits.MilliradiansPerSecond:\r\n                return (this.value) / 0.001;\r\n            case RotationalSpeedUnits.CentiradiansPerSecond:\r\n                return (this.value) / 0.01;\r\n            case RotationalSpeedUnits.DeciradiansPerSecond:\r\n                return (this.value) / 0.1;\r\n            case RotationalSpeedUnits.NanodegreesPerSecond:\r\n                return ((180 / Math.PI) * this.value) / 1e-9;\r\n            case RotationalSpeedUnits.MicrodegreesPerSecond:\r\n                return ((180 / Math.PI) * this.value) / 0.000001;\r\n            case RotationalSpeedUnits.MillidegreesPerSecond:\r\n                return ((180 / Math.PI) * this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RotationalSpeedUnits.RadiansPerSecond:\r\n                return value;\r\n            case RotationalSpeedUnits.DegreesPerSecond:\r\n                return (Math.PI / 180) * value;\r\n            case RotationalSpeedUnits.DegreesPerMinute:\r\n                return (Math.PI / (180 * 60)) * value;\r\n            case RotationalSpeedUnits.RevolutionsPerSecond:\r\n                return value * 6.2831853072;\r\n            case RotationalSpeedUnits.RevolutionsPerMinute:\r\n                return (value * 6.2831853072) / 60;\r\n            case RotationalSpeedUnits.NanoradiansPerSecond:\r\n                return (value) * 1e-9;\r\n            case RotationalSpeedUnits.MicroradiansPerSecond:\r\n                return (value) * 0.000001;\r\n            case RotationalSpeedUnits.MilliradiansPerSecond:\r\n                return (value) * 0.001;\r\n            case RotationalSpeedUnits.CentiradiansPerSecond:\r\n                return (value) * 0.01;\r\n            case RotationalSpeedUnits.DeciradiansPerSecond:\r\n                return (value) * 0.1;\r\n            case RotationalSpeedUnits.NanodegreesPerSecond:\r\n                return ((Math.PI / 180) * value) * 1e-9;\r\n            case RotationalSpeedUnits.MicrodegreesPerSecond:\r\n                return ((Math.PI / 180) * value) * 0.000001;\r\n            case RotationalSpeedUnits.MillidegreesPerSecond:\r\n                return ((Math.PI / 180) * value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the RotationalSpeed to string.\r\n     * Note! the default format for RotationalSpeed is RadiansPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the RotationalSpeed.\r\n     * @returns The string format of the RotationalSpeed.\r\n     */\r\n    toString(toUnit = RotationalSpeedUnits.RadiansPerSecond) {\r\n        switch (toUnit) {\r\n            case RotationalSpeedUnits.RadiansPerSecond:\r\n                return this.RadiansPerSecond + ` rad/s`;\r\n            case RotationalSpeedUnits.DegreesPerSecond:\r\n                return this.DegreesPerSecond + ` °/s`;\r\n            case RotationalSpeedUnits.DegreesPerMinute:\r\n                return this.DegreesPerMinute + ` °/min`;\r\n            case RotationalSpeedUnits.RevolutionsPerSecond:\r\n                return this.RevolutionsPerSecond + ` r/s`;\r\n            case RotationalSpeedUnits.RevolutionsPerMinute:\r\n                return this.RevolutionsPerMinute + ` rpm`;\r\n            case RotationalSpeedUnits.NanoradiansPerSecond:\r\n                return this.NanoradiansPerSecond + ` `;\r\n            case RotationalSpeedUnits.MicroradiansPerSecond:\r\n                return this.MicroradiansPerSecond + ` `;\r\n            case RotationalSpeedUnits.MilliradiansPerSecond:\r\n                return this.MilliradiansPerSecond + ` `;\r\n            case RotationalSpeedUnits.CentiradiansPerSecond:\r\n                return this.CentiradiansPerSecond + ` `;\r\n            case RotationalSpeedUnits.DeciradiansPerSecond:\r\n                return this.DeciradiansPerSecond + ` `;\r\n            case RotationalSpeedUnits.NanodegreesPerSecond:\r\n                return this.NanodegreesPerSecond + ` `;\r\n            case RotationalSpeedUnits.MicrodegreesPerSecond:\r\n                return this.MicrodegreesPerSecond + ` `;\r\n            case RotationalSpeedUnits.MillidegreesPerSecond:\r\n                return this.MillidegreesPerSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given RotationalSpeed are equals to the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns True if the given RotationalSpeed are equal to the current RotationalSpeed.\r\n     */\r\n    equals(rotationalSpeed) {\r\n        return this.value === rotationalSpeed.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given RotationalSpeed against the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns 0 if they are equal, -1 if the current RotationalSpeed is less then other, 1 if the current RotationalSpeed is greater then other.\r\n     */\r\n    compareTo(rotationalSpeed) {\r\n        if (this.value > rotationalSpeed.BaseValue)\r\n            return 1;\r\n        if (this.value < rotationalSpeed.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given RotationalSpeed with the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns A new RotationalSpeed instance with the results.\r\n     */\r\n    add(rotationalSpeed) {\r\n        return new RotationalSpeed(this.value + rotationalSpeed.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given RotationalSpeed with the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns A new RotationalSpeed instance with the results.\r\n     */\r\n    subtract(rotationalSpeed) {\r\n        return new RotationalSpeed(this.value - rotationalSpeed.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given RotationalSpeed with the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns A new RotationalSpeed instance with the results.\r\n     */\r\n    multiply(rotationalSpeed) {\r\n        return new RotationalSpeed(this.value * rotationalSpeed.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given RotationalSpeed with the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns A new RotationalSpeed instance with the results.\r\n     */\r\n    divide(rotationalSpeed) {\r\n        return new RotationalSpeed(this.value / rotationalSpeed.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given RotationalSpeed with the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns A new RotationalSpeed instance with the results.\r\n     */\r\n    modulo(rotationalSpeed) {\r\n        return new RotationalSpeed(this.value % rotationalSpeed.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given RotationalSpeed with the current RotationalSpeed.\r\n     * @param rotationalSpeed The other RotationalSpeed.\r\n     * @returns A new RotationalSpeed instance with the results.\r\n     */\r\n    pow(rotationalSpeed) {\r\n        return new RotationalSpeed(this.value ** rotationalSpeed.BaseValue);\r\n    }\r\n}\r\nexports.RotationalSpeed = RotationalSpeed;\r\n//# sourceMappingURL=rotationalspeed.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RotationalStiffness = exports.RotationalStiffnessUnits = void 0;\r\n/** RotationalStiffnessUnits enumeration */\r\nvar RotationalStiffnessUnits;\r\n(function (RotationalStiffnessUnits) {\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NewtonMetersPerRadian\"] = 0] = \"NewtonMetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"PoundForceFeetPerDegrees\"] = 1] = \"PoundForceFeetPerDegrees\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"KilopoundForceFeetPerDegrees\"] = 2] = \"KilopoundForceFeetPerDegrees\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NewtonMillimetersPerDegree\"] = 3] = \"NewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NewtonMetersPerDegree\"] = 4] = \"NewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NewtonMillimetersPerRadian\"] = 5] = \"NewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"PoundForceFeetPerRadian\"] = 6] = \"PoundForceFeetPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"KilonewtonMetersPerRadian\"] = 7] = \"KilonewtonMetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MeganewtonMetersPerRadian\"] = 8] = \"MeganewtonMetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NanonewtonMillimetersPerDegree\"] = 9] = \"NanonewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MicronewtonMillimetersPerDegree\"] = 10] = \"MicronewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MillinewtonMillimetersPerDegree\"] = 11] = \"MillinewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"CentinewtonMillimetersPerDegree\"] = 12] = \"CentinewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"DecinewtonMillimetersPerDegree\"] = 13] = \"DecinewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"DecanewtonMillimetersPerDegree\"] = 14] = \"DecanewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"KilonewtonMillimetersPerDegree\"] = 15] = \"KilonewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MeganewtonMillimetersPerDegree\"] = 16] = \"MeganewtonMillimetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NanonewtonMetersPerDegree\"] = 17] = \"NanonewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MicronewtonMetersPerDegree\"] = 18] = \"MicronewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MillinewtonMetersPerDegree\"] = 19] = \"MillinewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"CentinewtonMetersPerDegree\"] = 20] = \"CentinewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"DecinewtonMetersPerDegree\"] = 21] = \"DecinewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"DecanewtonMetersPerDegree\"] = 22] = \"DecanewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"KilonewtonMetersPerDegree\"] = 23] = \"KilonewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MeganewtonMetersPerDegree\"] = 24] = \"MeganewtonMetersPerDegree\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"NanonewtonMillimetersPerRadian\"] = 25] = \"NanonewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MicronewtonMillimetersPerRadian\"] = 26] = \"MicronewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MillinewtonMillimetersPerRadian\"] = 27] = \"MillinewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"CentinewtonMillimetersPerRadian\"] = 28] = \"CentinewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"DecinewtonMillimetersPerRadian\"] = 29] = \"DecinewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"DecanewtonMillimetersPerRadian\"] = 30] = \"DecanewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"KilonewtonMillimetersPerRadian\"] = 31] = \"KilonewtonMillimetersPerRadian\";\r\n    /** */\r\n    RotationalStiffnessUnits[RotationalStiffnessUnits[\"MeganewtonMillimetersPerRadian\"] = 32] = \"MeganewtonMillimetersPerRadian\";\r\n})(RotationalStiffnessUnits = exports.RotationalStiffnessUnits || (exports.RotationalStiffnessUnits = {}));\r\n/** https://en.wikipedia.org/wiki/Stiffness#Rotational_stiffness */\r\nclass RotationalStiffness {\r\n    /**\r\n     * Create a new RotationalStiffness.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘RotationalStiffness’ unit to create from.\r\n     * The default unit is NewtonMetersPerRadian\r\n     */\r\n    constructor(value, fromUnit = RotationalStiffnessUnits.NewtonMetersPerRadian) {\r\n        this.newtonmetersperradianLazy = null;\r\n        this.poundforcefeetperdegreesLazy = null;\r\n        this.kilopoundforcefeetperdegreesLazy = null;\r\n        this.newtonmillimetersperdegreeLazy = null;\r\n        this.newtonmetersperdegreeLazy = null;\r\n        this.newtonmillimetersperradianLazy = null;\r\n        this.poundforcefeetperradianLazy = null;\r\n        this.kilonewtonmetersperradianLazy = null;\r\n        this.meganewtonmetersperradianLazy = null;\r\n        this.nanonewtonmillimetersperdegreeLazy = null;\r\n        this.micronewtonmillimetersperdegreeLazy = null;\r\n        this.millinewtonmillimetersperdegreeLazy = null;\r\n        this.centinewtonmillimetersperdegreeLazy = null;\r\n        this.decinewtonmillimetersperdegreeLazy = null;\r\n        this.decanewtonmillimetersperdegreeLazy = null;\r\n        this.kilonewtonmillimetersperdegreeLazy = null;\r\n        this.meganewtonmillimetersperdegreeLazy = null;\r\n        this.nanonewtonmetersperdegreeLazy = null;\r\n        this.micronewtonmetersperdegreeLazy = null;\r\n        this.millinewtonmetersperdegreeLazy = null;\r\n        this.centinewtonmetersperdegreeLazy = null;\r\n        this.decinewtonmetersperdegreeLazy = null;\r\n        this.decanewtonmetersperdegreeLazy = null;\r\n        this.kilonewtonmetersperdegreeLazy = null;\r\n        this.meganewtonmetersperdegreeLazy = null;\r\n        this.nanonewtonmillimetersperradianLazy = null;\r\n        this.micronewtonmillimetersperradianLazy = null;\r\n        this.millinewtonmillimetersperradianLazy = null;\r\n        this.centinewtonmillimetersperradianLazy = null;\r\n        this.decinewtonmillimetersperradianLazy = null;\r\n        this.decanewtonmillimetersperradianLazy = null;\r\n        this.kilonewtonmillimetersperradianLazy = null;\r\n        this.meganewtonmillimetersperradianLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of RotationalStiffness is NewtonMetersPerRadian.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonMetersPerRadian() {\r\n        if (this.newtonmetersperradianLazy !== null) {\r\n            return this.newtonmetersperradianLazy;\r\n        }\r\n        return this.newtonmetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.NewtonMetersPerRadian);\r\n    }\r\n    /** */\r\n    get PoundForceFeetPerDegrees() {\r\n        if (this.poundforcefeetperdegreesLazy !== null) {\r\n            return this.poundforcefeetperdegreesLazy;\r\n        }\r\n        return this.poundforcefeetperdegreesLazy = this.convertFromBase(RotationalStiffnessUnits.PoundForceFeetPerDegrees);\r\n    }\r\n    /** */\r\n    get KilopoundForceFeetPerDegrees() {\r\n        if (this.kilopoundforcefeetperdegreesLazy !== null) {\r\n            return this.kilopoundforcefeetperdegreesLazy;\r\n        }\r\n        return this.kilopoundforcefeetperdegreesLazy = this.convertFromBase(RotationalStiffnessUnits.KilopoundForceFeetPerDegrees);\r\n    }\r\n    /** */\r\n    get NewtonMillimetersPerDegree() {\r\n        if (this.newtonmillimetersperdegreeLazy !== null) {\r\n            return this.newtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.newtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.NewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get NewtonMetersPerDegree() {\r\n        if (this.newtonmetersperdegreeLazy !== null) {\r\n            return this.newtonmetersperdegreeLazy;\r\n        }\r\n        return this.newtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.NewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get NewtonMillimetersPerRadian() {\r\n        if (this.newtonmillimetersperradianLazy !== null) {\r\n            return this.newtonmillimetersperradianLazy;\r\n        }\r\n        return this.newtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.NewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get PoundForceFeetPerRadian() {\r\n        if (this.poundforcefeetperradianLazy !== null) {\r\n            return this.poundforcefeetperradianLazy;\r\n        }\r\n        return this.poundforcefeetperradianLazy = this.convertFromBase(RotationalStiffnessUnits.PoundForceFeetPerRadian);\r\n    }\r\n    /** */\r\n    get KilonewtonMetersPerRadian() {\r\n        if (this.kilonewtonmetersperradianLazy !== null) {\r\n            return this.kilonewtonmetersperradianLazy;\r\n        }\r\n        return this.kilonewtonmetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.KilonewtonMetersPerRadian);\r\n    }\r\n    /** */\r\n    get MeganewtonMetersPerRadian() {\r\n        if (this.meganewtonmetersperradianLazy !== null) {\r\n            return this.meganewtonmetersperradianLazy;\r\n        }\r\n        return this.meganewtonmetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.MeganewtonMetersPerRadian);\r\n    }\r\n    /** */\r\n    get NanonewtonMillimetersPerDegree() {\r\n        if (this.nanonewtonmillimetersperdegreeLazy !== null) {\r\n            return this.nanonewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.nanonewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.NanonewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get MicronewtonMillimetersPerDegree() {\r\n        if (this.micronewtonmillimetersperdegreeLazy !== null) {\r\n            return this.micronewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.micronewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.MicronewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get MillinewtonMillimetersPerDegree() {\r\n        if (this.millinewtonmillimetersperdegreeLazy !== null) {\r\n            return this.millinewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.millinewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.MillinewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get CentinewtonMillimetersPerDegree() {\r\n        if (this.centinewtonmillimetersperdegreeLazy !== null) {\r\n            return this.centinewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.centinewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.CentinewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get DecinewtonMillimetersPerDegree() {\r\n        if (this.decinewtonmillimetersperdegreeLazy !== null) {\r\n            return this.decinewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.decinewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.DecinewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get DecanewtonMillimetersPerDegree() {\r\n        if (this.decanewtonmillimetersperdegreeLazy !== null) {\r\n            return this.decanewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.decanewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.DecanewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get KilonewtonMillimetersPerDegree() {\r\n        if (this.kilonewtonmillimetersperdegreeLazy !== null) {\r\n            return this.kilonewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.kilonewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.KilonewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get MeganewtonMillimetersPerDegree() {\r\n        if (this.meganewtonmillimetersperdegreeLazy !== null) {\r\n            return this.meganewtonmillimetersperdegreeLazy;\r\n        }\r\n        return this.meganewtonmillimetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.MeganewtonMillimetersPerDegree);\r\n    }\r\n    /** */\r\n    get NanonewtonMetersPerDegree() {\r\n        if (this.nanonewtonmetersperdegreeLazy !== null) {\r\n            return this.nanonewtonmetersperdegreeLazy;\r\n        }\r\n        return this.nanonewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.NanonewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get MicronewtonMetersPerDegree() {\r\n        if (this.micronewtonmetersperdegreeLazy !== null) {\r\n            return this.micronewtonmetersperdegreeLazy;\r\n        }\r\n        return this.micronewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.MicronewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get MillinewtonMetersPerDegree() {\r\n        if (this.millinewtonmetersperdegreeLazy !== null) {\r\n            return this.millinewtonmetersperdegreeLazy;\r\n        }\r\n        return this.millinewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.MillinewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get CentinewtonMetersPerDegree() {\r\n        if (this.centinewtonmetersperdegreeLazy !== null) {\r\n            return this.centinewtonmetersperdegreeLazy;\r\n        }\r\n        return this.centinewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.CentinewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get DecinewtonMetersPerDegree() {\r\n        if (this.decinewtonmetersperdegreeLazy !== null) {\r\n            return this.decinewtonmetersperdegreeLazy;\r\n        }\r\n        return this.decinewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.DecinewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get DecanewtonMetersPerDegree() {\r\n        if (this.decanewtonmetersperdegreeLazy !== null) {\r\n            return this.decanewtonmetersperdegreeLazy;\r\n        }\r\n        return this.decanewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.DecanewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get KilonewtonMetersPerDegree() {\r\n        if (this.kilonewtonmetersperdegreeLazy !== null) {\r\n            return this.kilonewtonmetersperdegreeLazy;\r\n        }\r\n        return this.kilonewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.KilonewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get MeganewtonMetersPerDegree() {\r\n        if (this.meganewtonmetersperdegreeLazy !== null) {\r\n            return this.meganewtonmetersperdegreeLazy;\r\n        }\r\n        return this.meganewtonmetersperdegreeLazy = this.convertFromBase(RotationalStiffnessUnits.MeganewtonMetersPerDegree);\r\n    }\r\n    /** */\r\n    get NanonewtonMillimetersPerRadian() {\r\n        if (this.nanonewtonmillimetersperradianLazy !== null) {\r\n            return this.nanonewtonmillimetersperradianLazy;\r\n        }\r\n        return this.nanonewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.NanonewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get MicronewtonMillimetersPerRadian() {\r\n        if (this.micronewtonmillimetersperradianLazy !== null) {\r\n            return this.micronewtonmillimetersperradianLazy;\r\n        }\r\n        return this.micronewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.MicronewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get MillinewtonMillimetersPerRadian() {\r\n        if (this.millinewtonmillimetersperradianLazy !== null) {\r\n            return this.millinewtonmillimetersperradianLazy;\r\n        }\r\n        return this.millinewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.MillinewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get CentinewtonMillimetersPerRadian() {\r\n        if (this.centinewtonmillimetersperradianLazy !== null) {\r\n            return this.centinewtonmillimetersperradianLazy;\r\n        }\r\n        return this.centinewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.CentinewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get DecinewtonMillimetersPerRadian() {\r\n        if (this.decinewtonmillimetersperradianLazy !== null) {\r\n            return this.decinewtonmillimetersperradianLazy;\r\n        }\r\n        return this.decinewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.DecinewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get DecanewtonMillimetersPerRadian() {\r\n        if (this.decanewtonmillimetersperradianLazy !== null) {\r\n            return this.decanewtonmillimetersperradianLazy;\r\n        }\r\n        return this.decanewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.DecanewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get KilonewtonMillimetersPerRadian() {\r\n        if (this.kilonewtonmillimetersperradianLazy !== null) {\r\n            return this.kilonewtonmillimetersperradianLazy;\r\n        }\r\n        return this.kilonewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.KilonewtonMillimetersPerRadian);\r\n    }\r\n    /** */\r\n    get MeganewtonMillimetersPerRadian() {\r\n        if (this.meganewtonmillimetersperradianLazy !== null) {\r\n            return this.meganewtonmillimetersperradianLazy;\r\n        }\r\n        return this.meganewtonmillimetersperradianLazy = this.convertFromBase(RotationalStiffnessUnits.MeganewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NewtonMetersPerRadian\r\n     *\r\n     * @param value The unit as NewtonMetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNewtonMetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NewtonMetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a PoundForceFeetPerDegrees\r\n     *\r\n     * @param value The unit as PoundForceFeetPerDegrees to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromPoundForceFeetPerDegrees(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.PoundForceFeetPerDegrees);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a KilopoundForceFeetPerDegrees\r\n     *\r\n     * @param value The unit as KilopoundForceFeetPerDegrees to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromKilopoundForceFeetPerDegrees(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.KilopoundForceFeetPerDegrees);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as NewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as NewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as NewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a PoundForceFeetPerRadian\r\n     *\r\n     * @param value The unit as PoundForceFeetPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromPoundForceFeetPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.PoundForceFeetPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a KilonewtonMetersPerRadian\r\n     *\r\n     * @param value The unit as KilonewtonMetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromKilonewtonMetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.KilonewtonMetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MeganewtonMetersPerRadian\r\n     *\r\n     * @param value The unit as MeganewtonMetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMeganewtonMetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MeganewtonMetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NanonewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as NanonewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNanonewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NanonewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MicronewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as MicronewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMicronewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MicronewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MillinewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as MillinewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMillinewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MillinewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a CentinewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as CentinewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromCentinewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.CentinewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a DecinewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as DecinewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromDecinewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.DecinewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a DecanewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as DecanewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromDecanewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.DecanewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a KilonewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as KilonewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromKilonewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.KilonewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MeganewtonMillimetersPerDegree\r\n     *\r\n     * @param value The unit as MeganewtonMillimetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMeganewtonMillimetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MeganewtonMillimetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NanonewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as NanonewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNanonewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NanonewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MicronewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as MicronewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMicronewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MicronewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MillinewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as MillinewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMillinewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MillinewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a CentinewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as CentinewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromCentinewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.CentinewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a DecinewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as DecinewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromDecinewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.DecinewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a DecanewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as DecanewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromDecanewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.DecanewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a KilonewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as KilonewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromKilonewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.KilonewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MeganewtonMetersPerDegree\r\n     *\r\n     * @param value The unit as MeganewtonMetersPerDegree to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMeganewtonMetersPerDegree(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MeganewtonMetersPerDegree);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a NanonewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as NanonewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromNanonewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.NanonewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MicronewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as MicronewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMicronewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MicronewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MillinewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as MillinewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMillinewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MillinewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a CentinewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as CentinewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromCentinewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.CentinewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a DecinewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as DecinewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromDecinewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.DecinewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a DecanewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as DecanewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromDecanewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.DecanewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a KilonewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as KilonewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromKilonewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.KilonewtonMillimetersPerRadian);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffness instance from a MeganewtonMillimetersPerRadian\r\n     *\r\n     * @param value The unit as MeganewtonMillimetersPerRadian to create a new RotationalStiffness from.\r\n     * @returns The new RotationalStiffness instance.\r\n     */\r\n    static FromMeganewtonMillimetersPerRadian(value) {\r\n        return new RotationalStiffness(value, RotationalStiffnessUnits.MeganewtonMillimetersPerRadian);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RotationalStiffnessUnits.NewtonMetersPerRadian:\r\n                return this.value;\r\n            case RotationalStiffnessUnits.PoundForceFeetPerDegrees:\r\n                return this.value / 77.6826;\r\n            case RotationalStiffnessUnits.KilopoundForceFeetPerDegrees:\r\n                return this.value / 77682.6;\r\n            case RotationalStiffnessUnits.NewtonMillimetersPerDegree:\r\n                return this.value / 180 * Math.PI * 1000;\r\n            case RotationalStiffnessUnits.NewtonMetersPerDegree:\r\n                return this.value / (180 / Math.PI);\r\n            case RotationalStiffnessUnits.NewtonMillimetersPerRadian:\r\n                return this.value * 1000;\r\n            case RotationalStiffnessUnits.PoundForceFeetPerRadian:\r\n                return this.value / 1.3558179483314;\r\n            case RotationalStiffnessUnits.KilonewtonMetersPerRadian:\r\n                return (this.value) / 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMetersPerRadian:\r\n                return (this.value) / 1000000;\r\n            case RotationalStiffnessUnits.NanonewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 1e-9;\r\n            case RotationalStiffnessUnits.MicronewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 0.000001;\r\n            case RotationalStiffnessUnits.MillinewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 0.001;\r\n            case RotationalStiffnessUnits.CentinewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 0.01;\r\n            case RotationalStiffnessUnits.DecinewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 0.1;\r\n            case RotationalStiffnessUnits.DecanewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 10;\r\n            case RotationalStiffnessUnits.KilonewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMillimetersPerDegree:\r\n                return (this.value / 180 * Math.PI * 1000) / 1000000;\r\n            case RotationalStiffnessUnits.NanonewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 1e-9;\r\n            case RotationalStiffnessUnits.MicronewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 0.000001;\r\n            case RotationalStiffnessUnits.MillinewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 0.001;\r\n            case RotationalStiffnessUnits.CentinewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 0.01;\r\n            case RotationalStiffnessUnits.DecinewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 0.1;\r\n            case RotationalStiffnessUnits.DecanewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 10;\r\n            case RotationalStiffnessUnits.KilonewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMetersPerDegree:\r\n                return (this.value / (180 / Math.PI)) / 1000000;\r\n            case RotationalStiffnessUnits.NanonewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 1e-9;\r\n            case RotationalStiffnessUnits.MicronewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 0.000001;\r\n            case RotationalStiffnessUnits.MillinewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 0.001;\r\n            case RotationalStiffnessUnits.CentinewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 0.01;\r\n            case RotationalStiffnessUnits.DecinewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 0.1;\r\n            case RotationalStiffnessUnits.DecanewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 10;\r\n            case RotationalStiffnessUnits.KilonewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMillimetersPerRadian:\r\n                return (this.value * 1000) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RotationalStiffnessUnits.NewtonMetersPerRadian:\r\n                return value;\r\n            case RotationalStiffnessUnits.PoundForceFeetPerDegrees:\r\n                return value * 77.6826;\r\n            case RotationalStiffnessUnits.KilopoundForceFeetPerDegrees:\r\n                return value * 77682.6;\r\n            case RotationalStiffnessUnits.NewtonMillimetersPerDegree:\r\n                return value * 180 / Math.PI * 0.001;\r\n            case RotationalStiffnessUnits.NewtonMetersPerDegree:\r\n                return value * (180 / Math.PI);\r\n            case RotationalStiffnessUnits.NewtonMillimetersPerRadian:\r\n                return value * 0.001;\r\n            case RotationalStiffnessUnits.PoundForceFeetPerRadian:\r\n                return value * 1.3558179483314;\r\n            case RotationalStiffnessUnits.KilonewtonMetersPerRadian:\r\n                return (value) * 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMetersPerRadian:\r\n                return (value) * 1000000;\r\n            case RotationalStiffnessUnits.NanonewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 1e-9;\r\n            case RotationalStiffnessUnits.MicronewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 0.000001;\r\n            case RotationalStiffnessUnits.MillinewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 0.001;\r\n            case RotationalStiffnessUnits.CentinewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 0.01;\r\n            case RotationalStiffnessUnits.DecinewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 0.1;\r\n            case RotationalStiffnessUnits.DecanewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 10;\r\n            case RotationalStiffnessUnits.KilonewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMillimetersPerDegree:\r\n                return (value * 180 / Math.PI * 0.001) * 1000000;\r\n            case RotationalStiffnessUnits.NanonewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 1e-9;\r\n            case RotationalStiffnessUnits.MicronewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 0.000001;\r\n            case RotationalStiffnessUnits.MillinewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 0.001;\r\n            case RotationalStiffnessUnits.CentinewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 0.01;\r\n            case RotationalStiffnessUnits.DecinewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 0.1;\r\n            case RotationalStiffnessUnits.DecanewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 10;\r\n            case RotationalStiffnessUnits.KilonewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMetersPerDegree:\r\n                return (value * (180 / Math.PI)) * 1000000;\r\n            case RotationalStiffnessUnits.NanonewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 1e-9;\r\n            case RotationalStiffnessUnits.MicronewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 0.000001;\r\n            case RotationalStiffnessUnits.MillinewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 0.001;\r\n            case RotationalStiffnessUnits.CentinewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 0.01;\r\n            case RotationalStiffnessUnits.DecinewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 0.1;\r\n            case RotationalStiffnessUnits.DecanewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 10;\r\n            case RotationalStiffnessUnits.KilonewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 1000;\r\n            case RotationalStiffnessUnits.MeganewtonMillimetersPerRadian:\r\n                return (value * 0.001) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the RotationalStiffness to string.\r\n     * Note! the default format for RotationalStiffness is NewtonMetersPerRadian.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the RotationalStiffness.\r\n     * @returns The string format of the RotationalStiffness.\r\n     */\r\n    toString(toUnit = RotationalStiffnessUnits.NewtonMetersPerRadian) {\r\n        switch (toUnit) {\r\n            case RotationalStiffnessUnits.NewtonMetersPerRadian:\r\n                return this.NewtonMetersPerRadian + ` N·m/rad`;\r\n            case RotationalStiffnessUnits.PoundForceFeetPerDegrees:\r\n                return this.PoundForceFeetPerDegrees + ` lbf·ft/deg`;\r\n            case RotationalStiffnessUnits.KilopoundForceFeetPerDegrees:\r\n                return this.KilopoundForceFeetPerDegrees + ` kipf·ft/°`;\r\n            case RotationalStiffnessUnits.NewtonMillimetersPerDegree:\r\n                return this.NewtonMillimetersPerDegree + ` N·mm/deg`;\r\n            case RotationalStiffnessUnits.NewtonMetersPerDegree:\r\n                return this.NewtonMetersPerDegree + ` N·m/deg`;\r\n            case RotationalStiffnessUnits.NewtonMillimetersPerRadian:\r\n                return this.NewtonMillimetersPerRadian + ` N·mm/rad`;\r\n            case RotationalStiffnessUnits.PoundForceFeetPerRadian:\r\n                return this.PoundForceFeetPerRadian + ` lbf·ft/rad`;\r\n            case RotationalStiffnessUnits.KilonewtonMetersPerRadian:\r\n                return this.KilonewtonMetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.MeganewtonMetersPerRadian:\r\n                return this.MeganewtonMetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.NanonewtonMillimetersPerDegree:\r\n                return this.NanonewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.MicronewtonMillimetersPerDegree:\r\n                return this.MicronewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.MillinewtonMillimetersPerDegree:\r\n                return this.MillinewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.CentinewtonMillimetersPerDegree:\r\n                return this.CentinewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.DecinewtonMillimetersPerDegree:\r\n                return this.DecinewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.DecanewtonMillimetersPerDegree:\r\n                return this.DecanewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.KilonewtonMillimetersPerDegree:\r\n                return this.KilonewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.MeganewtonMillimetersPerDegree:\r\n                return this.MeganewtonMillimetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.NanonewtonMetersPerDegree:\r\n                return this.NanonewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.MicronewtonMetersPerDegree:\r\n                return this.MicronewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.MillinewtonMetersPerDegree:\r\n                return this.MillinewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.CentinewtonMetersPerDegree:\r\n                return this.CentinewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.DecinewtonMetersPerDegree:\r\n                return this.DecinewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.DecanewtonMetersPerDegree:\r\n                return this.DecanewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.KilonewtonMetersPerDegree:\r\n                return this.KilonewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.MeganewtonMetersPerDegree:\r\n                return this.MeganewtonMetersPerDegree + ` `;\r\n            case RotationalStiffnessUnits.NanonewtonMillimetersPerRadian:\r\n                return this.NanonewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.MicronewtonMillimetersPerRadian:\r\n                return this.MicronewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.MillinewtonMillimetersPerRadian:\r\n                return this.MillinewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.CentinewtonMillimetersPerRadian:\r\n                return this.CentinewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.DecinewtonMillimetersPerRadian:\r\n                return this.DecinewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.DecanewtonMillimetersPerRadian:\r\n                return this.DecanewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.KilonewtonMillimetersPerRadian:\r\n                return this.KilonewtonMillimetersPerRadian + ` `;\r\n            case RotationalStiffnessUnits.MeganewtonMillimetersPerRadian:\r\n                return this.MeganewtonMillimetersPerRadian + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given RotationalStiffness are equals to the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns True if the given RotationalStiffness are equal to the current RotationalStiffness.\r\n     */\r\n    equals(rotationalStiffness) {\r\n        return this.value === rotationalStiffness.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given RotationalStiffness against the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns 0 if they are equal, -1 if the current RotationalStiffness is less then other, 1 if the current RotationalStiffness is greater then other.\r\n     */\r\n    compareTo(rotationalStiffness) {\r\n        if (this.value > rotationalStiffness.BaseValue)\r\n            return 1;\r\n        if (this.value < rotationalStiffness.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given RotationalStiffness with the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns A new RotationalStiffness instance with the results.\r\n     */\r\n    add(rotationalStiffness) {\r\n        return new RotationalStiffness(this.value + rotationalStiffness.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given RotationalStiffness with the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns A new RotationalStiffness instance with the results.\r\n     */\r\n    subtract(rotationalStiffness) {\r\n        return new RotationalStiffness(this.value - rotationalStiffness.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given RotationalStiffness with the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns A new RotationalStiffness instance with the results.\r\n     */\r\n    multiply(rotationalStiffness) {\r\n        return new RotationalStiffness(this.value * rotationalStiffness.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given RotationalStiffness with the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns A new RotationalStiffness instance with the results.\r\n     */\r\n    divide(rotationalStiffness) {\r\n        return new RotationalStiffness(this.value / rotationalStiffness.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given RotationalStiffness with the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns A new RotationalStiffness instance with the results.\r\n     */\r\n    modulo(rotationalStiffness) {\r\n        return new RotationalStiffness(this.value % rotationalStiffness.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given RotationalStiffness with the current RotationalStiffness.\r\n     * @param rotationalStiffness The other RotationalStiffness.\r\n     * @returns A new RotationalStiffness instance with the results.\r\n     */\r\n    pow(rotationalStiffness) {\r\n        return new RotationalStiffness(this.value ** rotationalStiffness.BaseValue);\r\n    }\r\n}\r\nexports.RotationalStiffness = RotationalStiffness;\r\n//# sourceMappingURL=rotationalstiffness.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RotationalStiffnessPerLength = exports.RotationalStiffnessPerLengthUnits = void 0;\r\n/** RotationalStiffnessPerLengthUnits enumeration */\r\nvar RotationalStiffnessPerLengthUnits;\r\n(function (RotationalStiffnessPerLengthUnits) {\r\n    /** */\r\n    RotationalStiffnessPerLengthUnits[RotationalStiffnessPerLengthUnits[\"NewtonMetersPerRadianPerMeter\"] = 0] = \"NewtonMetersPerRadianPerMeter\";\r\n    /** */\r\n    RotationalStiffnessPerLengthUnits[RotationalStiffnessPerLengthUnits[\"PoundForceFeetPerDegreesPerFeet\"] = 1] = \"PoundForceFeetPerDegreesPerFeet\";\r\n    /** */\r\n    RotationalStiffnessPerLengthUnits[RotationalStiffnessPerLengthUnits[\"KilopoundForceFeetPerDegreesPerFeet\"] = 2] = \"KilopoundForceFeetPerDegreesPerFeet\";\r\n    /** */\r\n    RotationalStiffnessPerLengthUnits[RotationalStiffnessPerLengthUnits[\"KilonewtonMetersPerRadianPerMeter\"] = 3] = \"KilonewtonMetersPerRadianPerMeter\";\r\n    /** */\r\n    RotationalStiffnessPerLengthUnits[RotationalStiffnessPerLengthUnits[\"MeganewtonMetersPerRadianPerMeter\"] = 4] = \"MeganewtonMetersPerRadianPerMeter\";\r\n})(RotationalStiffnessPerLengthUnits = exports.RotationalStiffnessPerLengthUnits || (exports.RotationalStiffnessPerLengthUnits = {}));\r\n/** https://en.wikipedia.org/wiki/Stiffness#Rotational_stiffness */\r\nclass RotationalStiffnessPerLength {\r\n    /**\r\n     * Create a new RotationalStiffnessPerLength.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘RotationalStiffnessPerLength’ unit to create from.\r\n     * The default unit is NewtonMetersPerRadianPerMeter\r\n     */\r\n    constructor(value, fromUnit = RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter) {\r\n        this.newtonmetersperradianpermeterLazy = null;\r\n        this.poundforcefeetperdegreesperfeetLazy = null;\r\n        this.kilopoundforcefeetperdegreesperfeetLazy = null;\r\n        this.kilonewtonmetersperradianpermeterLazy = null;\r\n        this.meganewtonmetersperradianpermeterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of RotationalStiffnessPerLength is NewtonMetersPerRadianPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonMetersPerRadianPerMeter() {\r\n        if (this.newtonmetersperradianpermeterLazy !== null) {\r\n            return this.newtonmetersperradianpermeterLazy;\r\n        }\r\n        return this.newtonmetersperradianpermeterLazy = this.convertFromBase(RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter);\r\n    }\r\n    /** */\r\n    get PoundForceFeetPerDegreesPerFeet() {\r\n        if (this.poundforcefeetperdegreesperfeetLazy !== null) {\r\n            return this.poundforcefeetperdegreesperfeetLazy;\r\n        }\r\n        return this.poundforcefeetperdegreesperfeetLazy = this.convertFromBase(RotationalStiffnessPerLengthUnits.PoundForceFeetPerDegreesPerFeet);\r\n    }\r\n    /** */\r\n    get KilopoundForceFeetPerDegreesPerFeet() {\r\n        if (this.kilopoundforcefeetperdegreesperfeetLazy !== null) {\r\n            return this.kilopoundforcefeetperdegreesperfeetLazy;\r\n        }\r\n        return this.kilopoundforcefeetperdegreesperfeetLazy = this.convertFromBase(RotationalStiffnessPerLengthUnits.KilopoundForceFeetPerDegreesPerFeet);\r\n    }\r\n    /** */\r\n    get KilonewtonMetersPerRadianPerMeter() {\r\n        if (this.kilonewtonmetersperradianpermeterLazy !== null) {\r\n            return this.kilonewtonmetersperradianpermeterLazy;\r\n        }\r\n        return this.kilonewtonmetersperradianpermeterLazy = this.convertFromBase(RotationalStiffnessPerLengthUnits.KilonewtonMetersPerRadianPerMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonMetersPerRadianPerMeter() {\r\n        if (this.meganewtonmetersperradianpermeterLazy !== null) {\r\n            return this.meganewtonmetersperradianpermeterLazy;\r\n        }\r\n        return this.meganewtonmetersperradianpermeterLazy = this.convertFromBase(RotationalStiffnessPerLengthUnits.MeganewtonMetersPerRadianPerMeter);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffnessPerLength instance from a NewtonMetersPerRadianPerMeter\r\n     *\r\n     * @param value The unit as NewtonMetersPerRadianPerMeter to create a new RotationalStiffnessPerLength from.\r\n     * @returns The new RotationalStiffnessPerLength instance.\r\n     */\r\n    static FromNewtonMetersPerRadianPerMeter(value) {\r\n        return new RotationalStiffnessPerLength(value, RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffnessPerLength instance from a PoundForceFeetPerDegreesPerFeet\r\n     *\r\n     * @param value The unit as PoundForceFeetPerDegreesPerFeet to create a new RotationalStiffnessPerLength from.\r\n     * @returns The new RotationalStiffnessPerLength instance.\r\n     */\r\n    static FromPoundForceFeetPerDegreesPerFeet(value) {\r\n        return new RotationalStiffnessPerLength(value, RotationalStiffnessPerLengthUnits.PoundForceFeetPerDegreesPerFeet);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffnessPerLength instance from a KilopoundForceFeetPerDegreesPerFeet\r\n     *\r\n     * @param value The unit as KilopoundForceFeetPerDegreesPerFeet to create a new RotationalStiffnessPerLength from.\r\n     * @returns The new RotationalStiffnessPerLength instance.\r\n     */\r\n    static FromKilopoundForceFeetPerDegreesPerFeet(value) {\r\n        return new RotationalStiffnessPerLength(value, RotationalStiffnessPerLengthUnits.KilopoundForceFeetPerDegreesPerFeet);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffnessPerLength instance from a KilonewtonMetersPerRadianPerMeter\r\n     *\r\n     * @param value The unit as KilonewtonMetersPerRadianPerMeter to create a new RotationalStiffnessPerLength from.\r\n     * @returns The new RotationalStiffnessPerLength instance.\r\n     */\r\n    static FromKilonewtonMetersPerRadianPerMeter(value) {\r\n        return new RotationalStiffnessPerLength(value, RotationalStiffnessPerLengthUnits.KilonewtonMetersPerRadianPerMeter);\r\n    }\r\n    /**\r\n     * Create a new RotationalStiffnessPerLength instance from a MeganewtonMetersPerRadianPerMeter\r\n     *\r\n     * @param value The unit as MeganewtonMetersPerRadianPerMeter to create a new RotationalStiffnessPerLength from.\r\n     * @returns The new RotationalStiffnessPerLength instance.\r\n     */\r\n    static FromMeganewtonMetersPerRadianPerMeter(value) {\r\n        return new RotationalStiffnessPerLength(value, RotationalStiffnessPerLengthUnits.MeganewtonMetersPerRadianPerMeter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter:\r\n                return this.value;\r\n            case RotationalStiffnessPerLengthUnits.PoundForceFeetPerDegreesPerFeet:\r\n                return this.value / 254.864324570;\r\n            case RotationalStiffnessPerLengthUnits.KilopoundForceFeetPerDegreesPerFeet:\r\n                return this.value / 254864.324570;\r\n            case RotationalStiffnessPerLengthUnits.KilonewtonMetersPerRadianPerMeter:\r\n                return (this.value) / 1000;\r\n            case RotationalStiffnessPerLengthUnits.MeganewtonMetersPerRadianPerMeter:\r\n                return (this.value) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter:\r\n                return value;\r\n            case RotationalStiffnessPerLengthUnits.PoundForceFeetPerDegreesPerFeet:\r\n                return value * 254.864324570;\r\n            case RotationalStiffnessPerLengthUnits.KilopoundForceFeetPerDegreesPerFeet:\r\n                return value * 254864.324570;\r\n            case RotationalStiffnessPerLengthUnits.KilonewtonMetersPerRadianPerMeter:\r\n                return (value) * 1000;\r\n            case RotationalStiffnessPerLengthUnits.MeganewtonMetersPerRadianPerMeter:\r\n                return (value) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the RotationalStiffnessPerLength to string.\r\n     * Note! the default format for RotationalStiffnessPerLength is NewtonMetersPerRadianPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the RotationalStiffnessPerLength.\r\n     * @returns The string format of the RotationalStiffnessPerLength.\r\n     */\r\n    toString(toUnit = RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter) {\r\n        switch (toUnit) {\r\n            case RotationalStiffnessPerLengthUnits.NewtonMetersPerRadianPerMeter:\r\n                return this.NewtonMetersPerRadianPerMeter + ` N·m/rad/m`;\r\n            case RotationalStiffnessPerLengthUnits.PoundForceFeetPerDegreesPerFeet:\r\n                return this.PoundForceFeetPerDegreesPerFeet + ` lbf·ft/deg/ft`;\r\n            case RotationalStiffnessPerLengthUnits.KilopoundForceFeetPerDegreesPerFeet:\r\n                return this.KilopoundForceFeetPerDegreesPerFeet + ` kipf·ft/°/ft`;\r\n            case RotationalStiffnessPerLengthUnits.KilonewtonMetersPerRadianPerMeter:\r\n                return this.KilonewtonMetersPerRadianPerMeter + ` `;\r\n            case RotationalStiffnessPerLengthUnits.MeganewtonMetersPerRadianPerMeter:\r\n                return this.MeganewtonMetersPerRadianPerMeter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given RotationalStiffnessPerLength are equals to the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns True if the given RotationalStiffnessPerLength are equal to the current RotationalStiffnessPerLength.\r\n     */\r\n    equals(rotationalStiffnessPerLength) {\r\n        return this.value === rotationalStiffnessPerLength.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given RotationalStiffnessPerLength against the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns 0 if they are equal, -1 if the current RotationalStiffnessPerLength is less then other, 1 if the current RotationalStiffnessPerLength is greater then other.\r\n     */\r\n    compareTo(rotationalStiffnessPerLength) {\r\n        if (this.value > rotationalStiffnessPerLength.BaseValue)\r\n            return 1;\r\n        if (this.value < rotationalStiffnessPerLength.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given RotationalStiffnessPerLength with the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns A new RotationalStiffnessPerLength instance with the results.\r\n     */\r\n    add(rotationalStiffnessPerLength) {\r\n        return new RotationalStiffnessPerLength(this.value + rotationalStiffnessPerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given RotationalStiffnessPerLength with the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns A new RotationalStiffnessPerLength instance with the results.\r\n     */\r\n    subtract(rotationalStiffnessPerLength) {\r\n        return new RotationalStiffnessPerLength(this.value - rotationalStiffnessPerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given RotationalStiffnessPerLength with the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns A new RotationalStiffnessPerLength instance with the results.\r\n     */\r\n    multiply(rotationalStiffnessPerLength) {\r\n        return new RotationalStiffnessPerLength(this.value * rotationalStiffnessPerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given RotationalStiffnessPerLength with the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns A new RotationalStiffnessPerLength instance with the results.\r\n     */\r\n    divide(rotationalStiffnessPerLength) {\r\n        return new RotationalStiffnessPerLength(this.value / rotationalStiffnessPerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given RotationalStiffnessPerLength with the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns A new RotationalStiffnessPerLength instance with the results.\r\n     */\r\n    modulo(rotationalStiffnessPerLength) {\r\n        return new RotationalStiffnessPerLength(this.value % rotationalStiffnessPerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given RotationalStiffnessPerLength with the current RotationalStiffnessPerLength.\r\n     * @param rotationalStiffnessPerLength The other RotationalStiffnessPerLength.\r\n     * @returns A new RotationalStiffnessPerLength instance with the results.\r\n     */\r\n    pow(rotationalStiffnessPerLength) {\r\n        return new RotationalStiffnessPerLength(this.value ** rotationalStiffnessPerLength.BaseValue);\r\n    }\r\n}\r\nexports.RotationalStiffnessPerLength = RotationalStiffnessPerLength;\r\n//# sourceMappingURL=rotationalstiffnessperlength.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scalar = exports.ScalarUnits = void 0;\r\n/** ScalarUnits enumeration */\r\nvar ScalarUnits;\r\n(function (ScalarUnits) {\r\n    /** */\r\n    ScalarUnits[ScalarUnits[\"Amount\"] = 0] = \"Amount\";\r\n})(ScalarUnits = exports.ScalarUnits || (exports.ScalarUnits = {}));\r\n/** A way of representing a number of items. */\r\nclass Scalar {\r\n    /**\r\n     * Create a new Scalar.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Scalar’ unit to create from.\r\n     * The default unit is Amount\r\n     */\r\n    constructor(value, fromUnit = ScalarUnits.Amount) {\r\n        this.amountLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Scalar is Amount.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Amount() {\r\n        if (this.amountLazy !== null) {\r\n            return this.amountLazy;\r\n        }\r\n        return this.amountLazy = this.convertFromBase(ScalarUnits.Amount);\r\n    }\r\n    /**\r\n     * Create a new Scalar instance from a Amount\r\n     *\r\n     * @param value The unit as Amount to create a new Scalar from.\r\n     * @returns The new Scalar instance.\r\n     */\r\n    static FromAmount(value) {\r\n        return new Scalar(value, ScalarUnits.Amount);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ScalarUnits.Amount:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ScalarUnits.Amount:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Scalar to string.\r\n     * Note! the default format for Scalar is Amount.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Scalar.\r\n     * @returns The string format of the Scalar.\r\n     */\r\n    toString(toUnit = ScalarUnits.Amount) {\r\n        switch (toUnit) {\r\n            case ScalarUnits.Amount:\r\n                return this.Amount + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Scalar are equals to the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns True if the given Scalar are equal to the current Scalar.\r\n     */\r\n    equals(scalar) {\r\n        return this.value === scalar.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Scalar against the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns 0 if they are equal, -1 if the current Scalar is less then other, 1 if the current Scalar is greater then other.\r\n     */\r\n    compareTo(scalar) {\r\n        if (this.value > scalar.BaseValue)\r\n            return 1;\r\n        if (this.value < scalar.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Scalar with the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns A new Scalar instance with the results.\r\n     */\r\n    add(scalar) {\r\n        return new Scalar(this.value + scalar.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Scalar with the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns A new Scalar instance with the results.\r\n     */\r\n    subtract(scalar) {\r\n        return new Scalar(this.value - scalar.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Scalar with the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns A new Scalar instance with the results.\r\n     */\r\n    multiply(scalar) {\r\n        return new Scalar(this.value * scalar.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Scalar with the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns A new Scalar instance with the results.\r\n     */\r\n    divide(scalar) {\r\n        return new Scalar(this.value / scalar.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Scalar with the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns A new Scalar instance with the results.\r\n     */\r\n    modulo(scalar) {\r\n        return new Scalar(this.value % scalar.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Scalar with the current Scalar.\r\n     * @param scalar The other Scalar.\r\n     * @returns A new Scalar instance with the results.\r\n     */\r\n    pow(scalar) {\r\n        return new Scalar(this.value ** scalar.BaseValue);\r\n    }\r\n}\r\nexports.Scalar = Scalar;\r\n//# sourceMappingURL=scalar.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SolidAngle = exports.SolidAngleUnits = void 0;\r\n/** SolidAngleUnits enumeration */\r\nvar SolidAngleUnits;\r\n(function (SolidAngleUnits) {\r\n    /** */\r\n    SolidAngleUnits[SolidAngleUnits[\"Steradians\"] = 0] = \"Steradians\";\r\n})(SolidAngleUnits = exports.SolidAngleUnits || (exports.SolidAngleUnits = {}));\r\n/** In geometry, a solid angle is the two-dimensional angle in three-dimensional space that an object subtends at a point. */\r\nclass SolidAngle {\r\n    /**\r\n     * Create a new SolidAngle.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘SolidAngle’ unit to create from.\r\n     * The default unit is Steradians\r\n     */\r\n    constructor(value, fromUnit = SolidAngleUnits.Steradians) {\r\n        this.steradiansLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of SolidAngle is Steradians.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Steradians() {\r\n        if (this.steradiansLazy !== null) {\r\n            return this.steradiansLazy;\r\n        }\r\n        return this.steradiansLazy = this.convertFromBase(SolidAngleUnits.Steradians);\r\n    }\r\n    /**\r\n     * Create a new SolidAngle instance from a Steradians\r\n     *\r\n     * @param value The unit as Steradians to create a new SolidAngle from.\r\n     * @returns The new SolidAngle instance.\r\n     */\r\n    static FromSteradians(value) {\r\n        return new SolidAngle(value, SolidAngleUnits.Steradians);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SolidAngleUnits.Steradians:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SolidAngleUnits.Steradians:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the SolidAngle to string.\r\n     * Note! the default format for SolidAngle is Steradians.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the SolidAngle.\r\n     * @returns The string format of the SolidAngle.\r\n     */\r\n    toString(toUnit = SolidAngleUnits.Steradians) {\r\n        switch (toUnit) {\r\n            case SolidAngleUnits.Steradians:\r\n                return this.Steradians + ` sr`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given SolidAngle are equals to the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns True if the given SolidAngle are equal to the current SolidAngle.\r\n     */\r\n    equals(solidAngle) {\r\n        return this.value === solidAngle.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given SolidAngle against the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns 0 if they are equal, -1 if the current SolidAngle is less then other, 1 if the current SolidAngle is greater then other.\r\n     */\r\n    compareTo(solidAngle) {\r\n        if (this.value > solidAngle.BaseValue)\r\n            return 1;\r\n        if (this.value < solidAngle.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given SolidAngle with the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns A new SolidAngle instance with the results.\r\n     */\r\n    add(solidAngle) {\r\n        return new SolidAngle(this.value + solidAngle.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given SolidAngle with the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns A new SolidAngle instance with the results.\r\n     */\r\n    subtract(solidAngle) {\r\n        return new SolidAngle(this.value - solidAngle.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given SolidAngle with the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns A new SolidAngle instance with the results.\r\n     */\r\n    multiply(solidAngle) {\r\n        return new SolidAngle(this.value * solidAngle.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given SolidAngle with the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns A new SolidAngle instance with the results.\r\n     */\r\n    divide(solidAngle) {\r\n        return new SolidAngle(this.value / solidAngle.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given SolidAngle with the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns A new SolidAngle instance with the results.\r\n     */\r\n    modulo(solidAngle) {\r\n        return new SolidAngle(this.value % solidAngle.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given SolidAngle with the current SolidAngle.\r\n     * @param solidAngle The other SolidAngle.\r\n     * @returns A new SolidAngle instance with the results.\r\n     */\r\n    pow(solidAngle) {\r\n        return new SolidAngle(this.value ** solidAngle.BaseValue);\r\n    }\r\n}\r\nexports.SolidAngle = SolidAngle;\r\n//# sourceMappingURL=solidangle.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpecificEnergy = exports.SpecificEnergyUnits = void 0;\r\n/** SpecificEnergyUnits enumeration */\r\nvar SpecificEnergyUnits;\r\n(function (SpecificEnergyUnits) {\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"JoulesPerKilogram\"] = 0] = \"JoulesPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"CaloriesPerGram\"] = 1] = \"CaloriesPerGram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"WattHoursPerKilogram\"] = 2] = \"WattHoursPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"WattDaysPerKilogram\"] = 3] = \"WattDaysPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"WattDaysPerTonne\"] = 4] = \"WattDaysPerTonne\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"WattDaysPerShortTon\"] = 5] = \"WattDaysPerShortTon\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"BtuPerPound\"] = 6] = \"BtuPerPound\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"KilojoulesPerKilogram\"] = 7] = \"KilojoulesPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"MegajoulesPerKilogram\"] = 8] = \"MegajoulesPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"KilocaloriesPerGram\"] = 9] = \"KilocaloriesPerGram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"KilowattHoursPerKilogram\"] = 10] = \"KilowattHoursPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"MegawattHoursPerKilogram\"] = 11] = \"MegawattHoursPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"GigawattHoursPerKilogram\"] = 12] = \"GigawattHoursPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"KilowattDaysPerKilogram\"] = 13] = \"KilowattDaysPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"MegawattDaysPerKilogram\"] = 14] = \"MegawattDaysPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"GigawattDaysPerKilogram\"] = 15] = \"GigawattDaysPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"TerawattDaysPerKilogram\"] = 16] = \"TerawattDaysPerKilogram\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"KilowattDaysPerTonne\"] = 17] = \"KilowattDaysPerTonne\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"MegawattDaysPerTonne\"] = 18] = \"MegawattDaysPerTonne\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"GigawattDaysPerTonne\"] = 19] = \"GigawattDaysPerTonne\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"TerawattDaysPerTonne\"] = 20] = \"TerawattDaysPerTonne\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"KilowattDaysPerShortTon\"] = 21] = \"KilowattDaysPerShortTon\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"MegawattDaysPerShortTon\"] = 22] = \"MegawattDaysPerShortTon\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"GigawattDaysPerShortTon\"] = 23] = \"GigawattDaysPerShortTon\";\r\n    /** */\r\n    SpecificEnergyUnits[SpecificEnergyUnits[\"TerawattDaysPerShortTon\"] = 24] = \"TerawattDaysPerShortTon\";\r\n})(SpecificEnergyUnits = exports.SpecificEnergyUnits || (exports.SpecificEnergyUnits = {}));\r\n/** The SpecificEnergy */\r\nclass SpecificEnergy {\r\n    /**\r\n     * Create a new SpecificEnergy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘SpecificEnergy’ unit to create from.\r\n     * The default unit is JoulesPerKilogram\r\n     */\r\n    constructor(value, fromUnit = SpecificEnergyUnits.JoulesPerKilogram) {\r\n        this.joulesperkilogramLazy = null;\r\n        this.caloriespergramLazy = null;\r\n        this.watthoursperkilogramLazy = null;\r\n        this.wattdaysperkilogramLazy = null;\r\n        this.wattdayspertonneLazy = null;\r\n        this.wattdayspershorttonLazy = null;\r\n        this.btuperpoundLazy = null;\r\n        this.kilojoulesperkilogramLazy = null;\r\n        this.megajoulesperkilogramLazy = null;\r\n        this.kilocaloriespergramLazy = null;\r\n        this.kilowatthoursperkilogramLazy = null;\r\n        this.megawatthoursperkilogramLazy = null;\r\n        this.gigawatthoursperkilogramLazy = null;\r\n        this.kilowattdaysperkilogramLazy = null;\r\n        this.megawattdaysperkilogramLazy = null;\r\n        this.gigawattdaysperkilogramLazy = null;\r\n        this.terawattdaysperkilogramLazy = null;\r\n        this.kilowattdayspertonneLazy = null;\r\n        this.megawattdayspertonneLazy = null;\r\n        this.gigawattdayspertonneLazy = null;\r\n        this.terawattdayspertonneLazy = null;\r\n        this.kilowattdayspershorttonLazy = null;\r\n        this.megawattdayspershorttonLazy = null;\r\n        this.gigawattdayspershorttonLazy = null;\r\n        this.terawattdayspershorttonLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of SpecificEnergy is JoulesPerKilogram.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get JoulesPerKilogram() {\r\n        if (this.joulesperkilogramLazy !== null) {\r\n            return this.joulesperkilogramLazy;\r\n        }\r\n        return this.joulesperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.JoulesPerKilogram);\r\n    }\r\n    /** */\r\n    get CaloriesPerGram() {\r\n        if (this.caloriespergramLazy !== null) {\r\n            return this.caloriespergramLazy;\r\n        }\r\n        return this.caloriespergramLazy = this.convertFromBase(SpecificEnergyUnits.CaloriesPerGram);\r\n    }\r\n    /** */\r\n    get WattHoursPerKilogram() {\r\n        if (this.watthoursperkilogramLazy !== null) {\r\n            return this.watthoursperkilogramLazy;\r\n        }\r\n        return this.watthoursperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.WattHoursPerKilogram);\r\n    }\r\n    /** */\r\n    get WattDaysPerKilogram() {\r\n        if (this.wattdaysperkilogramLazy !== null) {\r\n            return this.wattdaysperkilogramLazy;\r\n        }\r\n        return this.wattdaysperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.WattDaysPerKilogram);\r\n    }\r\n    /** */\r\n    get WattDaysPerTonne() {\r\n        if (this.wattdayspertonneLazy !== null) {\r\n            return this.wattdayspertonneLazy;\r\n        }\r\n        return this.wattdayspertonneLazy = this.convertFromBase(SpecificEnergyUnits.WattDaysPerTonne);\r\n    }\r\n    /** */\r\n    get WattDaysPerShortTon() {\r\n        if (this.wattdayspershorttonLazy !== null) {\r\n            return this.wattdayspershorttonLazy;\r\n        }\r\n        return this.wattdayspershorttonLazy = this.convertFromBase(SpecificEnergyUnits.WattDaysPerShortTon);\r\n    }\r\n    /** */\r\n    get BtuPerPound() {\r\n        if (this.btuperpoundLazy !== null) {\r\n            return this.btuperpoundLazy;\r\n        }\r\n        return this.btuperpoundLazy = this.convertFromBase(SpecificEnergyUnits.BtuPerPound);\r\n    }\r\n    /** */\r\n    get KilojoulesPerKilogram() {\r\n        if (this.kilojoulesperkilogramLazy !== null) {\r\n            return this.kilojoulesperkilogramLazy;\r\n        }\r\n        return this.kilojoulesperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.KilojoulesPerKilogram);\r\n    }\r\n    /** */\r\n    get MegajoulesPerKilogram() {\r\n        if (this.megajoulesperkilogramLazy !== null) {\r\n            return this.megajoulesperkilogramLazy;\r\n        }\r\n        return this.megajoulesperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.MegajoulesPerKilogram);\r\n    }\r\n    /** */\r\n    get KilocaloriesPerGram() {\r\n        if (this.kilocaloriespergramLazy !== null) {\r\n            return this.kilocaloriespergramLazy;\r\n        }\r\n        return this.kilocaloriespergramLazy = this.convertFromBase(SpecificEnergyUnits.KilocaloriesPerGram);\r\n    }\r\n    /** */\r\n    get KilowattHoursPerKilogram() {\r\n        if (this.kilowatthoursperkilogramLazy !== null) {\r\n            return this.kilowatthoursperkilogramLazy;\r\n        }\r\n        return this.kilowatthoursperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.KilowattHoursPerKilogram);\r\n    }\r\n    /** */\r\n    get MegawattHoursPerKilogram() {\r\n        if (this.megawatthoursperkilogramLazy !== null) {\r\n            return this.megawatthoursperkilogramLazy;\r\n        }\r\n        return this.megawatthoursperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.MegawattHoursPerKilogram);\r\n    }\r\n    /** */\r\n    get GigawattHoursPerKilogram() {\r\n        if (this.gigawatthoursperkilogramLazy !== null) {\r\n            return this.gigawatthoursperkilogramLazy;\r\n        }\r\n        return this.gigawatthoursperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.GigawattHoursPerKilogram);\r\n    }\r\n    /** */\r\n    get KilowattDaysPerKilogram() {\r\n        if (this.kilowattdaysperkilogramLazy !== null) {\r\n            return this.kilowattdaysperkilogramLazy;\r\n        }\r\n        return this.kilowattdaysperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.KilowattDaysPerKilogram);\r\n    }\r\n    /** */\r\n    get MegawattDaysPerKilogram() {\r\n        if (this.megawattdaysperkilogramLazy !== null) {\r\n            return this.megawattdaysperkilogramLazy;\r\n        }\r\n        return this.megawattdaysperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.MegawattDaysPerKilogram);\r\n    }\r\n    /** */\r\n    get GigawattDaysPerKilogram() {\r\n        if (this.gigawattdaysperkilogramLazy !== null) {\r\n            return this.gigawattdaysperkilogramLazy;\r\n        }\r\n        return this.gigawattdaysperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.GigawattDaysPerKilogram);\r\n    }\r\n    /** */\r\n    get TerawattDaysPerKilogram() {\r\n        if (this.terawattdaysperkilogramLazy !== null) {\r\n            return this.terawattdaysperkilogramLazy;\r\n        }\r\n        return this.terawattdaysperkilogramLazy = this.convertFromBase(SpecificEnergyUnits.TerawattDaysPerKilogram);\r\n    }\r\n    /** */\r\n    get KilowattDaysPerTonne() {\r\n        if (this.kilowattdayspertonneLazy !== null) {\r\n            return this.kilowattdayspertonneLazy;\r\n        }\r\n        return this.kilowattdayspertonneLazy = this.convertFromBase(SpecificEnergyUnits.KilowattDaysPerTonne);\r\n    }\r\n    /** */\r\n    get MegawattDaysPerTonne() {\r\n        if (this.megawattdayspertonneLazy !== null) {\r\n            return this.megawattdayspertonneLazy;\r\n        }\r\n        return this.megawattdayspertonneLazy = this.convertFromBase(SpecificEnergyUnits.MegawattDaysPerTonne);\r\n    }\r\n    /** */\r\n    get GigawattDaysPerTonne() {\r\n        if (this.gigawattdayspertonneLazy !== null) {\r\n            return this.gigawattdayspertonneLazy;\r\n        }\r\n        return this.gigawattdayspertonneLazy = this.convertFromBase(SpecificEnergyUnits.GigawattDaysPerTonne);\r\n    }\r\n    /** */\r\n    get TerawattDaysPerTonne() {\r\n        if (this.terawattdayspertonneLazy !== null) {\r\n            return this.terawattdayspertonneLazy;\r\n        }\r\n        return this.terawattdayspertonneLazy = this.convertFromBase(SpecificEnergyUnits.TerawattDaysPerTonne);\r\n    }\r\n    /** */\r\n    get KilowattDaysPerShortTon() {\r\n        if (this.kilowattdayspershorttonLazy !== null) {\r\n            return this.kilowattdayspershorttonLazy;\r\n        }\r\n        return this.kilowattdayspershorttonLazy = this.convertFromBase(SpecificEnergyUnits.KilowattDaysPerShortTon);\r\n    }\r\n    /** */\r\n    get MegawattDaysPerShortTon() {\r\n        if (this.megawattdayspershorttonLazy !== null) {\r\n            return this.megawattdayspershorttonLazy;\r\n        }\r\n        return this.megawattdayspershorttonLazy = this.convertFromBase(SpecificEnergyUnits.MegawattDaysPerShortTon);\r\n    }\r\n    /** */\r\n    get GigawattDaysPerShortTon() {\r\n        if (this.gigawattdayspershorttonLazy !== null) {\r\n            return this.gigawattdayspershorttonLazy;\r\n        }\r\n        return this.gigawattdayspershorttonLazy = this.convertFromBase(SpecificEnergyUnits.GigawattDaysPerShortTon);\r\n    }\r\n    /** */\r\n    get TerawattDaysPerShortTon() {\r\n        if (this.terawattdayspershorttonLazy !== null) {\r\n            return this.terawattdayspershorttonLazy;\r\n        }\r\n        return this.terawattdayspershorttonLazy = this.convertFromBase(SpecificEnergyUnits.TerawattDaysPerShortTon);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a JoulesPerKilogram\r\n     *\r\n     * @param value The unit as JoulesPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromJoulesPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.JoulesPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a CaloriesPerGram\r\n     *\r\n     * @param value The unit as CaloriesPerGram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromCaloriesPerGram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.CaloriesPerGram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a WattHoursPerKilogram\r\n     *\r\n     * @param value The unit as WattHoursPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromWattHoursPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.WattHoursPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a WattDaysPerKilogram\r\n     *\r\n     * @param value The unit as WattDaysPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromWattDaysPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.WattDaysPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a WattDaysPerTonne\r\n     *\r\n     * @param value The unit as WattDaysPerTonne to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromWattDaysPerTonne(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.WattDaysPerTonne);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a WattDaysPerShortTon\r\n     *\r\n     * @param value The unit as WattDaysPerShortTon to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromWattDaysPerShortTon(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.WattDaysPerShortTon);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a BtuPerPound\r\n     *\r\n     * @param value The unit as BtuPerPound to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromBtuPerPound(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.BtuPerPound);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a KilojoulesPerKilogram\r\n     *\r\n     * @param value The unit as KilojoulesPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromKilojoulesPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.KilojoulesPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a MegajoulesPerKilogram\r\n     *\r\n     * @param value The unit as MegajoulesPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromMegajoulesPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.MegajoulesPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a KilocaloriesPerGram\r\n     *\r\n     * @param value The unit as KilocaloriesPerGram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromKilocaloriesPerGram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.KilocaloriesPerGram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a KilowattHoursPerKilogram\r\n     *\r\n     * @param value The unit as KilowattHoursPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromKilowattHoursPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.KilowattHoursPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a MegawattHoursPerKilogram\r\n     *\r\n     * @param value The unit as MegawattHoursPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromMegawattHoursPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.MegawattHoursPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a GigawattHoursPerKilogram\r\n     *\r\n     * @param value The unit as GigawattHoursPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromGigawattHoursPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.GigawattHoursPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a KilowattDaysPerKilogram\r\n     *\r\n     * @param value The unit as KilowattDaysPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromKilowattDaysPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.KilowattDaysPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a MegawattDaysPerKilogram\r\n     *\r\n     * @param value The unit as MegawattDaysPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromMegawattDaysPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.MegawattDaysPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a GigawattDaysPerKilogram\r\n     *\r\n     * @param value The unit as GigawattDaysPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromGigawattDaysPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.GigawattDaysPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a TerawattDaysPerKilogram\r\n     *\r\n     * @param value The unit as TerawattDaysPerKilogram to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromTerawattDaysPerKilogram(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.TerawattDaysPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a KilowattDaysPerTonne\r\n     *\r\n     * @param value The unit as KilowattDaysPerTonne to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromKilowattDaysPerTonne(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.KilowattDaysPerTonne);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a MegawattDaysPerTonne\r\n     *\r\n     * @param value The unit as MegawattDaysPerTonne to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromMegawattDaysPerTonne(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.MegawattDaysPerTonne);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a GigawattDaysPerTonne\r\n     *\r\n     * @param value The unit as GigawattDaysPerTonne to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromGigawattDaysPerTonne(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.GigawattDaysPerTonne);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a TerawattDaysPerTonne\r\n     *\r\n     * @param value The unit as TerawattDaysPerTonne to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromTerawattDaysPerTonne(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.TerawattDaysPerTonne);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a KilowattDaysPerShortTon\r\n     *\r\n     * @param value The unit as KilowattDaysPerShortTon to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromKilowattDaysPerShortTon(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.KilowattDaysPerShortTon);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a MegawattDaysPerShortTon\r\n     *\r\n     * @param value The unit as MegawattDaysPerShortTon to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromMegawattDaysPerShortTon(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.MegawattDaysPerShortTon);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a GigawattDaysPerShortTon\r\n     *\r\n     * @param value The unit as GigawattDaysPerShortTon to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromGigawattDaysPerShortTon(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.GigawattDaysPerShortTon);\r\n    }\r\n    /**\r\n     * Create a new SpecificEnergy instance from a TerawattDaysPerShortTon\r\n     *\r\n     * @param value The unit as TerawattDaysPerShortTon to create a new SpecificEnergy from.\r\n     * @returns The new SpecificEnergy instance.\r\n     */\r\n    static FromTerawattDaysPerShortTon(value) {\r\n        return new SpecificEnergy(value, SpecificEnergyUnits.TerawattDaysPerShortTon);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SpecificEnergyUnits.JoulesPerKilogram:\r\n                return this.value;\r\n            case SpecificEnergyUnits.CaloriesPerGram:\r\n                return this.value / 4.184e3;\r\n            case SpecificEnergyUnits.WattHoursPerKilogram:\r\n                return this.value / 3.6e3;\r\n            case SpecificEnergyUnits.WattDaysPerKilogram:\r\n                return this.value / (24 * 3.6e3);\r\n            case SpecificEnergyUnits.WattDaysPerTonne:\r\n                return this.value / ((24 * 3.6e3) / 1e3);\r\n            case SpecificEnergyUnits.WattDaysPerShortTon:\r\n                return this.value / ((24 * 3.6e3) / 9.0718474e2);\r\n            case SpecificEnergyUnits.BtuPerPound:\r\n                return this.value / 2326.000075362;\r\n            case SpecificEnergyUnits.KilojoulesPerKilogram:\r\n                return (this.value) / 1000;\r\n            case SpecificEnergyUnits.MegajoulesPerKilogram:\r\n                return (this.value) / 1000000;\r\n            case SpecificEnergyUnits.KilocaloriesPerGram:\r\n                return (this.value / 4.184e3) / 1000;\r\n            case SpecificEnergyUnits.KilowattHoursPerKilogram:\r\n                return (this.value / 3.6e3) / 1000;\r\n            case SpecificEnergyUnits.MegawattHoursPerKilogram:\r\n                return (this.value / 3.6e3) / 1000000;\r\n            case SpecificEnergyUnits.GigawattHoursPerKilogram:\r\n                return (this.value / 3.6e3) / 1000000000;\r\n            case SpecificEnergyUnits.KilowattDaysPerKilogram:\r\n                return (this.value / (24 * 3.6e3)) / 1000;\r\n            case SpecificEnergyUnits.MegawattDaysPerKilogram:\r\n                return (this.value / (24 * 3.6e3)) / 1000000;\r\n            case SpecificEnergyUnits.GigawattDaysPerKilogram:\r\n                return (this.value / (24 * 3.6e3)) / 1000000000;\r\n            case SpecificEnergyUnits.TerawattDaysPerKilogram:\r\n                return (this.value / (24 * 3.6e3)) / 1000000000000;\r\n            case SpecificEnergyUnits.KilowattDaysPerTonne:\r\n                return (this.value / ((24 * 3.6e3) / 1e3)) / 1000;\r\n            case SpecificEnergyUnits.MegawattDaysPerTonne:\r\n                return (this.value / ((24 * 3.6e3) / 1e3)) / 1000000;\r\n            case SpecificEnergyUnits.GigawattDaysPerTonne:\r\n                return (this.value / ((24 * 3.6e3) / 1e3)) / 1000000000;\r\n            case SpecificEnergyUnits.TerawattDaysPerTonne:\r\n                return (this.value / ((24 * 3.6e3) / 1e3)) / 1000000000000;\r\n            case SpecificEnergyUnits.KilowattDaysPerShortTon:\r\n                return (this.value / ((24 * 3.6e3) / 9.0718474e2)) / 1000;\r\n            case SpecificEnergyUnits.MegawattDaysPerShortTon:\r\n                return (this.value / ((24 * 3.6e3) / 9.0718474e2)) / 1000000;\r\n            case SpecificEnergyUnits.GigawattDaysPerShortTon:\r\n                return (this.value / ((24 * 3.6e3) / 9.0718474e2)) / 1000000000;\r\n            case SpecificEnergyUnits.TerawattDaysPerShortTon:\r\n                return (this.value / ((24 * 3.6e3) / 9.0718474e2)) / 1000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SpecificEnergyUnits.JoulesPerKilogram:\r\n                return value;\r\n            case SpecificEnergyUnits.CaloriesPerGram:\r\n                return value * 4.184e3;\r\n            case SpecificEnergyUnits.WattHoursPerKilogram:\r\n                return value * 3.6e3;\r\n            case SpecificEnergyUnits.WattDaysPerKilogram:\r\n                return value * (24 * 3.6e3);\r\n            case SpecificEnergyUnits.WattDaysPerTonne:\r\n                return value * ((24 * 3.6e3) / 1e3);\r\n            case SpecificEnergyUnits.WattDaysPerShortTon:\r\n                return value * ((24 * 3.6e3) / 9.0718474e2);\r\n            case SpecificEnergyUnits.BtuPerPound:\r\n                return value * 2326.000075362;\r\n            case SpecificEnergyUnits.KilojoulesPerKilogram:\r\n                return (value) * 1000;\r\n            case SpecificEnergyUnits.MegajoulesPerKilogram:\r\n                return (value) * 1000000;\r\n            case SpecificEnergyUnits.KilocaloriesPerGram:\r\n                return (value * 4.184e3) * 1000;\r\n            case SpecificEnergyUnits.KilowattHoursPerKilogram:\r\n                return (value * 3.6e3) * 1000;\r\n            case SpecificEnergyUnits.MegawattHoursPerKilogram:\r\n                return (value * 3.6e3) * 1000000;\r\n            case SpecificEnergyUnits.GigawattHoursPerKilogram:\r\n                return (value * 3.6e3) * 1000000000;\r\n            case SpecificEnergyUnits.KilowattDaysPerKilogram:\r\n                return (value * (24 * 3.6e3)) * 1000;\r\n            case SpecificEnergyUnits.MegawattDaysPerKilogram:\r\n                return (value * (24 * 3.6e3)) * 1000000;\r\n            case SpecificEnergyUnits.GigawattDaysPerKilogram:\r\n                return (value * (24 * 3.6e3)) * 1000000000;\r\n            case SpecificEnergyUnits.TerawattDaysPerKilogram:\r\n                return (value * (24 * 3.6e3)) * 1000000000000;\r\n            case SpecificEnergyUnits.KilowattDaysPerTonne:\r\n                return (value * ((24 * 3.6e3) / 1e3)) * 1000;\r\n            case SpecificEnergyUnits.MegawattDaysPerTonne:\r\n                return (value * ((24 * 3.6e3) / 1e3)) * 1000000;\r\n            case SpecificEnergyUnits.GigawattDaysPerTonne:\r\n                return (value * ((24 * 3.6e3) / 1e3)) * 1000000000;\r\n            case SpecificEnergyUnits.TerawattDaysPerTonne:\r\n                return (value * ((24 * 3.6e3) / 1e3)) * 1000000000000;\r\n            case SpecificEnergyUnits.KilowattDaysPerShortTon:\r\n                return (value * ((24 * 3.6e3) / 9.0718474e2)) * 1000;\r\n            case SpecificEnergyUnits.MegawattDaysPerShortTon:\r\n                return (value * ((24 * 3.6e3) / 9.0718474e2)) * 1000000;\r\n            case SpecificEnergyUnits.GigawattDaysPerShortTon:\r\n                return (value * ((24 * 3.6e3) / 9.0718474e2)) * 1000000000;\r\n            case SpecificEnergyUnits.TerawattDaysPerShortTon:\r\n                return (value * ((24 * 3.6e3) / 9.0718474e2)) * 1000000000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the SpecificEnergy to string.\r\n     * Note! the default format for SpecificEnergy is JoulesPerKilogram.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the SpecificEnergy.\r\n     * @returns The string format of the SpecificEnergy.\r\n     */\r\n    toString(toUnit = SpecificEnergyUnits.JoulesPerKilogram) {\r\n        switch (toUnit) {\r\n            case SpecificEnergyUnits.JoulesPerKilogram:\r\n                return this.JoulesPerKilogram + ` J/kg`;\r\n            case SpecificEnergyUnits.CaloriesPerGram:\r\n                return this.CaloriesPerGram + ` cal/g`;\r\n            case SpecificEnergyUnits.WattHoursPerKilogram:\r\n                return this.WattHoursPerKilogram + ` Wh/kg`;\r\n            case SpecificEnergyUnits.WattDaysPerKilogram:\r\n                return this.WattDaysPerKilogram + ` Wd/kg`;\r\n            case SpecificEnergyUnits.WattDaysPerTonne:\r\n                return this.WattDaysPerTonne + ` Wd/t`;\r\n            case SpecificEnergyUnits.WattDaysPerShortTon:\r\n                return this.WattDaysPerShortTon + ` Wd/ST`;\r\n            case SpecificEnergyUnits.BtuPerPound:\r\n                return this.BtuPerPound + ` btu/lb`;\r\n            case SpecificEnergyUnits.KilojoulesPerKilogram:\r\n                return this.KilojoulesPerKilogram + ` `;\r\n            case SpecificEnergyUnits.MegajoulesPerKilogram:\r\n                return this.MegajoulesPerKilogram + ` `;\r\n            case SpecificEnergyUnits.KilocaloriesPerGram:\r\n                return this.KilocaloriesPerGram + ` `;\r\n            case SpecificEnergyUnits.KilowattHoursPerKilogram:\r\n                return this.KilowattHoursPerKilogram + ` `;\r\n            case SpecificEnergyUnits.MegawattHoursPerKilogram:\r\n                return this.MegawattHoursPerKilogram + ` `;\r\n            case SpecificEnergyUnits.GigawattHoursPerKilogram:\r\n                return this.GigawattHoursPerKilogram + ` `;\r\n            case SpecificEnergyUnits.KilowattDaysPerKilogram:\r\n                return this.KilowattDaysPerKilogram + ` `;\r\n            case SpecificEnergyUnits.MegawattDaysPerKilogram:\r\n                return this.MegawattDaysPerKilogram + ` `;\r\n            case SpecificEnergyUnits.GigawattDaysPerKilogram:\r\n                return this.GigawattDaysPerKilogram + ` `;\r\n            case SpecificEnergyUnits.TerawattDaysPerKilogram:\r\n                return this.TerawattDaysPerKilogram + ` `;\r\n            case SpecificEnergyUnits.KilowattDaysPerTonne:\r\n                return this.KilowattDaysPerTonne + ` `;\r\n            case SpecificEnergyUnits.MegawattDaysPerTonne:\r\n                return this.MegawattDaysPerTonne + ` `;\r\n            case SpecificEnergyUnits.GigawattDaysPerTonne:\r\n                return this.GigawattDaysPerTonne + ` `;\r\n            case SpecificEnergyUnits.TerawattDaysPerTonne:\r\n                return this.TerawattDaysPerTonne + ` `;\r\n            case SpecificEnergyUnits.KilowattDaysPerShortTon:\r\n                return this.KilowattDaysPerShortTon + ` `;\r\n            case SpecificEnergyUnits.MegawattDaysPerShortTon:\r\n                return this.MegawattDaysPerShortTon + ` `;\r\n            case SpecificEnergyUnits.GigawattDaysPerShortTon:\r\n                return this.GigawattDaysPerShortTon + ` `;\r\n            case SpecificEnergyUnits.TerawattDaysPerShortTon:\r\n                return this.TerawattDaysPerShortTon + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given SpecificEnergy are equals to the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns True if the given SpecificEnergy are equal to the current SpecificEnergy.\r\n     */\r\n    equals(specificEnergy) {\r\n        return this.value === specificEnergy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given SpecificEnergy against the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns 0 if they are equal, -1 if the current SpecificEnergy is less then other, 1 if the current SpecificEnergy is greater then other.\r\n     */\r\n    compareTo(specificEnergy) {\r\n        if (this.value > specificEnergy.BaseValue)\r\n            return 1;\r\n        if (this.value < specificEnergy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given SpecificEnergy with the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns A new SpecificEnergy instance with the results.\r\n     */\r\n    add(specificEnergy) {\r\n        return new SpecificEnergy(this.value + specificEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given SpecificEnergy with the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns A new SpecificEnergy instance with the results.\r\n     */\r\n    subtract(specificEnergy) {\r\n        return new SpecificEnergy(this.value - specificEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given SpecificEnergy with the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns A new SpecificEnergy instance with the results.\r\n     */\r\n    multiply(specificEnergy) {\r\n        return new SpecificEnergy(this.value * specificEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given SpecificEnergy with the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns A new SpecificEnergy instance with the results.\r\n     */\r\n    divide(specificEnergy) {\r\n        return new SpecificEnergy(this.value / specificEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given SpecificEnergy with the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns A new SpecificEnergy instance with the results.\r\n     */\r\n    modulo(specificEnergy) {\r\n        return new SpecificEnergy(this.value % specificEnergy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given SpecificEnergy with the current SpecificEnergy.\r\n     * @param specificEnergy The other SpecificEnergy.\r\n     * @returns A new SpecificEnergy instance with the results.\r\n     */\r\n    pow(specificEnergy) {\r\n        return new SpecificEnergy(this.value ** specificEnergy.BaseValue);\r\n    }\r\n}\r\nexports.SpecificEnergy = SpecificEnergy;\r\n//# sourceMappingURL=specificenergy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpecificEntropy = exports.SpecificEntropyUnits = void 0;\r\n/** SpecificEntropyUnits enumeration */\r\nvar SpecificEntropyUnits;\r\n(function (SpecificEntropyUnits) {\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"JoulesPerKilogramKelvin\"] = 0] = \"JoulesPerKilogramKelvin\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"JoulesPerKilogramDegreeCelsius\"] = 1] = \"JoulesPerKilogramDegreeCelsius\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"CaloriesPerGramKelvin\"] = 2] = \"CaloriesPerGramKelvin\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"BtusPerPoundFahrenheit\"] = 3] = \"BtusPerPoundFahrenheit\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"KilojoulesPerKilogramKelvin\"] = 4] = \"KilojoulesPerKilogramKelvin\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"MegajoulesPerKilogramKelvin\"] = 5] = \"MegajoulesPerKilogramKelvin\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"KilojoulesPerKilogramDegreeCelsius\"] = 6] = \"KilojoulesPerKilogramDegreeCelsius\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"MegajoulesPerKilogramDegreeCelsius\"] = 7] = \"MegajoulesPerKilogramDegreeCelsius\";\r\n    /** */\r\n    SpecificEntropyUnits[SpecificEntropyUnits[\"KilocaloriesPerGramKelvin\"] = 8] = \"KilocaloriesPerGramKelvin\";\r\n})(SpecificEntropyUnits = exports.SpecificEntropyUnits || (exports.SpecificEntropyUnits = {}));\r\n/** Specific entropy is an amount of energy required to raise temperature of a substance by 1 Kelvin per unit mass. */\r\nclass SpecificEntropy {\r\n    /**\r\n     * Create a new SpecificEntropy.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘SpecificEntropy’ unit to create from.\r\n     * The default unit is JoulesPerKilogramKelvin\r\n     */\r\n    constructor(value, fromUnit = SpecificEntropyUnits.JoulesPerKilogramKelvin) {\r\n        this.joulesperkilogramkelvinLazy = null;\r\n        this.joulesperkilogramdegreecelsiusLazy = null;\r\n        this.caloriespergramkelvinLazy = null;\r\n        this.btusperpoundfahrenheitLazy = null;\r\n        this.kilojoulesperkilogramkelvinLazy = null;\r\n        this.megajoulesperkilogramkelvinLazy = null;\r\n        this.kilojoulesperkilogramdegreecelsiusLazy = null;\r\n        this.megajoulesperkilogramdegreecelsiusLazy = null;\r\n        this.kilocaloriespergramkelvinLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of SpecificEntropy is JoulesPerKilogramKelvin.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get JoulesPerKilogramKelvin() {\r\n        if (this.joulesperkilogramkelvinLazy !== null) {\r\n            return this.joulesperkilogramkelvinLazy;\r\n        }\r\n        return this.joulesperkilogramkelvinLazy = this.convertFromBase(SpecificEntropyUnits.JoulesPerKilogramKelvin);\r\n    }\r\n    /** */\r\n    get JoulesPerKilogramDegreeCelsius() {\r\n        if (this.joulesperkilogramdegreecelsiusLazy !== null) {\r\n            return this.joulesperkilogramdegreecelsiusLazy;\r\n        }\r\n        return this.joulesperkilogramdegreecelsiusLazy = this.convertFromBase(SpecificEntropyUnits.JoulesPerKilogramDegreeCelsius);\r\n    }\r\n    /** */\r\n    get CaloriesPerGramKelvin() {\r\n        if (this.caloriespergramkelvinLazy !== null) {\r\n            return this.caloriespergramkelvinLazy;\r\n        }\r\n        return this.caloriespergramkelvinLazy = this.convertFromBase(SpecificEntropyUnits.CaloriesPerGramKelvin);\r\n    }\r\n    /** */\r\n    get BtusPerPoundFahrenheit() {\r\n        if (this.btusperpoundfahrenheitLazy !== null) {\r\n            return this.btusperpoundfahrenheitLazy;\r\n        }\r\n        return this.btusperpoundfahrenheitLazy = this.convertFromBase(SpecificEntropyUnits.BtusPerPoundFahrenheit);\r\n    }\r\n    /** */\r\n    get KilojoulesPerKilogramKelvin() {\r\n        if (this.kilojoulesperkilogramkelvinLazy !== null) {\r\n            return this.kilojoulesperkilogramkelvinLazy;\r\n        }\r\n        return this.kilojoulesperkilogramkelvinLazy = this.convertFromBase(SpecificEntropyUnits.KilojoulesPerKilogramKelvin);\r\n    }\r\n    /** */\r\n    get MegajoulesPerKilogramKelvin() {\r\n        if (this.megajoulesperkilogramkelvinLazy !== null) {\r\n            return this.megajoulesperkilogramkelvinLazy;\r\n        }\r\n        return this.megajoulesperkilogramkelvinLazy = this.convertFromBase(SpecificEntropyUnits.MegajoulesPerKilogramKelvin);\r\n    }\r\n    /** */\r\n    get KilojoulesPerKilogramDegreeCelsius() {\r\n        if (this.kilojoulesperkilogramdegreecelsiusLazy !== null) {\r\n            return this.kilojoulesperkilogramdegreecelsiusLazy;\r\n        }\r\n        return this.kilojoulesperkilogramdegreecelsiusLazy = this.convertFromBase(SpecificEntropyUnits.KilojoulesPerKilogramDegreeCelsius);\r\n    }\r\n    /** */\r\n    get MegajoulesPerKilogramDegreeCelsius() {\r\n        if (this.megajoulesperkilogramdegreecelsiusLazy !== null) {\r\n            return this.megajoulesperkilogramdegreecelsiusLazy;\r\n        }\r\n        return this.megajoulesperkilogramdegreecelsiusLazy = this.convertFromBase(SpecificEntropyUnits.MegajoulesPerKilogramDegreeCelsius);\r\n    }\r\n    /** */\r\n    get KilocaloriesPerGramKelvin() {\r\n        if (this.kilocaloriespergramkelvinLazy !== null) {\r\n            return this.kilocaloriespergramkelvinLazy;\r\n        }\r\n        return this.kilocaloriespergramkelvinLazy = this.convertFromBase(SpecificEntropyUnits.KilocaloriesPerGramKelvin);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a JoulesPerKilogramKelvin\r\n     *\r\n     * @param value The unit as JoulesPerKilogramKelvin to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromJoulesPerKilogramKelvin(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.JoulesPerKilogramKelvin);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a JoulesPerKilogramDegreeCelsius\r\n     *\r\n     * @param value The unit as JoulesPerKilogramDegreeCelsius to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromJoulesPerKilogramDegreeCelsius(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.JoulesPerKilogramDegreeCelsius);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a CaloriesPerGramKelvin\r\n     *\r\n     * @param value The unit as CaloriesPerGramKelvin to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromCaloriesPerGramKelvin(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.CaloriesPerGramKelvin);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a BtusPerPoundFahrenheit\r\n     *\r\n     * @param value The unit as BtusPerPoundFahrenheit to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromBtusPerPoundFahrenheit(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.BtusPerPoundFahrenheit);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a KilojoulesPerKilogramKelvin\r\n     *\r\n     * @param value The unit as KilojoulesPerKilogramKelvin to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromKilojoulesPerKilogramKelvin(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.KilojoulesPerKilogramKelvin);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a MegajoulesPerKilogramKelvin\r\n     *\r\n     * @param value The unit as MegajoulesPerKilogramKelvin to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromMegajoulesPerKilogramKelvin(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.MegajoulesPerKilogramKelvin);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a KilojoulesPerKilogramDegreeCelsius\r\n     *\r\n     * @param value The unit as KilojoulesPerKilogramDegreeCelsius to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromKilojoulesPerKilogramDegreeCelsius(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.KilojoulesPerKilogramDegreeCelsius);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a MegajoulesPerKilogramDegreeCelsius\r\n     *\r\n     * @param value The unit as MegajoulesPerKilogramDegreeCelsius to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromMegajoulesPerKilogramDegreeCelsius(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.MegajoulesPerKilogramDegreeCelsius);\r\n    }\r\n    /**\r\n     * Create a new SpecificEntropy instance from a KilocaloriesPerGramKelvin\r\n     *\r\n     * @param value The unit as KilocaloriesPerGramKelvin to create a new SpecificEntropy from.\r\n     * @returns The new SpecificEntropy instance.\r\n     */\r\n    static FromKilocaloriesPerGramKelvin(value) {\r\n        return new SpecificEntropy(value, SpecificEntropyUnits.KilocaloriesPerGramKelvin);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SpecificEntropyUnits.JoulesPerKilogramKelvin:\r\n                return this.value;\r\n            case SpecificEntropyUnits.JoulesPerKilogramDegreeCelsius:\r\n                return this.value;\r\n            case SpecificEntropyUnits.CaloriesPerGramKelvin:\r\n                return this.value / 4.184e3;\r\n            case SpecificEntropyUnits.BtusPerPoundFahrenheit:\r\n                return this.value / 4.1868e3;\r\n            case SpecificEntropyUnits.KilojoulesPerKilogramKelvin:\r\n                return (this.value) / 1000;\r\n            case SpecificEntropyUnits.MegajoulesPerKilogramKelvin:\r\n                return (this.value) / 1000000;\r\n            case SpecificEntropyUnits.KilojoulesPerKilogramDegreeCelsius:\r\n                return (this.value) / 1000;\r\n            case SpecificEntropyUnits.MegajoulesPerKilogramDegreeCelsius:\r\n                return (this.value) / 1000000;\r\n            case SpecificEntropyUnits.KilocaloriesPerGramKelvin:\r\n                return (this.value / 4.184e3) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SpecificEntropyUnits.JoulesPerKilogramKelvin:\r\n                return value;\r\n            case SpecificEntropyUnits.JoulesPerKilogramDegreeCelsius:\r\n                return value;\r\n            case SpecificEntropyUnits.CaloriesPerGramKelvin:\r\n                return value * 4.184e3;\r\n            case SpecificEntropyUnits.BtusPerPoundFahrenheit:\r\n                return value * 4.1868e3;\r\n            case SpecificEntropyUnits.KilojoulesPerKilogramKelvin:\r\n                return (value) * 1000;\r\n            case SpecificEntropyUnits.MegajoulesPerKilogramKelvin:\r\n                return (value) * 1000000;\r\n            case SpecificEntropyUnits.KilojoulesPerKilogramDegreeCelsius:\r\n                return (value) * 1000;\r\n            case SpecificEntropyUnits.MegajoulesPerKilogramDegreeCelsius:\r\n                return (value) * 1000000;\r\n            case SpecificEntropyUnits.KilocaloriesPerGramKelvin:\r\n                return (value * 4.184e3) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the SpecificEntropy to string.\r\n     * Note! the default format for SpecificEntropy is JoulesPerKilogramKelvin.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the SpecificEntropy.\r\n     * @returns The string format of the SpecificEntropy.\r\n     */\r\n    toString(toUnit = SpecificEntropyUnits.JoulesPerKilogramKelvin) {\r\n        switch (toUnit) {\r\n            case SpecificEntropyUnits.JoulesPerKilogramKelvin:\r\n                return this.JoulesPerKilogramKelvin + ` J/kg.K`;\r\n            case SpecificEntropyUnits.JoulesPerKilogramDegreeCelsius:\r\n                return this.JoulesPerKilogramDegreeCelsius + ` J/kg.C`;\r\n            case SpecificEntropyUnits.CaloriesPerGramKelvin:\r\n                return this.CaloriesPerGramKelvin + ` cal/g.K`;\r\n            case SpecificEntropyUnits.BtusPerPoundFahrenheit:\r\n                return this.BtusPerPoundFahrenheit + ` BTU/lb·°F`;\r\n            case SpecificEntropyUnits.KilojoulesPerKilogramKelvin:\r\n                return this.KilojoulesPerKilogramKelvin + ` `;\r\n            case SpecificEntropyUnits.MegajoulesPerKilogramKelvin:\r\n                return this.MegajoulesPerKilogramKelvin + ` `;\r\n            case SpecificEntropyUnits.KilojoulesPerKilogramDegreeCelsius:\r\n                return this.KilojoulesPerKilogramDegreeCelsius + ` `;\r\n            case SpecificEntropyUnits.MegajoulesPerKilogramDegreeCelsius:\r\n                return this.MegajoulesPerKilogramDegreeCelsius + ` `;\r\n            case SpecificEntropyUnits.KilocaloriesPerGramKelvin:\r\n                return this.KilocaloriesPerGramKelvin + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given SpecificEntropy are equals to the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns True if the given SpecificEntropy are equal to the current SpecificEntropy.\r\n     */\r\n    equals(specificEntropy) {\r\n        return this.value === specificEntropy.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given SpecificEntropy against the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns 0 if they are equal, -1 if the current SpecificEntropy is less then other, 1 if the current SpecificEntropy is greater then other.\r\n     */\r\n    compareTo(specificEntropy) {\r\n        if (this.value > specificEntropy.BaseValue)\r\n            return 1;\r\n        if (this.value < specificEntropy.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given SpecificEntropy with the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns A new SpecificEntropy instance with the results.\r\n     */\r\n    add(specificEntropy) {\r\n        return new SpecificEntropy(this.value + specificEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given SpecificEntropy with the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns A new SpecificEntropy instance with the results.\r\n     */\r\n    subtract(specificEntropy) {\r\n        return new SpecificEntropy(this.value - specificEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given SpecificEntropy with the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns A new SpecificEntropy instance with the results.\r\n     */\r\n    multiply(specificEntropy) {\r\n        return new SpecificEntropy(this.value * specificEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given SpecificEntropy with the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns A new SpecificEntropy instance with the results.\r\n     */\r\n    divide(specificEntropy) {\r\n        return new SpecificEntropy(this.value / specificEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given SpecificEntropy with the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns A new SpecificEntropy instance with the results.\r\n     */\r\n    modulo(specificEntropy) {\r\n        return new SpecificEntropy(this.value % specificEntropy.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given SpecificEntropy with the current SpecificEntropy.\r\n     * @param specificEntropy The other SpecificEntropy.\r\n     * @returns A new SpecificEntropy instance with the results.\r\n     */\r\n    pow(specificEntropy) {\r\n        return new SpecificEntropy(this.value ** specificEntropy.BaseValue);\r\n    }\r\n}\r\nexports.SpecificEntropy = SpecificEntropy;\r\n//# sourceMappingURL=specificentropy.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpecificFuelConsumption = exports.SpecificFuelConsumptionUnits = void 0;\r\n/** SpecificFuelConsumptionUnits enumeration */\r\nvar SpecificFuelConsumptionUnits;\r\n(function (SpecificFuelConsumptionUnits) {\r\n    /** */\r\n    SpecificFuelConsumptionUnits[SpecificFuelConsumptionUnits[\"PoundsMassPerPoundForceHour\"] = 0] = \"PoundsMassPerPoundForceHour\";\r\n    /** */\r\n    SpecificFuelConsumptionUnits[SpecificFuelConsumptionUnits[\"KilogramsPerKilogramForceHour\"] = 1] = \"KilogramsPerKilogramForceHour\";\r\n    /** */\r\n    SpecificFuelConsumptionUnits[SpecificFuelConsumptionUnits[\"GramsPerKiloNewtonSecond\"] = 2] = \"GramsPerKiloNewtonSecond\";\r\n    /** */\r\n    SpecificFuelConsumptionUnits[SpecificFuelConsumptionUnits[\"KilogramsPerKiloNewtonSecond\"] = 3] = \"KilogramsPerKiloNewtonSecond\";\r\n})(SpecificFuelConsumptionUnits = exports.SpecificFuelConsumptionUnits || (exports.SpecificFuelConsumptionUnits = {}));\r\n/** SFC is the fuel efficiency of an engine design with respect to thrust output */\r\nclass SpecificFuelConsumption {\r\n    /**\r\n     * Create a new SpecificFuelConsumption.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘SpecificFuelConsumption’ unit to create from.\r\n     * The default unit is GramsPerKiloNewtonSecond\r\n     */\r\n    constructor(value, fromUnit = SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond) {\r\n        this.poundsmassperpoundforcehourLazy = null;\r\n        this.kilogramsperkilogramforcehourLazy = null;\r\n        this.gramsperkilonewtonsecondLazy = null;\r\n        this.kilogramsperkilonewtonsecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of SpecificFuelConsumption is GramsPerKiloNewtonSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get PoundsMassPerPoundForceHour() {\r\n        if (this.poundsmassperpoundforcehourLazy !== null) {\r\n            return this.poundsmassperpoundforcehourLazy;\r\n        }\r\n        return this.poundsmassperpoundforcehourLazy = this.convertFromBase(SpecificFuelConsumptionUnits.PoundsMassPerPoundForceHour);\r\n    }\r\n    /** */\r\n    get KilogramsPerKilogramForceHour() {\r\n        if (this.kilogramsperkilogramforcehourLazy !== null) {\r\n            return this.kilogramsperkilogramforcehourLazy;\r\n        }\r\n        return this.kilogramsperkilogramforcehourLazy = this.convertFromBase(SpecificFuelConsumptionUnits.KilogramsPerKilogramForceHour);\r\n    }\r\n    /** */\r\n    get GramsPerKiloNewtonSecond() {\r\n        if (this.gramsperkilonewtonsecondLazy !== null) {\r\n            return this.gramsperkilonewtonsecondLazy;\r\n        }\r\n        return this.gramsperkilonewtonsecondLazy = this.convertFromBase(SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond);\r\n    }\r\n    /** */\r\n    get KilogramsPerKiloNewtonSecond() {\r\n        if (this.kilogramsperkilonewtonsecondLazy !== null) {\r\n            return this.kilogramsperkilonewtonsecondLazy;\r\n        }\r\n        return this.kilogramsperkilonewtonsecondLazy = this.convertFromBase(SpecificFuelConsumptionUnits.KilogramsPerKiloNewtonSecond);\r\n    }\r\n    /**\r\n     * Create a new SpecificFuelConsumption instance from a PoundsMassPerPoundForceHour\r\n     *\r\n     * @param value The unit as PoundsMassPerPoundForceHour to create a new SpecificFuelConsumption from.\r\n     * @returns The new SpecificFuelConsumption instance.\r\n     */\r\n    static FromPoundsMassPerPoundForceHour(value) {\r\n        return new SpecificFuelConsumption(value, SpecificFuelConsumptionUnits.PoundsMassPerPoundForceHour);\r\n    }\r\n    /**\r\n     * Create a new SpecificFuelConsumption instance from a KilogramsPerKilogramForceHour\r\n     *\r\n     * @param value The unit as KilogramsPerKilogramForceHour to create a new SpecificFuelConsumption from.\r\n     * @returns The new SpecificFuelConsumption instance.\r\n     */\r\n    static FromKilogramsPerKilogramForceHour(value) {\r\n        return new SpecificFuelConsumption(value, SpecificFuelConsumptionUnits.KilogramsPerKilogramForceHour);\r\n    }\r\n    /**\r\n     * Create a new SpecificFuelConsumption instance from a GramsPerKiloNewtonSecond\r\n     *\r\n     * @param value The unit as GramsPerKiloNewtonSecond to create a new SpecificFuelConsumption from.\r\n     * @returns The new SpecificFuelConsumption instance.\r\n     */\r\n    static FromGramsPerKiloNewtonSecond(value) {\r\n        return new SpecificFuelConsumption(value, SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond);\r\n    }\r\n    /**\r\n     * Create a new SpecificFuelConsumption instance from a KilogramsPerKiloNewtonSecond\r\n     *\r\n     * @param value The unit as KilogramsPerKiloNewtonSecond to create a new SpecificFuelConsumption from.\r\n     * @returns The new SpecificFuelConsumption instance.\r\n     */\r\n    static FromKilogramsPerKiloNewtonSecond(value) {\r\n        return new SpecificFuelConsumption(value, SpecificFuelConsumptionUnits.KilogramsPerKiloNewtonSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SpecificFuelConsumptionUnits.PoundsMassPerPoundForceHour:\r\n                return this.value / 28.33;\r\n            case SpecificFuelConsumptionUnits.KilogramsPerKilogramForceHour:\r\n                return this.value / 28.33;\r\n            case SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond:\r\n                return this.value;\r\n            case SpecificFuelConsumptionUnits.KilogramsPerKiloNewtonSecond:\r\n                return (this.value) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SpecificFuelConsumptionUnits.PoundsMassPerPoundForceHour:\r\n                return value * 28.33;\r\n            case SpecificFuelConsumptionUnits.KilogramsPerKilogramForceHour:\r\n                return value * 28.33;\r\n            case SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond:\r\n                return value;\r\n            case SpecificFuelConsumptionUnits.KilogramsPerKiloNewtonSecond:\r\n                return (value) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the SpecificFuelConsumption to string.\r\n     * Note! the default format for SpecificFuelConsumption is GramsPerKiloNewtonSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the SpecificFuelConsumption.\r\n     * @returns The string format of the SpecificFuelConsumption.\r\n     */\r\n    toString(toUnit = SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond) {\r\n        switch (toUnit) {\r\n            case SpecificFuelConsumptionUnits.PoundsMassPerPoundForceHour:\r\n                return this.PoundsMassPerPoundForceHour + ` lb/(lbf�h)`;\r\n            case SpecificFuelConsumptionUnits.KilogramsPerKilogramForceHour:\r\n                return this.KilogramsPerKilogramForceHour + ` kg/(kgf�h)`;\r\n            case SpecificFuelConsumptionUnits.GramsPerKiloNewtonSecond:\r\n                return this.GramsPerKiloNewtonSecond + ` g/(kN�s)`;\r\n            case SpecificFuelConsumptionUnits.KilogramsPerKiloNewtonSecond:\r\n                return this.KilogramsPerKiloNewtonSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given SpecificFuelConsumption are equals to the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns True if the given SpecificFuelConsumption are equal to the current SpecificFuelConsumption.\r\n     */\r\n    equals(specificFuelConsumption) {\r\n        return this.value === specificFuelConsumption.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given SpecificFuelConsumption against the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns 0 if they are equal, -1 if the current SpecificFuelConsumption is less then other, 1 if the current SpecificFuelConsumption is greater then other.\r\n     */\r\n    compareTo(specificFuelConsumption) {\r\n        if (this.value > specificFuelConsumption.BaseValue)\r\n            return 1;\r\n        if (this.value < specificFuelConsumption.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given SpecificFuelConsumption with the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns A new SpecificFuelConsumption instance with the results.\r\n     */\r\n    add(specificFuelConsumption) {\r\n        return new SpecificFuelConsumption(this.value + specificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given SpecificFuelConsumption with the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns A new SpecificFuelConsumption instance with the results.\r\n     */\r\n    subtract(specificFuelConsumption) {\r\n        return new SpecificFuelConsumption(this.value - specificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given SpecificFuelConsumption with the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns A new SpecificFuelConsumption instance with the results.\r\n     */\r\n    multiply(specificFuelConsumption) {\r\n        return new SpecificFuelConsumption(this.value * specificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given SpecificFuelConsumption with the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns A new SpecificFuelConsumption instance with the results.\r\n     */\r\n    divide(specificFuelConsumption) {\r\n        return new SpecificFuelConsumption(this.value / specificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given SpecificFuelConsumption with the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns A new SpecificFuelConsumption instance with the results.\r\n     */\r\n    modulo(specificFuelConsumption) {\r\n        return new SpecificFuelConsumption(this.value % specificFuelConsumption.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given SpecificFuelConsumption with the current SpecificFuelConsumption.\r\n     * @param specificFuelConsumption The other SpecificFuelConsumption.\r\n     * @returns A new SpecificFuelConsumption instance with the results.\r\n     */\r\n    pow(specificFuelConsumption) {\r\n        return new SpecificFuelConsumption(this.value ** specificFuelConsumption.BaseValue);\r\n    }\r\n}\r\nexports.SpecificFuelConsumption = SpecificFuelConsumption;\r\n//# sourceMappingURL=specificfuelconsumption.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpecificVolume = exports.SpecificVolumeUnits = void 0;\r\n/** SpecificVolumeUnits enumeration */\r\nvar SpecificVolumeUnits;\r\n(function (SpecificVolumeUnits) {\r\n    /** */\r\n    SpecificVolumeUnits[SpecificVolumeUnits[\"CubicMetersPerKilogram\"] = 0] = \"CubicMetersPerKilogram\";\r\n    /** */\r\n    SpecificVolumeUnits[SpecificVolumeUnits[\"CubicFeetPerPound\"] = 1] = \"CubicFeetPerPound\";\r\n    /** */\r\n    SpecificVolumeUnits[SpecificVolumeUnits[\"MillicubicMetersPerKilogram\"] = 2] = \"MillicubicMetersPerKilogram\";\r\n})(SpecificVolumeUnits = exports.SpecificVolumeUnits || (exports.SpecificVolumeUnits = {}));\r\n/** In thermodynamics, the specific volume of a substance is the ratio of the substance's volume to its mass. It is the reciprocal of density and an intrinsic property of matter as well. */\r\nclass SpecificVolume {\r\n    /**\r\n     * Create a new SpecificVolume.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘SpecificVolume’ unit to create from.\r\n     * The default unit is CubicMetersPerKilogram\r\n     */\r\n    constructor(value, fromUnit = SpecificVolumeUnits.CubicMetersPerKilogram) {\r\n        this.cubicmetersperkilogramLazy = null;\r\n        this.cubicfeetperpoundLazy = null;\r\n        this.millicubicmetersperkilogramLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of SpecificVolume is CubicMetersPerKilogram.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get CubicMetersPerKilogram() {\r\n        if (this.cubicmetersperkilogramLazy !== null) {\r\n            return this.cubicmetersperkilogramLazy;\r\n        }\r\n        return this.cubicmetersperkilogramLazy = this.convertFromBase(SpecificVolumeUnits.CubicMetersPerKilogram);\r\n    }\r\n    /** */\r\n    get CubicFeetPerPound() {\r\n        if (this.cubicfeetperpoundLazy !== null) {\r\n            return this.cubicfeetperpoundLazy;\r\n        }\r\n        return this.cubicfeetperpoundLazy = this.convertFromBase(SpecificVolumeUnits.CubicFeetPerPound);\r\n    }\r\n    /** */\r\n    get MillicubicMetersPerKilogram() {\r\n        if (this.millicubicmetersperkilogramLazy !== null) {\r\n            return this.millicubicmetersperkilogramLazy;\r\n        }\r\n        return this.millicubicmetersperkilogramLazy = this.convertFromBase(SpecificVolumeUnits.MillicubicMetersPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificVolume instance from a CubicMetersPerKilogram\r\n     *\r\n     * @param value The unit as CubicMetersPerKilogram to create a new SpecificVolume from.\r\n     * @returns The new SpecificVolume instance.\r\n     */\r\n    static FromCubicMetersPerKilogram(value) {\r\n        return new SpecificVolume(value, SpecificVolumeUnits.CubicMetersPerKilogram);\r\n    }\r\n    /**\r\n     * Create a new SpecificVolume instance from a CubicFeetPerPound\r\n     *\r\n     * @param value The unit as CubicFeetPerPound to create a new SpecificVolume from.\r\n     * @returns The new SpecificVolume instance.\r\n     */\r\n    static FromCubicFeetPerPound(value) {\r\n        return new SpecificVolume(value, SpecificVolumeUnits.CubicFeetPerPound);\r\n    }\r\n    /**\r\n     * Create a new SpecificVolume instance from a MillicubicMetersPerKilogram\r\n     *\r\n     * @param value The unit as MillicubicMetersPerKilogram to create a new SpecificVolume from.\r\n     * @returns The new SpecificVolume instance.\r\n     */\r\n    static FromMillicubicMetersPerKilogram(value) {\r\n        return new SpecificVolume(value, SpecificVolumeUnits.MillicubicMetersPerKilogram);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SpecificVolumeUnits.CubicMetersPerKilogram:\r\n                return this.value;\r\n            case SpecificVolumeUnits.CubicFeetPerPound:\r\n                return this.value * 16.01846353;\r\n            case SpecificVolumeUnits.MillicubicMetersPerKilogram:\r\n                return (this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SpecificVolumeUnits.CubicMetersPerKilogram:\r\n                return value;\r\n            case SpecificVolumeUnits.CubicFeetPerPound:\r\n                return value / 16.01846353;\r\n            case SpecificVolumeUnits.MillicubicMetersPerKilogram:\r\n                return (value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the SpecificVolume to string.\r\n     * Note! the default format for SpecificVolume is CubicMetersPerKilogram.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the SpecificVolume.\r\n     * @returns The string format of the SpecificVolume.\r\n     */\r\n    toString(toUnit = SpecificVolumeUnits.CubicMetersPerKilogram) {\r\n        switch (toUnit) {\r\n            case SpecificVolumeUnits.CubicMetersPerKilogram:\r\n                return this.CubicMetersPerKilogram + ` m³/kg`;\r\n            case SpecificVolumeUnits.CubicFeetPerPound:\r\n                return this.CubicFeetPerPound + ` ft³/lb`;\r\n            case SpecificVolumeUnits.MillicubicMetersPerKilogram:\r\n                return this.MillicubicMetersPerKilogram + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given SpecificVolume are equals to the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns True if the given SpecificVolume are equal to the current SpecificVolume.\r\n     */\r\n    equals(specificVolume) {\r\n        return this.value === specificVolume.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given SpecificVolume against the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns 0 if they are equal, -1 if the current SpecificVolume is less then other, 1 if the current SpecificVolume is greater then other.\r\n     */\r\n    compareTo(specificVolume) {\r\n        if (this.value > specificVolume.BaseValue)\r\n            return 1;\r\n        if (this.value < specificVolume.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given SpecificVolume with the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns A new SpecificVolume instance with the results.\r\n     */\r\n    add(specificVolume) {\r\n        return new SpecificVolume(this.value + specificVolume.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given SpecificVolume with the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns A new SpecificVolume instance with the results.\r\n     */\r\n    subtract(specificVolume) {\r\n        return new SpecificVolume(this.value - specificVolume.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given SpecificVolume with the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns A new SpecificVolume instance with the results.\r\n     */\r\n    multiply(specificVolume) {\r\n        return new SpecificVolume(this.value * specificVolume.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given SpecificVolume with the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns A new SpecificVolume instance with the results.\r\n     */\r\n    divide(specificVolume) {\r\n        return new SpecificVolume(this.value / specificVolume.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given SpecificVolume with the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns A new SpecificVolume instance with the results.\r\n     */\r\n    modulo(specificVolume) {\r\n        return new SpecificVolume(this.value % specificVolume.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given SpecificVolume with the current SpecificVolume.\r\n     * @param specificVolume The other SpecificVolume.\r\n     * @returns A new SpecificVolume instance with the results.\r\n     */\r\n    pow(specificVolume) {\r\n        return new SpecificVolume(this.value ** specificVolume.BaseValue);\r\n    }\r\n}\r\nexports.SpecificVolume = SpecificVolume;\r\n//# sourceMappingURL=specificvolume.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpecificWeight = exports.SpecificWeightUnits = void 0;\r\n/** SpecificWeightUnits enumeration */\r\nvar SpecificWeightUnits;\r\n(function (SpecificWeightUnits) {\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"NewtonsPerCubicMillimeter\"] = 0] = \"NewtonsPerCubicMillimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"NewtonsPerCubicCentimeter\"] = 1] = \"NewtonsPerCubicCentimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"NewtonsPerCubicMeter\"] = 2] = \"NewtonsPerCubicMeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilogramsForcePerCubicMillimeter\"] = 3] = \"KilogramsForcePerCubicMillimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilogramsForcePerCubicCentimeter\"] = 4] = \"KilogramsForcePerCubicCentimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilogramsForcePerCubicMeter\"] = 5] = \"KilogramsForcePerCubicMeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"PoundsForcePerCubicInch\"] = 6] = \"PoundsForcePerCubicInch\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"PoundsForcePerCubicFoot\"] = 7] = \"PoundsForcePerCubicFoot\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"TonnesForcePerCubicMillimeter\"] = 8] = \"TonnesForcePerCubicMillimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"TonnesForcePerCubicCentimeter\"] = 9] = \"TonnesForcePerCubicCentimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"TonnesForcePerCubicMeter\"] = 10] = \"TonnesForcePerCubicMeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilonewtonsPerCubicMillimeter\"] = 11] = \"KilonewtonsPerCubicMillimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilonewtonsPerCubicCentimeter\"] = 12] = \"KilonewtonsPerCubicCentimeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilonewtonsPerCubicMeter\"] = 13] = \"KilonewtonsPerCubicMeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"MeganewtonsPerCubicMeter\"] = 14] = \"MeganewtonsPerCubicMeter\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilopoundsForcePerCubicInch\"] = 15] = \"KilopoundsForcePerCubicInch\";\r\n    /** */\r\n    SpecificWeightUnits[SpecificWeightUnits[\"KilopoundsForcePerCubicFoot\"] = 16] = \"KilopoundsForcePerCubicFoot\";\r\n})(SpecificWeightUnits = exports.SpecificWeightUnits || (exports.SpecificWeightUnits = {}));\r\n/** The SpecificWeight, or more precisely, the volumetric weight density, of a substance is its weight per unit volume. */\r\nclass SpecificWeight {\r\n    /**\r\n     * Create a new SpecificWeight.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘SpecificWeight’ unit to create from.\r\n     * The default unit is NewtonsPerCubicMeter\r\n     */\r\n    constructor(value, fromUnit = SpecificWeightUnits.NewtonsPerCubicMeter) {\r\n        this.newtonspercubicmillimeterLazy = null;\r\n        this.newtonspercubiccentimeterLazy = null;\r\n        this.newtonspercubicmeterLazy = null;\r\n        this.kilogramsforcepercubicmillimeterLazy = null;\r\n        this.kilogramsforcepercubiccentimeterLazy = null;\r\n        this.kilogramsforcepercubicmeterLazy = null;\r\n        this.poundsforcepercubicinchLazy = null;\r\n        this.poundsforcepercubicfootLazy = null;\r\n        this.tonnesforcepercubicmillimeterLazy = null;\r\n        this.tonnesforcepercubiccentimeterLazy = null;\r\n        this.tonnesforcepercubicmeterLazy = null;\r\n        this.kilonewtonspercubicmillimeterLazy = null;\r\n        this.kilonewtonspercubiccentimeterLazy = null;\r\n        this.kilonewtonspercubicmeterLazy = null;\r\n        this.meganewtonspercubicmeterLazy = null;\r\n        this.kilopoundsforcepercubicinchLazy = null;\r\n        this.kilopoundsforcepercubicfootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of SpecificWeight is NewtonsPerCubicMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonsPerCubicMillimeter() {\r\n        if (this.newtonspercubicmillimeterLazy !== null) {\r\n            return this.newtonspercubicmillimeterLazy;\r\n        }\r\n        return this.newtonspercubicmillimeterLazy = this.convertFromBase(SpecificWeightUnits.NewtonsPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerCubicCentimeter() {\r\n        if (this.newtonspercubiccentimeterLazy !== null) {\r\n            return this.newtonspercubiccentimeterLazy;\r\n        }\r\n        return this.newtonspercubiccentimeterLazy = this.convertFromBase(SpecificWeightUnits.NewtonsPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get NewtonsPerCubicMeter() {\r\n        if (this.newtonspercubicmeterLazy !== null) {\r\n            return this.newtonspercubicmeterLazy;\r\n        }\r\n        return this.newtonspercubicmeterLazy = this.convertFromBase(SpecificWeightUnits.NewtonsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerCubicMillimeter() {\r\n        if (this.kilogramsforcepercubicmillimeterLazy !== null) {\r\n            return this.kilogramsforcepercubicmillimeterLazy;\r\n        }\r\n        return this.kilogramsforcepercubicmillimeterLazy = this.convertFromBase(SpecificWeightUnits.KilogramsForcePerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerCubicCentimeter() {\r\n        if (this.kilogramsforcepercubiccentimeterLazy !== null) {\r\n            return this.kilogramsforcepercubiccentimeterLazy;\r\n        }\r\n        return this.kilogramsforcepercubiccentimeterLazy = this.convertFromBase(SpecificWeightUnits.KilogramsForcePerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get KilogramsForcePerCubicMeter() {\r\n        if (this.kilogramsforcepercubicmeterLazy !== null) {\r\n            return this.kilogramsforcepercubicmeterLazy;\r\n        }\r\n        return this.kilogramsforcepercubicmeterLazy = this.convertFromBase(SpecificWeightUnits.KilogramsForcePerCubicMeter);\r\n    }\r\n    /** */\r\n    get PoundsForcePerCubicInch() {\r\n        if (this.poundsforcepercubicinchLazy !== null) {\r\n            return this.poundsforcepercubicinchLazy;\r\n        }\r\n        return this.poundsforcepercubicinchLazy = this.convertFromBase(SpecificWeightUnits.PoundsForcePerCubicInch);\r\n    }\r\n    /** */\r\n    get PoundsForcePerCubicFoot() {\r\n        if (this.poundsforcepercubicfootLazy !== null) {\r\n            return this.poundsforcepercubicfootLazy;\r\n        }\r\n        return this.poundsforcepercubicfootLazy = this.convertFromBase(SpecificWeightUnits.PoundsForcePerCubicFoot);\r\n    }\r\n    /** */\r\n    get TonnesForcePerCubicMillimeter() {\r\n        if (this.tonnesforcepercubicmillimeterLazy !== null) {\r\n            return this.tonnesforcepercubicmillimeterLazy;\r\n        }\r\n        return this.tonnesforcepercubicmillimeterLazy = this.convertFromBase(SpecificWeightUnits.TonnesForcePerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get TonnesForcePerCubicCentimeter() {\r\n        if (this.tonnesforcepercubiccentimeterLazy !== null) {\r\n            return this.tonnesforcepercubiccentimeterLazy;\r\n        }\r\n        return this.tonnesforcepercubiccentimeterLazy = this.convertFromBase(SpecificWeightUnits.TonnesForcePerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get TonnesForcePerCubicMeter() {\r\n        if (this.tonnesforcepercubicmeterLazy !== null) {\r\n            return this.tonnesforcepercubicmeterLazy;\r\n        }\r\n        return this.tonnesforcepercubicmeterLazy = this.convertFromBase(SpecificWeightUnits.TonnesForcePerCubicMeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerCubicMillimeter() {\r\n        if (this.kilonewtonspercubicmillimeterLazy !== null) {\r\n            return this.kilonewtonspercubicmillimeterLazy;\r\n        }\r\n        return this.kilonewtonspercubicmillimeterLazy = this.convertFromBase(SpecificWeightUnits.KilonewtonsPerCubicMillimeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerCubicCentimeter() {\r\n        if (this.kilonewtonspercubiccentimeterLazy !== null) {\r\n            return this.kilonewtonspercubiccentimeterLazy;\r\n        }\r\n        return this.kilonewtonspercubiccentimeterLazy = this.convertFromBase(SpecificWeightUnits.KilonewtonsPerCubicCentimeter);\r\n    }\r\n    /** */\r\n    get KilonewtonsPerCubicMeter() {\r\n        if (this.kilonewtonspercubicmeterLazy !== null) {\r\n            return this.kilonewtonspercubicmeterLazy;\r\n        }\r\n        return this.kilonewtonspercubicmeterLazy = this.convertFromBase(SpecificWeightUnits.KilonewtonsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonsPerCubicMeter() {\r\n        if (this.meganewtonspercubicmeterLazy !== null) {\r\n            return this.meganewtonspercubicmeterLazy;\r\n        }\r\n        return this.meganewtonspercubicmeterLazy = this.convertFromBase(SpecificWeightUnits.MeganewtonsPerCubicMeter);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerCubicInch() {\r\n        if (this.kilopoundsforcepercubicinchLazy !== null) {\r\n            return this.kilopoundsforcepercubicinchLazy;\r\n        }\r\n        return this.kilopoundsforcepercubicinchLazy = this.convertFromBase(SpecificWeightUnits.KilopoundsForcePerCubicInch);\r\n    }\r\n    /** */\r\n    get KilopoundsForcePerCubicFoot() {\r\n        if (this.kilopoundsforcepercubicfootLazy !== null) {\r\n            return this.kilopoundsforcepercubicfootLazy;\r\n        }\r\n        return this.kilopoundsforcepercubicfootLazy = this.convertFromBase(SpecificWeightUnits.KilopoundsForcePerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a NewtonsPerCubicMillimeter\r\n     *\r\n     * @param value The unit as NewtonsPerCubicMillimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromNewtonsPerCubicMillimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.NewtonsPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a NewtonsPerCubicCentimeter\r\n     *\r\n     * @param value The unit as NewtonsPerCubicCentimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromNewtonsPerCubicCentimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.NewtonsPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a NewtonsPerCubicMeter\r\n     *\r\n     * @param value The unit as NewtonsPerCubicMeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromNewtonsPerCubicMeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.NewtonsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilogramsForcePerCubicMillimeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerCubicMillimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilogramsForcePerCubicMillimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilogramsForcePerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilogramsForcePerCubicCentimeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerCubicCentimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilogramsForcePerCubicCentimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilogramsForcePerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilogramsForcePerCubicMeter\r\n     *\r\n     * @param value The unit as KilogramsForcePerCubicMeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilogramsForcePerCubicMeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilogramsForcePerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a PoundsForcePerCubicInch\r\n     *\r\n     * @param value The unit as PoundsForcePerCubicInch to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromPoundsForcePerCubicInch(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.PoundsForcePerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a PoundsForcePerCubicFoot\r\n     *\r\n     * @param value The unit as PoundsForcePerCubicFoot to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromPoundsForcePerCubicFoot(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.PoundsForcePerCubicFoot);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a TonnesForcePerCubicMillimeter\r\n     *\r\n     * @param value The unit as TonnesForcePerCubicMillimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromTonnesForcePerCubicMillimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.TonnesForcePerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a TonnesForcePerCubicCentimeter\r\n     *\r\n     * @param value The unit as TonnesForcePerCubicCentimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromTonnesForcePerCubicCentimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.TonnesForcePerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a TonnesForcePerCubicMeter\r\n     *\r\n     * @param value The unit as TonnesForcePerCubicMeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromTonnesForcePerCubicMeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.TonnesForcePerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilonewtonsPerCubicMillimeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerCubicMillimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilonewtonsPerCubicMillimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilonewtonsPerCubicMillimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilonewtonsPerCubicCentimeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerCubicCentimeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilonewtonsPerCubicCentimeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilonewtonsPerCubicCentimeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilonewtonsPerCubicMeter\r\n     *\r\n     * @param value The unit as KilonewtonsPerCubicMeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilonewtonsPerCubicMeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilonewtonsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a MeganewtonsPerCubicMeter\r\n     *\r\n     * @param value The unit as MeganewtonsPerCubicMeter to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromMeganewtonsPerCubicMeter(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.MeganewtonsPerCubicMeter);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilopoundsForcePerCubicInch\r\n     *\r\n     * @param value The unit as KilopoundsForcePerCubicInch to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilopoundsForcePerCubicInch(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilopoundsForcePerCubicInch);\r\n    }\r\n    /**\r\n     * Create a new SpecificWeight instance from a KilopoundsForcePerCubicFoot\r\n     *\r\n     * @param value The unit as KilopoundsForcePerCubicFoot to create a new SpecificWeight from.\r\n     * @returns The new SpecificWeight instance.\r\n     */\r\n    static FromKilopoundsForcePerCubicFoot(value) {\r\n        return new SpecificWeight(value, SpecificWeightUnits.KilopoundsForcePerCubicFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SpecificWeightUnits.NewtonsPerCubicMillimeter:\r\n                return this.value * 0.000000001;\r\n            case SpecificWeightUnits.NewtonsPerCubicCentimeter:\r\n                return this.value * 0.000001;\r\n            case SpecificWeightUnits.NewtonsPerCubicMeter:\r\n                return this.value;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicMillimeter:\r\n                return this.value / 9.80665e9;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicCentimeter:\r\n                return this.value / 9.80665e6;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicMeter:\r\n                return this.value / 9.80665;\r\n            case SpecificWeightUnits.PoundsForcePerCubicInch:\r\n                return this.value / 2.714471375263134e5;\r\n            case SpecificWeightUnits.PoundsForcePerCubicFoot:\r\n                return this.value / 1.570874638462462e2;\r\n            case SpecificWeightUnits.TonnesForcePerCubicMillimeter:\r\n                return this.value / 9.80665e12;\r\n            case SpecificWeightUnits.TonnesForcePerCubicCentimeter:\r\n                return this.value / 9.80665e9;\r\n            case SpecificWeightUnits.TonnesForcePerCubicMeter:\r\n                return this.value / 9.80665e3;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicMillimeter:\r\n                return (this.value * 0.000000001) / 1000;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicCentimeter:\r\n                return (this.value * 0.000001) / 1000;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicMeter:\r\n                return (this.value) / 1000;\r\n            case SpecificWeightUnits.MeganewtonsPerCubicMeter:\r\n                return (this.value) / 1000000;\r\n            case SpecificWeightUnits.KilopoundsForcePerCubicInch:\r\n                return (this.value / 2.714471375263134e5) / 1000;\r\n            case SpecificWeightUnits.KilopoundsForcePerCubicFoot:\r\n                return (this.value / 1.570874638462462e2) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SpecificWeightUnits.NewtonsPerCubicMillimeter:\r\n                return value * 1000000000;\r\n            case SpecificWeightUnits.NewtonsPerCubicCentimeter:\r\n                return value * 1000000;\r\n            case SpecificWeightUnits.NewtonsPerCubicMeter:\r\n                return value;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicMillimeter:\r\n                return value * 9.80665e9;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicCentimeter:\r\n                return value * 9.80665e6;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicMeter:\r\n                return value * 9.80665;\r\n            case SpecificWeightUnits.PoundsForcePerCubicInch:\r\n                return value * 2.714471375263134e5;\r\n            case SpecificWeightUnits.PoundsForcePerCubicFoot:\r\n                return value * 1.570874638462462e2;\r\n            case SpecificWeightUnits.TonnesForcePerCubicMillimeter:\r\n                return value * 9.80665e12;\r\n            case SpecificWeightUnits.TonnesForcePerCubicCentimeter:\r\n                return value * 9.80665e9;\r\n            case SpecificWeightUnits.TonnesForcePerCubicMeter:\r\n                return value * 9.80665e3;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicMillimeter:\r\n                return (value * 1000000000) * 1000;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicCentimeter:\r\n                return (value * 1000000) * 1000;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicMeter:\r\n                return (value) * 1000;\r\n            case SpecificWeightUnits.MeganewtonsPerCubicMeter:\r\n                return (value) * 1000000;\r\n            case SpecificWeightUnits.KilopoundsForcePerCubicInch:\r\n                return (value * 2.714471375263134e5) * 1000;\r\n            case SpecificWeightUnits.KilopoundsForcePerCubicFoot:\r\n                return (value * 1.570874638462462e2) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the SpecificWeight to string.\r\n     * Note! the default format for SpecificWeight is NewtonsPerCubicMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the SpecificWeight.\r\n     * @returns The string format of the SpecificWeight.\r\n     */\r\n    toString(toUnit = SpecificWeightUnits.NewtonsPerCubicMeter) {\r\n        switch (toUnit) {\r\n            case SpecificWeightUnits.NewtonsPerCubicMillimeter:\r\n                return this.NewtonsPerCubicMillimeter + ` N/mm³`;\r\n            case SpecificWeightUnits.NewtonsPerCubicCentimeter:\r\n                return this.NewtonsPerCubicCentimeter + ` N/cm³`;\r\n            case SpecificWeightUnits.NewtonsPerCubicMeter:\r\n                return this.NewtonsPerCubicMeter + ` N/m³`;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicMillimeter:\r\n                return this.KilogramsForcePerCubicMillimeter + ` kgf/mm³`;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicCentimeter:\r\n                return this.KilogramsForcePerCubicCentimeter + ` kgf/cm³`;\r\n            case SpecificWeightUnits.KilogramsForcePerCubicMeter:\r\n                return this.KilogramsForcePerCubicMeter + ` kgf/m³`;\r\n            case SpecificWeightUnits.PoundsForcePerCubicInch:\r\n                return this.PoundsForcePerCubicInch + ` lbf/in³`;\r\n            case SpecificWeightUnits.PoundsForcePerCubicFoot:\r\n                return this.PoundsForcePerCubicFoot + ` lbf/ft³`;\r\n            case SpecificWeightUnits.TonnesForcePerCubicMillimeter:\r\n                return this.TonnesForcePerCubicMillimeter + ` tf/mm³`;\r\n            case SpecificWeightUnits.TonnesForcePerCubicCentimeter:\r\n                return this.TonnesForcePerCubicCentimeter + ` tf/cm³`;\r\n            case SpecificWeightUnits.TonnesForcePerCubicMeter:\r\n                return this.TonnesForcePerCubicMeter + ` tf/m³`;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicMillimeter:\r\n                return this.KilonewtonsPerCubicMillimeter + ` `;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicCentimeter:\r\n                return this.KilonewtonsPerCubicCentimeter + ` `;\r\n            case SpecificWeightUnits.KilonewtonsPerCubicMeter:\r\n                return this.KilonewtonsPerCubicMeter + ` `;\r\n            case SpecificWeightUnits.MeganewtonsPerCubicMeter:\r\n                return this.MeganewtonsPerCubicMeter + ` `;\r\n            case SpecificWeightUnits.KilopoundsForcePerCubicInch:\r\n                return this.KilopoundsForcePerCubicInch + ` `;\r\n            case SpecificWeightUnits.KilopoundsForcePerCubicFoot:\r\n                return this.KilopoundsForcePerCubicFoot + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given SpecificWeight are equals to the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns True if the given SpecificWeight are equal to the current SpecificWeight.\r\n     */\r\n    equals(specificWeight) {\r\n        return this.value === specificWeight.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given SpecificWeight against the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns 0 if they are equal, -1 if the current SpecificWeight is less then other, 1 if the current SpecificWeight is greater then other.\r\n     */\r\n    compareTo(specificWeight) {\r\n        if (this.value > specificWeight.BaseValue)\r\n            return 1;\r\n        if (this.value < specificWeight.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given SpecificWeight with the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns A new SpecificWeight instance with the results.\r\n     */\r\n    add(specificWeight) {\r\n        return new SpecificWeight(this.value + specificWeight.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given SpecificWeight with the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns A new SpecificWeight instance with the results.\r\n     */\r\n    subtract(specificWeight) {\r\n        return new SpecificWeight(this.value - specificWeight.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given SpecificWeight with the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns A new SpecificWeight instance with the results.\r\n     */\r\n    multiply(specificWeight) {\r\n        return new SpecificWeight(this.value * specificWeight.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given SpecificWeight with the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns A new SpecificWeight instance with the results.\r\n     */\r\n    divide(specificWeight) {\r\n        return new SpecificWeight(this.value / specificWeight.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given SpecificWeight with the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns A new SpecificWeight instance with the results.\r\n     */\r\n    modulo(specificWeight) {\r\n        return new SpecificWeight(this.value % specificWeight.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given SpecificWeight with the current SpecificWeight.\r\n     * @param specificWeight The other SpecificWeight.\r\n     * @returns A new SpecificWeight instance with the results.\r\n     */\r\n    pow(specificWeight) {\r\n        return new SpecificWeight(this.value ** specificWeight.BaseValue);\r\n    }\r\n}\r\nexports.SpecificWeight = SpecificWeight;\r\n//# sourceMappingURL=specificweight.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Speed = exports.SpeedUnits = void 0;\r\n/** SpeedUnits enumeration */\r\nvar SpeedUnits;\r\n(function (SpeedUnits) {\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MetersPerSecond\"] = 0] = \"MetersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MetersPerMinutes\"] = 1] = \"MetersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MetersPerHour\"] = 2] = \"MetersPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"FeetPerSecond\"] = 3] = \"FeetPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"FeetPerMinute\"] = 4] = \"FeetPerMinute\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"FeetPerHour\"] = 5] = \"FeetPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"UsSurveyFeetPerSecond\"] = 6] = \"UsSurveyFeetPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"UsSurveyFeetPerMinute\"] = 7] = \"UsSurveyFeetPerMinute\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"UsSurveyFeetPerHour\"] = 8] = \"UsSurveyFeetPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"InchesPerSecond\"] = 9] = \"InchesPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"InchesPerMinute\"] = 10] = \"InchesPerMinute\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"InchesPerHour\"] = 11] = \"InchesPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"YardsPerSecond\"] = 12] = \"YardsPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"YardsPerMinute\"] = 13] = \"YardsPerMinute\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"YardsPerHour\"] = 14] = \"YardsPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"Knots\"] = 15] = \"Knots\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MilesPerHour\"] = 16] = \"MilesPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"NanometersPerSecond\"] = 17] = \"NanometersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MicrometersPerSecond\"] = 18] = \"MicrometersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MillimetersPerSecond\"] = 19] = \"MillimetersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"CentimetersPerSecond\"] = 20] = \"CentimetersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"DecimetersPerSecond\"] = 21] = \"DecimetersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"KilometersPerSecond\"] = 22] = \"KilometersPerSecond\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"NanometersPerMinutes\"] = 23] = \"NanometersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MicrometersPerMinutes\"] = 24] = \"MicrometersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MillimetersPerMinutes\"] = 25] = \"MillimetersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"CentimetersPerMinutes\"] = 26] = \"CentimetersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"DecimetersPerMinutes\"] = 27] = \"DecimetersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"KilometersPerMinutes\"] = 28] = \"KilometersPerMinutes\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"MillimetersPerHour\"] = 29] = \"MillimetersPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"CentimetersPerHour\"] = 30] = \"CentimetersPerHour\";\r\n    /** */\r\n    SpeedUnits[SpeedUnits[\"KilometersPerHour\"] = 31] = \"KilometersPerHour\";\r\n})(SpeedUnits = exports.SpeedUnits || (exports.SpeedUnits = {}));\r\n/** In everyday use and in kinematics, the speed of an object is the magnitude of its velocity (the rate of change of its position); it is thus a scalar quantity.[1] The average speed of an object in an interval of time is the distance travelled by the object divided by the duration of the interval;[2] the instantaneous speed is the limit of the average speed as the duration of the time interval approaches zero. */\r\nclass Speed {\r\n    /**\r\n     * Create a new Speed.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Speed’ unit to create from.\r\n     * The default unit is MetersPerSecond\r\n     */\r\n    constructor(value, fromUnit = SpeedUnits.MetersPerSecond) {\r\n        this.meterspersecondLazy = null;\r\n        this.metersperminutesLazy = null;\r\n        this.metersperhourLazy = null;\r\n        this.feetpersecondLazy = null;\r\n        this.feetperminuteLazy = null;\r\n        this.feetperhourLazy = null;\r\n        this.ussurveyfeetpersecondLazy = null;\r\n        this.ussurveyfeetperminuteLazy = null;\r\n        this.ussurveyfeetperhourLazy = null;\r\n        this.inchespersecondLazy = null;\r\n        this.inchesperminuteLazy = null;\r\n        this.inchesperhourLazy = null;\r\n        this.yardspersecondLazy = null;\r\n        this.yardsperminuteLazy = null;\r\n        this.yardsperhourLazy = null;\r\n        this.knotsLazy = null;\r\n        this.milesperhourLazy = null;\r\n        this.nanometerspersecondLazy = null;\r\n        this.micrometerspersecondLazy = null;\r\n        this.millimeterspersecondLazy = null;\r\n        this.centimeterspersecondLazy = null;\r\n        this.decimeterspersecondLazy = null;\r\n        this.kilometerspersecondLazy = null;\r\n        this.nanometersperminutesLazy = null;\r\n        this.micrometersperminutesLazy = null;\r\n        this.millimetersperminutesLazy = null;\r\n        this.centimetersperminutesLazy = null;\r\n        this.decimetersperminutesLazy = null;\r\n        this.kilometersperminutesLazy = null;\r\n        this.millimetersperhourLazy = null;\r\n        this.centimetersperhourLazy = null;\r\n        this.kilometersperhourLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Speed is MetersPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get MetersPerSecond() {\r\n        if (this.meterspersecondLazy !== null) {\r\n            return this.meterspersecondLazy;\r\n        }\r\n        return this.meterspersecondLazy = this.convertFromBase(SpeedUnits.MetersPerSecond);\r\n    }\r\n    /** */\r\n    get MetersPerMinutes() {\r\n        if (this.metersperminutesLazy !== null) {\r\n            return this.metersperminutesLazy;\r\n        }\r\n        return this.metersperminutesLazy = this.convertFromBase(SpeedUnits.MetersPerMinutes);\r\n    }\r\n    /** */\r\n    get MetersPerHour() {\r\n        if (this.metersperhourLazy !== null) {\r\n            return this.metersperhourLazy;\r\n        }\r\n        return this.metersperhourLazy = this.convertFromBase(SpeedUnits.MetersPerHour);\r\n    }\r\n    /** */\r\n    get FeetPerSecond() {\r\n        if (this.feetpersecondLazy !== null) {\r\n            return this.feetpersecondLazy;\r\n        }\r\n        return this.feetpersecondLazy = this.convertFromBase(SpeedUnits.FeetPerSecond);\r\n    }\r\n    /** */\r\n    get FeetPerMinute() {\r\n        if (this.feetperminuteLazy !== null) {\r\n            return this.feetperminuteLazy;\r\n        }\r\n        return this.feetperminuteLazy = this.convertFromBase(SpeedUnits.FeetPerMinute);\r\n    }\r\n    /** */\r\n    get FeetPerHour() {\r\n        if (this.feetperhourLazy !== null) {\r\n            return this.feetperhourLazy;\r\n        }\r\n        return this.feetperhourLazy = this.convertFromBase(SpeedUnits.FeetPerHour);\r\n    }\r\n    /** */\r\n    get UsSurveyFeetPerSecond() {\r\n        if (this.ussurveyfeetpersecondLazy !== null) {\r\n            return this.ussurveyfeetpersecondLazy;\r\n        }\r\n        return this.ussurveyfeetpersecondLazy = this.convertFromBase(SpeedUnits.UsSurveyFeetPerSecond);\r\n    }\r\n    /** */\r\n    get UsSurveyFeetPerMinute() {\r\n        if (this.ussurveyfeetperminuteLazy !== null) {\r\n            return this.ussurveyfeetperminuteLazy;\r\n        }\r\n        return this.ussurveyfeetperminuteLazy = this.convertFromBase(SpeedUnits.UsSurveyFeetPerMinute);\r\n    }\r\n    /** */\r\n    get UsSurveyFeetPerHour() {\r\n        if (this.ussurveyfeetperhourLazy !== null) {\r\n            return this.ussurveyfeetperhourLazy;\r\n        }\r\n        return this.ussurveyfeetperhourLazy = this.convertFromBase(SpeedUnits.UsSurveyFeetPerHour);\r\n    }\r\n    /** */\r\n    get InchesPerSecond() {\r\n        if (this.inchespersecondLazy !== null) {\r\n            return this.inchespersecondLazy;\r\n        }\r\n        return this.inchespersecondLazy = this.convertFromBase(SpeedUnits.InchesPerSecond);\r\n    }\r\n    /** */\r\n    get InchesPerMinute() {\r\n        if (this.inchesperminuteLazy !== null) {\r\n            return this.inchesperminuteLazy;\r\n        }\r\n        return this.inchesperminuteLazy = this.convertFromBase(SpeedUnits.InchesPerMinute);\r\n    }\r\n    /** */\r\n    get InchesPerHour() {\r\n        if (this.inchesperhourLazy !== null) {\r\n            return this.inchesperhourLazy;\r\n        }\r\n        return this.inchesperhourLazy = this.convertFromBase(SpeedUnits.InchesPerHour);\r\n    }\r\n    /** */\r\n    get YardsPerSecond() {\r\n        if (this.yardspersecondLazy !== null) {\r\n            return this.yardspersecondLazy;\r\n        }\r\n        return this.yardspersecondLazy = this.convertFromBase(SpeedUnits.YardsPerSecond);\r\n    }\r\n    /** */\r\n    get YardsPerMinute() {\r\n        if (this.yardsperminuteLazy !== null) {\r\n            return this.yardsperminuteLazy;\r\n        }\r\n        return this.yardsperminuteLazy = this.convertFromBase(SpeedUnits.YardsPerMinute);\r\n    }\r\n    /** */\r\n    get YardsPerHour() {\r\n        if (this.yardsperhourLazy !== null) {\r\n            return this.yardsperhourLazy;\r\n        }\r\n        return this.yardsperhourLazy = this.convertFromBase(SpeedUnits.YardsPerHour);\r\n    }\r\n    /** */\r\n    get Knots() {\r\n        if (this.knotsLazy !== null) {\r\n            return this.knotsLazy;\r\n        }\r\n        return this.knotsLazy = this.convertFromBase(SpeedUnits.Knots);\r\n    }\r\n    /** */\r\n    get MilesPerHour() {\r\n        if (this.milesperhourLazy !== null) {\r\n            return this.milesperhourLazy;\r\n        }\r\n        return this.milesperhourLazy = this.convertFromBase(SpeedUnits.MilesPerHour);\r\n    }\r\n    /** */\r\n    get NanometersPerSecond() {\r\n        if (this.nanometerspersecondLazy !== null) {\r\n            return this.nanometerspersecondLazy;\r\n        }\r\n        return this.nanometerspersecondLazy = this.convertFromBase(SpeedUnits.NanometersPerSecond);\r\n    }\r\n    /** */\r\n    get MicrometersPerSecond() {\r\n        if (this.micrometerspersecondLazy !== null) {\r\n            return this.micrometerspersecondLazy;\r\n        }\r\n        return this.micrometerspersecondLazy = this.convertFromBase(SpeedUnits.MicrometersPerSecond);\r\n    }\r\n    /** */\r\n    get MillimetersPerSecond() {\r\n        if (this.millimeterspersecondLazy !== null) {\r\n            return this.millimeterspersecondLazy;\r\n        }\r\n        return this.millimeterspersecondLazy = this.convertFromBase(SpeedUnits.MillimetersPerSecond);\r\n    }\r\n    /** */\r\n    get CentimetersPerSecond() {\r\n        if (this.centimeterspersecondLazy !== null) {\r\n            return this.centimeterspersecondLazy;\r\n        }\r\n        return this.centimeterspersecondLazy = this.convertFromBase(SpeedUnits.CentimetersPerSecond);\r\n    }\r\n    /** */\r\n    get DecimetersPerSecond() {\r\n        if (this.decimeterspersecondLazy !== null) {\r\n            return this.decimeterspersecondLazy;\r\n        }\r\n        return this.decimeterspersecondLazy = this.convertFromBase(SpeedUnits.DecimetersPerSecond);\r\n    }\r\n    /** */\r\n    get KilometersPerSecond() {\r\n        if (this.kilometerspersecondLazy !== null) {\r\n            return this.kilometerspersecondLazy;\r\n        }\r\n        return this.kilometerspersecondLazy = this.convertFromBase(SpeedUnits.KilometersPerSecond);\r\n    }\r\n    /** */\r\n    get NanometersPerMinutes() {\r\n        if (this.nanometersperminutesLazy !== null) {\r\n            return this.nanometersperminutesLazy;\r\n        }\r\n        return this.nanometersperminutesLazy = this.convertFromBase(SpeedUnits.NanometersPerMinutes);\r\n    }\r\n    /** */\r\n    get MicrometersPerMinutes() {\r\n        if (this.micrometersperminutesLazy !== null) {\r\n            return this.micrometersperminutesLazy;\r\n        }\r\n        return this.micrometersperminutesLazy = this.convertFromBase(SpeedUnits.MicrometersPerMinutes);\r\n    }\r\n    /** */\r\n    get MillimetersPerMinutes() {\r\n        if (this.millimetersperminutesLazy !== null) {\r\n            return this.millimetersperminutesLazy;\r\n        }\r\n        return this.millimetersperminutesLazy = this.convertFromBase(SpeedUnits.MillimetersPerMinutes);\r\n    }\r\n    /** */\r\n    get CentimetersPerMinutes() {\r\n        if (this.centimetersperminutesLazy !== null) {\r\n            return this.centimetersperminutesLazy;\r\n        }\r\n        return this.centimetersperminutesLazy = this.convertFromBase(SpeedUnits.CentimetersPerMinutes);\r\n    }\r\n    /** */\r\n    get DecimetersPerMinutes() {\r\n        if (this.decimetersperminutesLazy !== null) {\r\n            return this.decimetersperminutesLazy;\r\n        }\r\n        return this.decimetersperminutesLazy = this.convertFromBase(SpeedUnits.DecimetersPerMinutes);\r\n    }\r\n    /** */\r\n    get KilometersPerMinutes() {\r\n        if (this.kilometersperminutesLazy !== null) {\r\n            return this.kilometersperminutesLazy;\r\n        }\r\n        return this.kilometersperminutesLazy = this.convertFromBase(SpeedUnits.KilometersPerMinutes);\r\n    }\r\n    /** */\r\n    get MillimetersPerHour() {\r\n        if (this.millimetersperhourLazy !== null) {\r\n            return this.millimetersperhourLazy;\r\n        }\r\n        return this.millimetersperhourLazy = this.convertFromBase(SpeedUnits.MillimetersPerHour);\r\n    }\r\n    /** */\r\n    get CentimetersPerHour() {\r\n        if (this.centimetersperhourLazy !== null) {\r\n            return this.centimetersperhourLazy;\r\n        }\r\n        return this.centimetersperhourLazy = this.convertFromBase(SpeedUnits.CentimetersPerHour);\r\n    }\r\n    /** */\r\n    get KilometersPerHour() {\r\n        if (this.kilometersperhourLazy !== null) {\r\n            return this.kilometersperhourLazy;\r\n        }\r\n        return this.kilometersperhourLazy = this.convertFromBase(SpeedUnits.KilometersPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MetersPerSecond\r\n     *\r\n     * @param value The unit as MetersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMetersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.MetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MetersPerMinutes\r\n     *\r\n     * @param value The unit as MetersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMetersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.MetersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MetersPerHour\r\n     *\r\n     * @param value The unit as MetersPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMetersPerHour(value) {\r\n        return new Speed(value, SpeedUnits.MetersPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a FeetPerSecond\r\n     *\r\n     * @param value The unit as FeetPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromFeetPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.FeetPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a FeetPerMinute\r\n     *\r\n     * @param value The unit as FeetPerMinute to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromFeetPerMinute(value) {\r\n        return new Speed(value, SpeedUnits.FeetPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a FeetPerHour\r\n     *\r\n     * @param value The unit as FeetPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromFeetPerHour(value) {\r\n        return new Speed(value, SpeedUnits.FeetPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a UsSurveyFeetPerSecond\r\n     *\r\n     * @param value The unit as UsSurveyFeetPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromUsSurveyFeetPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.UsSurveyFeetPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a UsSurveyFeetPerMinute\r\n     *\r\n     * @param value The unit as UsSurveyFeetPerMinute to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromUsSurveyFeetPerMinute(value) {\r\n        return new Speed(value, SpeedUnits.UsSurveyFeetPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a UsSurveyFeetPerHour\r\n     *\r\n     * @param value The unit as UsSurveyFeetPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromUsSurveyFeetPerHour(value) {\r\n        return new Speed(value, SpeedUnits.UsSurveyFeetPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a InchesPerSecond\r\n     *\r\n     * @param value The unit as InchesPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromInchesPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.InchesPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a InchesPerMinute\r\n     *\r\n     * @param value The unit as InchesPerMinute to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromInchesPerMinute(value) {\r\n        return new Speed(value, SpeedUnits.InchesPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a InchesPerHour\r\n     *\r\n     * @param value The unit as InchesPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromInchesPerHour(value) {\r\n        return new Speed(value, SpeedUnits.InchesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a YardsPerSecond\r\n     *\r\n     * @param value The unit as YardsPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromYardsPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.YardsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a YardsPerMinute\r\n     *\r\n     * @param value The unit as YardsPerMinute to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromYardsPerMinute(value) {\r\n        return new Speed(value, SpeedUnits.YardsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a YardsPerHour\r\n     *\r\n     * @param value The unit as YardsPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromYardsPerHour(value) {\r\n        return new Speed(value, SpeedUnits.YardsPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a Knots\r\n     *\r\n     * @param value The unit as Knots to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromKnots(value) {\r\n        return new Speed(value, SpeedUnits.Knots);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MilesPerHour\r\n     *\r\n     * @param value The unit as MilesPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMilesPerHour(value) {\r\n        return new Speed(value, SpeedUnits.MilesPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a NanometersPerSecond\r\n     *\r\n     * @param value The unit as NanometersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromNanometersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.NanometersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MicrometersPerSecond\r\n     *\r\n     * @param value The unit as MicrometersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMicrometersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.MicrometersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MillimetersPerSecond\r\n     *\r\n     * @param value The unit as MillimetersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMillimetersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.MillimetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a CentimetersPerSecond\r\n     *\r\n     * @param value The unit as CentimetersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromCentimetersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.CentimetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a DecimetersPerSecond\r\n     *\r\n     * @param value The unit as DecimetersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromDecimetersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.DecimetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a KilometersPerSecond\r\n     *\r\n     * @param value The unit as KilometersPerSecond to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromKilometersPerSecond(value) {\r\n        return new Speed(value, SpeedUnits.KilometersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a NanometersPerMinutes\r\n     *\r\n     * @param value The unit as NanometersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromNanometersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.NanometersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MicrometersPerMinutes\r\n     *\r\n     * @param value The unit as MicrometersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMicrometersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.MicrometersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MillimetersPerMinutes\r\n     *\r\n     * @param value The unit as MillimetersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMillimetersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.MillimetersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a CentimetersPerMinutes\r\n     *\r\n     * @param value The unit as CentimetersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromCentimetersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.CentimetersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a DecimetersPerMinutes\r\n     *\r\n     * @param value The unit as DecimetersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromDecimetersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.DecimetersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a KilometersPerMinutes\r\n     *\r\n     * @param value The unit as KilometersPerMinutes to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromKilometersPerMinutes(value) {\r\n        return new Speed(value, SpeedUnits.KilometersPerMinutes);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a MillimetersPerHour\r\n     *\r\n     * @param value The unit as MillimetersPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromMillimetersPerHour(value) {\r\n        return new Speed(value, SpeedUnits.MillimetersPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a CentimetersPerHour\r\n     *\r\n     * @param value The unit as CentimetersPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromCentimetersPerHour(value) {\r\n        return new Speed(value, SpeedUnits.CentimetersPerHour);\r\n    }\r\n    /**\r\n     * Create a new Speed instance from a KilometersPerHour\r\n     *\r\n     * @param value The unit as KilometersPerHour to create a new Speed from.\r\n     * @returns The new Speed instance.\r\n     */\r\n    static FromKilometersPerHour(value) {\r\n        return new Speed(value, SpeedUnits.KilometersPerHour);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case SpeedUnits.MetersPerSecond:\r\n                return this.value;\r\n            case SpeedUnits.MetersPerMinutes:\r\n                return this.value * 60;\r\n            case SpeedUnits.MetersPerHour:\r\n                return this.value * 3600;\r\n            case SpeedUnits.FeetPerSecond:\r\n                return this.value / 0.3048;\r\n            case SpeedUnits.FeetPerMinute:\r\n                return this.value / 0.3048 * 60;\r\n            case SpeedUnits.FeetPerHour:\r\n                return this.value / 0.3048 * 3600;\r\n            case SpeedUnits.UsSurveyFeetPerSecond:\r\n                return this.value * 3937 / 1200;\r\n            case SpeedUnits.UsSurveyFeetPerMinute:\r\n                return (this.value * 3937 / 1200) * 60;\r\n            case SpeedUnits.UsSurveyFeetPerHour:\r\n                return (this.value * 3937 / 1200) * 3600;\r\n            case SpeedUnits.InchesPerSecond:\r\n                return this.value / 2.54e-2;\r\n            case SpeedUnits.InchesPerMinute:\r\n                return (this.value / 2.54e-2) * 60;\r\n            case SpeedUnits.InchesPerHour:\r\n                return (this.value / 2.54e-2) * 3600;\r\n            case SpeedUnits.YardsPerSecond:\r\n                return this.value / 0.9144;\r\n            case SpeedUnits.YardsPerMinute:\r\n                return this.value / 0.9144 * 60;\r\n            case SpeedUnits.YardsPerHour:\r\n                return this.value / 0.9144 * 3600;\r\n            case SpeedUnits.Knots:\r\n                return this.value / 0.514444;\r\n            case SpeedUnits.MilesPerHour:\r\n                return this.value / 0.44704;\r\n            case SpeedUnits.NanometersPerSecond:\r\n                return (this.value) / 1e-9;\r\n            case SpeedUnits.MicrometersPerSecond:\r\n                return (this.value) / 0.000001;\r\n            case SpeedUnits.MillimetersPerSecond:\r\n                return (this.value) / 0.001;\r\n            case SpeedUnits.CentimetersPerSecond:\r\n                return (this.value) / 0.01;\r\n            case SpeedUnits.DecimetersPerSecond:\r\n                return (this.value) / 0.1;\r\n            case SpeedUnits.KilometersPerSecond:\r\n                return (this.value) / 1000;\r\n            case SpeedUnits.NanometersPerMinutes:\r\n                return (this.value * 60) / 1e-9;\r\n            case SpeedUnits.MicrometersPerMinutes:\r\n                return (this.value * 60) / 0.000001;\r\n            case SpeedUnits.MillimetersPerMinutes:\r\n                return (this.value * 60) / 0.001;\r\n            case SpeedUnits.CentimetersPerMinutes:\r\n                return (this.value * 60) / 0.01;\r\n            case SpeedUnits.DecimetersPerMinutes:\r\n                return (this.value * 60) / 0.1;\r\n            case SpeedUnits.KilometersPerMinutes:\r\n                return (this.value * 60) / 1000;\r\n            case SpeedUnits.MillimetersPerHour:\r\n                return (this.value * 3600) / 0.001;\r\n            case SpeedUnits.CentimetersPerHour:\r\n                return (this.value * 3600) / 0.01;\r\n            case SpeedUnits.KilometersPerHour:\r\n                return (this.value * 3600) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case SpeedUnits.MetersPerSecond:\r\n                return value;\r\n            case SpeedUnits.MetersPerMinutes:\r\n                return value / 60;\r\n            case SpeedUnits.MetersPerHour:\r\n                return value / 3600;\r\n            case SpeedUnits.FeetPerSecond:\r\n                return value * 0.3048;\r\n            case SpeedUnits.FeetPerMinute:\r\n                return value * 0.3048 / 60;\r\n            case SpeedUnits.FeetPerHour:\r\n                return value * 0.3048 / 3600;\r\n            case SpeedUnits.UsSurveyFeetPerSecond:\r\n                return value * 1200 / 3937;\r\n            case SpeedUnits.UsSurveyFeetPerMinute:\r\n                return (value * 1200 / 3937) / 60;\r\n            case SpeedUnits.UsSurveyFeetPerHour:\r\n                return (value * 1200 / 3937) / 3600;\r\n            case SpeedUnits.InchesPerSecond:\r\n                return value * 2.54e-2;\r\n            case SpeedUnits.InchesPerMinute:\r\n                return (value / 60) * 2.54e-2;\r\n            case SpeedUnits.InchesPerHour:\r\n                return (value / 3600) * 2.54e-2;\r\n            case SpeedUnits.YardsPerSecond:\r\n                return value * 0.9144;\r\n            case SpeedUnits.YardsPerMinute:\r\n                return value * 0.9144 / 60;\r\n            case SpeedUnits.YardsPerHour:\r\n                return value * 0.9144 / 3600;\r\n            case SpeedUnits.Knots:\r\n                return value * 0.514444;\r\n            case SpeedUnits.MilesPerHour:\r\n                return value * 0.44704;\r\n            case SpeedUnits.NanometersPerSecond:\r\n                return (value) * 1e-9;\r\n            case SpeedUnits.MicrometersPerSecond:\r\n                return (value) * 0.000001;\r\n            case SpeedUnits.MillimetersPerSecond:\r\n                return (value) * 0.001;\r\n            case SpeedUnits.CentimetersPerSecond:\r\n                return (value) * 0.01;\r\n            case SpeedUnits.DecimetersPerSecond:\r\n                return (value) * 0.1;\r\n            case SpeedUnits.KilometersPerSecond:\r\n                return (value) * 1000;\r\n            case SpeedUnits.NanometersPerMinutes:\r\n                return (value / 60) * 1e-9;\r\n            case SpeedUnits.MicrometersPerMinutes:\r\n                return (value / 60) * 0.000001;\r\n            case SpeedUnits.MillimetersPerMinutes:\r\n                return (value / 60) * 0.001;\r\n            case SpeedUnits.CentimetersPerMinutes:\r\n                return (value / 60) * 0.01;\r\n            case SpeedUnits.DecimetersPerMinutes:\r\n                return (value / 60) * 0.1;\r\n            case SpeedUnits.KilometersPerMinutes:\r\n                return (value / 60) * 1000;\r\n            case SpeedUnits.MillimetersPerHour:\r\n                return (value / 3600) * 0.001;\r\n            case SpeedUnits.CentimetersPerHour:\r\n                return (value / 3600) * 0.01;\r\n            case SpeedUnits.KilometersPerHour:\r\n                return (value / 3600) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Speed to string.\r\n     * Note! the default format for Speed is MetersPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Speed.\r\n     * @returns The string format of the Speed.\r\n     */\r\n    toString(toUnit = SpeedUnits.MetersPerSecond) {\r\n        switch (toUnit) {\r\n            case SpeedUnits.MetersPerSecond:\r\n                return this.MetersPerSecond + ` m/s`;\r\n            case SpeedUnits.MetersPerMinutes:\r\n                return this.MetersPerMinutes + ` m/min`;\r\n            case SpeedUnits.MetersPerHour:\r\n                return this.MetersPerHour + ` m/h`;\r\n            case SpeedUnits.FeetPerSecond:\r\n                return this.FeetPerSecond + ` ft/s`;\r\n            case SpeedUnits.FeetPerMinute:\r\n                return this.FeetPerMinute + ` ft/min`;\r\n            case SpeedUnits.FeetPerHour:\r\n                return this.FeetPerHour + ` ft/h`;\r\n            case SpeedUnits.UsSurveyFeetPerSecond:\r\n                return this.UsSurveyFeetPerSecond + ` ftUS/s`;\r\n            case SpeedUnits.UsSurveyFeetPerMinute:\r\n                return this.UsSurveyFeetPerMinute + ` ftUS/min`;\r\n            case SpeedUnits.UsSurveyFeetPerHour:\r\n                return this.UsSurveyFeetPerHour + ` ftUS/h`;\r\n            case SpeedUnits.InchesPerSecond:\r\n                return this.InchesPerSecond + ` in/s`;\r\n            case SpeedUnits.InchesPerMinute:\r\n                return this.InchesPerMinute + ` in/min`;\r\n            case SpeedUnits.InchesPerHour:\r\n                return this.InchesPerHour + ` in/h`;\r\n            case SpeedUnits.YardsPerSecond:\r\n                return this.YardsPerSecond + ` yd/s`;\r\n            case SpeedUnits.YardsPerMinute:\r\n                return this.YardsPerMinute + ` yd/min`;\r\n            case SpeedUnits.YardsPerHour:\r\n                return this.YardsPerHour + ` yd/h`;\r\n            case SpeedUnits.Knots:\r\n                return this.Knots + ` kn`;\r\n            case SpeedUnits.MilesPerHour:\r\n                return this.MilesPerHour + ` mph`;\r\n            case SpeedUnits.NanometersPerSecond:\r\n                return this.NanometersPerSecond + ` `;\r\n            case SpeedUnits.MicrometersPerSecond:\r\n                return this.MicrometersPerSecond + ` `;\r\n            case SpeedUnits.MillimetersPerSecond:\r\n                return this.MillimetersPerSecond + ` `;\r\n            case SpeedUnits.CentimetersPerSecond:\r\n                return this.CentimetersPerSecond + ` `;\r\n            case SpeedUnits.DecimetersPerSecond:\r\n                return this.DecimetersPerSecond + ` `;\r\n            case SpeedUnits.KilometersPerSecond:\r\n                return this.KilometersPerSecond + ` `;\r\n            case SpeedUnits.NanometersPerMinutes:\r\n                return this.NanometersPerMinutes + ` `;\r\n            case SpeedUnits.MicrometersPerMinutes:\r\n                return this.MicrometersPerMinutes + ` `;\r\n            case SpeedUnits.MillimetersPerMinutes:\r\n                return this.MillimetersPerMinutes + ` `;\r\n            case SpeedUnits.CentimetersPerMinutes:\r\n                return this.CentimetersPerMinutes + ` `;\r\n            case SpeedUnits.DecimetersPerMinutes:\r\n                return this.DecimetersPerMinutes + ` `;\r\n            case SpeedUnits.KilometersPerMinutes:\r\n                return this.KilometersPerMinutes + ` `;\r\n            case SpeedUnits.MillimetersPerHour:\r\n                return this.MillimetersPerHour + ` `;\r\n            case SpeedUnits.CentimetersPerHour:\r\n                return this.CentimetersPerHour + ` `;\r\n            case SpeedUnits.KilometersPerHour:\r\n                return this.KilometersPerHour + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Speed are equals to the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns True if the given Speed are equal to the current Speed.\r\n     */\r\n    equals(speed) {\r\n        return this.value === speed.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Speed against the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns 0 if they are equal, -1 if the current Speed is less then other, 1 if the current Speed is greater then other.\r\n     */\r\n    compareTo(speed) {\r\n        if (this.value > speed.BaseValue)\r\n            return 1;\r\n        if (this.value < speed.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Speed with the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns A new Speed instance with the results.\r\n     */\r\n    add(speed) {\r\n        return new Speed(this.value + speed.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Speed with the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns A new Speed instance with the results.\r\n     */\r\n    subtract(speed) {\r\n        return new Speed(this.value - speed.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Speed with the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns A new Speed instance with the results.\r\n     */\r\n    multiply(speed) {\r\n        return new Speed(this.value * speed.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Speed with the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns A new Speed instance with the results.\r\n     */\r\n    divide(speed) {\r\n        return new Speed(this.value / speed.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Speed with the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns A new Speed instance with the results.\r\n     */\r\n    modulo(speed) {\r\n        return new Speed(this.value % speed.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Speed with the current Speed.\r\n     * @param speed The other Speed.\r\n     * @returns A new Speed instance with the results.\r\n     */\r\n    pow(speed) {\r\n        return new Speed(this.value ** speed.BaseValue);\r\n    }\r\n}\r\nexports.Speed = Speed;\r\n//# sourceMappingURL=speed.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StandardVolumeFlow = exports.StandardVolumeFlowUnits = void 0;\r\n/** StandardVolumeFlowUnits enumeration */\r\nvar StandardVolumeFlowUnits;\r\n(function (StandardVolumeFlowUnits) {\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicMetersPerSecond\"] = 0] = \"StandardCubicMetersPerSecond\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicMetersPerMinute\"] = 1] = \"StandardCubicMetersPerMinute\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicMetersPerHour\"] = 2] = \"StandardCubicMetersPerHour\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicMetersPerDay\"] = 3] = \"StandardCubicMetersPerDay\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicCentimetersPerMinute\"] = 4] = \"StandardCubicCentimetersPerMinute\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardLitersPerMinute\"] = 5] = \"StandardLitersPerMinute\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicFeetPerSecond\"] = 6] = \"StandardCubicFeetPerSecond\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicFeetPerMinute\"] = 7] = \"StandardCubicFeetPerMinute\";\r\n    /** */\r\n    StandardVolumeFlowUnits[StandardVolumeFlowUnits[\"StandardCubicFeetPerHour\"] = 8] = \"StandardCubicFeetPerHour\";\r\n})(StandardVolumeFlowUnits = exports.StandardVolumeFlowUnits || (exports.StandardVolumeFlowUnits = {}));\r\n/** The molar flow rate of a gas corrected to standardized conditions of temperature and pressure thus representing a fixed number of moles of gas regardless of composition and actual flow conditions. */\r\nclass StandardVolumeFlow {\r\n    /**\r\n     * Create a new StandardVolumeFlow.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘StandardVolumeFlow’ unit to create from.\r\n     * The default unit is StandardCubicMetersPerSecond\r\n     */\r\n    constructor(value, fromUnit = StandardVolumeFlowUnits.StandardCubicMetersPerSecond) {\r\n        this.standardcubicmeterspersecondLazy = null;\r\n        this.standardcubicmetersperminuteLazy = null;\r\n        this.standardcubicmetersperhourLazy = null;\r\n        this.standardcubicmetersperdayLazy = null;\r\n        this.standardcubiccentimetersperminuteLazy = null;\r\n        this.standardlitersperminuteLazy = null;\r\n        this.standardcubicfeetpersecondLazy = null;\r\n        this.standardcubicfeetperminuteLazy = null;\r\n        this.standardcubicfeetperhourLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of StandardVolumeFlow is StandardCubicMetersPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get StandardCubicMetersPerSecond() {\r\n        if (this.standardcubicmeterspersecondLazy !== null) {\r\n            return this.standardcubicmeterspersecondLazy;\r\n        }\r\n        return this.standardcubicmeterspersecondLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicMetersPerSecond);\r\n    }\r\n    /** */\r\n    get StandardCubicMetersPerMinute() {\r\n        if (this.standardcubicmetersperminuteLazy !== null) {\r\n            return this.standardcubicmetersperminuteLazy;\r\n        }\r\n        return this.standardcubicmetersperminuteLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicMetersPerMinute);\r\n    }\r\n    /** */\r\n    get StandardCubicMetersPerHour() {\r\n        if (this.standardcubicmetersperhourLazy !== null) {\r\n            return this.standardcubicmetersperhourLazy;\r\n        }\r\n        return this.standardcubicmetersperhourLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicMetersPerHour);\r\n    }\r\n    /** */\r\n    get StandardCubicMetersPerDay() {\r\n        if (this.standardcubicmetersperdayLazy !== null) {\r\n            return this.standardcubicmetersperdayLazy;\r\n        }\r\n        return this.standardcubicmetersperdayLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicMetersPerDay);\r\n    }\r\n    /** */\r\n    get StandardCubicCentimetersPerMinute() {\r\n        if (this.standardcubiccentimetersperminuteLazy !== null) {\r\n            return this.standardcubiccentimetersperminuteLazy;\r\n        }\r\n        return this.standardcubiccentimetersperminuteLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicCentimetersPerMinute);\r\n    }\r\n    /** */\r\n    get StandardLitersPerMinute() {\r\n        if (this.standardlitersperminuteLazy !== null) {\r\n            return this.standardlitersperminuteLazy;\r\n        }\r\n        return this.standardlitersperminuteLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardLitersPerMinute);\r\n    }\r\n    /** */\r\n    get StandardCubicFeetPerSecond() {\r\n        if (this.standardcubicfeetpersecondLazy !== null) {\r\n            return this.standardcubicfeetpersecondLazy;\r\n        }\r\n        return this.standardcubicfeetpersecondLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicFeetPerSecond);\r\n    }\r\n    /** */\r\n    get StandardCubicFeetPerMinute() {\r\n        if (this.standardcubicfeetperminuteLazy !== null) {\r\n            return this.standardcubicfeetperminuteLazy;\r\n        }\r\n        return this.standardcubicfeetperminuteLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicFeetPerMinute);\r\n    }\r\n    /** */\r\n    get StandardCubicFeetPerHour() {\r\n        if (this.standardcubicfeetperhourLazy !== null) {\r\n            return this.standardcubicfeetperhourLazy;\r\n        }\r\n        return this.standardcubicfeetperhourLazy = this.convertFromBase(StandardVolumeFlowUnits.StandardCubicFeetPerHour);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicMetersPerSecond\r\n     *\r\n     * @param value The unit as StandardCubicMetersPerSecond to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicMetersPerSecond(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicMetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicMetersPerMinute\r\n     *\r\n     * @param value The unit as StandardCubicMetersPerMinute to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicMetersPerMinute(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicMetersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicMetersPerHour\r\n     *\r\n     * @param value The unit as StandardCubicMetersPerHour to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicMetersPerHour(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicMetersPerHour);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicMetersPerDay\r\n     *\r\n     * @param value The unit as StandardCubicMetersPerDay to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicMetersPerDay(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicMetersPerDay);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicCentimetersPerMinute\r\n     *\r\n     * @param value The unit as StandardCubicCentimetersPerMinute to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicCentimetersPerMinute(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicCentimetersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardLitersPerMinute\r\n     *\r\n     * @param value The unit as StandardLitersPerMinute to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardLitersPerMinute(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardLitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicFeetPerSecond\r\n     *\r\n     * @param value The unit as StandardCubicFeetPerSecond to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicFeetPerSecond(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicFeetPerSecond);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicFeetPerMinute\r\n     *\r\n     * @param value The unit as StandardCubicFeetPerMinute to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicFeetPerMinute(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicFeetPerMinute);\r\n    }\r\n    /**\r\n     * Create a new StandardVolumeFlow instance from a StandardCubicFeetPerHour\r\n     *\r\n     * @param value The unit as StandardCubicFeetPerHour to create a new StandardVolumeFlow from.\r\n     * @returns The new StandardVolumeFlow instance.\r\n     */\r\n    static FromStandardCubicFeetPerHour(value) {\r\n        return new StandardVolumeFlow(value, StandardVolumeFlowUnits.StandardCubicFeetPerHour);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerSecond:\r\n                return this.value;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerMinute:\r\n                return this.value * 60;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerHour:\r\n                return this.value * 3600;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerDay:\r\n                return this.value * 86400;\r\n            case StandardVolumeFlowUnits.StandardCubicCentimetersPerMinute:\r\n                return this.value * 6e7;\r\n            case StandardVolumeFlowUnits.StandardLitersPerMinute:\r\n                return this.value * 60000;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerSecond:\r\n                return this.value * 35.314666721;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerMinute:\r\n                return this.value * 2118.88000326;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerHour:\r\n                return this.value / 7.8657907199999087346816086183876e-6;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerSecond:\r\n                return value;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerMinute:\r\n                return value / 60;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerHour:\r\n                return value / 3600;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerDay:\r\n                return value / 86400;\r\n            case StandardVolumeFlowUnits.StandardCubicCentimetersPerMinute:\r\n                return value / 6e7;\r\n            case StandardVolumeFlowUnits.StandardLitersPerMinute:\r\n                return value / 60000;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerSecond:\r\n                return value / 35.314666721;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerMinute:\r\n                return value / 2118.88000326;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerHour:\r\n                return value * 7.8657907199999087346816086183876e-6;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the StandardVolumeFlow to string.\r\n     * Note! the default format for StandardVolumeFlow is StandardCubicMetersPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the StandardVolumeFlow.\r\n     * @returns The string format of the StandardVolumeFlow.\r\n     */\r\n    toString(toUnit = StandardVolumeFlowUnits.StandardCubicMetersPerSecond) {\r\n        switch (toUnit) {\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerSecond:\r\n                return this.StandardCubicMetersPerSecond + ` Sm³/s`;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerMinute:\r\n                return this.StandardCubicMetersPerMinute + ` Sm³/min`;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerHour:\r\n                return this.StandardCubicMetersPerHour + ` Sm³/h`;\r\n            case StandardVolumeFlowUnits.StandardCubicMetersPerDay:\r\n                return this.StandardCubicMetersPerDay + ` Sm³/d`;\r\n            case StandardVolumeFlowUnits.StandardCubicCentimetersPerMinute:\r\n                return this.StandardCubicCentimetersPerMinute + ` sccm`;\r\n            case StandardVolumeFlowUnits.StandardLitersPerMinute:\r\n                return this.StandardLitersPerMinute + ` slm`;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerSecond:\r\n                return this.StandardCubicFeetPerSecond + ` Sft³/s`;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerMinute:\r\n                return this.StandardCubicFeetPerMinute + ` scfm`;\r\n            case StandardVolumeFlowUnits.StandardCubicFeetPerHour:\r\n                return this.StandardCubicFeetPerHour + ` scfh`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given StandardVolumeFlow are equals to the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns True if the given StandardVolumeFlow are equal to the current StandardVolumeFlow.\r\n     */\r\n    equals(standardVolumeFlow) {\r\n        return this.value === standardVolumeFlow.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given StandardVolumeFlow against the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns 0 if they are equal, -1 if the current StandardVolumeFlow is less then other, 1 if the current StandardVolumeFlow is greater then other.\r\n     */\r\n    compareTo(standardVolumeFlow) {\r\n        if (this.value > standardVolumeFlow.BaseValue)\r\n            return 1;\r\n        if (this.value < standardVolumeFlow.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given StandardVolumeFlow with the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns A new StandardVolumeFlow instance with the results.\r\n     */\r\n    add(standardVolumeFlow) {\r\n        return new StandardVolumeFlow(this.value + standardVolumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given StandardVolumeFlow with the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns A new StandardVolumeFlow instance with the results.\r\n     */\r\n    subtract(standardVolumeFlow) {\r\n        return new StandardVolumeFlow(this.value - standardVolumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given StandardVolumeFlow with the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns A new StandardVolumeFlow instance with the results.\r\n     */\r\n    multiply(standardVolumeFlow) {\r\n        return new StandardVolumeFlow(this.value * standardVolumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given StandardVolumeFlow with the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns A new StandardVolumeFlow instance with the results.\r\n     */\r\n    divide(standardVolumeFlow) {\r\n        return new StandardVolumeFlow(this.value / standardVolumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given StandardVolumeFlow with the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns A new StandardVolumeFlow instance with the results.\r\n     */\r\n    modulo(standardVolumeFlow) {\r\n        return new StandardVolumeFlow(this.value % standardVolumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given StandardVolumeFlow with the current StandardVolumeFlow.\r\n     * @param standardVolumeFlow The other StandardVolumeFlow.\r\n     * @returns A new StandardVolumeFlow instance with the results.\r\n     */\r\n    pow(standardVolumeFlow) {\r\n        return new StandardVolumeFlow(this.value ** standardVolumeFlow.BaseValue);\r\n    }\r\n}\r\nexports.StandardVolumeFlow = StandardVolumeFlow;\r\n//# sourceMappingURL=standardvolumeflow.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Temperature = exports.TemperatureUnits = void 0;\r\n/** TemperatureUnits enumeration */\r\nvar TemperatureUnits;\r\n(function (TemperatureUnits) {\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"Kelvins\"] = 0] = \"Kelvins\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesCelsius\"] = 1] = \"DegreesCelsius\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"MillidegreesCelsius\"] = 2] = \"MillidegreesCelsius\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesDelisle\"] = 3] = \"DegreesDelisle\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesFahrenheit\"] = 4] = \"DegreesFahrenheit\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesNewton\"] = 5] = \"DegreesNewton\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesRankine\"] = 6] = \"DegreesRankine\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesReaumur\"] = 7] = \"DegreesReaumur\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"DegreesRoemer\"] = 8] = \"DegreesRoemer\";\r\n    /** */\r\n    TemperatureUnits[TemperatureUnits[\"SolarTemperatures\"] = 9] = \"SolarTemperatures\";\r\n})(TemperatureUnits = exports.TemperatureUnits || (exports.TemperatureUnits = {}));\r\n/** A temperature is a numerical measure of hot or cold. Its measurement is by detection of heat radiation or particle velocity or kinetic energy, or by the bulk behavior of a thermometric material. It may be calibrated in any of various temperature scales, Celsius, Fahrenheit, Kelvin, etc. The fundamental physical definition of temperature is provided by thermodynamics. */\r\nclass Temperature {\r\n    /**\r\n     * Create a new Temperature.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Temperature’ unit to create from.\r\n     * The default unit is Kelvins\r\n     */\r\n    constructor(value, fromUnit = TemperatureUnits.Kelvins) {\r\n        this.kelvinsLazy = null;\r\n        this.degreescelsiusLazy = null;\r\n        this.millidegreescelsiusLazy = null;\r\n        this.degreesdelisleLazy = null;\r\n        this.degreesfahrenheitLazy = null;\r\n        this.degreesnewtonLazy = null;\r\n        this.degreesrankineLazy = null;\r\n        this.degreesreaumurLazy = null;\r\n        this.degreesroemerLazy = null;\r\n        this.solartemperaturesLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Temperature is Kelvins.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Kelvins() {\r\n        if (this.kelvinsLazy !== null) {\r\n            return this.kelvinsLazy;\r\n        }\r\n        return this.kelvinsLazy = this.convertFromBase(TemperatureUnits.Kelvins);\r\n    }\r\n    /** */\r\n    get DegreesCelsius() {\r\n        if (this.degreescelsiusLazy !== null) {\r\n            return this.degreescelsiusLazy;\r\n        }\r\n        return this.degreescelsiusLazy = this.convertFromBase(TemperatureUnits.DegreesCelsius);\r\n    }\r\n    /** */\r\n    get MillidegreesCelsius() {\r\n        if (this.millidegreescelsiusLazy !== null) {\r\n            return this.millidegreescelsiusLazy;\r\n        }\r\n        return this.millidegreescelsiusLazy = this.convertFromBase(TemperatureUnits.MillidegreesCelsius);\r\n    }\r\n    /** */\r\n    get DegreesDelisle() {\r\n        if (this.degreesdelisleLazy !== null) {\r\n            return this.degreesdelisleLazy;\r\n        }\r\n        return this.degreesdelisleLazy = this.convertFromBase(TemperatureUnits.DegreesDelisle);\r\n    }\r\n    /** */\r\n    get DegreesFahrenheit() {\r\n        if (this.degreesfahrenheitLazy !== null) {\r\n            return this.degreesfahrenheitLazy;\r\n        }\r\n        return this.degreesfahrenheitLazy = this.convertFromBase(TemperatureUnits.DegreesFahrenheit);\r\n    }\r\n    /** */\r\n    get DegreesNewton() {\r\n        if (this.degreesnewtonLazy !== null) {\r\n            return this.degreesnewtonLazy;\r\n        }\r\n        return this.degreesnewtonLazy = this.convertFromBase(TemperatureUnits.DegreesNewton);\r\n    }\r\n    /** */\r\n    get DegreesRankine() {\r\n        if (this.degreesrankineLazy !== null) {\r\n            return this.degreesrankineLazy;\r\n        }\r\n        return this.degreesrankineLazy = this.convertFromBase(TemperatureUnits.DegreesRankine);\r\n    }\r\n    /** */\r\n    get DegreesReaumur() {\r\n        if (this.degreesreaumurLazy !== null) {\r\n            return this.degreesreaumurLazy;\r\n        }\r\n        return this.degreesreaumurLazy = this.convertFromBase(TemperatureUnits.DegreesReaumur);\r\n    }\r\n    /** */\r\n    get DegreesRoemer() {\r\n        if (this.degreesroemerLazy !== null) {\r\n            return this.degreesroemerLazy;\r\n        }\r\n        return this.degreesroemerLazy = this.convertFromBase(TemperatureUnits.DegreesRoemer);\r\n    }\r\n    /** */\r\n    get SolarTemperatures() {\r\n        if (this.solartemperaturesLazy !== null) {\r\n            return this.solartemperaturesLazy;\r\n        }\r\n        return this.solartemperaturesLazy = this.convertFromBase(TemperatureUnits.SolarTemperatures);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a Kelvins\r\n     *\r\n     * @param value The unit as Kelvins to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromKelvins(value) {\r\n        return new Temperature(value, TemperatureUnits.Kelvins);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesCelsius\r\n     *\r\n     * @param value The unit as DegreesCelsius to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesCelsius(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesCelsius);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a MillidegreesCelsius\r\n     *\r\n     * @param value The unit as MillidegreesCelsius to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromMillidegreesCelsius(value) {\r\n        return new Temperature(value, TemperatureUnits.MillidegreesCelsius);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesDelisle\r\n     *\r\n     * @param value The unit as DegreesDelisle to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesDelisle(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesDelisle);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesFahrenheit\r\n     *\r\n     * @param value The unit as DegreesFahrenheit to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesFahrenheit(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesFahrenheit);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesNewton\r\n     *\r\n     * @param value The unit as DegreesNewton to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesNewton(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesNewton);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesRankine\r\n     *\r\n     * @param value The unit as DegreesRankine to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesRankine(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesRankine);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesReaumur\r\n     *\r\n     * @param value The unit as DegreesReaumur to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesReaumur(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesReaumur);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a DegreesRoemer\r\n     *\r\n     * @param value The unit as DegreesRoemer to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromDegreesRoemer(value) {\r\n        return new Temperature(value, TemperatureUnits.DegreesRoemer);\r\n    }\r\n    /**\r\n     * Create a new Temperature instance from a SolarTemperatures\r\n     *\r\n     * @param value The unit as SolarTemperatures to create a new Temperature from.\r\n     * @returns The new Temperature instance.\r\n     */\r\n    static FromSolarTemperatures(value) {\r\n        return new Temperature(value, TemperatureUnits.SolarTemperatures);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case TemperatureUnits.Kelvins:\r\n                return this.value;\r\n            case TemperatureUnits.DegreesCelsius:\r\n                return this.value - 273.15;\r\n            case TemperatureUnits.MillidegreesCelsius:\r\n                return (this.value - 273.15) * 1000;\r\n            case TemperatureUnits.DegreesDelisle:\r\n                return (this.value - 373.15) * -3 / 2;\r\n            case TemperatureUnits.DegreesFahrenheit:\r\n                return (this.value - 459.67 * 5 / 9) * 9 / 5;\r\n            case TemperatureUnits.DegreesNewton:\r\n                return (this.value - 273.15) * 33 / 100;\r\n            case TemperatureUnits.DegreesRankine:\r\n                return this.value * 9 / 5;\r\n            case TemperatureUnits.DegreesReaumur:\r\n                return (this.value - 273.15) * 4 / 5;\r\n            case TemperatureUnits.DegreesRoemer:\r\n                return (this.value - (273.15 - 7.5 * 40 / 21)) * 21 / 40;\r\n            case TemperatureUnits.SolarTemperatures:\r\n                return this.value / 5778;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case TemperatureUnits.Kelvins:\r\n                return value;\r\n            case TemperatureUnits.DegreesCelsius:\r\n                return value + 273.15;\r\n            case TemperatureUnits.MillidegreesCelsius:\r\n                return value / 1000 + 273.15;\r\n            case TemperatureUnits.DegreesDelisle:\r\n                return value * -2 / 3 + 373.15;\r\n            case TemperatureUnits.DegreesFahrenheit:\r\n                return value * 5 / 9 + 459.67 * 5 / 9;\r\n            case TemperatureUnits.DegreesNewton:\r\n                return value * 100 / 33 + 273.15;\r\n            case TemperatureUnits.DegreesRankine:\r\n                return value * 5 / 9;\r\n            case TemperatureUnits.DegreesReaumur:\r\n                return value * 5 / 4 + 273.15;\r\n            case TemperatureUnits.DegreesRoemer:\r\n                return value * 40 / 21 + 273.15 - 7.5 * 40 / 21;\r\n            case TemperatureUnits.SolarTemperatures:\r\n                return value * 5778;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Temperature to string.\r\n     * Note! the default format for Temperature is Kelvins.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Temperature.\r\n     * @returns The string format of the Temperature.\r\n     */\r\n    toString(toUnit = TemperatureUnits.Kelvins) {\r\n        switch (toUnit) {\r\n            case TemperatureUnits.Kelvins:\r\n                return this.Kelvins + ` K`;\r\n            case TemperatureUnits.DegreesCelsius:\r\n                return this.DegreesCelsius + ` °C`;\r\n            case TemperatureUnits.MillidegreesCelsius:\r\n                return this.MillidegreesCelsius + ` m°C`;\r\n            case TemperatureUnits.DegreesDelisle:\r\n                return this.DegreesDelisle + ` °De`;\r\n            case TemperatureUnits.DegreesFahrenheit:\r\n                return this.DegreesFahrenheit + ` °F`;\r\n            case TemperatureUnits.DegreesNewton:\r\n                return this.DegreesNewton + ` °N`;\r\n            case TemperatureUnits.DegreesRankine:\r\n                return this.DegreesRankine + ` °R`;\r\n            case TemperatureUnits.DegreesReaumur:\r\n                return this.DegreesReaumur + ` °Ré`;\r\n            case TemperatureUnits.DegreesRoemer:\r\n                return this.DegreesRoemer + ` °Rø`;\r\n            case TemperatureUnits.SolarTemperatures:\r\n                return this.SolarTemperatures + ` T⊙`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Temperature are equals to the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns True if the given Temperature are equal to the current Temperature.\r\n     */\r\n    equals(temperature) {\r\n        return this.value === temperature.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Temperature against the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns 0 if they are equal, -1 if the current Temperature is less then other, 1 if the current Temperature is greater then other.\r\n     */\r\n    compareTo(temperature) {\r\n        if (this.value > temperature.BaseValue)\r\n            return 1;\r\n        if (this.value < temperature.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Temperature with the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns A new Temperature instance with the results.\r\n     */\r\n    add(temperature) {\r\n        return new Temperature(this.value + temperature.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Temperature with the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns A new Temperature instance with the results.\r\n     */\r\n    subtract(temperature) {\r\n        return new Temperature(this.value - temperature.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Temperature with the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns A new Temperature instance with the results.\r\n     */\r\n    multiply(temperature) {\r\n        return new Temperature(this.value * temperature.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Temperature with the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns A new Temperature instance with the results.\r\n     */\r\n    divide(temperature) {\r\n        return new Temperature(this.value / temperature.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Temperature with the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns A new Temperature instance with the results.\r\n     */\r\n    modulo(temperature) {\r\n        return new Temperature(this.value % temperature.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Temperature with the current Temperature.\r\n     * @param temperature The other Temperature.\r\n     * @returns A new Temperature instance with the results.\r\n     */\r\n    pow(temperature) {\r\n        return new Temperature(this.value ** temperature.BaseValue);\r\n    }\r\n}\r\nexports.Temperature = Temperature;\r\n//# sourceMappingURL=temperature.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TemperatureChangeRate = exports.TemperatureChangeRateUnits = void 0;\r\n/** TemperatureChangeRateUnits enumeration */\r\nvar TemperatureChangeRateUnits;\r\n(function (TemperatureChangeRateUnits) {\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"DegreesCelsiusPerSecond\"] = 0] = \"DegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"DegreesCelsiusPerMinute\"] = 1] = \"DegreesCelsiusPerMinute\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"NanodegreesCelsiusPerSecond\"] = 2] = \"NanodegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"MicrodegreesCelsiusPerSecond\"] = 3] = \"MicrodegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"MillidegreesCelsiusPerSecond\"] = 4] = \"MillidegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"CentidegreesCelsiusPerSecond\"] = 5] = \"CentidegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"DecidegreesCelsiusPerSecond\"] = 6] = \"DecidegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"DecadegreesCelsiusPerSecond\"] = 7] = \"DecadegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"HectodegreesCelsiusPerSecond\"] = 8] = \"HectodegreesCelsiusPerSecond\";\r\n    /** */\r\n    TemperatureChangeRateUnits[TemperatureChangeRateUnits[\"KilodegreesCelsiusPerSecond\"] = 9] = \"KilodegreesCelsiusPerSecond\";\r\n})(TemperatureChangeRateUnits = exports.TemperatureChangeRateUnits || (exports.TemperatureChangeRateUnits = {}));\r\n/** Temperature change rate is the ratio of the temperature change to the time during which the change occurred (value of temperature changes per unit time). */\r\nclass TemperatureChangeRate {\r\n    /**\r\n     * Create a new TemperatureChangeRate.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘TemperatureChangeRate’ unit to create from.\r\n     * The default unit is DegreesCelsiusPerSecond\r\n     */\r\n    constructor(value, fromUnit = TemperatureChangeRateUnits.DegreesCelsiusPerSecond) {\r\n        this.degreescelsiuspersecondLazy = null;\r\n        this.degreescelsiusperminuteLazy = null;\r\n        this.nanodegreescelsiuspersecondLazy = null;\r\n        this.microdegreescelsiuspersecondLazy = null;\r\n        this.millidegreescelsiuspersecondLazy = null;\r\n        this.centidegreescelsiuspersecondLazy = null;\r\n        this.decidegreescelsiuspersecondLazy = null;\r\n        this.decadegreescelsiuspersecondLazy = null;\r\n        this.hectodegreescelsiuspersecondLazy = null;\r\n        this.kilodegreescelsiuspersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of TemperatureChangeRate is DegreesCelsiusPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DegreesCelsiusPerSecond() {\r\n        if (this.degreescelsiuspersecondLazy !== null) {\r\n            return this.degreescelsiuspersecondLazy;\r\n        }\r\n        return this.degreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.DegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get DegreesCelsiusPerMinute() {\r\n        if (this.degreescelsiusperminuteLazy !== null) {\r\n            return this.degreescelsiusperminuteLazy;\r\n        }\r\n        return this.degreescelsiusperminuteLazy = this.convertFromBase(TemperatureChangeRateUnits.DegreesCelsiusPerMinute);\r\n    }\r\n    /** */\r\n    get NanodegreesCelsiusPerSecond() {\r\n        if (this.nanodegreescelsiuspersecondLazy !== null) {\r\n            return this.nanodegreescelsiuspersecondLazy;\r\n        }\r\n        return this.nanodegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.NanodegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get MicrodegreesCelsiusPerSecond() {\r\n        if (this.microdegreescelsiuspersecondLazy !== null) {\r\n            return this.microdegreescelsiuspersecondLazy;\r\n        }\r\n        return this.microdegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.MicrodegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get MillidegreesCelsiusPerSecond() {\r\n        if (this.millidegreescelsiuspersecondLazy !== null) {\r\n            return this.millidegreescelsiuspersecondLazy;\r\n        }\r\n        return this.millidegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.MillidegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get CentidegreesCelsiusPerSecond() {\r\n        if (this.centidegreescelsiuspersecondLazy !== null) {\r\n            return this.centidegreescelsiuspersecondLazy;\r\n        }\r\n        return this.centidegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.CentidegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get DecidegreesCelsiusPerSecond() {\r\n        if (this.decidegreescelsiuspersecondLazy !== null) {\r\n            return this.decidegreescelsiuspersecondLazy;\r\n        }\r\n        return this.decidegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.DecidegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get DecadegreesCelsiusPerSecond() {\r\n        if (this.decadegreescelsiuspersecondLazy !== null) {\r\n            return this.decadegreescelsiuspersecondLazy;\r\n        }\r\n        return this.decadegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.DecadegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get HectodegreesCelsiusPerSecond() {\r\n        if (this.hectodegreescelsiuspersecondLazy !== null) {\r\n            return this.hectodegreescelsiuspersecondLazy;\r\n        }\r\n        return this.hectodegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.HectodegreesCelsiusPerSecond);\r\n    }\r\n    /** */\r\n    get KilodegreesCelsiusPerSecond() {\r\n        if (this.kilodegreescelsiuspersecondLazy !== null) {\r\n            return this.kilodegreescelsiuspersecondLazy;\r\n        }\r\n        return this.kilodegreescelsiuspersecondLazy = this.convertFromBase(TemperatureChangeRateUnits.KilodegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a DegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as DegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromDegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.DegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a DegreesCelsiusPerMinute\r\n     *\r\n     * @param value The unit as DegreesCelsiusPerMinute to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromDegreesCelsiusPerMinute(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.DegreesCelsiusPerMinute);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a NanodegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as NanodegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromNanodegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.NanodegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a MicrodegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as MicrodegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromMicrodegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.MicrodegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a MillidegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as MillidegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromMillidegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.MillidegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a CentidegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as CentidegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromCentidegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.CentidegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a DecidegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as DecidegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromDecidegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.DecidegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a DecadegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as DecadegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromDecadegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.DecadegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a HectodegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as HectodegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromHectodegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.HectodegreesCelsiusPerSecond);\r\n    }\r\n    /**\r\n     * Create a new TemperatureChangeRate instance from a KilodegreesCelsiusPerSecond\r\n     *\r\n     * @param value The unit as KilodegreesCelsiusPerSecond to create a new TemperatureChangeRate from.\r\n     * @returns The new TemperatureChangeRate instance.\r\n     */\r\n    static FromKilodegreesCelsiusPerSecond(value) {\r\n        return new TemperatureChangeRate(value, TemperatureChangeRateUnits.KilodegreesCelsiusPerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case TemperatureChangeRateUnits.DegreesCelsiusPerSecond:\r\n                return this.value;\r\n            case TemperatureChangeRateUnits.DegreesCelsiusPerMinute:\r\n                return this.value * 60;\r\n            case TemperatureChangeRateUnits.NanodegreesCelsiusPerSecond:\r\n                return (this.value) / 1e-9;\r\n            case TemperatureChangeRateUnits.MicrodegreesCelsiusPerSecond:\r\n                return (this.value) / 0.000001;\r\n            case TemperatureChangeRateUnits.MillidegreesCelsiusPerSecond:\r\n                return (this.value) / 0.001;\r\n            case TemperatureChangeRateUnits.CentidegreesCelsiusPerSecond:\r\n                return (this.value) / 0.01;\r\n            case TemperatureChangeRateUnits.DecidegreesCelsiusPerSecond:\r\n                return (this.value) / 0.1;\r\n            case TemperatureChangeRateUnits.DecadegreesCelsiusPerSecond:\r\n                return (this.value) / 10;\r\n            case TemperatureChangeRateUnits.HectodegreesCelsiusPerSecond:\r\n                return (this.value) / 100;\r\n            case TemperatureChangeRateUnits.KilodegreesCelsiusPerSecond:\r\n                return (this.value) / 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case TemperatureChangeRateUnits.DegreesCelsiusPerSecond:\r\n                return value;\r\n            case TemperatureChangeRateUnits.DegreesCelsiusPerMinute:\r\n                return value / 60;\r\n            case TemperatureChangeRateUnits.NanodegreesCelsiusPerSecond:\r\n                return (value) * 1e-9;\r\n            case TemperatureChangeRateUnits.MicrodegreesCelsiusPerSecond:\r\n                return (value) * 0.000001;\r\n            case TemperatureChangeRateUnits.MillidegreesCelsiusPerSecond:\r\n                return (value) * 0.001;\r\n            case TemperatureChangeRateUnits.CentidegreesCelsiusPerSecond:\r\n                return (value) * 0.01;\r\n            case TemperatureChangeRateUnits.DecidegreesCelsiusPerSecond:\r\n                return (value) * 0.1;\r\n            case TemperatureChangeRateUnits.DecadegreesCelsiusPerSecond:\r\n                return (value) * 10;\r\n            case TemperatureChangeRateUnits.HectodegreesCelsiusPerSecond:\r\n                return (value) * 100;\r\n            case TemperatureChangeRateUnits.KilodegreesCelsiusPerSecond:\r\n                return (value) * 1000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the TemperatureChangeRate to string.\r\n     * Note! the default format for TemperatureChangeRate is DegreesCelsiusPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the TemperatureChangeRate.\r\n     * @returns The string format of the TemperatureChangeRate.\r\n     */\r\n    toString(toUnit = TemperatureChangeRateUnits.DegreesCelsiusPerSecond) {\r\n        switch (toUnit) {\r\n            case TemperatureChangeRateUnits.DegreesCelsiusPerSecond:\r\n                return this.DegreesCelsiusPerSecond + ` °C/s`;\r\n            case TemperatureChangeRateUnits.DegreesCelsiusPerMinute:\r\n                return this.DegreesCelsiusPerMinute + ` °C/min`;\r\n            case TemperatureChangeRateUnits.NanodegreesCelsiusPerSecond:\r\n                return this.NanodegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.MicrodegreesCelsiusPerSecond:\r\n                return this.MicrodegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.MillidegreesCelsiusPerSecond:\r\n                return this.MillidegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.CentidegreesCelsiusPerSecond:\r\n                return this.CentidegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.DecidegreesCelsiusPerSecond:\r\n                return this.DecidegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.DecadegreesCelsiusPerSecond:\r\n                return this.DecadegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.HectodegreesCelsiusPerSecond:\r\n                return this.HectodegreesCelsiusPerSecond + ` `;\r\n            case TemperatureChangeRateUnits.KilodegreesCelsiusPerSecond:\r\n                return this.KilodegreesCelsiusPerSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given TemperatureChangeRate are equals to the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns True if the given TemperatureChangeRate are equal to the current TemperatureChangeRate.\r\n     */\r\n    equals(temperatureChangeRate) {\r\n        return this.value === temperatureChangeRate.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given TemperatureChangeRate against the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns 0 if they are equal, -1 if the current TemperatureChangeRate is less then other, 1 if the current TemperatureChangeRate is greater then other.\r\n     */\r\n    compareTo(temperatureChangeRate) {\r\n        if (this.value > temperatureChangeRate.BaseValue)\r\n            return 1;\r\n        if (this.value < temperatureChangeRate.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given TemperatureChangeRate with the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns A new TemperatureChangeRate instance with the results.\r\n     */\r\n    add(temperatureChangeRate) {\r\n        return new TemperatureChangeRate(this.value + temperatureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given TemperatureChangeRate with the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns A new TemperatureChangeRate instance with the results.\r\n     */\r\n    subtract(temperatureChangeRate) {\r\n        return new TemperatureChangeRate(this.value - temperatureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given TemperatureChangeRate with the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns A new TemperatureChangeRate instance with the results.\r\n     */\r\n    multiply(temperatureChangeRate) {\r\n        return new TemperatureChangeRate(this.value * temperatureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given TemperatureChangeRate with the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns A new TemperatureChangeRate instance with the results.\r\n     */\r\n    divide(temperatureChangeRate) {\r\n        return new TemperatureChangeRate(this.value / temperatureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given TemperatureChangeRate with the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns A new TemperatureChangeRate instance with the results.\r\n     */\r\n    modulo(temperatureChangeRate) {\r\n        return new TemperatureChangeRate(this.value % temperatureChangeRate.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given TemperatureChangeRate with the current TemperatureChangeRate.\r\n     * @param temperatureChangeRate The other TemperatureChangeRate.\r\n     * @returns A new TemperatureChangeRate instance with the results.\r\n     */\r\n    pow(temperatureChangeRate) {\r\n        return new TemperatureChangeRate(this.value ** temperatureChangeRate.BaseValue);\r\n    }\r\n}\r\nexports.TemperatureChangeRate = TemperatureChangeRate;\r\n//# sourceMappingURL=temperaturechangerate.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TemperatureDelta = exports.TemperatureDeltaUnits = void 0;\r\n/** TemperatureDeltaUnits enumeration */\r\nvar TemperatureDeltaUnits;\r\n(function (TemperatureDeltaUnits) {\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"Kelvins\"] = 0] = \"Kelvins\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesCelsius\"] = 1] = \"DegreesCelsius\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesDelisle\"] = 2] = \"DegreesDelisle\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesFahrenheit\"] = 3] = \"DegreesFahrenheit\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesNewton\"] = 4] = \"DegreesNewton\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesRankine\"] = 5] = \"DegreesRankine\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesReaumur\"] = 6] = \"DegreesReaumur\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"DegreesRoemer\"] = 7] = \"DegreesRoemer\";\r\n    /** */\r\n    TemperatureDeltaUnits[TemperatureDeltaUnits[\"MillidegreesCelsius\"] = 8] = \"MillidegreesCelsius\";\r\n})(TemperatureDeltaUnits = exports.TemperatureDeltaUnits || (exports.TemperatureDeltaUnits = {}));\r\n/** Difference between two temperatures. The conversions are different than for Temperature. */\r\nclass TemperatureDelta {\r\n    /**\r\n     * Create a new TemperatureDelta.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘TemperatureDelta’ unit to create from.\r\n     * The default unit is Kelvins\r\n     */\r\n    constructor(value, fromUnit = TemperatureDeltaUnits.Kelvins) {\r\n        this.kelvinsLazy = null;\r\n        this.degreescelsiusLazy = null;\r\n        this.degreesdelisleLazy = null;\r\n        this.degreesfahrenheitLazy = null;\r\n        this.degreesnewtonLazy = null;\r\n        this.degreesrankineLazy = null;\r\n        this.degreesreaumurLazy = null;\r\n        this.degreesroemerLazy = null;\r\n        this.millidegreescelsiusLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of TemperatureDelta is Kelvins.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Kelvins() {\r\n        if (this.kelvinsLazy !== null) {\r\n            return this.kelvinsLazy;\r\n        }\r\n        return this.kelvinsLazy = this.convertFromBase(TemperatureDeltaUnits.Kelvins);\r\n    }\r\n    /** */\r\n    get DegreesCelsius() {\r\n        if (this.degreescelsiusLazy !== null) {\r\n            return this.degreescelsiusLazy;\r\n        }\r\n        return this.degreescelsiusLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesCelsius);\r\n    }\r\n    /** */\r\n    get DegreesDelisle() {\r\n        if (this.degreesdelisleLazy !== null) {\r\n            return this.degreesdelisleLazy;\r\n        }\r\n        return this.degreesdelisleLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesDelisle);\r\n    }\r\n    /** */\r\n    get DegreesFahrenheit() {\r\n        if (this.degreesfahrenheitLazy !== null) {\r\n            return this.degreesfahrenheitLazy;\r\n        }\r\n        return this.degreesfahrenheitLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesFahrenheit);\r\n    }\r\n    /** */\r\n    get DegreesNewton() {\r\n        if (this.degreesnewtonLazy !== null) {\r\n            return this.degreesnewtonLazy;\r\n        }\r\n        return this.degreesnewtonLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesNewton);\r\n    }\r\n    /** */\r\n    get DegreesRankine() {\r\n        if (this.degreesrankineLazy !== null) {\r\n            return this.degreesrankineLazy;\r\n        }\r\n        return this.degreesrankineLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesRankine);\r\n    }\r\n    /** */\r\n    get DegreesReaumur() {\r\n        if (this.degreesreaumurLazy !== null) {\r\n            return this.degreesreaumurLazy;\r\n        }\r\n        return this.degreesreaumurLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesReaumur);\r\n    }\r\n    /** */\r\n    get DegreesRoemer() {\r\n        if (this.degreesroemerLazy !== null) {\r\n            return this.degreesroemerLazy;\r\n        }\r\n        return this.degreesroemerLazy = this.convertFromBase(TemperatureDeltaUnits.DegreesRoemer);\r\n    }\r\n    /** */\r\n    get MillidegreesCelsius() {\r\n        if (this.millidegreescelsiusLazy !== null) {\r\n            return this.millidegreescelsiusLazy;\r\n        }\r\n        return this.millidegreescelsiusLazy = this.convertFromBase(TemperatureDeltaUnits.MillidegreesCelsius);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a Kelvins\r\n     *\r\n     * @param value The unit as Kelvins to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromKelvins(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.Kelvins);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesCelsius\r\n     *\r\n     * @param value The unit as DegreesCelsius to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesCelsius(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesCelsius);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesDelisle\r\n     *\r\n     * @param value The unit as DegreesDelisle to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesDelisle(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesDelisle);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesFahrenheit\r\n     *\r\n     * @param value The unit as DegreesFahrenheit to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesFahrenheit(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesFahrenheit);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesNewton\r\n     *\r\n     * @param value The unit as DegreesNewton to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesNewton(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesNewton);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesRankine\r\n     *\r\n     * @param value The unit as DegreesRankine to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesRankine(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesRankine);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesReaumur\r\n     *\r\n     * @param value The unit as DegreesReaumur to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesReaumur(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesReaumur);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a DegreesRoemer\r\n     *\r\n     * @param value The unit as DegreesRoemer to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromDegreesRoemer(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.DegreesRoemer);\r\n    }\r\n    /**\r\n     * Create a new TemperatureDelta instance from a MillidegreesCelsius\r\n     *\r\n     * @param value The unit as MillidegreesCelsius to create a new TemperatureDelta from.\r\n     * @returns The new TemperatureDelta instance.\r\n     */\r\n    static FromMillidegreesCelsius(value) {\r\n        return new TemperatureDelta(value, TemperatureDeltaUnits.MillidegreesCelsius);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case TemperatureDeltaUnits.Kelvins:\r\n                return this.value;\r\n            case TemperatureDeltaUnits.DegreesCelsius:\r\n                return this.value;\r\n            case TemperatureDeltaUnits.DegreesDelisle:\r\n                return this.value * -3 / 2;\r\n            case TemperatureDeltaUnits.DegreesFahrenheit:\r\n                return this.value * 9 / 5;\r\n            case TemperatureDeltaUnits.DegreesNewton:\r\n                return this.value * 33 / 100;\r\n            case TemperatureDeltaUnits.DegreesRankine:\r\n                return this.value * 9 / 5;\r\n            case TemperatureDeltaUnits.DegreesReaumur:\r\n                return this.value * 4 / 5;\r\n            case TemperatureDeltaUnits.DegreesRoemer:\r\n                return this.value * 21 / 40;\r\n            case TemperatureDeltaUnits.MillidegreesCelsius:\r\n                return (this.value) / 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case TemperatureDeltaUnits.Kelvins:\r\n                return value;\r\n            case TemperatureDeltaUnits.DegreesCelsius:\r\n                return value;\r\n            case TemperatureDeltaUnits.DegreesDelisle:\r\n                return value * -2 / 3;\r\n            case TemperatureDeltaUnits.DegreesFahrenheit:\r\n                return value * 5 / 9;\r\n            case TemperatureDeltaUnits.DegreesNewton:\r\n                return value * 100 / 33;\r\n            case TemperatureDeltaUnits.DegreesRankine:\r\n                return value * 5 / 9;\r\n            case TemperatureDeltaUnits.DegreesReaumur:\r\n                return value * 5 / 4;\r\n            case TemperatureDeltaUnits.DegreesRoemer:\r\n                return value * 40 / 21;\r\n            case TemperatureDeltaUnits.MillidegreesCelsius:\r\n                return (value) * 0.001;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the TemperatureDelta to string.\r\n     * Note! the default format for TemperatureDelta is Kelvins.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the TemperatureDelta.\r\n     * @returns The string format of the TemperatureDelta.\r\n     */\r\n    toString(toUnit = TemperatureDeltaUnits.Kelvins) {\r\n        switch (toUnit) {\r\n            case TemperatureDeltaUnits.Kelvins:\r\n                return this.Kelvins + ` ∆K`;\r\n            case TemperatureDeltaUnits.DegreesCelsius:\r\n                return this.DegreesCelsius + ` ∆°C`;\r\n            case TemperatureDeltaUnits.DegreesDelisle:\r\n                return this.DegreesDelisle + ` ∆°De`;\r\n            case TemperatureDeltaUnits.DegreesFahrenheit:\r\n                return this.DegreesFahrenheit + ` ∆°F`;\r\n            case TemperatureDeltaUnits.DegreesNewton:\r\n                return this.DegreesNewton + ` ∆°N`;\r\n            case TemperatureDeltaUnits.DegreesRankine:\r\n                return this.DegreesRankine + ` ∆°R`;\r\n            case TemperatureDeltaUnits.DegreesReaumur:\r\n                return this.DegreesReaumur + ` ∆°Ré`;\r\n            case TemperatureDeltaUnits.DegreesRoemer:\r\n                return this.DegreesRoemer + ` ∆°Rø`;\r\n            case TemperatureDeltaUnits.MillidegreesCelsius:\r\n                return this.MillidegreesCelsius + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given TemperatureDelta are equals to the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns True if the given TemperatureDelta are equal to the current TemperatureDelta.\r\n     */\r\n    equals(temperatureDelta) {\r\n        return this.value === temperatureDelta.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given TemperatureDelta against the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns 0 if they are equal, -1 if the current TemperatureDelta is less then other, 1 if the current TemperatureDelta is greater then other.\r\n     */\r\n    compareTo(temperatureDelta) {\r\n        if (this.value > temperatureDelta.BaseValue)\r\n            return 1;\r\n        if (this.value < temperatureDelta.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given TemperatureDelta with the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns A new TemperatureDelta instance with the results.\r\n     */\r\n    add(temperatureDelta) {\r\n        return new TemperatureDelta(this.value + temperatureDelta.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given TemperatureDelta with the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns A new TemperatureDelta instance with the results.\r\n     */\r\n    subtract(temperatureDelta) {\r\n        return new TemperatureDelta(this.value - temperatureDelta.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given TemperatureDelta with the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns A new TemperatureDelta instance with the results.\r\n     */\r\n    multiply(temperatureDelta) {\r\n        return new TemperatureDelta(this.value * temperatureDelta.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given TemperatureDelta with the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns A new TemperatureDelta instance with the results.\r\n     */\r\n    divide(temperatureDelta) {\r\n        return new TemperatureDelta(this.value / temperatureDelta.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given TemperatureDelta with the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns A new TemperatureDelta instance with the results.\r\n     */\r\n    modulo(temperatureDelta) {\r\n        return new TemperatureDelta(this.value % temperatureDelta.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given TemperatureDelta with the current TemperatureDelta.\r\n     * @param temperatureDelta The other TemperatureDelta.\r\n     * @returns A new TemperatureDelta instance with the results.\r\n     */\r\n    pow(temperatureDelta) {\r\n        return new TemperatureDelta(this.value ** temperatureDelta.BaseValue);\r\n    }\r\n}\r\nexports.TemperatureDelta = TemperatureDelta;\r\n//# sourceMappingURL=temperaturedelta.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ThermalConductivity = exports.ThermalConductivityUnits = void 0;\r\n/** ThermalConductivityUnits enumeration */\r\nvar ThermalConductivityUnits;\r\n(function (ThermalConductivityUnits) {\r\n    /** */\r\n    ThermalConductivityUnits[ThermalConductivityUnits[\"WattsPerMeterKelvin\"] = 0] = \"WattsPerMeterKelvin\";\r\n    /** */\r\n    ThermalConductivityUnits[ThermalConductivityUnits[\"BtusPerHourFootFahrenheit\"] = 1] = \"BtusPerHourFootFahrenheit\";\r\n})(ThermalConductivityUnits = exports.ThermalConductivityUnits || (exports.ThermalConductivityUnits = {}));\r\n/** Thermal conductivity is the property of a material to conduct heat. */\r\nclass ThermalConductivity {\r\n    /**\r\n     * Create a new ThermalConductivity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ThermalConductivity’ unit to create from.\r\n     * The default unit is WattsPerMeterKelvin\r\n     */\r\n    constructor(value, fromUnit = ThermalConductivityUnits.WattsPerMeterKelvin) {\r\n        this.wattspermeterkelvinLazy = null;\r\n        this.btusperhourfootfahrenheitLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ThermalConductivity is WattsPerMeterKelvin.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get WattsPerMeterKelvin() {\r\n        if (this.wattspermeterkelvinLazy !== null) {\r\n            return this.wattspermeterkelvinLazy;\r\n        }\r\n        return this.wattspermeterkelvinLazy = this.convertFromBase(ThermalConductivityUnits.WattsPerMeterKelvin);\r\n    }\r\n    /** */\r\n    get BtusPerHourFootFahrenheit() {\r\n        if (this.btusperhourfootfahrenheitLazy !== null) {\r\n            return this.btusperhourfootfahrenheitLazy;\r\n        }\r\n        return this.btusperhourfootfahrenheitLazy = this.convertFromBase(ThermalConductivityUnits.BtusPerHourFootFahrenheit);\r\n    }\r\n    /**\r\n     * Create a new ThermalConductivity instance from a WattsPerMeterKelvin\r\n     *\r\n     * @param value The unit as WattsPerMeterKelvin to create a new ThermalConductivity from.\r\n     * @returns The new ThermalConductivity instance.\r\n     */\r\n    static FromWattsPerMeterKelvin(value) {\r\n        return new ThermalConductivity(value, ThermalConductivityUnits.WattsPerMeterKelvin);\r\n    }\r\n    /**\r\n     * Create a new ThermalConductivity instance from a BtusPerHourFootFahrenheit\r\n     *\r\n     * @param value The unit as BtusPerHourFootFahrenheit to create a new ThermalConductivity from.\r\n     * @returns The new ThermalConductivity instance.\r\n     */\r\n    static FromBtusPerHourFootFahrenheit(value) {\r\n        return new ThermalConductivity(value, ThermalConductivityUnits.BtusPerHourFootFahrenheit);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ThermalConductivityUnits.WattsPerMeterKelvin:\r\n                return this.value;\r\n            case ThermalConductivityUnits.BtusPerHourFootFahrenheit:\r\n                return this.value / 1.73073467;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ThermalConductivityUnits.WattsPerMeterKelvin:\r\n                return value;\r\n            case ThermalConductivityUnits.BtusPerHourFootFahrenheit:\r\n                return value * 1.73073467;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ThermalConductivity to string.\r\n     * Note! the default format for ThermalConductivity is WattsPerMeterKelvin.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ThermalConductivity.\r\n     * @returns The string format of the ThermalConductivity.\r\n     */\r\n    toString(toUnit = ThermalConductivityUnits.WattsPerMeterKelvin) {\r\n        switch (toUnit) {\r\n            case ThermalConductivityUnits.WattsPerMeterKelvin:\r\n                return this.WattsPerMeterKelvin + ` W/m·K`;\r\n            case ThermalConductivityUnits.BtusPerHourFootFahrenheit:\r\n                return this.BtusPerHourFootFahrenheit + ` BTU/h·ft·°F`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ThermalConductivity are equals to the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns True if the given ThermalConductivity are equal to the current ThermalConductivity.\r\n     */\r\n    equals(thermalConductivity) {\r\n        return this.value === thermalConductivity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ThermalConductivity against the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns 0 if they are equal, -1 if the current ThermalConductivity is less then other, 1 if the current ThermalConductivity is greater then other.\r\n     */\r\n    compareTo(thermalConductivity) {\r\n        if (this.value > thermalConductivity.BaseValue)\r\n            return 1;\r\n        if (this.value < thermalConductivity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ThermalConductivity with the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns A new ThermalConductivity instance with the results.\r\n     */\r\n    add(thermalConductivity) {\r\n        return new ThermalConductivity(this.value + thermalConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ThermalConductivity with the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns A new ThermalConductivity instance with the results.\r\n     */\r\n    subtract(thermalConductivity) {\r\n        return new ThermalConductivity(this.value - thermalConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ThermalConductivity with the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns A new ThermalConductivity instance with the results.\r\n     */\r\n    multiply(thermalConductivity) {\r\n        return new ThermalConductivity(this.value * thermalConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ThermalConductivity with the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns A new ThermalConductivity instance with the results.\r\n     */\r\n    divide(thermalConductivity) {\r\n        return new ThermalConductivity(this.value / thermalConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ThermalConductivity with the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns A new ThermalConductivity instance with the results.\r\n     */\r\n    modulo(thermalConductivity) {\r\n        return new ThermalConductivity(this.value % thermalConductivity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ThermalConductivity with the current ThermalConductivity.\r\n     * @param thermalConductivity The other ThermalConductivity.\r\n     * @returns A new ThermalConductivity instance with the results.\r\n     */\r\n    pow(thermalConductivity) {\r\n        return new ThermalConductivity(this.value ** thermalConductivity.BaseValue);\r\n    }\r\n}\r\nexports.ThermalConductivity = ThermalConductivity;\r\n//# sourceMappingURL=thermalconductivity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ThermalResistance = exports.ThermalResistanceUnits = void 0;\r\n/** ThermalResistanceUnits enumeration */\r\nvar ThermalResistanceUnits;\r\n(function (ThermalResistanceUnits) {\r\n    /** */\r\n    ThermalResistanceUnits[ThermalResistanceUnits[\"SquareMeterKelvinsPerKilowatt\"] = 0] = \"SquareMeterKelvinsPerKilowatt\";\r\n    /** */\r\n    ThermalResistanceUnits[ThermalResistanceUnits[\"SquareMeterDegreesCelsiusPerWatt\"] = 1] = \"SquareMeterDegreesCelsiusPerWatt\";\r\n    /** */\r\n    ThermalResistanceUnits[ThermalResistanceUnits[\"SquareCentimeterKelvinsPerWatt\"] = 2] = \"SquareCentimeterKelvinsPerWatt\";\r\n    /** */\r\n    ThermalResistanceUnits[ThermalResistanceUnits[\"SquareCentimeterHourDegreesCelsiusPerKilocalorie\"] = 3] = \"SquareCentimeterHourDegreesCelsiusPerKilocalorie\";\r\n    /** */\r\n    ThermalResistanceUnits[ThermalResistanceUnits[\"HourSquareFeetDegreesFahrenheitPerBtu\"] = 4] = \"HourSquareFeetDegreesFahrenheitPerBtu\";\r\n})(ThermalResistanceUnits = exports.ThermalResistanceUnits || (exports.ThermalResistanceUnits = {}));\r\n/** Heat Transfer Coefficient or Thermal conductivity - indicates a materials ability to conduct heat. */\r\nclass ThermalResistance {\r\n    /**\r\n     * Create a new ThermalResistance.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘ThermalResistance’ unit to create from.\r\n     * The default unit is SquareMeterKelvinsPerKilowatt\r\n     */\r\n    constructor(value, fromUnit = ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt) {\r\n        this.squaremeterkelvinsperkilowattLazy = null;\r\n        this.squaremeterdegreescelsiusperwattLazy = null;\r\n        this.squarecentimeterkelvinsperwattLazy = null;\r\n        this.squarecentimeterhourdegreescelsiusperkilocalorieLazy = null;\r\n        this.hoursquarefeetdegreesfahrenheitperbtuLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of ThermalResistance is SquareMeterKelvinsPerKilowatt.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get SquareMeterKelvinsPerKilowatt() {\r\n        if (this.squaremeterkelvinsperkilowattLazy !== null) {\r\n            return this.squaremeterkelvinsperkilowattLazy;\r\n        }\r\n        return this.squaremeterkelvinsperkilowattLazy = this.convertFromBase(ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt);\r\n    }\r\n    /** */\r\n    get SquareMeterDegreesCelsiusPerWatt() {\r\n        if (this.squaremeterdegreescelsiusperwattLazy !== null) {\r\n            return this.squaremeterdegreescelsiusperwattLazy;\r\n        }\r\n        return this.squaremeterdegreescelsiusperwattLazy = this.convertFromBase(ThermalResistanceUnits.SquareMeterDegreesCelsiusPerWatt);\r\n    }\r\n    /** */\r\n    get SquareCentimeterKelvinsPerWatt() {\r\n        if (this.squarecentimeterkelvinsperwattLazy !== null) {\r\n            return this.squarecentimeterkelvinsperwattLazy;\r\n        }\r\n        return this.squarecentimeterkelvinsperwattLazy = this.convertFromBase(ThermalResistanceUnits.SquareCentimeterKelvinsPerWatt);\r\n    }\r\n    /** */\r\n    get SquareCentimeterHourDegreesCelsiusPerKilocalorie() {\r\n        if (this.squarecentimeterhourdegreescelsiusperkilocalorieLazy !== null) {\r\n            return this.squarecentimeterhourdegreescelsiusperkilocalorieLazy;\r\n        }\r\n        return this.squarecentimeterhourdegreescelsiusperkilocalorieLazy = this.convertFromBase(ThermalResistanceUnits.SquareCentimeterHourDegreesCelsiusPerKilocalorie);\r\n    }\r\n    /** */\r\n    get HourSquareFeetDegreesFahrenheitPerBtu() {\r\n        if (this.hoursquarefeetdegreesfahrenheitperbtuLazy !== null) {\r\n            return this.hoursquarefeetdegreesfahrenheitperbtuLazy;\r\n        }\r\n        return this.hoursquarefeetdegreesfahrenheitperbtuLazy = this.convertFromBase(ThermalResistanceUnits.HourSquareFeetDegreesFahrenheitPerBtu);\r\n    }\r\n    /**\r\n     * Create a new ThermalResistance instance from a SquareMeterKelvinsPerKilowatt\r\n     *\r\n     * @param value The unit as SquareMeterKelvinsPerKilowatt to create a new ThermalResistance from.\r\n     * @returns The new ThermalResistance instance.\r\n     */\r\n    static FromSquareMeterKelvinsPerKilowatt(value) {\r\n        return new ThermalResistance(value, ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt);\r\n    }\r\n    /**\r\n     * Create a new ThermalResistance instance from a SquareMeterDegreesCelsiusPerWatt\r\n     *\r\n     * @param value The unit as SquareMeterDegreesCelsiusPerWatt to create a new ThermalResistance from.\r\n     * @returns The new ThermalResistance instance.\r\n     */\r\n    static FromSquareMeterDegreesCelsiusPerWatt(value) {\r\n        return new ThermalResistance(value, ThermalResistanceUnits.SquareMeterDegreesCelsiusPerWatt);\r\n    }\r\n    /**\r\n     * Create a new ThermalResistance instance from a SquareCentimeterKelvinsPerWatt\r\n     *\r\n     * @param value The unit as SquareCentimeterKelvinsPerWatt to create a new ThermalResistance from.\r\n     * @returns The new ThermalResistance instance.\r\n     */\r\n    static FromSquareCentimeterKelvinsPerWatt(value) {\r\n        return new ThermalResistance(value, ThermalResistanceUnits.SquareCentimeterKelvinsPerWatt);\r\n    }\r\n    /**\r\n     * Create a new ThermalResistance instance from a SquareCentimeterHourDegreesCelsiusPerKilocalorie\r\n     *\r\n     * @param value The unit as SquareCentimeterHourDegreesCelsiusPerKilocalorie to create a new ThermalResistance from.\r\n     * @returns The new ThermalResistance instance.\r\n     */\r\n    static FromSquareCentimeterHourDegreesCelsiusPerKilocalorie(value) {\r\n        return new ThermalResistance(value, ThermalResistanceUnits.SquareCentimeterHourDegreesCelsiusPerKilocalorie);\r\n    }\r\n    /**\r\n     * Create a new ThermalResistance instance from a HourSquareFeetDegreesFahrenheitPerBtu\r\n     *\r\n     * @param value The unit as HourSquareFeetDegreesFahrenheitPerBtu to create a new ThermalResistance from.\r\n     * @returns The new ThermalResistance instance.\r\n     */\r\n    static FromHourSquareFeetDegreesFahrenheitPerBtu(value) {\r\n        return new ThermalResistance(value, ThermalResistanceUnits.HourSquareFeetDegreesFahrenheitPerBtu);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt:\r\n                return this.value;\r\n            case ThermalResistanceUnits.SquareMeterDegreesCelsiusPerWatt:\r\n                return this.value / 1000.088056074108;\r\n            case ThermalResistanceUnits.SquareCentimeterKelvinsPerWatt:\r\n                return this.value / 0.0999964777570357;\r\n            case ThermalResistanceUnits.SquareCentimeterHourDegreesCelsiusPerKilocalorie:\r\n                return this.value / 0.0859779507590433;\r\n            case ThermalResistanceUnits.HourSquareFeetDegreesFahrenheitPerBtu:\r\n                return this.value / 176.1121482159839;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt:\r\n                return value;\r\n            case ThermalResistanceUnits.SquareMeterDegreesCelsiusPerWatt:\r\n                return value * 1000.088056074108;\r\n            case ThermalResistanceUnits.SquareCentimeterKelvinsPerWatt:\r\n                return value * 0.0999964777570357;\r\n            case ThermalResistanceUnits.SquareCentimeterHourDegreesCelsiusPerKilocalorie:\r\n                return value * 0.0859779507590433;\r\n            case ThermalResistanceUnits.HourSquareFeetDegreesFahrenheitPerBtu:\r\n                return value * 176.1121482159839;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the ThermalResistance to string.\r\n     * Note! the default format for ThermalResistance is SquareMeterKelvinsPerKilowatt.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the ThermalResistance.\r\n     * @returns The string format of the ThermalResistance.\r\n     */\r\n    toString(toUnit = ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt) {\r\n        switch (toUnit) {\r\n            case ThermalResistanceUnits.SquareMeterKelvinsPerKilowatt:\r\n                return this.SquareMeterKelvinsPerKilowatt + ` m²K/kW`;\r\n            case ThermalResistanceUnits.SquareMeterDegreesCelsiusPerWatt:\r\n                return this.SquareMeterDegreesCelsiusPerWatt + ` m²°C/W`;\r\n            case ThermalResistanceUnits.SquareCentimeterKelvinsPerWatt:\r\n                return this.SquareCentimeterKelvinsPerWatt + ` cm²K/W`;\r\n            case ThermalResistanceUnits.SquareCentimeterHourDegreesCelsiusPerKilocalorie:\r\n                return this.SquareCentimeterHourDegreesCelsiusPerKilocalorie + ` cm²Hr°C/kcal`;\r\n            case ThermalResistanceUnits.HourSquareFeetDegreesFahrenheitPerBtu:\r\n                return this.HourSquareFeetDegreesFahrenheitPerBtu + ` Hrft²°F/Btu`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given ThermalResistance are equals to the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns True if the given ThermalResistance are equal to the current ThermalResistance.\r\n     */\r\n    equals(thermalResistance) {\r\n        return this.value === thermalResistance.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given ThermalResistance against the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns 0 if they are equal, -1 if the current ThermalResistance is less then other, 1 if the current ThermalResistance is greater then other.\r\n     */\r\n    compareTo(thermalResistance) {\r\n        if (this.value > thermalResistance.BaseValue)\r\n            return 1;\r\n        if (this.value < thermalResistance.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given ThermalResistance with the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns A new ThermalResistance instance with the results.\r\n     */\r\n    add(thermalResistance) {\r\n        return new ThermalResistance(this.value + thermalResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given ThermalResistance with the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns A new ThermalResistance instance with the results.\r\n     */\r\n    subtract(thermalResistance) {\r\n        return new ThermalResistance(this.value - thermalResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given ThermalResistance with the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns A new ThermalResistance instance with the results.\r\n     */\r\n    multiply(thermalResistance) {\r\n        return new ThermalResistance(this.value * thermalResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given ThermalResistance with the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns A new ThermalResistance instance with the results.\r\n     */\r\n    divide(thermalResistance) {\r\n        return new ThermalResistance(this.value / thermalResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given ThermalResistance with the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns A new ThermalResistance instance with the results.\r\n     */\r\n    modulo(thermalResistance) {\r\n        return new ThermalResistance(this.value % thermalResistance.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given ThermalResistance with the current ThermalResistance.\r\n     * @param thermalResistance The other ThermalResistance.\r\n     * @returns A new ThermalResistance instance with the results.\r\n     */\r\n    pow(thermalResistance) {\r\n        return new ThermalResistance(this.value ** thermalResistance.BaseValue);\r\n    }\r\n}\r\nexports.ThermalResistance = ThermalResistance;\r\n//# sourceMappingURL=thermalresistance.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Torque = exports.TorqueUnits = void 0;\r\n/** TorqueUnits enumeration */\r\nvar TorqueUnits;\r\n(function (TorqueUnits) {\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"NewtonMillimeters\"] = 0] = \"NewtonMillimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"NewtonCentimeters\"] = 1] = \"NewtonCentimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"NewtonMeters\"] = 2] = \"NewtonMeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"PoundalFeet\"] = 3] = \"PoundalFeet\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"PoundForceInches\"] = 4] = \"PoundForceInches\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"PoundForceFeet\"] = 5] = \"PoundForceFeet\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilogramForceMillimeters\"] = 6] = \"KilogramForceMillimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilogramForceCentimeters\"] = 7] = \"KilogramForceCentimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilogramForceMeters\"] = 8] = \"KilogramForceMeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"TonneForceMillimeters\"] = 9] = \"TonneForceMillimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"TonneForceCentimeters\"] = 10] = \"TonneForceCentimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"TonneForceMeters\"] = 11] = \"TonneForceMeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilonewtonMillimeters\"] = 12] = \"KilonewtonMillimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"MeganewtonMillimeters\"] = 13] = \"MeganewtonMillimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilonewtonCentimeters\"] = 14] = \"KilonewtonCentimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"MeganewtonCentimeters\"] = 15] = \"MeganewtonCentimeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilonewtonMeters\"] = 16] = \"KilonewtonMeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"MeganewtonMeters\"] = 17] = \"MeganewtonMeters\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilopoundForceInches\"] = 18] = \"KilopoundForceInches\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"MegapoundForceInches\"] = 19] = \"MegapoundForceInches\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"KilopoundForceFeet\"] = 20] = \"KilopoundForceFeet\";\r\n    /** */\r\n    TorqueUnits[TorqueUnits[\"MegapoundForceFeet\"] = 21] = \"MegapoundForceFeet\";\r\n})(TorqueUnits = exports.TorqueUnits || (exports.TorqueUnits = {}));\r\n/** Torque, moment or moment of force (see the terminology below), is the tendency of a force to rotate an object about an axis,[1] fulcrum, or pivot. Just as a force is a push or a pull, a torque can be thought of as a twist to an object. Mathematically, torque is defined as the cross product of the lever-arm distance and force, which tends to produce rotation. Loosely speaking, torque is a measure of the turning force on an object such as a bolt or a flywheel. For example, pushing or pulling the handle of a wrench connected to a nut or bolt produces a torque (turning force) that loosens or tightens the nut or bolt. */\r\nclass Torque {\r\n    /**\r\n     * Create a new Torque.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Torque’ unit to create from.\r\n     * The default unit is NewtonMeters\r\n     */\r\n    constructor(value, fromUnit = TorqueUnits.NewtonMeters) {\r\n        this.newtonmillimetersLazy = null;\r\n        this.newtoncentimetersLazy = null;\r\n        this.newtonmetersLazy = null;\r\n        this.poundalfeetLazy = null;\r\n        this.poundforceinchesLazy = null;\r\n        this.poundforcefeetLazy = null;\r\n        this.kilogramforcemillimetersLazy = null;\r\n        this.kilogramforcecentimetersLazy = null;\r\n        this.kilogramforcemetersLazy = null;\r\n        this.tonneforcemillimetersLazy = null;\r\n        this.tonneforcecentimetersLazy = null;\r\n        this.tonneforcemetersLazy = null;\r\n        this.kilonewtonmillimetersLazy = null;\r\n        this.meganewtonmillimetersLazy = null;\r\n        this.kilonewtoncentimetersLazy = null;\r\n        this.meganewtoncentimetersLazy = null;\r\n        this.kilonewtonmetersLazy = null;\r\n        this.meganewtonmetersLazy = null;\r\n        this.kilopoundforceinchesLazy = null;\r\n        this.megapoundforceinchesLazy = null;\r\n        this.kilopoundforcefeetLazy = null;\r\n        this.megapoundforcefeetLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Torque is NewtonMeters.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonMillimeters() {\r\n        if (this.newtonmillimetersLazy !== null) {\r\n            return this.newtonmillimetersLazy;\r\n        }\r\n        return this.newtonmillimetersLazy = this.convertFromBase(TorqueUnits.NewtonMillimeters);\r\n    }\r\n    /** */\r\n    get NewtonCentimeters() {\r\n        if (this.newtoncentimetersLazy !== null) {\r\n            return this.newtoncentimetersLazy;\r\n        }\r\n        return this.newtoncentimetersLazy = this.convertFromBase(TorqueUnits.NewtonCentimeters);\r\n    }\r\n    /** */\r\n    get NewtonMeters() {\r\n        if (this.newtonmetersLazy !== null) {\r\n            return this.newtonmetersLazy;\r\n        }\r\n        return this.newtonmetersLazy = this.convertFromBase(TorqueUnits.NewtonMeters);\r\n    }\r\n    /** */\r\n    get PoundalFeet() {\r\n        if (this.poundalfeetLazy !== null) {\r\n            return this.poundalfeetLazy;\r\n        }\r\n        return this.poundalfeetLazy = this.convertFromBase(TorqueUnits.PoundalFeet);\r\n    }\r\n    /** */\r\n    get PoundForceInches() {\r\n        if (this.poundforceinchesLazy !== null) {\r\n            return this.poundforceinchesLazy;\r\n        }\r\n        return this.poundforceinchesLazy = this.convertFromBase(TorqueUnits.PoundForceInches);\r\n    }\r\n    /** */\r\n    get PoundForceFeet() {\r\n        if (this.poundforcefeetLazy !== null) {\r\n            return this.poundforcefeetLazy;\r\n        }\r\n        return this.poundforcefeetLazy = this.convertFromBase(TorqueUnits.PoundForceFeet);\r\n    }\r\n    /** */\r\n    get KilogramForceMillimeters() {\r\n        if (this.kilogramforcemillimetersLazy !== null) {\r\n            return this.kilogramforcemillimetersLazy;\r\n        }\r\n        return this.kilogramforcemillimetersLazy = this.convertFromBase(TorqueUnits.KilogramForceMillimeters);\r\n    }\r\n    /** */\r\n    get KilogramForceCentimeters() {\r\n        if (this.kilogramforcecentimetersLazy !== null) {\r\n            return this.kilogramforcecentimetersLazy;\r\n        }\r\n        return this.kilogramforcecentimetersLazy = this.convertFromBase(TorqueUnits.KilogramForceCentimeters);\r\n    }\r\n    /** */\r\n    get KilogramForceMeters() {\r\n        if (this.kilogramforcemetersLazy !== null) {\r\n            return this.kilogramforcemetersLazy;\r\n        }\r\n        return this.kilogramforcemetersLazy = this.convertFromBase(TorqueUnits.KilogramForceMeters);\r\n    }\r\n    /** */\r\n    get TonneForceMillimeters() {\r\n        if (this.tonneforcemillimetersLazy !== null) {\r\n            return this.tonneforcemillimetersLazy;\r\n        }\r\n        return this.tonneforcemillimetersLazy = this.convertFromBase(TorqueUnits.TonneForceMillimeters);\r\n    }\r\n    /** */\r\n    get TonneForceCentimeters() {\r\n        if (this.tonneforcecentimetersLazy !== null) {\r\n            return this.tonneforcecentimetersLazy;\r\n        }\r\n        return this.tonneforcecentimetersLazy = this.convertFromBase(TorqueUnits.TonneForceCentimeters);\r\n    }\r\n    /** */\r\n    get TonneForceMeters() {\r\n        if (this.tonneforcemetersLazy !== null) {\r\n            return this.tonneforcemetersLazy;\r\n        }\r\n        return this.tonneforcemetersLazy = this.convertFromBase(TorqueUnits.TonneForceMeters);\r\n    }\r\n    /** */\r\n    get KilonewtonMillimeters() {\r\n        if (this.kilonewtonmillimetersLazy !== null) {\r\n            return this.kilonewtonmillimetersLazy;\r\n        }\r\n        return this.kilonewtonmillimetersLazy = this.convertFromBase(TorqueUnits.KilonewtonMillimeters);\r\n    }\r\n    /** */\r\n    get MeganewtonMillimeters() {\r\n        if (this.meganewtonmillimetersLazy !== null) {\r\n            return this.meganewtonmillimetersLazy;\r\n        }\r\n        return this.meganewtonmillimetersLazy = this.convertFromBase(TorqueUnits.MeganewtonMillimeters);\r\n    }\r\n    /** */\r\n    get KilonewtonCentimeters() {\r\n        if (this.kilonewtoncentimetersLazy !== null) {\r\n            return this.kilonewtoncentimetersLazy;\r\n        }\r\n        return this.kilonewtoncentimetersLazy = this.convertFromBase(TorqueUnits.KilonewtonCentimeters);\r\n    }\r\n    /** */\r\n    get MeganewtonCentimeters() {\r\n        if (this.meganewtoncentimetersLazy !== null) {\r\n            return this.meganewtoncentimetersLazy;\r\n        }\r\n        return this.meganewtoncentimetersLazy = this.convertFromBase(TorqueUnits.MeganewtonCentimeters);\r\n    }\r\n    /** */\r\n    get KilonewtonMeters() {\r\n        if (this.kilonewtonmetersLazy !== null) {\r\n            return this.kilonewtonmetersLazy;\r\n        }\r\n        return this.kilonewtonmetersLazy = this.convertFromBase(TorqueUnits.KilonewtonMeters);\r\n    }\r\n    /** */\r\n    get MeganewtonMeters() {\r\n        if (this.meganewtonmetersLazy !== null) {\r\n            return this.meganewtonmetersLazy;\r\n        }\r\n        return this.meganewtonmetersLazy = this.convertFromBase(TorqueUnits.MeganewtonMeters);\r\n    }\r\n    /** */\r\n    get KilopoundForceInches() {\r\n        if (this.kilopoundforceinchesLazy !== null) {\r\n            return this.kilopoundforceinchesLazy;\r\n        }\r\n        return this.kilopoundforceinchesLazy = this.convertFromBase(TorqueUnits.KilopoundForceInches);\r\n    }\r\n    /** */\r\n    get MegapoundForceInches() {\r\n        if (this.megapoundforceinchesLazy !== null) {\r\n            return this.megapoundforceinchesLazy;\r\n        }\r\n        return this.megapoundforceinchesLazy = this.convertFromBase(TorqueUnits.MegapoundForceInches);\r\n    }\r\n    /** */\r\n    get KilopoundForceFeet() {\r\n        if (this.kilopoundforcefeetLazy !== null) {\r\n            return this.kilopoundforcefeetLazy;\r\n        }\r\n        return this.kilopoundforcefeetLazy = this.convertFromBase(TorqueUnits.KilopoundForceFeet);\r\n    }\r\n    /** */\r\n    get MegapoundForceFeet() {\r\n        if (this.megapoundforcefeetLazy !== null) {\r\n            return this.megapoundforcefeetLazy;\r\n        }\r\n        return this.megapoundforcefeetLazy = this.convertFromBase(TorqueUnits.MegapoundForceFeet);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a NewtonMillimeters\r\n     *\r\n     * @param value The unit as NewtonMillimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromNewtonMillimeters(value) {\r\n        return new Torque(value, TorqueUnits.NewtonMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a NewtonCentimeters\r\n     *\r\n     * @param value The unit as NewtonCentimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromNewtonCentimeters(value) {\r\n        return new Torque(value, TorqueUnits.NewtonCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a NewtonMeters\r\n     *\r\n     * @param value The unit as NewtonMeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromNewtonMeters(value) {\r\n        return new Torque(value, TorqueUnits.NewtonMeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a PoundalFeet\r\n     *\r\n     * @param value The unit as PoundalFeet to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromPoundalFeet(value) {\r\n        return new Torque(value, TorqueUnits.PoundalFeet);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a PoundForceInches\r\n     *\r\n     * @param value The unit as PoundForceInches to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromPoundForceInches(value) {\r\n        return new Torque(value, TorqueUnits.PoundForceInches);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a PoundForceFeet\r\n     *\r\n     * @param value The unit as PoundForceFeet to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromPoundForceFeet(value) {\r\n        return new Torque(value, TorqueUnits.PoundForceFeet);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilogramForceMillimeters\r\n     *\r\n     * @param value The unit as KilogramForceMillimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilogramForceMillimeters(value) {\r\n        return new Torque(value, TorqueUnits.KilogramForceMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilogramForceCentimeters\r\n     *\r\n     * @param value The unit as KilogramForceCentimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilogramForceCentimeters(value) {\r\n        return new Torque(value, TorqueUnits.KilogramForceCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilogramForceMeters\r\n     *\r\n     * @param value The unit as KilogramForceMeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilogramForceMeters(value) {\r\n        return new Torque(value, TorqueUnits.KilogramForceMeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a TonneForceMillimeters\r\n     *\r\n     * @param value The unit as TonneForceMillimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromTonneForceMillimeters(value) {\r\n        return new Torque(value, TorqueUnits.TonneForceMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a TonneForceCentimeters\r\n     *\r\n     * @param value The unit as TonneForceCentimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromTonneForceCentimeters(value) {\r\n        return new Torque(value, TorqueUnits.TonneForceCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a TonneForceMeters\r\n     *\r\n     * @param value The unit as TonneForceMeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromTonneForceMeters(value) {\r\n        return new Torque(value, TorqueUnits.TonneForceMeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilonewtonMillimeters\r\n     *\r\n     * @param value The unit as KilonewtonMillimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilonewtonMillimeters(value) {\r\n        return new Torque(value, TorqueUnits.KilonewtonMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a MeganewtonMillimeters\r\n     *\r\n     * @param value The unit as MeganewtonMillimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromMeganewtonMillimeters(value) {\r\n        return new Torque(value, TorqueUnits.MeganewtonMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilonewtonCentimeters\r\n     *\r\n     * @param value The unit as KilonewtonCentimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilonewtonCentimeters(value) {\r\n        return new Torque(value, TorqueUnits.KilonewtonCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a MeganewtonCentimeters\r\n     *\r\n     * @param value The unit as MeganewtonCentimeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromMeganewtonCentimeters(value) {\r\n        return new Torque(value, TorqueUnits.MeganewtonCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilonewtonMeters\r\n     *\r\n     * @param value The unit as KilonewtonMeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilonewtonMeters(value) {\r\n        return new Torque(value, TorqueUnits.KilonewtonMeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a MeganewtonMeters\r\n     *\r\n     * @param value The unit as MeganewtonMeters to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromMeganewtonMeters(value) {\r\n        return new Torque(value, TorqueUnits.MeganewtonMeters);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilopoundForceInches\r\n     *\r\n     * @param value The unit as KilopoundForceInches to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilopoundForceInches(value) {\r\n        return new Torque(value, TorqueUnits.KilopoundForceInches);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a MegapoundForceInches\r\n     *\r\n     * @param value The unit as MegapoundForceInches to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromMegapoundForceInches(value) {\r\n        return new Torque(value, TorqueUnits.MegapoundForceInches);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a KilopoundForceFeet\r\n     *\r\n     * @param value The unit as KilopoundForceFeet to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromKilopoundForceFeet(value) {\r\n        return new Torque(value, TorqueUnits.KilopoundForceFeet);\r\n    }\r\n    /**\r\n     * Create a new Torque instance from a MegapoundForceFeet\r\n     *\r\n     * @param value The unit as MegapoundForceFeet to create a new Torque from.\r\n     * @returns The new Torque instance.\r\n     */\r\n    static FromMegapoundForceFeet(value) {\r\n        return new Torque(value, TorqueUnits.MegapoundForceFeet);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case TorqueUnits.NewtonMillimeters:\r\n                return this.value * 1000;\r\n            case TorqueUnits.NewtonCentimeters:\r\n                return this.value * 100;\r\n            case TorqueUnits.NewtonMeters:\r\n                return this.value;\r\n            case TorqueUnits.PoundalFeet:\r\n                return this.value / 4.21401100938048e-2;\r\n            case TorqueUnits.PoundForceInches:\r\n                return this.value / 1.129848290276167e-1;\r\n            case TorqueUnits.PoundForceFeet:\r\n                return this.value / 1.3558179483314;\r\n            case TorqueUnits.KilogramForceMillimeters:\r\n                return this.value * 101.971619222242;\r\n            case TorqueUnits.KilogramForceCentimeters:\r\n                return this.value * 10.1971619222242;\r\n            case TorqueUnits.KilogramForceMeters:\r\n                return this.value * 0.101971619222242;\r\n            case TorqueUnits.TonneForceMillimeters:\r\n                return this.value * 0.101971619222242;\r\n            case TorqueUnits.TonneForceCentimeters:\r\n                return this.value * 0.0101971619222242;\r\n            case TorqueUnits.TonneForceMeters:\r\n                return this.value * 0.000101971619222242;\r\n            case TorqueUnits.KilonewtonMillimeters:\r\n                return (this.value * 1000) / 1000;\r\n            case TorqueUnits.MeganewtonMillimeters:\r\n                return (this.value * 1000) / 1000000;\r\n            case TorqueUnits.KilonewtonCentimeters:\r\n                return (this.value * 100) / 1000;\r\n            case TorqueUnits.MeganewtonCentimeters:\r\n                return (this.value * 100) / 1000000;\r\n            case TorqueUnits.KilonewtonMeters:\r\n                return (this.value) / 1000;\r\n            case TorqueUnits.MeganewtonMeters:\r\n                return (this.value) / 1000000;\r\n            case TorqueUnits.KilopoundForceInches:\r\n                return (this.value / 1.129848290276167e-1) / 1000;\r\n            case TorqueUnits.MegapoundForceInches:\r\n                return (this.value / 1.129848290276167e-1) / 1000000;\r\n            case TorqueUnits.KilopoundForceFeet:\r\n                return (this.value / 1.3558179483314) / 1000;\r\n            case TorqueUnits.MegapoundForceFeet:\r\n                return (this.value / 1.3558179483314) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case TorqueUnits.NewtonMillimeters:\r\n                return value * 0.001;\r\n            case TorqueUnits.NewtonCentimeters:\r\n                return value * 0.01;\r\n            case TorqueUnits.NewtonMeters:\r\n                return value;\r\n            case TorqueUnits.PoundalFeet:\r\n                return value * 4.21401100938048e-2;\r\n            case TorqueUnits.PoundForceInches:\r\n                return value * 1.129848290276167e-1;\r\n            case TorqueUnits.PoundForceFeet:\r\n                return value * 1.3558179483314;\r\n            case TorqueUnits.KilogramForceMillimeters:\r\n                return value * 0.00980665019960652;\r\n            case TorqueUnits.KilogramForceCentimeters:\r\n                return value * 0.0980665019960652;\r\n            case TorqueUnits.KilogramForceMeters:\r\n                return value * 9.80665019960652;\r\n            case TorqueUnits.TonneForceMillimeters:\r\n                return value * 9.80665019960652;\r\n            case TorqueUnits.TonneForceCentimeters:\r\n                return value * 98.0665019960652;\r\n            case TorqueUnits.TonneForceMeters:\r\n                return value * 9806.65019960653;\r\n            case TorqueUnits.KilonewtonMillimeters:\r\n                return (value * 0.001) * 1000;\r\n            case TorqueUnits.MeganewtonMillimeters:\r\n                return (value * 0.001) * 1000000;\r\n            case TorqueUnits.KilonewtonCentimeters:\r\n                return (value * 0.01) * 1000;\r\n            case TorqueUnits.MeganewtonCentimeters:\r\n                return (value * 0.01) * 1000000;\r\n            case TorqueUnits.KilonewtonMeters:\r\n                return (value) * 1000;\r\n            case TorqueUnits.MeganewtonMeters:\r\n                return (value) * 1000000;\r\n            case TorqueUnits.KilopoundForceInches:\r\n                return (value * 1.129848290276167e-1) * 1000;\r\n            case TorqueUnits.MegapoundForceInches:\r\n                return (value * 1.129848290276167e-1) * 1000000;\r\n            case TorqueUnits.KilopoundForceFeet:\r\n                return (value * 1.3558179483314) * 1000;\r\n            case TorqueUnits.MegapoundForceFeet:\r\n                return (value * 1.3558179483314) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Torque to string.\r\n     * Note! the default format for Torque is NewtonMeters.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Torque.\r\n     * @returns The string format of the Torque.\r\n     */\r\n    toString(toUnit = TorqueUnits.NewtonMeters) {\r\n        switch (toUnit) {\r\n            case TorqueUnits.NewtonMillimeters:\r\n                return this.NewtonMillimeters + ` N·mm`;\r\n            case TorqueUnits.NewtonCentimeters:\r\n                return this.NewtonCentimeters + ` N·cm`;\r\n            case TorqueUnits.NewtonMeters:\r\n                return this.NewtonMeters + ` N·m`;\r\n            case TorqueUnits.PoundalFeet:\r\n                return this.PoundalFeet + ` pdl·ft`;\r\n            case TorqueUnits.PoundForceInches:\r\n                return this.PoundForceInches + ` lbf·in`;\r\n            case TorqueUnits.PoundForceFeet:\r\n                return this.PoundForceFeet + ` lbf·ft`;\r\n            case TorqueUnits.KilogramForceMillimeters:\r\n                return this.KilogramForceMillimeters + ` kgf·mm`;\r\n            case TorqueUnits.KilogramForceCentimeters:\r\n                return this.KilogramForceCentimeters + ` kgf·cm`;\r\n            case TorqueUnits.KilogramForceMeters:\r\n                return this.KilogramForceMeters + ` kgf·m`;\r\n            case TorqueUnits.TonneForceMillimeters:\r\n                return this.TonneForceMillimeters + ` tf·mm`;\r\n            case TorqueUnits.TonneForceCentimeters:\r\n                return this.TonneForceCentimeters + ` tf·cm`;\r\n            case TorqueUnits.TonneForceMeters:\r\n                return this.TonneForceMeters + ` tf·m`;\r\n            case TorqueUnits.KilonewtonMillimeters:\r\n                return this.KilonewtonMillimeters + ` `;\r\n            case TorqueUnits.MeganewtonMillimeters:\r\n                return this.MeganewtonMillimeters + ` `;\r\n            case TorqueUnits.KilonewtonCentimeters:\r\n                return this.KilonewtonCentimeters + ` `;\r\n            case TorqueUnits.MeganewtonCentimeters:\r\n                return this.MeganewtonCentimeters + ` `;\r\n            case TorqueUnits.KilonewtonMeters:\r\n                return this.KilonewtonMeters + ` `;\r\n            case TorqueUnits.MeganewtonMeters:\r\n                return this.MeganewtonMeters + ` `;\r\n            case TorqueUnits.KilopoundForceInches:\r\n                return this.KilopoundForceInches + ` `;\r\n            case TorqueUnits.MegapoundForceInches:\r\n                return this.MegapoundForceInches + ` `;\r\n            case TorqueUnits.KilopoundForceFeet:\r\n                return this.KilopoundForceFeet + ` `;\r\n            case TorqueUnits.MegapoundForceFeet:\r\n                return this.MegapoundForceFeet + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Torque are equals to the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns True if the given Torque are equal to the current Torque.\r\n     */\r\n    equals(torque) {\r\n        return this.value === torque.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Torque against the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns 0 if they are equal, -1 if the current Torque is less then other, 1 if the current Torque is greater then other.\r\n     */\r\n    compareTo(torque) {\r\n        if (this.value > torque.BaseValue)\r\n            return 1;\r\n        if (this.value < torque.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Torque with the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns A new Torque instance with the results.\r\n     */\r\n    add(torque) {\r\n        return new Torque(this.value + torque.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Torque with the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns A new Torque instance with the results.\r\n     */\r\n    subtract(torque) {\r\n        return new Torque(this.value - torque.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Torque with the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns A new Torque instance with the results.\r\n     */\r\n    multiply(torque) {\r\n        return new Torque(this.value * torque.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Torque with the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns A new Torque instance with the results.\r\n     */\r\n    divide(torque) {\r\n        return new Torque(this.value / torque.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Torque with the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns A new Torque instance with the results.\r\n     */\r\n    modulo(torque) {\r\n        return new Torque(this.value % torque.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Torque with the current Torque.\r\n     * @param torque The other Torque.\r\n     * @returns A new Torque instance with the results.\r\n     */\r\n    pow(torque) {\r\n        return new Torque(this.value ** torque.BaseValue);\r\n    }\r\n}\r\nexports.Torque = Torque;\r\n//# sourceMappingURL=torque.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TorquePerLength = exports.TorquePerLengthUnits = void 0;\r\n/** TorquePerLengthUnits enumeration */\r\nvar TorquePerLengthUnits;\r\n(function (TorquePerLengthUnits) {\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"NewtonMillimetersPerMeter\"] = 0] = \"NewtonMillimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"NewtonCentimetersPerMeter\"] = 1] = \"NewtonCentimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"NewtonMetersPerMeter\"] = 2] = \"NewtonMetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"PoundForceInchesPerFoot\"] = 3] = \"PoundForceInchesPerFoot\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"PoundForceFeetPerFoot\"] = 4] = \"PoundForceFeetPerFoot\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilogramForceMillimetersPerMeter\"] = 5] = \"KilogramForceMillimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilogramForceCentimetersPerMeter\"] = 6] = \"KilogramForceCentimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilogramForceMetersPerMeter\"] = 7] = \"KilogramForceMetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"TonneForceMillimetersPerMeter\"] = 8] = \"TonneForceMillimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"TonneForceCentimetersPerMeter\"] = 9] = \"TonneForceCentimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"TonneForceMetersPerMeter\"] = 10] = \"TonneForceMetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilonewtonMillimetersPerMeter\"] = 11] = \"KilonewtonMillimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"MeganewtonMillimetersPerMeter\"] = 12] = \"MeganewtonMillimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilonewtonCentimetersPerMeter\"] = 13] = \"KilonewtonCentimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"MeganewtonCentimetersPerMeter\"] = 14] = \"MeganewtonCentimetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilonewtonMetersPerMeter\"] = 15] = \"KilonewtonMetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"MeganewtonMetersPerMeter\"] = 16] = \"MeganewtonMetersPerMeter\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilopoundForceInchesPerFoot\"] = 17] = \"KilopoundForceInchesPerFoot\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"MegapoundForceInchesPerFoot\"] = 18] = \"MegapoundForceInchesPerFoot\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"KilopoundForceFeetPerFoot\"] = 19] = \"KilopoundForceFeetPerFoot\";\r\n    /** */\r\n    TorquePerLengthUnits[TorquePerLengthUnits[\"MegapoundForceFeetPerFoot\"] = 20] = \"MegapoundForceFeetPerFoot\";\r\n})(TorquePerLengthUnits = exports.TorquePerLengthUnits || (exports.TorquePerLengthUnits = {}));\r\n/** The magnitude of torque per unit length. */\r\nclass TorquePerLength {\r\n    /**\r\n     * Create a new TorquePerLength.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘TorquePerLength’ unit to create from.\r\n     * The default unit is NewtonMetersPerMeter\r\n     */\r\n    constructor(value, fromUnit = TorquePerLengthUnits.NewtonMetersPerMeter) {\r\n        this.newtonmillimeterspermeterLazy = null;\r\n        this.newtoncentimeterspermeterLazy = null;\r\n        this.newtonmeterspermeterLazy = null;\r\n        this.poundforceinchesperfootLazy = null;\r\n        this.poundforcefeetperfootLazy = null;\r\n        this.kilogramforcemillimeterspermeterLazy = null;\r\n        this.kilogramforcecentimeterspermeterLazy = null;\r\n        this.kilogramforcemeterspermeterLazy = null;\r\n        this.tonneforcemillimeterspermeterLazy = null;\r\n        this.tonneforcecentimeterspermeterLazy = null;\r\n        this.tonneforcemeterspermeterLazy = null;\r\n        this.kilonewtonmillimeterspermeterLazy = null;\r\n        this.meganewtonmillimeterspermeterLazy = null;\r\n        this.kilonewtoncentimeterspermeterLazy = null;\r\n        this.meganewtoncentimeterspermeterLazy = null;\r\n        this.kilonewtonmeterspermeterLazy = null;\r\n        this.meganewtonmeterspermeterLazy = null;\r\n        this.kilopoundforceinchesperfootLazy = null;\r\n        this.megapoundforceinchesperfootLazy = null;\r\n        this.kilopoundforcefeetperfootLazy = null;\r\n        this.megapoundforcefeetperfootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of TorquePerLength is NewtonMetersPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NewtonMillimetersPerMeter() {\r\n        if (this.newtonmillimeterspermeterLazy !== null) {\r\n            return this.newtonmillimeterspermeterLazy;\r\n        }\r\n        return this.newtonmillimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.NewtonMillimetersPerMeter);\r\n    }\r\n    /** */\r\n    get NewtonCentimetersPerMeter() {\r\n        if (this.newtoncentimeterspermeterLazy !== null) {\r\n            return this.newtoncentimeterspermeterLazy;\r\n        }\r\n        return this.newtoncentimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.NewtonCentimetersPerMeter);\r\n    }\r\n    /** */\r\n    get NewtonMetersPerMeter() {\r\n        if (this.newtonmeterspermeterLazy !== null) {\r\n            return this.newtonmeterspermeterLazy;\r\n        }\r\n        return this.newtonmeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.NewtonMetersPerMeter);\r\n    }\r\n    /** */\r\n    get PoundForceInchesPerFoot() {\r\n        if (this.poundforceinchesperfootLazy !== null) {\r\n            return this.poundforceinchesperfootLazy;\r\n        }\r\n        return this.poundforceinchesperfootLazy = this.convertFromBase(TorquePerLengthUnits.PoundForceInchesPerFoot);\r\n    }\r\n    /** */\r\n    get PoundForceFeetPerFoot() {\r\n        if (this.poundforcefeetperfootLazy !== null) {\r\n            return this.poundforcefeetperfootLazy;\r\n        }\r\n        return this.poundforcefeetperfootLazy = this.convertFromBase(TorquePerLengthUnits.PoundForceFeetPerFoot);\r\n    }\r\n    /** */\r\n    get KilogramForceMillimetersPerMeter() {\r\n        if (this.kilogramforcemillimeterspermeterLazy !== null) {\r\n            return this.kilogramforcemillimeterspermeterLazy;\r\n        }\r\n        return this.kilogramforcemillimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.KilogramForceMillimetersPerMeter);\r\n    }\r\n    /** */\r\n    get KilogramForceCentimetersPerMeter() {\r\n        if (this.kilogramforcecentimeterspermeterLazy !== null) {\r\n            return this.kilogramforcecentimeterspermeterLazy;\r\n        }\r\n        return this.kilogramforcecentimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.KilogramForceCentimetersPerMeter);\r\n    }\r\n    /** */\r\n    get KilogramForceMetersPerMeter() {\r\n        if (this.kilogramforcemeterspermeterLazy !== null) {\r\n            return this.kilogramforcemeterspermeterLazy;\r\n        }\r\n        return this.kilogramforcemeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.KilogramForceMetersPerMeter);\r\n    }\r\n    /** */\r\n    get TonneForceMillimetersPerMeter() {\r\n        if (this.tonneforcemillimeterspermeterLazy !== null) {\r\n            return this.tonneforcemillimeterspermeterLazy;\r\n        }\r\n        return this.tonneforcemillimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.TonneForceMillimetersPerMeter);\r\n    }\r\n    /** */\r\n    get TonneForceCentimetersPerMeter() {\r\n        if (this.tonneforcecentimeterspermeterLazy !== null) {\r\n            return this.tonneforcecentimeterspermeterLazy;\r\n        }\r\n        return this.tonneforcecentimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.TonneForceCentimetersPerMeter);\r\n    }\r\n    /** */\r\n    get TonneForceMetersPerMeter() {\r\n        if (this.tonneforcemeterspermeterLazy !== null) {\r\n            return this.tonneforcemeterspermeterLazy;\r\n        }\r\n        return this.tonneforcemeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.TonneForceMetersPerMeter);\r\n    }\r\n    /** */\r\n    get KilonewtonMillimetersPerMeter() {\r\n        if (this.kilonewtonmillimeterspermeterLazy !== null) {\r\n            return this.kilonewtonmillimeterspermeterLazy;\r\n        }\r\n        return this.kilonewtonmillimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.KilonewtonMillimetersPerMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonMillimetersPerMeter() {\r\n        if (this.meganewtonmillimeterspermeterLazy !== null) {\r\n            return this.meganewtonmillimeterspermeterLazy;\r\n        }\r\n        return this.meganewtonmillimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.MeganewtonMillimetersPerMeter);\r\n    }\r\n    /** */\r\n    get KilonewtonCentimetersPerMeter() {\r\n        if (this.kilonewtoncentimeterspermeterLazy !== null) {\r\n            return this.kilonewtoncentimeterspermeterLazy;\r\n        }\r\n        return this.kilonewtoncentimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.KilonewtonCentimetersPerMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonCentimetersPerMeter() {\r\n        if (this.meganewtoncentimeterspermeterLazy !== null) {\r\n            return this.meganewtoncentimeterspermeterLazy;\r\n        }\r\n        return this.meganewtoncentimeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.MeganewtonCentimetersPerMeter);\r\n    }\r\n    /** */\r\n    get KilonewtonMetersPerMeter() {\r\n        if (this.kilonewtonmeterspermeterLazy !== null) {\r\n            return this.kilonewtonmeterspermeterLazy;\r\n        }\r\n        return this.kilonewtonmeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.KilonewtonMetersPerMeter);\r\n    }\r\n    /** */\r\n    get MeganewtonMetersPerMeter() {\r\n        if (this.meganewtonmeterspermeterLazy !== null) {\r\n            return this.meganewtonmeterspermeterLazy;\r\n        }\r\n        return this.meganewtonmeterspermeterLazy = this.convertFromBase(TorquePerLengthUnits.MeganewtonMetersPerMeter);\r\n    }\r\n    /** */\r\n    get KilopoundForceInchesPerFoot() {\r\n        if (this.kilopoundforceinchesperfootLazy !== null) {\r\n            return this.kilopoundforceinchesperfootLazy;\r\n        }\r\n        return this.kilopoundforceinchesperfootLazy = this.convertFromBase(TorquePerLengthUnits.KilopoundForceInchesPerFoot);\r\n    }\r\n    /** */\r\n    get MegapoundForceInchesPerFoot() {\r\n        if (this.megapoundforceinchesperfootLazy !== null) {\r\n            return this.megapoundforceinchesperfootLazy;\r\n        }\r\n        return this.megapoundforceinchesperfootLazy = this.convertFromBase(TorquePerLengthUnits.MegapoundForceInchesPerFoot);\r\n    }\r\n    /** */\r\n    get KilopoundForceFeetPerFoot() {\r\n        if (this.kilopoundforcefeetperfootLazy !== null) {\r\n            return this.kilopoundforcefeetperfootLazy;\r\n        }\r\n        return this.kilopoundforcefeetperfootLazy = this.convertFromBase(TorquePerLengthUnits.KilopoundForceFeetPerFoot);\r\n    }\r\n    /** */\r\n    get MegapoundForceFeetPerFoot() {\r\n        if (this.megapoundforcefeetperfootLazy !== null) {\r\n            return this.megapoundforcefeetperfootLazy;\r\n        }\r\n        return this.megapoundforcefeetperfootLazy = this.convertFromBase(TorquePerLengthUnits.MegapoundForceFeetPerFoot);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a NewtonMillimetersPerMeter\r\n     *\r\n     * @param value The unit as NewtonMillimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromNewtonMillimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.NewtonMillimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a NewtonCentimetersPerMeter\r\n     *\r\n     * @param value The unit as NewtonCentimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromNewtonCentimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.NewtonCentimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a NewtonMetersPerMeter\r\n     *\r\n     * @param value The unit as NewtonMetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromNewtonMetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.NewtonMetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a PoundForceInchesPerFoot\r\n     *\r\n     * @param value The unit as PoundForceInchesPerFoot to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromPoundForceInchesPerFoot(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.PoundForceInchesPerFoot);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a PoundForceFeetPerFoot\r\n     *\r\n     * @param value The unit as PoundForceFeetPerFoot to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromPoundForceFeetPerFoot(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.PoundForceFeetPerFoot);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilogramForceMillimetersPerMeter\r\n     *\r\n     * @param value The unit as KilogramForceMillimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilogramForceMillimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilogramForceMillimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilogramForceCentimetersPerMeter\r\n     *\r\n     * @param value The unit as KilogramForceCentimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilogramForceCentimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilogramForceCentimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilogramForceMetersPerMeter\r\n     *\r\n     * @param value The unit as KilogramForceMetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilogramForceMetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilogramForceMetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a TonneForceMillimetersPerMeter\r\n     *\r\n     * @param value The unit as TonneForceMillimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromTonneForceMillimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.TonneForceMillimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a TonneForceCentimetersPerMeter\r\n     *\r\n     * @param value The unit as TonneForceCentimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromTonneForceCentimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.TonneForceCentimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a TonneForceMetersPerMeter\r\n     *\r\n     * @param value The unit as TonneForceMetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromTonneForceMetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.TonneForceMetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilonewtonMillimetersPerMeter\r\n     *\r\n     * @param value The unit as KilonewtonMillimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilonewtonMillimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilonewtonMillimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a MeganewtonMillimetersPerMeter\r\n     *\r\n     * @param value The unit as MeganewtonMillimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromMeganewtonMillimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.MeganewtonMillimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilonewtonCentimetersPerMeter\r\n     *\r\n     * @param value The unit as KilonewtonCentimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilonewtonCentimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilonewtonCentimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a MeganewtonCentimetersPerMeter\r\n     *\r\n     * @param value The unit as MeganewtonCentimetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromMeganewtonCentimetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.MeganewtonCentimetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilonewtonMetersPerMeter\r\n     *\r\n     * @param value The unit as KilonewtonMetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilonewtonMetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilonewtonMetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a MeganewtonMetersPerMeter\r\n     *\r\n     * @param value The unit as MeganewtonMetersPerMeter to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromMeganewtonMetersPerMeter(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.MeganewtonMetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilopoundForceInchesPerFoot\r\n     *\r\n     * @param value The unit as KilopoundForceInchesPerFoot to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilopoundForceInchesPerFoot(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilopoundForceInchesPerFoot);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a MegapoundForceInchesPerFoot\r\n     *\r\n     * @param value The unit as MegapoundForceInchesPerFoot to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromMegapoundForceInchesPerFoot(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.MegapoundForceInchesPerFoot);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a KilopoundForceFeetPerFoot\r\n     *\r\n     * @param value The unit as KilopoundForceFeetPerFoot to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromKilopoundForceFeetPerFoot(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.KilopoundForceFeetPerFoot);\r\n    }\r\n    /**\r\n     * Create a new TorquePerLength instance from a MegapoundForceFeetPerFoot\r\n     *\r\n     * @param value The unit as MegapoundForceFeetPerFoot to create a new TorquePerLength from.\r\n     * @returns The new TorquePerLength instance.\r\n     */\r\n    static FromMegapoundForceFeetPerFoot(value) {\r\n        return new TorquePerLength(value, TorquePerLengthUnits.MegapoundForceFeetPerFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case TorquePerLengthUnits.NewtonMillimetersPerMeter:\r\n                return this.value * 1000;\r\n            case TorquePerLengthUnits.NewtonCentimetersPerMeter:\r\n                return this.value * 100;\r\n            case TorquePerLengthUnits.NewtonMetersPerMeter:\r\n                return this.value;\r\n            case TorquePerLengthUnits.PoundForceInchesPerFoot:\r\n                return this.value / 0.370685147638;\r\n            case TorquePerLengthUnits.PoundForceFeetPerFoot:\r\n                return this.value / 4.44822161526;\r\n            case TorquePerLengthUnits.KilogramForceMillimetersPerMeter:\r\n                return this.value * 101.971619222242;\r\n            case TorquePerLengthUnits.KilogramForceCentimetersPerMeter:\r\n                return this.value * 10.1971619222242;\r\n            case TorquePerLengthUnits.KilogramForceMetersPerMeter:\r\n                return this.value * 0.101971619222242;\r\n            case TorquePerLengthUnits.TonneForceMillimetersPerMeter:\r\n                return this.value * 0.101971619222242;\r\n            case TorquePerLengthUnits.TonneForceCentimetersPerMeter:\r\n                return this.value * 0.0101971619222242;\r\n            case TorquePerLengthUnits.TonneForceMetersPerMeter:\r\n                return this.value * 0.000101971619222242;\r\n            case TorquePerLengthUnits.KilonewtonMillimetersPerMeter:\r\n                return (this.value * 1000) / 1000;\r\n            case TorquePerLengthUnits.MeganewtonMillimetersPerMeter:\r\n                return (this.value * 1000) / 1000000;\r\n            case TorquePerLengthUnits.KilonewtonCentimetersPerMeter:\r\n                return (this.value * 100) / 1000;\r\n            case TorquePerLengthUnits.MeganewtonCentimetersPerMeter:\r\n                return (this.value * 100) / 1000000;\r\n            case TorquePerLengthUnits.KilonewtonMetersPerMeter:\r\n                return (this.value) / 1000;\r\n            case TorquePerLengthUnits.MeganewtonMetersPerMeter:\r\n                return (this.value) / 1000000;\r\n            case TorquePerLengthUnits.KilopoundForceInchesPerFoot:\r\n                return (this.value / 0.370685147638) / 1000;\r\n            case TorquePerLengthUnits.MegapoundForceInchesPerFoot:\r\n                return (this.value / 0.370685147638) / 1000000;\r\n            case TorquePerLengthUnits.KilopoundForceFeetPerFoot:\r\n                return (this.value / 4.44822161526) / 1000;\r\n            case TorquePerLengthUnits.MegapoundForceFeetPerFoot:\r\n                return (this.value / 4.44822161526) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case TorquePerLengthUnits.NewtonMillimetersPerMeter:\r\n                return value * 0.001;\r\n            case TorquePerLengthUnits.NewtonCentimetersPerMeter:\r\n                return value * 0.01;\r\n            case TorquePerLengthUnits.NewtonMetersPerMeter:\r\n                return value;\r\n            case TorquePerLengthUnits.PoundForceInchesPerFoot:\r\n                return value * 0.370685147638;\r\n            case TorquePerLengthUnits.PoundForceFeetPerFoot:\r\n                return value * 4.44822161526;\r\n            case TorquePerLengthUnits.KilogramForceMillimetersPerMeter:\r\n                return value * 0.00980665019960652;\r\n            case TorquePerLengthUnits.KilogramForceCentimetersPerMeter:\r\n                return value * 0.0980665019960652;\r\n            case TorquePerLengthUnits.KilogramForceMetersPerMeter:\r\n                return value * 9.80665019960652;\r\n            case TorquePerLengthUnits.TonneForceMillimetersPerMeter:\r\n                return value * 9.80665019960652;\r\n            case TorquePerLengthUnits.TonneForceCentimetersPerMeter:\r\n                return value * 98.0665019960652;\r\n            case TorquePerLengthUnits.TonneForceMetersPerMeter:\r\n                return value * 9806.65019960653;\r\n            case TorquePerLengthUnits.KilonewtonMillimetersPerMeter:\r\n                return (value * 0.001) * 1000;\r\n            case TorquePerLengthUnits.MeganewtonMillimetersPerMeter:\r\n                return (value * 0.001) * 1000000;\r\n            case TorquePerLengthUnits.KilonewtonCentimetersPerMeter:\r\n                return (value * 0.01) * 1000;\r\n            case TorquePerLengthUnits.MeganewtonCentimetersPerMeter:\r\n                return (value * 0.01) * 1000000;\r\n            case TorquePerLengthUnits.KilonewtonMetersPerMeter:\r\n                return (value) * 1000;\r\n            case TorquePerLengthUnits.MeganewtonMetersPerMeter:\r\n                return (value) * 1000000;\r\n            case TorquePerLengthUnits.KilopoundForceInchesPerFoot:\r\n                return (value * 0.370685147638) * 1000;\r\n            case TorquePerLengthUnits.MegapoundForceInchesPerFoot:\r\n                return (value * 0.370685147638) * 1000000;\r\n            case TorquePerLengthUnits.KilopoundForceFeetPerFoot:\r\n                return (value * 4.44822161526) * 1000;\r\n            case TorquePerLengthUnits.MegapoundForceFeetPerFoot:\r\n                return (value * 4.44822161526) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the TorquePerLength to string.\r\n     * Note! the default format for TorquePerLength is NewtonMetersPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the TorquePerLength.\r\n     * @returns The string format of the TorquePerLength.\r\n     */\r\n    toString(toUnit = TorquePerLengthUnits.NewtonMetersPerMeter) {\r\n        switch (toUnit) {\r\n            case TorquePerLengthUnits.NewtonMillimetersPerMeter:\r\n                return this.NewtonMillimetersPerMeter + ` N·mm/m`;\r\n            case TorquePerLengthUnits.NewtonCentimetersPerMeter:\r\n                return this.NewtonCentimetersPerMeter + ` N·cm/m`;\r\n            case TorquePerLengthUnits.NewtonMetersPerMeter:\r\n                return this.NewtonMetersPerMeter + ` N·m/m`;\r\n            case TorquePerLengthUnits.PoundForceInchesPerFoot:\r\n                return this.PoundForceInchesPerFoot + ` lbf·in/ft`;\r\n            case TorquePerLengthUnits.PoundForceFeetPerFoot:\r\n                return this.PoundForceFeetPerFoot + ` lbf·ft/ft`;\r\n            case TorquePerLengthUnits.KilogramForceMillimetersPerMeter:\r\n                return this.KilogramForceMillimetersPerMeter + ` kgf·mm/m`;\r\n            case TorquePerLengthUnits.KilogramForceCentimetersPerMeter:\r\n                return this.KilogramForceCentimetersPerMeter + ` kgf·cm/m`;\r\n            case TorquePerLengthUnits.KilogramForceMetersPerMeter:\r\n                return this.KilogramForceMetersPerMeter + ` kgf·m/m`;\r\n            case TorquePerLengthUnits.TonneForceMillimetersPerMeter:\r\n                return this.TonneForceMillimetersPerMeter + ` tf·mm/m`;\r\n            case TorquePerLengthUnits.TonneForceCentimetersPerMeter:\r\n                return this.TonneForceCentimetersPerMeter + ` tf·cm/m`;\r\n            case TorquePerLengthUnits.TonneForceMetersPerMeter:\r\n                return this.TonneForceMetersPerMeter + ` tf·m/m`;\r\n            case TorquePerLengthUnits.KilonewtonMillimetersPerMeter:\r\n                return this.KilonewtonMillimetersPerMeter + ` `;\r\n            case TorquePerLengthUnits.MeganewtonMillimetersPerMeter:\r\n                return this.MeganewtonMillimetersPerMeter + ` `;\r\n            case TorquePerLengthUnits.KilonewtonCentimetersPerMeter:\r\n                return this.KilonewtonCentimetersPerMeter + ` `;\r\n            case TorquePerLengthUnits.MeganewtonCentimetersPerMeter:\r\n                return this.MeganewtonCentimetersPerMeter + ` `;\r\n            case TorquePerLengthUnits.KilonewtonMetersPerMeter:\r\n                return this.KilonewtonMetersPerMeter + ` `;\r\n            case TorquePerLengthUnits.MeganewtonMetersPerMeter:\r\n                return this.MeganewtonMetersPerMeter + ` `;\r\n            case TorquePerLengthUnits.KilopoundForceInchesPerFoot:\r\n                return this.KilopoundForceInchesPerFoot + ` `;\r\n            case TorquePerLengthUnits.MegapoundForceInchesPerFoot:\r\n                return this.MegapoundForceInchesPerFoot + ` `;\r\n            case TorquePerLengthUnits.KilopoundForceFeetPerFoot:\r\n                return this.KilopoundForceFeetPerFoot + ` `;\r\n            case TorquePerLengthUnits.MegapoundForceFeetPerFoot:\r\n                return this.MegapoundForceFeetPerFoot + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given TorquePerLength are equals to the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns True if the given TorquePerLength are equal to the current TorquePerLength.\r\n     */\r\n    equals(torquePerLength) {\r\n        return this.value === torquePerLength.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given TorquePerLength against the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns 0 if they are equal, -1 if the current TorquePerLength is less then other, 1 if the current TorquePerLength is greater then other.\r\n     */\r\n    compareTo(torquePerLength) {\r\n        if (this.value > torquePerLength.BaseValue)\r\n            return 1;\r\n        if (this.value < torquePerLength.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given TorquePerLength with the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns A new TorquePerLength instance with the results.\r\n     */\r\n    add(torquePerLength) {\r\n        return new TorquePerLength(this.value + torquePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given TorquePerLength with the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns A new TorquePerLength instance with the results.\r\n     */\r\n    subtract(torquePerLength) {\r\n        return new TorquePerLength(this.value - torquePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given TorquePerLength with the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns A new TorquePerLength instance with the results.\r\n     */\r\n    multiply(torquePerLength) {\r\n        return new TorquePerLength(this.value * torquePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given TorquePerLength with the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns A new TorquePerLength instance with the results.\r\n     */\r\n    divide(torquePerLength) {\r\n        return new TorquePerLength(this.value / torquePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given TorquePerLength with the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns A new TorquePerLength instance with the results.\r\n     */\r\n    modulo(torquePerLength) {\r\n        return new TorquePerLength(this.value % torquePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given TorquePerLength with the current TorquePerLength.\r\n     * @param torquePerLength The other TorquePerLength.\r\n     * @returns A new TorquePerLength instance with the results.\r\n     */\r\n    pow(torquePerLength) {\r\n        return new TorquePerLength(this.value ** torquePerLength.BaseValue);\r\n    }\r\n}\r\nexports.TorquePerLength = TorquePerLength;\r\n//# sourceMappingURL=torqueperlength.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Turbidity = exports.TurbidityUnits = void 0;\r\n/** TurbidityUnits enumeration */\r\nvar TurbidityUnits;\r\n(function (TurbidityUnits) {\r\n    /** */\r\n    TurbidityUnits[TurbidityUnits[\"NTU\"] = 0] = \"NTU\";\r\n})(TurbidityUnits = exports.TurbidityUnits || (exports.TurbidityUnits = {}));\r\n/** Turbidity is the cloudiness or haziness of a fluid caused by large numbers of individual particles that are generally invisible to the naked eye, similar to smoke in air. The measurement of turbidity is a key test of water quality. */\r\nclass Turbidity {\r\n    /**\r\n     * Create a new Turbidity.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Turbidity’ unit to create from.\r\n     * The default unit is NTU\r\n     */\r\n    constructor(value, fromUnit = TurbidityUnits.NTU) {\r\n        this.ntuLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Turbidity is NTU.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get NTU() {\r\n        if (this.ntuLazy !== null) {\r\n            return this.ntuLazy;\r\n        }\r\n        return this.ntuLazy = this.convertFromBase(TurbidityUnits.NTU);\r\n    }\r\n    /**\r\n     * Create a new Turbidity instance from a NTU\r\n     *\r\n     * @param value The unit as NTU to create a new Turbidity from.\r\n     * @returns The new Turbidity instance.\r\n     */\r\n    static FromNTU(value) {\r\n        return new Turbidity(value, TurbidityUnits.NTU);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case TurbidityUnits.NTU:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case TurbidityUnits.NTU:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Turbidity to string.\r\n     * Note! the default format for Turbidity is NTU.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Turbidity.\r\n     * @returns The string format of the Turbidity.\r\n     */\r\n    toString(toUnit = TurbidityUnits.NTU) {\r\n        switch (toUnit) {\r\n            case TurbidityUnits.NTU:\r\n                return this.NTU + ` NTU`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Turbidity are equals to the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns True if the given Turbidity are equal to the current Turbidity.\r\n     */\r\n    equals(turbidity) {\r\n        return this.value === turbidity.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Turbidity against the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns 0 if they are equal, -1 if the current Turbidity is less then other, 1 if the current Turbidity is greater then other.\r\n     */\r\n    compareTo(turbidity) {\r\n        if (this.value > turbidity.BaseValue)\r\n            return 1;\r\n        if (this.value < turbidity.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Turbidity with the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns A new Turbidity instance with the results.\r\n     */\r\n    add(turbidity) {\r\n        return new Turbidity(this.value + turbidity.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Turbidity with the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns A new Turbidity instance with the results.\r\n     */\r\n    subtract(turbidity) {\r\n        return new Turbidity(this.value - turbidity.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Turbidity with the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns A new Turbidity instance with the results.\r\n     */\r\n    multiply(turbidity) {\r\n        return new Turbidity(this.value * turbidity.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Turbidity with the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns A new Turbidity instance with the results.\r\n     */\r\n    divide(turbidity) {\r\n        return new Turbidity(this.value / turbidity.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Turbidity with the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns A new Turbidity instance with the results.\r\n     */\r\n    modulo(turbidity) {\r\n        return new Turbidity(this.value % turbidity.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Turbidity with the current Turbidity.\r\n     * @param turbidity The other Turbidity.\r\n     * @returns A new Turbidity instance with the results.\r\n     */\r\n    pow(turbidity) {\r\n        return new Turbidity(this.value ** turbidity.BaseValue);\r\n    }\r\n}\r\nexports.Turbidity = Turbidity;\r\n//# sourceMappingURL=turbidity.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VitaminA = exports.VitaminAUnits = void 0;\r\n/** VitaminAUnits enumeration */\r\nvar VitaminAUnits;\r\n(function (VitaminAUnits) {\r\n    /** */\r\n    VitaminAUnits[VitaminAUnits[\"InternationalUnits\"] = 0] = \"InternationalUnits\";\r\n})(VitaminAUnits = exports.VitaminAUnits || (exports.VitaminAUnits = {}));\r\n/** Vitamin A: 1 IU is the biological equivalent of 0.3 µg retinol, or of 0.6 µg beta-carotene. */\r\nclass VitaminA {\r\n    /**\r\n     * Create a new VitaminA.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘VitaminA’ unit to create from.\r\n     * The default unit is InternationalUnits\r\n     */\r\n    constructor(value, fromUnit = VitaminAUnits.InternationalUnits) {\r\n        this.internationalunitsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of VitaminA is InternationalUnits.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get InternationalUnits() {\r\n        if (this.internationalunitsLazy !== null) {\r\n            return this.internationalunitsLazy;\r\n        }\r\n        return this.internationalunitsLazy = this.convertFromBase(VitaminAUnits.InternationalUnits);\r\n    }\r\n    /**\r\n     * Create a new VitaminA instance from a InternationalUnits\r\n     *\r\n     * @param value The unit as InternationalUnits to create a new VitaminA from.\r\n     * @returns The new VitaminA instance.\r\n     */\r\n    static FromInternationalUnits(value) {\r\n        return new VitaminA(value, VitaminAUnits.InternationalUnits);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case VitaminAUnits.InternationalUnits:\r\n                return this.value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case VitaminAUnits.InternationalUnits:\r\n                return value;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the VitaminA to string.\r\n     * Note! the default format for VitaminA is InternationalUnits.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the VitaminA.\r\n     * @returns The string format of the VitaminA.\r\n     */\r\n    toString(toUnit = VitaminAUnits.InternationalUnits) {\r\n        switch (toUnit) {\r\n            case VitaminAUnits.InternationalUnits:\r\n                return this.InternationalUnits + ` IU`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given VitaminA are equals to the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns True if the given VitaminA are equal to the current VitaminA.\r\n     */\r\n    equals(vitaminA) {\r\n        return this.value === vitaminA.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given VitaminA against the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns 0 if they are equal, -1 if the current VitaminA is less then other, 1 if the current VitaminA is greater then other.\r\n     */\r\n    compareTo(vitaminA) {\r\n        if (this.value > vitaminA.BaseValue)\r\n            return 1;\r\n        if (this.value < vitaminA.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given VitaminA with the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns A new VitaminA instance with the results.\r\n     */\r\n    add(vitaminA) {\r\n        return new VitaminA(this.value + vitaminA.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given VitaminA with the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns A new VitaminA instance with the results.\r\n     */\r\n    subtract(vitaminA) {\r\n        return new VitaminA(this.value - vitaminA.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given VitaminA with the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns A new VitaminA instance with the results.\r\n     */\r\n    multiply(vitaminA) {\r\n        return new VitaminA(this.value * vitaminA.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given VitaminA with the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns A new VitaminA instance with the results.\r\n     */\r\n    divide(vitaminA) {\r\n        return new VitaminA(this.value / vitaminA.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given VitaminA with the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns A new VitaminA instance with the results.\r\n     */\r\n    modulo(vitaminA) {\r\n        return new VitaminA(this.value % vitaminA.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given VitaminA with the current VitaminA.\r\n     * @param vitaminA The other VitaminA.\r\n     * @returns A new VitaminA instance with the results.\r\n     */\r\n    pow(vitaminA) {\r\n        return new VitaminA(this.value ** vitaminA.BaseValue);\r\n    }\r\n}\r\nexports.VitaminA = VitaminA;\r\n//# sourceMappingURL=vitamina.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Volume = exports.VolumeUnits = void 0;\r\n/** VolumeUnits enumeration */\r\nvar VolumeUnits;\r\n(function (VolumeUnits) {\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Liters\"] = 0] = \"Liters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicMeters\"] = 1] = \"CubicMeters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicKilometers\"] = 2] = \"CubicKilometers\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicHectometers\"] = 3] = \"CubicHectometers\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicDecimeters\"] = 4] = \"CubicDecimeters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicCentimeters\"] = 5] = \"CubicCentimeters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicMillimeters\"] = 6] = \"CubicMillimeters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicMicrometers\"] = 7] = \"CubicMicrometers\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicMiles\"] = 8] = \"CubicMiles\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicYards\"] = 9] = \"CubicYards\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicFeet\"] = 10] = \"CubicFeet\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"CubicInches\"] = 11] = \"CubicInches\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"ImperialGallons\"] = 12] = \"ImperialGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"ImperialOunces\"] = 13] = \"ImperialOunces\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsGallons\"] = 14] = \"UsGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsOunces\"] = 15] = \"UsOunces\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsTablespoons\"] = 16] = \"UsTablespoons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"AuTablespoons\"] = 17] = \"AuTablespoons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UkTablespoons\"] = 18] = \"UkTablespoons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"MetricTeaspoons\"] = 19] = \"MetricTeaspoons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsTeaspoons\"] = 20] = \"UsTeaspoons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"MetricCups\"] = 21] = \"MetricCups\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsCustomaryCups\"] = 22] = \"UsCustomaryCups\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsLegalCups\"] = 23] = \"UsLegalCups\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"OilBarrels\"] = 24] = \"OilBarrels\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsBeerBarrels\"] = 25] = \"UsBeerBarrels\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"ImperialBeerBarrels\"] = 26] = \"ImperialBeerBarrels\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsQuarts\"] = 27] = \"UsQuarts\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"UsPints\"] = 28] = \"UsPints\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"AcreFeet\"] = 29] = \"AcreFeet\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"ImperialPints\"] = 30] = \"ImperialPints\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"BoardFeet\"] = 31] = \"BoardFeet\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Microliters\"] = 32] = \"Microliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Milliliters\"] = 33] = \"Milliliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Centiliters\"] = 34] = \"Centiliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Deciliters\"] = 35] = \"Deciliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Hectoliters\"] = 36] = \"Hectoliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Kiloliters\"] = 37] = \"Kiloliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"Megaliters\"] = 38] = \"Megaliters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"HectocubicMeters\"] = 39] = \"HectocubicMeters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"KilocubicMeters\"] = 40] = \"KilocubicMeters\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"HectocubicFeet\"] = 41] = \"HectocubicFeet\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"KilocubicFeet\"] = 42] = \"KilocubicFeet\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"MegacubicFeet\"] = 43] = \"MegacubicFeet\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"KiloimperialGallons\"] = 44] = \"KiloimperialGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"MegaimperialGallons\"] = 45] = \"MegaimperialGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"DecausGallons\"] = 46] = \"DecausGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"DeciusGallons\"] = 47] = \"DeciusGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"HectousGallons\"] = 48] = \"HectousGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"KilousGallons\"] = 49] = \"KilousGallons\";\r\n    /** */\r\n    VolumeUnits[VolumeUnits[\"MegausGallons\"] = 50] = \"MegausGallons\";\r\n})(VolumeUnits = exports.VolumeUnits || (exports.VolumeUnits = {}));\r\n/** Volume is the quantity of three-dimensional space enclosed by some closed boundary, for example, the space that a substance (solid, liquid, gas, or plasma) or shape occupies or contains.[1] Volume is often quantified numerically using the SI derived unit, the cubic metre. The volume of a container is generally understood to be the capacity of the container, i. e. the amount of fluid (gas or liquid) that the container could hold, rather than the amount of space the container itself displaces. */\r\nclass Volume {\r\n    /**\r\n     * Create a new Volume.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘Volume’ unit to create from.\r\n     * The default unit is CubicMeters\r\n     */\r\n    constructor(value, fromUnit = VolumeUnits.CubicMeters) {\r\n        this.litersLazy = null;\r\n        this.cubicmetersLazy = null;\r\n        this.cubickilometersLazy = null;\r\n        this.cubichectometersLazy = null;\r\n        this.cubicdecimetersLazy = null;\r\n        this.cubiccentimetersLazy = null;\r\n        this.cubicmillimetersLazy = null;\r\n        this.cubicmicrometersLazy = null;\r\n        this.cubicmilesLazy = null;\r\n        this.cubicyardsLazy = null;\r\n        this.cubicfeetLazy = null;\r\n        this.cubicinchesLazy = null;\r\n        this.imperialgallonsLazy = null;\r\n        this.imperialouncesLazy = null;\r\n        this.usgallonsLazy = null;\r\n        this.usouncesLazy = null;\r\n        this.ustablespoonsLazy = null;\r\n        this.autablespoonsLazy = null;\r\n        this.uktablespoonsLazy = null;\r\n        this.metricteaspoonsLazy = null;\r\n        this.usteaspoonsLazy = null;\r\n        this.metriccupsLazy = null;\r\n        this.uscustomarycupsLazy = null;\r\n        this.uslegalcupsLazy = null;\r\n        this.oilbarrelsLazy = null;\r\n        this.usbeerbarrelsLazy = null;\r\n        this.imperialbeerbarrelsLazy = null;\r\n        this.usquartsLazy = null;\r\n        this.uspintsLazy = null;\r\n        this.acrefeetLazy = null;\r\n        this.imperialpintsLazy = null;\r\n        this.boardfeetLazy = null;\r\n        this.microlitersLazy = null;\r\n        this.millilitersLazy = null;\r\n        this.centilitersLazy = null;\r\n        this.decilitersLazy = null;\r\n        this.hectolitersLazy = null;\r\n        this.kilolitersLazy = null;\r\n        this.megalitersLazy = null;\r\n        this.hectocubicmetersLazy = null;\r\n        this.kilocubicmetersLazy = null;\r\n        this.hectocubicfeetLazy = null;\r\n        this.kilocubicfeetLazy = null;\r\n        this.megacubicfeetLazy = null;\r\n        this.kiloimperialgallonsLazy = null;\r\n        this.megaimperialgallonsLazy = null;\r\n        this.decausgallonsLazy = null;\r\n        this.deciusgallonsLazy = null;\r\n        this.hectousgallonsLazy = null;\r\n        this.kilousgallonsLazy = null;\r\n        this.megausgallonsLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of Volume is CubicMeters.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get Liters() {\r\n        if (this.litersLazy !== null) {\r\n            return this.litersLazy;\r\n        }\r\n        return this.litersLazy = this.convertFromBase(VolumeUnits.Liters);\r\n    }\r\n    /** */\r\n    get CubicMeters() {\r\n        if (this.cubicmetersLazy !== null) {\r\n            return this.cubicmetersLazy;\r\n        }\r\n        return this.cubicmetersLazy = this.convertFromBase(VolumeUnits.CubicMeters);\r\n    }\r\n    /** */\r\n    get CubicKilometers() {\r\n        if (this.cubickilometersLazy !== null) {\r\n            return this.cubickilometersLazy;\r\n        }\r\n        return this.cubickilometersLazy = this.convertFromBase(VolumeUnits.CubicKilometers);\r\n    }\r\n    /** */\r\n    get CubicHectometers() {\r\n        if (this.cubichectometersLazy !== null) {\r\n            return this.cubichectometersLazy;\r\n        }\r\n        return this.cubichectometersLazy = this.convertFromBase(VolumeUnits.CubicHectometers);\r\n    }\r\n    /** */\r\n    get CubicDecimeters() {\r\n        if (this.cubicdecimetersLazy !== null) {\r\n            return this.cubicdecimetersLazy;\r\n        }\r\n        return this.cubicdecimetersLazy = this.convertFromBase(VolumeUnits.CubicDecimeters);\r\n    }\r\n    /** */\r\n    get CubicCentimeters() {\r\n        if (this.cubiccentimetersLazy !== null) {\r\n            return this.cubiccentimetersLazy;\r\n        }\r\n        return this.cubiccentimetersLazy = this.convertFromBase(VolumeUnits.CubicCentimeters);\r\n    }\r\n    /** */\r\n    get CubicMillimeters() {\r\n        if (this.cubicmillimetersLazy !== null) {\r\n            return this.cubicmillimetersLazy;\r\n        }\r\n        return this.cubicmillimetersLazy = this.convertFromBase(VolumeUnits.CubicMillimeters);\r\n    }\r\n    /** */\r\n    get CubicMicrometers() {\r\n        if (this.cubicmicrometersLazy !== null) {\r\n            return this.cubicmicrometersLazy;\r\n        }\r\n        return this.cubicmicrometersLazy = this.convertFromBase(VolumeUnits.CubicMicrometers);\r\n    }\r\n    /** */\r\n    get CubicMiles() {\r\n        if (this.cubicmilesLazy !== null) {\r\n            return this.cubicmilesLazy;\r\n        }\r\n        return this.cubicmilesLazy = this.convertFromBase(VolumeUnits.CubicMiles);\r\n    }\r\n    /** */\r\n    get CubicYards() {\r\n        if (this.cubicyardsLazy !== null) {\r\n            return this.cubicyardsLazy;\r\n        }\r\n        return this.cubicyardsLazy = this.convertFromBase(VolumeUnits.CubicYards);\r\n    }\r\n    /** */\r\n    get CubicFeet() {\r\n        if (this.cubicfeetLazy !== null) {\r\n            return this.cubicfeetLazy;\r\n        }\r\n        return this.cubicfeetLazy = this.convertFromBase(VolumeUnits.CubicFeet);\r\n    }\r\n    /** */\r\n    get CubicInches() {\r\n        if (this.cubicinchesLazy !== null) {\r\n            return this.cubicinchesLazy;\r\n        }\r\n        return this.cubicinchesLazy = this.convertFromBase(VolumeUnits.CubicInches);\r\n    }\r\n    /** */\r\n    get ImperialGallons() {\r\n        if (this.imperialgallonsLazy !== null) {\r\n            return this.imperialgallonsLazy;\r\n        }\r\n        return this.imperialgallonsLazy = this.convertFromBase(VolumeUnits.ImperialGallons);\r\n    }\r\n    /** */\r\n    get ImperialOunces() {\r\n        if (this.imperialouncesLazy !== null) {\r\n            return this.imperialouncesLazy;\r\n        }\r\n        return this.imperialouncesLazy = this.convertFromBase(VolumeUnits.ImperialOunces);\r\n    }\r\n    /** */\r\n    get UsGallons() {\r\n        if (this.usgallonsLazy !== null) {\r\n            return this.usgallonsLazy;\r\n        }\r\n        return this.usgallonsLazy = this.convertFromBase(VolumeUnits.UsGallons);\r\n    }\r\n    /** */\r\n    get UsOunces() {\r\n        if (this.usouncesLazy !== null) {\r\n            return this.usouncesLazy;\r\n        }\r\n        return this.usouncesLazy = this.convertFromBase(VolumeUnits.UsOunces);\r\n    }\r\n    /** */\r\n    get UsTablespoons() {\r\n        if (this.ustablespoonsLazy !== null) {\r\n            return this.ustablespoonsLazy;\r\n        }\r\n        return this.ustablespoonsLazy = this.convertFromBase(VolumeUnits.UsTablespoons);\r\n    }\r\n    /** */\r\n    get AuTablespoons() {\r\n        if (this.autablespoonsLazy !== null) {\r\n            return this.autablespoonsLazy;\r\n        }\r\n        return this.autablespoonsLazy = this.convertFromBase(VolumeUnits.AuTablespoons);\r\n    }\r\n    /** */\r\n    get UkTablespoons() {\r\n        if (this.uktablespoonsLazy !== null) {\r\n            return this.uktablespoonsLazy;\r\n        }\r\n        return this.uktablespoonsLazy = this.convertFromBase(VolumeUnits.UkTablespoons);\r\n    }\r\n    /** */\r\n    get MetricTeaspoons() {\r\n        if (this.metricteaspoonsLazy !== null) {\r\n            return this.metricteaspoonsLazy;\r\n        }\r\n        return this.metricteaspoonsLazy = this.convertFromBase(VolumeUnits.MetricTeaspoons);\r\n    }\r\n    /** */\r\n    get UsTeaspoons() {\r\n        if (this.usteaspoonsLazy !== null) {\r\n            return this.usteaspoonsLazy;\r\n        }\r\n        return this.usteaspoonsLazy = this.convertFromBase(VolumeUnits.UsTeaspoons);\r\n    }\r\n    /** */\r\n    get MetricCups() {\r\n        if (this.metriccupsLazy !== null) {\r\n            return this.metriccupsLazy;\r\n        }\r\n        return this.metriccupsLazy = this.convertFromBase(VolumeUnits.MetricCups);\r\n    }\r\n    /** */\r\n    get UsCustomaryCups() {\r\n        if (this.uscustomarycupsLazy !== null) {\r\n            return this.uscustomarycupsLazy;\r\n        }\r\n        return this.uscustomarycupsLazy = this.convertFromBase(VolumeUnits.UsCustomaryCups);\r\n    }\r\n    /** */\r\n    get UsLegalCups() {\r\n        if (this.uslegalcupsLazy !== null) {\r\n            return this.uslegalcupsLazy;\r\n        }\r\n        return this.uslegalcupsLazy = this.convertFromBase(VolumeUnits.UsLegalCups);\r\n    }\r\n    /** */\r\n    get OilBarrels() {\r\n        if (this.oilbarrelsLazy !== null) {\r\n            return this.oilbarrelsLazy;\r\n        }\r\n        return this.oilbarrelsLazy = this.convertFromBase(VolumeUnits.OilBarrels);\r\n    }\r\n    /** */\r\n    get UsBeerBarrels() {\r\n        if (this.usbeerbarrelsLazy !== null) {\r\n            return this.usbeerbarrelsLazy;\r\n        }\r\n        return this.usbeerbarrelsLazy = this.convertFromBase(VolumeUnits.UsBeerBarrels);\r\n    }\r\n    /** */\r\n    get ImperialBeerBarrels() {\r\n        if (this.imperialbeerbarrelsLazy !== null) {\r\n            return this.imperialbeerbarrelsLazy;\r\n        }\r\n        return this.imperialbeerbarrelsLazy = this.convertFromBase(VolumeUnits.ImperialBeerBarrels);\r\n    }\r\n    /** */\r\n    get UsQuarts() {\r\n        if (this.usquartsLazy !== null) {\r\n            return this.usquartsLazy;\r\n        }\r\n        return this.usquartsLazy = this.convertFromBase(VolumeUnits.UsQuarts);\r\n    }\r\n    /** */\r\n    get UsPints() {\r\n        if (this.uspintsLazy !== null) {\r\n            return this.uspintsLazy;\r\n        }\r\n        return this.uspintsLazy = this.convertFromBase(VolumeUnits.UsPints);\r\n    }\r\n    /** */\r\n    get AcreFeet() {\r\n        if (this.acrefeetLazy !== null) {\r\n            return this.acrefeetLazy;\r\n        }\r\n        return this.acrefeetLazy = this.convertFromBase(VolumeUnits.AcreFeet);\r\n    }\r\n    /** */\r\n    get ImperialPints() {\r\n        if (this.imperialpintsLazy !== null) {\r\n            return this.imperialpintsLazy;\r\n        }\r\n        return this.imperialpintsLazy = this.convertFromBase(VolumeUnits.ImperialPints);\r\n    }\r\n    /** */\r\n    get BoardFeet() {\r\n        if (this.boardfeetLazy !== null) {\r\n            return this.boardfeetLazy;\r\n        }\r\n        return this.boardfeetLazy = this.convertFromBase(VolumeUnits.BoardFeet);\r\n    }\r\n    /** */\r\n    get Microliters() {\r\n        if (this.microlitersLazy !== null) {\r\n            return this.microlitersLazy;\r\n        }\r\n        return this.microlitersLazy = this.convertFromBase(VolumeUnits.Microliters);\r\n    }\r\n    /** */\r\n    get Milliliters() {\r\n        if (this.millilitersLazy !== null) {\r\n            return this.millilitersLazy;\r\n        }\r\n        return this.millilitersLazy = this.convertFromBase(VolumeUnits.Milliliters);\r\n    }\r\n    /** */\r\n    get Centiliters() {\r\n        if (this.centilitersLazy !== null) {\r\n            return this.centilitersLazy;\r\n        }\r\n        return this.centilitersLazy = this.convertFromBase(VolumeUnits.Centiliters);\r\n    }\r\n    /** */\r\n    get Deciliters() {\r\n        if (this.decilitersLazy !== null) {\r\n            return this.decilitersLazy;\r\n        }\r\n        return this.decilitersLazy = this.convertFromBase(VolumeUnits.Deciliters);\r\n    }\r\n    /** */\r\n    get Hectoliters() {\r\n        if (this.hectolitersLazy !== null) {\r\n            return this.hectolitersLazy;\r\n        }\r\n        return this.hectolitersLazy = this.convertFromBase(VolumeUnits.Hectoliters);\r\n    }\r\n    /** */\r\n    get Kiloliters() {\r\n        if (this.kilolitersLazy !== null) {\r\n            return this.kilolitersLazy;\r\n        }\r\n        return this.kilolitersLazy = this.convertFromBase(VolumeUnits.Kiloliters);\r\n    }\r\n    /** */\r\n    get Megaliters() {\r\n        if (this.megalitersLazy !== null) {\r\n            return this.megalitersLazy;\r\n        }\r\n        return this.megalitersLazy = this.convertFromBase(VolumeUnits.Megaliters);\r\n    }\r\n    /** */\r\n    get HectocubicMeters() {\r\n        if (this.hectocubicmetersLazy !== null) {\r\n            return this.hectocubicmetersLazy;\r\n        }\r\n        return this.hectocubicmetersLazy = this.convertFromBase(VolumeUnits.HectocubicMeters);\r\n    }\r\n    /** */\r\n    get KilocubicMeters() {\r\n        if (this.kilocubicmetersLazy !== null) {\r\n            return this.kilocubicmetersLazy;\r\n        }\r\n        return this.kilocubicmetersLazy = this.convertFromBase(VolumeUnits.KilocubicMeters);\r\n    }\r\n    /** */\r\n    get HectocubicFeet() {\r\n        if (this.hectocubicfeetLazy !== null) {\r\n            return this.hectocubicfeetLazy;\r\n        }\r\n        return this.hectocubicfeetLazy = this.convertFromBase(VolumeUnits.HectocubicFeet);\r\n    }\r\n    /** */\r\n    get KilocubicFeet() {\r\n        if (this.kilocubicfeetLazy !== null) {\r\n            return this.kilocubicfeetLazy;\r\n        }\r\n        return this.kilocubicfeetLazy = this.convertFromBase(VolumeUnits.KilocubicFeet);\r\n    }\r\n    /** */\r\n    get MegacubicFeet() {\r\n        if (this.megacubicfeetLazy !== null) {\r\n            return this.megacubicfeetLazy;\r\n        }\r\n        return this.megacubicfeetLazy = this.convertFromBase(VolumeUnits.MegacubicFeet);\r\n    }\r\n    /** */\r\n    get KiloimperialGallons() {\r\n        if (this.kiloimperialgallonsLazy !== null) {\r\n            return this.kiloimperialgallonsLazy;\r\n        }\r\n        return this.kiloimperialgallonsLazy = this.convertFromBase(VolumeUnits.KiloimperialGallons);\r\n    }\r\n    /** */\r\n    get MegaimperialGallons() {\r\n        if (this.megaimperialgallonsLazy !== null) {\r\n            return this.megaimperialgallonsLazy;\r\n        }\r\n        return this.megaimperialgallonsLazy = this.convertFromBase(VolumeUnits.MegaimperialGallons);\r\n    }\r\n    /** */\r\n    get DecausGallons() {\r\n        if (this.decausgallonsLazy !== null) {\r\n            return this.decausgallonsLazy;\r\n        }\r\n        return this.decausgallonsLazy = this.convertFromBase(VolumeUnits.DecausGallons);\r\n    }\r\n    /** */\r\n    get DeciusGallons() {\r\n        if (this.deciusgallonsLazy !== null) {\r\n            return this.deciusgallonsLazy;\r\n        }\r\n        return this.deciusgallonsLazy = this.convertFromBase(VolumeUnits.DeciusGallons);\r\n    }\r\n    /** */\r\n    get HectousGallons() {\r\n        if (this.hectousgallonsLazy !== null) {\r\n            return this.hectousgallonsLazy;\r\n        }\r\n        return this.hectousgallonsLazy = this.convertFromBase(VolumeUnits.HectousGallons);\r\n    }\r\n    /** */\r\n    get KilousGallons() {\r\n        if (this.kilousgallonsLazy !== null) {\r\n            return this.kilousgallonsLazy;\r\n        }\r\n        return this.kilousgallonsLazy = this.convertFromBase(VolumeUnits.KilousGallons);\r\n    }\r\n    /** */\r\n    get MegausGallons() {\r\n        if (this.megausgallonsLazy !== null) {\r\n            return this.megausgallonsLazy;\r\n        }\r\n        return this.megausgallonsLazy = this.convertFromBase(VolumeUnits.MegausGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Liters\r\n     *\r\n     * @param value The unit as Liters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromLiters(value) {\r\n        return new Volume(value, VolumeUnits.Liters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicMeters\r\n     *\r\n     * @param value The unit as CubicMeters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicMeters(value) {\r\n        return new Volume(value, VolumeUnits.CubicMeters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicKilometers\r\n     *\r\n     * @param value The unit as CubicKilometers to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicKilometers(value) {\r\n        return new Volume(value, VolumeUnits.CubicKilometers);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicHectometers\r\n     *\r\n     * @param value The unit as CubicHectometers to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicHectometers(value) {\r\n        return new Volume(value, VolumeUnits.CubicHectometers);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicDecimeters\r\n     *\r\n     * @param value The unit as CubicDecimeters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicDecimeters(value) {\r\n        return new Volume(value, VolumeUnits.CubicDecimeters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicCentimeters\r\n     *\r\n     * @param value The unit as CubicCentimeters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicCentimeters(value) {\r\n        return new Volume(value, VolumeUnits.CubicCentimeters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicMillimeters\r\n     *\r\n     * @param value The unit as CubicMillimeters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicMillimeters(value) {\r\n        return new Volume(value, VolumeUnits.CubicMillimeters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicMicrometers\r\n     *\r\n     * @param value The unit as CubicMicrometers to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicMicrometers(value) {\r\n        return new Volume(value, VolumeUnits.CubicMicrometers);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicMiles\r\n     *\r\n     * @param value The unit as CubicMiles to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicMiles(value) {\r\n        return new Volume(value, VolumeUnits.CubicMiles);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicYards\r\n     *\r\n     * @param value The unit as CubicYards to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicYards(value) {\r\n        return new Volume(value, VolumeUnits.CubicYards);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicFeet\r\n     *\r\n     * @param value The unit as CubicFeet to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicFeet(value) {\r\n        return new Volume(value, VolumeUnits.CubicFeet);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a CubicInches\r\n     *\r\n     * @param value The unit as CubicInches to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCubicInches(value) {\r\n        return new Volume(value, VolumeUnits.CubicInches);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a ImperialGallons\r\n     *\r\n     * @param value The unit as ImperialGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromImperialGallons(value) {\r\n        return new Volume(value, VolumeUnits.ImperialGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a ImperialOunces\r\n     *\r\n     * @param value The unit as ImperialOunces to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromImperialOunces(value) {\r\n        return new Volume(value, VolumeUnits.ImperialOunces);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsGallons\r\n     *\r\n     * @param value The unit as UsGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsGallons(value) {\r\n        return new Volume(value, VolumeUnits.UsGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsOunces\r\n     *\r\n     * @param value The unit as UsOunces to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsOunces(value) {\r\n        return new Volume(value, VolumeUnits.UsOunces);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsTablespoons\r\n     *\r\n     * @param value The unit as UsTablespoons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsTablespoons(value) {\r\n        return new Volume(value, VolumeUnits.UsTablespoons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a AuTablespoons\r\n     *\r\n     * @param value The unit as AuTablespoons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromAuTablespoons(value) {\r\n        return new Volume(value, VolumeUnits.AuTablespoons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UkTablespoons\r\n     *\r\n     * @param value The unit as UkTablespoons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUkTablespoons(value) {\r\n        return new Volume(value, VolumeUnits.UkTablespoons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a MetricTeaspoons\r\n     *\r\n     * @param value The unit as MetricTeaspoons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMetricTeaspoons(value) {\r\n        return new Volume(value, VolumeUnits.MetricTeaspoons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsTeaspoons\r\n     *\r\n     * @param value The unit as UsTeaspoons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsTeaspoons(value) {\r\n        return new Volume(value, VolumeUnits.UsTeaspoons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a MetricCups\r\n     *\r\n     * @param value The unit as MetricCups to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMetricCups(value) {\r\n        return new Volume(value, VolumeUnits.MetricCups);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsCustomaryCups\r\n     *\r\n     * @param value The unit as UsCustomaryCups to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsCustomaryCups(value) {\r\n        return new Volume(value, VolumeUnits.UsCustomaryCups);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsLegalCups\r\n     *\r\n     * @param value The unit as UsLegalCups to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsLegalCups(value) {\r\n        return new Volume(value, VolumeUnits.UsLegalCups);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a OilBarrels\r\n     *\r\n     * @param value The unit as OilBarrels to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromOilBarrels(value) {\r\n        return new Volume(value, VolumeUnits.OilBarrels);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsBeerBarrels\r\n     *\r\n     * @param value The unit as UsBeerBarrels to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsBeerBarrels(value) {\r\n        return new Volume(value, VolumeUnits.UsBeerBarrels);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a ImperialBeerBarrels\r\n     *\r\n     * @param value The unit as ImperialBeerBarrels to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromImperialBeerBarrels(value) {\r\n        return new Volume(value, VolumeUnits.ImperialBeerBarrels);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsQuarts\r\n     *\r\n     * @param value The unit as UsQuarts to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsQuarts(value) {\r\n        return new Volume(value, VolumeUnits.UsQuarts);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a UsPints\r\n     *\r\n     * @param value The unit as UsPints to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromUsPints(value) {\r\n        return new Volume(value, VolumeUnits.UsPints);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a AcreFeet\r\n     *\r\n     * @param value The unit as AcreFeet to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromAcreFeet(value) {\r\n        return new Volume(value, VolumeUnits.AcreFeet);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a ImperialPints\r\n     *\r\n     * @param value The unit as ImperialPints to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromImperialPints(value) {\r\n        return new Volume(value, VolumeUnits.ImperialPints);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a BoardFeet\r\n     *\r\n     * @param value The unit as BoardFeet to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromBoardFeet(value) {\r\n        return new Volume(value, VolumeUnits.BoardFeet);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Microliters\r\n     *\r\n     * @param value The unit as Microliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMicroliters(value) {\r\n        return new Volume(value, VolumeUnits.Microliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Milliliters\r\n     *\r\n     * @param value The unit as Milliliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMilliliters(value) {\r\n        return new Volume(value, VolumeUnits.Milliliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Centiliters\r\n     *\r\n     * @param value The unit as Centiliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromCentiliters(value) {\r\n        return new Volume(value, VolumeUnits.Centiliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Deciliters\r\n     *\r\n     * @param value The unit as Deciliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromDeciliters(value) {\r\n        return new Volume(value, VolumeUnits.Deciliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Hectoliters\r\n     *\r\n     * @param value The unit as Hectoliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromHectoliters(value) {\r\n        return new Volume(value, VolumeUnits.Hectoliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Kiloliters\r\n     *\r\n     * @param value The unit as Kiloliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromKiloliters(value) {\r\n        return new Volume(value, VolumeUnits.Kiloliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a Megaliters\r\n     *\r\n     * @param value The unit as Megaliters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMegaliters(value) {\r\n        return new Volume(value, VolumeUnits.Megaliters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a HectocubicMeters\r\n     *\r\n     * @param value The unit as HectocubicMeters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromHectocubicMeters(value) {\r\n        return new Volume(value, VolumeUnits.HectocubicMeters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a KilocubicMeters\r\n     *\r\n     * @param value The unit as KilocubicMeters to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromKilocubicMeters(value) {\r\n        return new Volume(value, VolumeUnits.KilocubicMeters);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a HectocubicFeet\r\n     *\r\n     * @param value The unit as HectocubicFeet to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromHectocubicFeet(value) {\r\n        return new Volume(value, VolumeUnits.HectocubicFeet);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a KilocubicFeet\r\n     *\r\n     * @param value The unit as KilocubicFeet to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromKilocubicFeet(value) {\r\n        return new Volume(value, VolumeUnits.KilocubicFeet);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a MegacubicFeet\r\n     *\r\n     * @param value The unit as MegacubicFeet to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMegacubicFeet(value) {\r\n        return new Volume(value, VolumeUnits.MegacubicFeet);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a KiloimperialGallons\r\n     *\r\n     * @param value The unit as KiloimperialGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromKiloimperialGallons(value) {\r\n        return new Volume(value, VolumeUnits.KiloimperialGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a MegaimperialGallons\r\n     *\r\n     * @param value The unit as MegaimperialGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMegaimperialGallons(value) {\r\n        return new Volume(value, VolumeUnits.MegaimperialGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a DecausGallons\r\n     *\r\n     * @param value The unit as DecausGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromDecausGallons(value) {\r\n        return new Volume(value, VolumeUnits.DecausGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a DeciusGallons\r\n     *\r\n     * @param value The unit as DeciusGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromDeciusGallons(value) {\r\n        return new Volume(value, VolumeUnits.DeciusGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a HectousGallons\r\n     *\r\n     * @param value The unit as HectousGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromHectousGallons(value) {\r\n        return new Volume(value, VolumeUnits.HectousGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a KilousGallons\r\n     *\r\n     * @param value The unit as KilousGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromKilousGallons(value) {\r\n        return new Volume(value, VolumeUnits.KilousGallons);\r\n    }\r\n    /**\r\n     * Create a new Volume instance from a MegausGallons\r\n     *\r\n     * @param value The unit as MegausGallons to create a new Volume from.\r\n     * @returns The new Volume instance.\r\n     */\r\n    static FromMegausGallons(value) {\r\n        return new Volume(value, VolumeUnits.MegausGallons);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case VolumeUnits.Liters:\r\n                return this.value * 1e3;\r\n            case VolumeUnits.CubicMeters:\r\n                return this.value;\r\n            case VolumeUnits.CubicKilometers:\r\n                return this.value / 1e9;\r\n            case VolumeUnits.CubicHectometers:\r\n                return this.value / 1e6;\r\n            case VolumeUnits.CubicDecimeters:\r\n                return this.value * 1e3;\r\n            case VolumeUnits.CubicCentimeters:\r\n                return this.value * 1e6;\r\n            case VolumeUnits.CubicMillimeters:\r\n                return this.value * 1e9;\r\n            case VolumeUnits.CubicMicrometers:\r\n                return this.value * 1e18;\r\n            case VolumeUnits.CubicMiles:\r\n                return this.value / 4.16818182544058e9;\r\n            case VolumeUnits.CubicYards:\r\n                return this.value / 0.764554858;\r\n            case VolumeUnits.CubicFeet:\r\n                return this.value / 0.0283168;\r\n            case VolumeUnits.CubicInches:\r\n                return this.value / (1.6387 * 1e-5);\r\n            case VolumeUnits.ImperialGallons:\r\n                return this.value / 0.00454609000000181429905810072407;\r\n            case VolumeUnits.ImperialOunces:\r\n                return this.value / 2.8413062499962901241875439064617e-5;\r\n            case VolumeUnits.UsGallons:\r\n                return this.value / 0.00378541;\r\n            case VolumeUnits.UsOunces:\r\n                return this.value / 2.957352956253760505068307980135e-5;\r\n            case VolumeUnits.UsTablespoons:\r\n                return this.value / 1.478676478125e-5;\r\n            case VolumeUnits.AuTablespoons:\r\n                return this.value / 2e-5;\r\n            case VolumeUnits.UkTablespoons:\r\n                return this.value / 1.5e-5;\r\n            case VolumeUnits.MetricTeaspoons:\r\n                return this.value / 0.5e-5;\r\n            case VolumeUnits.UsTeaspoons:\r\n                return this.value / 4.92892159375e-6;\r\n            case VolumeUnits.MetricCups:\r\n                return this.value / 0.00025;\r\n            case VolumeUnits.UsCustomaryCups:\r\n                return this.value / 0.0002365882365;\r\n            case VolumeUnits.UsLegalCups:\r\n                return this.value / 0.00024;\r\n            case VolumeUnits.OilBarrels:\r\n                return this.value / 0.158987294928;\r\n            case VolumeUnits.UsBeerBarrels:\r\n                return this.value / 0.1173477658;\r\n            case VolumeUnits.ImperialBeerBarrels:\r\n                return this.value / 0.16365924;\r\n            case VolumeUnits.UsQuarts:\r\n                return this.value / 9.46352946e-4;\r\n            case VolumeUnits.UsPints:\r\n                return this.value / 4.73176473e-4;\r\n            case VolumeUnits.AcreFeet:\r\n                return this.value * 0.000810714;\r\n            case VolumeUnits.ImperialPints:\r\n                return this.value / 5.6826125e-4;\r\n            case VolumeUnits.BoardFeet:\r\n                return this.value / 2.3597372158e-3;\r\n            case VolumeUnits.Microliters:\r\n                return (this.value * 1e3) / 0.000001;\r\n            case VolumeUnits.Milliliters:\r\n                return (this.value * 1e3) / 0.001;\r\n            case VolumeUnits.Centiliters:\r\n                return (this.value * 1e3) / 0.01;\r\n            case VolumeUnits.Deciliters:\r\n                return (this.value * 1e3) / 0.1;\r\n            case VolumeUnits.Hectoliters:\r\n                return (this.value * 1e3) / 100;\r\n            case VolumeUnits.Kiloliters:\r\n                return (this.value * 1e3) / 1000;\r\n            case VolumeUnits.Megaliters:\r\n                return (this.value * 1e3) / 1000000;\r\n            case VolumeUnits.HectocubicMeters:\r\n                return (this.value) / 100;\r\n            case VolumeUnits.KilocubicMeters:\r\n                return (this.value) / 1000;\r\n            case VolumeUnits.HectocubicFeet:\r\n                return (this.value / 0.0283168) / 100;\r\n            case VolumeUnits.KilocubicFeet:\r\n                return (this.value / 0.0283168) / 1000;\r\n            case VolumeUnits.MegacubicFeet:\r\n                return (this.value / 0.0283168) / 1000000;\r\n            case VolumeUnits.KiloimperialGallons:\r\n                return (this.value / 0.00454609000000181429905810072407) / 1000;\r\n            case VolumeUnits.MegaimperialGallons:\r\n                return (this.value / 0.00454609000000181429905810072407) / 1000000;\r\n            case VolumeUnits.DecausGallons:\r\n                return (this.value / 0.00378541) / 10;\r\n            case VolumeUnits.DeciusGallons:\r\n                return (this.value / 0.00378541) / 0.1;\r\n            case VolumeUnits.HectousGallons:\r\n                return (this.value / 0.00378541) / 100;\r\n            case VolumeUnits.KilousGallons:\r\n                return (this.value / 0.00378541) / 1000;\r\n            case VolumeUnits.MegausGallons:\r\n                return (this.value / 0.00378541) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case VolumeUnits.Liters:\r\n                return value / 1e3;\r\n            case VolumeUnits.CubicMeters:\r\n                return value;\r\n            case VolumeUnits.CubicKilometers:\r\n                return value * 1e9;\r\n            case VolumeUnits.CubicHectometers:\r\n                return value * 1e6;\r\n            case VolumeUnits.CubicDecimeters:\r\n                return value / 1e3;\r\n            case VolumeUnits.CubicCentimeters:\r\n                return value / 1e6;\r\n            case VolumeUnits.CubicMillimeters:\r\n                return value / 1e9;\r\n            case VolumeUnits.CubicMicrometers:\r\n                return value / 1e18;\r\n            case VolumeUnits.CubicMiles:\r\n                return value * 4.16818182544058e9;\r\n            case VolumeUnits.CubicYards:\r\n                return value * 0.764554858;\r\n            case VolumeUnits.CubicFeet:\r\n                return value * 0.0283168;\r\n            case VolumeUnits.CubicInches:\r\n                return value * 1.6387 * 1e-5;\r\n            case VolumeUnits.ImperialGallons:\r\n                return value * 0.00454609000000181429905810072407;\r\n            case VolumeUnits.ImperialOunces:\r\n                return value * 2.8413062499962901241875439064617e-5;\r\n            case VolumeUnits.UsGallons:\r\n                return value * 0.00378541;\r\n            case VolumeUnits.UsOunces:\r\n                return value * 2.957352956253760505068307980135e-5;\r\n            case VolumeUnits.UsTablespoons:\r\n                return value * 1.478676478125e-5;\r\n            case VolumeUnits.AuTablespoons:\r\n                return value * 2e-5;\r\n            case VolumeUnits.UkTablespoons:\r\n                return value * 1.5e-5;\r\n            case VolumeUnits.MetricTeaspoons:\r\n                return value * 0.5e-5;\r\n            case VolumeUnits.UsTeaspoons:\r\n                return value * 4.92892159375e-6;\r\n            case VolumeUnits.MetricCups:\r\n                return value * 0.00025;\r\n            case VolumeUnits.UsCustomaryCups:\r\n                return value * 0.0002365882365;\r\n            case VolumeUnits.UsLegalCups:\r\n                return value * 0.00024;\r\n            case VolumeUnits.OilBarrels:\r\n                return value * 0.158987294928;\r\n            case VolumeUnits.UsBeerBarrels:\r\n                return value * 0.1173477658;\r\n            case VolumeUnits.ImperialBeerBarrels:\r\n                return value * 0.16365924;\r\n            case VolumeUnits.UsQuarts:\r\n                return value * 9.46352946e-4;\r\n            case VolumeUnits.UsPints:\r\n                return value * 4.73176473e-4;\r\n            case VolumeUnits.AcreFeet:\r\n                return value / 0.000810714;\r\n            case VolumeUnits.ImperialPints:\r\n                return value * 5.6826125e-4;\r\n            case VolumeUnits.BoardFeet:\r\n                return value * 2.3597372158e-3;\r\n            case VolumeUnits.Microliters:\r\n                return (value / 1e3) * 0.000001;\r\n            case VolumeUnits.Milliliters:\r\n                return (value / 1e3) * 0.001;\r\n            case VolumeUnits.Centiliters:\r\n                return (value / 1e3) * 0.01;\r\n            case VolumeUnits.Deciliters:\r\n                return (value / 1e3) * 0.1;\r\n            case VolumeUnits.Hectoliters:\r\n                return (value / 1e3) * 100;\r\n            case VolumeUnits.Kiloliters:\r\n                return (value / 1e3) * 1000;\r\n            case VolumeUnits.Megaliters:\r\n                return (value / 1e3) * 1000000;\r\n            case VolumeUnits.HectocubicMeters:\r\n                return (value) * 100;\r\n            case VolumeUnits.KilocubicMeters:\r\n                return (value) * 1000;\r\n            case VolumeUnits.HectocubicFeet:\r\n                return (value * 0.0283168) * 100;\r\n            case VolumeUnits.KilocubicFeet:\r\n                return (value * 0.0283168) * 1000;\r\n            case VolumeUnits.MegacubicFeet:\r\n                return (value * 0.0283168) * 1000000;\r\n            case VolumeUnits.KiloimperialGallons:\r\n                return (value * 0.00454609000000181429905810072407) * 1000;\r\n            case VolumeUnits.MegaimperialGallons:\r\n                return (value * 0.00454609000000181429905810072407) * 1000000;\r\n            case VolumeUnits.DecausGallons:\r\n                return (value * 0.00378541) * 10;\r\n            case VolumeUnits.DeciusGallons:\r\n                return (value * 0.00378541) * 0.1;\r\n            case VolumeUnits.HectousGallons:\r\n                return (value * 0.00378541) * 100;\r\n            case VolumeUnits.KilousGallons:\r\n                return (value * 0.00378541) * 1000;\r\n            case VolumeUnits.MegausGallons:\r\n                return (value * 0.00378541) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the Volume to string.\r\n     * Note! the default format for Volume is CubicMeters.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the Volume.\r\n     * @returns The string format of the Volume.\r\n     */\r\n    toString(toUnit = VolumeUnits.CubicMeters) {\r\n        switch (toUnit) {\r\n            case VolumeUnits.Liters:\r\n                return this.Liters + ` l`;\r\n            case VolumeUnits.CubicMeters:\r\n                return this.CubicMeters + ` m³`;\r\n            case VolumeUnits.CubicKilometers:\r\n                return this.CubicKilometers + ` km³`;\r\n            case VolumeUnits.CubicHectometers:\r\n                return this.CubicHectometers + ` hm³`;\r\n            case VolumeUnits.CubicDecimeters:\r\n                return this.CubicDecimeters + ` dm³`;\r\n            case VolumeUnits.CubicCentimeters:\r\n                return this.CubicCentimeters + ` cm³`;\r\n            case VolumeUnits.CubicMillimeters:\r\n                return this.CubicMillimeters + ` mm³`;\r\n            case VolumeUnits.CubicMicrometers:\r\n                return this.CubicMicrometers + ` µm³`;\r\n            case VolumeUnits.CubicMiles:\r\n                return this.CubicMiles + ` mi³`;\r\n            case VolumeUnits.CubicYards:\r\n                return this.CubicYards + ` yd³`;\r\n            case VolumeUnits.CubicFeet:\r\n                return this.CubicFeet + ` ft³`;\r\n            case VolumeUnits.CubicInches:\r\n                return this.CubicInches + ` in³`;\r\n            case VolumeUnits.ImperialGallons:\r\n                return this.ImperialGallons + ` gal (imp.)`;\r\n            case VolumeUnits.ImperialOunces:\r\n                return this.ImperialOunces + ` oz (imp.)`;\r\n            case VolumeUnits.UsGallons:\r\n                return this.UsGallons + ` gal (U.S.)`;\r\n            case VolumeUnits.UsOunces:\r\n                return this.UsOunces + ` oz (U.S.)`;\r\n            case VolumeUnits.UsTablespoons:\r\n                return this.UsTablespoons + ` undefined`;\r\n            case VolumeUnits.AuTablespoons:\r\n                return this.AuTablespoons + ` undefined`;\r\n            case VolumeUnits.UkTablespoons:\r\n                return this.UkTablespoons + ` undefined`;\r\n            case VolumeUnits.MetricTeaspoons:\r\n                return this.MetricTeaspoons + ` tsp`;\r\n            case VolumeUnits.UsTeaspoons:\r\n                return this.UsTeaspoons + ` undefined`;\r\n            case VolumeUnits.MetricCups:\r\n                return this.MetricCups + ` undefined`;\r\n            case VolumeUnits.UsCustomaryCups:\r\n                return this.UsCustomaryCups + ` undefined`;\r\n            case VolumeUnits.UsLegalCups:\r\n                return this.UsLegalCups + ` undefined`;\r\n            case VolumeUnits.OilBarrels:\r\n                return this.OilBarrels + ` bbl`;\r\n            case VolumeUnits.UsBeerBarrels:\r\n                return this.UsBeerBarrels + ` bl (U.S.)`;\r\n            case VolumeUnits.ImperialBeerBarrels:\r\n                return this.ImperialBeerBarrels + ` bl (imp.)`;\r\n            case VolumeUnits.UsQuarts:\r\n                return this.UsQuarts + ` qt (U.S.)`;\r\n            case VolumeUnits.UsPints:\r\n                return this.UsPints + ` pt (U.S.)`;\r\n            case VolumeUnits.AcreFeet:\r\n                return this.AcreFeet + ` ac-ft`;\r\n            case VolumeUnits.ImperialPints:\r\n                return this.ImperialPints + ` pt (imp.)`;\r\n            case VolumeUnits.BoardFeet:\r\n                return this.BoardFeet + ` bf`;\r\n            case VolumeUnits.Microliters:\r\n                return this.Microliters + ` `;\r\n            case VolumeUnits.Milliliters:\r\n                return this.Milliliters + ` `;\r\n            case VolumeUnits.Centiliters:\r\n                return this.Centiliters + ` `;\r\n            case VolumeUnits.Deciliters:\r\n                return this.Deciliters + ` `;\r\n            case VolumeUnits.Hectoliters:\r\n                return this.Hectoliters + ` `;\r\n            case VolumeUnits.Kiloliters:\r\n                return this.Kiloliters + ` `;\r\n            case VolumeUnits.Megaliters:\r\n                return this.Megaliters + ` `;\r\n            case VolumeUnits.HectocubicMeters:\r\n                return this.HectocubicMeters + ` `;\r\n            case VolumeUnits.KilocubicMeters:\r\n                return this.KilocubicMeters + ` `;\r\n            case VolumeUnits.HectocubicFeet:\r\n                return this.HectocubicFeet + ` `;\r\n            case VolumeUnits.KilocubicFeet:\r\n                return this.KilocubicFeet + ` `;\r\n            case VolumeUnits.MegacubicFeet:\r\n                return this.MegacubicFeet + ` `;\r\n            case VolumeUnits.KiloimperialGallons:\r\n                return this.KiloimperialGallons + ` `;\r\n            case VolumeUnits.MegaimperialGallons:\r\n                return this.MegaimperialGallons + ` `;\r\n            case VolumeUnits.DecausGallons:\r\n                return this.DecausGallons + ` `;\r\n            case VolumeUnits.DeciusGallons:\r\n                return this.DeciusGallons + ` `;\r\n            case VolumeUnits.HectousGallons:\r\n                return this.HectousGallons + ` `;\r\n            case VolumeUnits.KilousGallons:\r\n                return this.KilousGallons + ` `;\r\n            case VolumeUnits.MegausGallons:\r\n                return this.MegausGallons + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given Volume are equals to the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns True if the given Volume are equal to the current Volume.\r\n     */\r\n    equals(volume) {\r\n        return this.value === volume.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given Volume against the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns 0 if they are equal, -1 if the current Volume is less then other, 1 if the current Volume is greater then other.\r\n     */\r\n    compareTo(volume) {\r\n        if (this.value > volume.BaseValue)\r\n            return 1;\r\n        if (this.value < volume.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given Volume with the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns A new Volume instance with the results.\r\n     */\r\n    add(volume) {\r\n        return new Volume(this.value + volume.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given Volume with the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns A new Volume instance with the results.\r\n     */\r\n    subtract(volume) {\r\n        return new Volume(this.value - volume.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given Volume with the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns A new Volume instance with the results.\r\n     */\r\n    multiply(volume) {\r\n        return new Volume(this.value * volume.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given Volume with the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns A new Volume instance with the results.\r\n     */\r\n    divide(volume) {\r\n        return new Volume(this.value / volume.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given Volume with the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns A new Volume instance with the results.\r\n     */\r\n    modulo(volume) {\r\n        return new Volume(this.value % volume.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given Volume with the current Volume.\r\n     * @param volume The other Volume.\r\n     * @returns A new Volume instance with the results.\r\n     */\r\n    pow(volume) {\r\n        return new Volume(this.value ** volume.BaseValue);\r\n    }\r\n}\r\nexports.Volume = Volume;\r\n//# sourceMappingURL=volume.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VolumeConcentration = exports.VolumeConcentrationUnits = void 0;\r\n/** VolumeConcentrationUnits enumeration */\r\nvar VolumeConcentrationUnits;\r\n(function (VolumeConcentrationUnits) {\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"DecimalFractions\"] = 0] = \"DecimalFractions\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"LitersPerLiter\"] = 1] = \"LitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"LitersPerMililiter\"] = 2] = \"LitersPerMililiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"Percent\"] = 3] = \"Percent\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"PartsPerThousand\"] = 4] = \"PartsPerThousand\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"PartsPerMillion\"] = 5] = \"PartsPerMillion\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"PartsPerBillion\"] = 6] = \"PartsPerBillion\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"PartsPerTrillion\"] = 7] = \"PartsPerTrillion\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"PicolitersPerLiter\"] = 8] = \"PicolitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"NanolitersPerLiter\"] = 9] = \"NanolitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"MicrolitersPerLiter\"] = 10] = \"MicrolitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"MillilitersPerLiter\"] = 11] = \"MillilitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"CentilitersPerLiter\"] = 12] = \"CentilitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"DecilitersPerLiter\"] = 13] = \"DecilitersPerLiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"PicolitersPerMililiter\"] = 14] = \"PicolitersPerMililiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"NanolitersPerMililiter\"] = 15] = \"NanolitersPerMililiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"MicrolitersPerMililiter\"] = 16] = \"MicrolitersPerMililiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"MillilitersPerMililiter\"] = 17] = \"MillilitersPerMililiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"CentilitersPerMililiter\"] = 18] = \"CentilitersPerMililiter\";\r\n    /** */\r\n    VolumeConcentrationUnits[VolumeConcentrationUnits[\"DecilitersPerMililiter\"] = 19] = \"DecilitersPerMililiter\";\r\n})(VolumeConcentrationUnits = exports.VolumeConcentrationUnits || (exports.VolumeConcentrationUnits = {}));\r\n/** The volume concentration (not to be confused with volume fraction) is defined as the volume of a constituent divided by the total volume of the mixture. */\r\nclass VolumeConcentration {\r\n    /**\r\n     * Create a new VolumeConcentration.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘VolumeConcentration’ unit to create from.\r\n     * The default unit is DecimalFractions\r\n     */\r\n    constructor(value, fromUnit = VolumeConcentrationUnits.DecimalFractions) {\r\n        this.decimalfractionsLazy = null;\r\n        this.litersperliterLazy = null;\r\n        this.literspermililiterLazy = null;\r\n        this.percentLazy = null;\r\n        this.partsperthousandLazy = null;\r\n        this.partspermillionLazy = null;\r\n        this.partsperbillionLazy = null;\r\n        this.partspertrillionLazy = null;\r\n        this.picolitersperliterLazy = null;\r\n        this.nanolitersperliterLazy = null;\r\n        this.microlitersperliterLazy = null;\r\n        this.millilitersperliterLazy = null;\r\n        this.centilitersperliterLazy = null;\r\n        this.decilitersperliterLazy = null;\r\n        this.picoliterspermililiterLazy = null;\r\n        this.nanoliterspermililiterLazy = null;\r\n        this.microliterspermililiterLazy = null;\r\n        this.milliliterspermililiterLazy = null;\r\n        this.centiliterspermililiterLazy = null;\r\n        this.deciliterspermililiterLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of VolumeConcentration is DecimalFractions.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get DecimalFractions() {\r\n        if (this.decimalfractionsLazy !== null) {\r\n            return this.decimalfractionsLazy;\r\n        }\r\n        return this.decimalfractionsLazy = this.convertFromBase(VolumeConcentrationUnits.DecimalFractions);\r\n    }\r\n    /** */\r\n    get LitersPerLiter() {\r\n        if (this.litersperliterLazy !== null) {\r\n            return this.litersperliterLazy;\r\n        }\r\n        return this.litersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.LitersPerLiter);\r\n    }\r\n    /** */\r\n    get LitersPerMililiter() {\r\n        if (this.literspermililiterLazy !== null) {\r\n            return this.literspermililiterLazy;\r\n        }\r\n        return this.literspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.LitersPerMililiter);\r\n    }\r\n    /** */\r\n    get Percent() {\r\n        if (this.percentLazy !== null) {\r\n            return this.percentLazy;\r\n        }\r\n        return this.percentLazy = this.convertFromBase(VolumeConcentrationUnits.Percent);\r\n    }\r\n    /** */\r\n    get PartsPerThousand() {\r\n        if (this.partsperthousandLazy !== null) {\r\n            return this.partsperthousandLazy;\r\n        }\r\n        return this.partsperthousandLazy = this.convertFromBase(VolumeConcentrationUnits.PartsPerThousand);\r\n    }\r\n    /** */\r\n    get PartsPerMillion() {\r\n        if (this.partspermillionLazy !== null) {\r\n            return this.partspermillionLazy;\r\n        }\r\n        return this.partspermillionLazy = this.convertFromBase(VolumeConcentrationUnits.PartsPerMillion);\r\n    }\r\n    /** */\r\n    get PartsPerBillion() {\r\n        if (this.partsperbillionLazy !== null) {\r\n            return this.partsperbillionLazy;\r\n        }\r\n        return this.partsperbillionLazy = this.convertFromBase(VolumeConcentrationUnits.PartsPerBillion);\r\n    }\r\n    /** */\r\n    get PartsPerTrillion() {\r\n        if (this.partspertrillionLazy !== null) {\r\n            return this.partspertrillionLazy;\r\n        }\r\n        return this.partspertrillionLazy = this.convertFromBase(VolumeConcentrationUnits.PartsPerTrillion);\r\n    }\r\n    /** */\r\n    get PicolitersPerLiter() {\r\n        if (this.picolitersperliterLazy !== null) {\r\n            return this.picolitersperliterLazy;\r\n        }\r\n        return this.picolitersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.PicolitersPerLiter);\r\n    }\r\n    /** */\r\n    get NanolitersPerLiter() {\r\n        if (this.nanolitersperliterLazy !== null) {\r\n            return this.nanolitersperliterLazy;\r\n        }\r\n        return this.nanolitersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.NanolitersPerLiter);\r\n    }\r\n    /** */\r\n    get MicrolitersPerLiter() {\r\n        if (this.microlitersperliterLazy !== null) {\r\n            return this.microlitersperliterLazy;\r\n        }\r\n        return this.microlitersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.MicrolitersPerLiter);\r\n    }\r\n    /** */\r\n    get MillilitersPerLiter() {\r\n        if (this.millilitersperliterLazy !== null) {\r\n            return this.millilitersperliterLazy;\r\n        }\r\n        return this.millilitersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.MillilitersPerLiter);\r\n    }\r\n    /** */\r\n    get CentilitersPerLiter() {\r\n        if (this.centilitersperliterLazy !== null) {\r\n            return this.centilitersperliterLazy;\r\n        }\r\n        return this.centilitersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.CentilitersPerLiter);\r\n    }\r\n    /** */\r\n    get DecilitersPerLiter() {\r\n        if (this.decilitersperliterLazy !== null) {\r\n            return this.decilitersperliterLazy;\r\n        }\r\n        return this.decilitersperliterLazy = this.convertFromBase(VolumeConcentrationUnits.DecilitersPerLiter);\r\n    }\r\n    /** */\r\n    get PicolitersPerMililiter() {\r\n        if (this.picoliterspermililiterLazy !== null) {\r\n            return this.picoliterspermililiterLazy;\r\n        }\r\n        return this.picoliterspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.PicolitersPerMililiter);\r\n    }\r\n    /** */\r\n    get NanolitersPerMililiter() {\r\n        if (this.nanoliterspermililiterLazy !== null) {\r\n            return this.nanoliterspermililiterLazy;\r\n        }\r\n        return this.nanoliterspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.NanolitersPerMililiter);\r\n    }\r\n    /** */\r\n    get MicrolitersPerMililiter() {\r\n        if (this.microliterspermililiterLazy !== null) {\r\n            return this.microliterspermililiterLazy;\r\n        }\r\n        return this.microliterspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.MicrolitersPerMililiter);\r\n    }\r\n    /** */\r\n    get MillilitersPerMililiter() {\r\n        if (this.milliliterspermililiterLazy !== null) {\r\n            return this.milliliterspermililiterLazy;\r\n        }\r\n        return this.milliliterspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.MillilitersPerMililiter);\r\n    }\r\n    /** */\r\n    get CentilitersPerMililiter() {\r\n        if (this.centiliterspermililiterLazy !== null) {\r\n            return this.centiliterspermililiterLazy;\r\n        }\r\n        return this.centiliterspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.CentilitersPerMililiter);\r\n    }\r\n    /** */\r\n    get DecilitersPerMililiter() {\r\n        if (this.deciliterspermililiterLazy !== null) {\r\n            return this.deciliterspermililiterLazy;\r\n        }\r\n        return this.deciliterspermililiterLazy = this.convertFromBase(VolumeConcentrationUnits.DecilitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a DecimalFractions\r\n     *\r\n     * @param value The unit as DecimalFractions to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromDecimalFractions(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.DecimalFractions);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a LitersPerLiter\r\n     *\r\n     * @param value The unit as LitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromLitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.LitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a LitersPerMililiter\r\n     *\r\n     * @param value The unit as LitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromLitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.LitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a Percent\r\n     *\r\n     * @param value The unit as Percent to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPercent(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.Percent);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a PartsPerThousand\r\n     *\r\n     * @param value The unit as PartsPerThousand to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPartsPerThousand(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.PartsPerThousand);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a PartsPerMillion\r\n     *\r\n     * @param value The unit as PartsPerMillion to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPartsPerMillion(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.PartsPerMillion);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a PartsPerBillion\r\n     *\r\n     * @param value The unit as PartsPerBillion to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPartsPerBillion(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.PartsPerBillion);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a PartsPerTrillion\r\n     *\r\n     * @param value The unit as PartsPerTrillion to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPartsPerTrillion(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.PartsPerTrillion);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a PicolitersPerLiter\r\n     *\r\n     * @param value The unit as PicolitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPicolitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.PicolitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a NanolitersPerLiter\r\n     *\r\n     * @param value The unit as NanolitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromNanolitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.NanolitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a MicrolitersPerLiter\r\n     *\r\n     * @param value The unit as MicrolitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromMicrolitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.MicrolitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a MillilitersPerLiter\r\n     *\r\n     * @param value The unit as MillilitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromMillilitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.MillilitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a CentilitersPerLiter\r\n     *\r\n     * @param value The unit as CentilitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromCentilitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.CentilitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a DecilitersPerLiter\r\n     *\r\n     * @param value The unit as DecilitersPerLiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromDecilitersPerLiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.DecilitersPerLiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a PicolitersPerMililiter\r\n     *\r\n     * @param value The unit as PicolitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromPicolitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.PicolitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a NanolitersPerMililiter\r\n     *\r\n     * @param value The unit as NanolitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromNanolitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.NanolitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a MicrolitersPerMililiter\r\n     *\r\n     * @param value The unit as MicrolitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromMicrolitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.MicrolitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a MillilitersPerMililiter\r\n     *\r\n     * @param value The unit as MillilitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromMillilitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.MillilitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a CentilitersPerMililiter\r\n     *\r\n     * @param value The unit as CentilitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromCentilitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.CentilitersPerMililiter);\r\n    }\r\n    /**\r\n     * Create a new VolumeConcentration instance from a DecilitersPerMililiter\r\n     *\r\n     * @param value The unit as DecilitersPerMililiter to create a new VolumeConcentration from.\r\n     * @returns The new VolumeConcentration instance.\r\n     */\r\n    static FromDecilitersPerMililiter(value) {\r\n        return new VolumeConcentration(value, VolumeConcentrationUnits.DecilitersPerMililiter);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case VolumeConcentrationUnits.DecimalFractions:\r\n                return this.value;\r\n            case VolumeConcentrationUnits.LitersPerLiter:\r\n                return this.value;\r\n            case VolumeConcentrationUnits.LitersPerMililiter:\r\n                return this.value * 1e-3;\r\n            case VolumeConcentrationUnits.Percent:\r\n                return this.value * 1e2;\r\n            case VolumeConcentrationUnits.PartsPerThousand:\r\n                return this.value * 1e3;\r\n            case VolumeConcentrationUnits.PartsPerMillion:\r\n                return this.value * 1e6;\r\n            case VolumeConcentrationUnits.PartsPerBillion:\r\n                return this.value * 1e9;\r\n            case VolumeConcentrationUnits.PartsPerTrillion:\r\n                return this.value * 1e12;\r\n            case VolumeConcentrationUnits.PicolitersPerLiter:\r\n                return (this.value) / 1e-12;\r\n            case VolumeConcentrationUnits.NanolitersPerLiter:\r\n                return (this.value) / 1e-9;\r\n            case VolumeConcentrationUnits.MicrolitersPerLiter:\r\n                return (this.value) / 0.000001;\r\n            case VolumeConcentrationUnits.MillilitersPerLiter:\r\n                return (this.value) / 0.001;\r\n            case VolumeConcentrationUnits.CentilitersPerLiter:\r\n                return (this.value) / 0.01;\r\n            case VolumeConcentrationUnits.DecilitersPerLiter:\r\n                return (this.value) / 0.1;\r\n            case VolumeConcentrationUnits.PicolitersPerMililiter:\r\n                return (this.value * 1e-3) / 1e-12;\r\n            case VolumeConcentrationUnits.NanolitersPerMililiter:\r\n                return (this.value * 1e-3) / 1e-9;\r\n            case VolumeConcentrationUnits.MicrolitersPerMililiter:\r\n                return (this.value * 1e-3) / 0.000001;\r\n            case VolumeConcentrationUnits.MillilitersPerMililiter:\r\n                return (this.value * 1e-3) / 0.001;\r\n            case VolumeConcentrationUnits.CentilitersPerMililiter:\r\n                return (this.value * 1e-3) / 0.01;\r\n            case VolumeConcentrationUnits.DecilitersPerMililiter:\r\n                return (this.value * 1e-3) / 0.1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case VolumeConcentrationUnits.DecimalFractions:\r\n                return value;\r\n            case VolumeConcentrationUnits.LitersPerLiter:\r\n                return value;\r\n            case VolumeConcentrationUnits.LitersPerMililiter:\r\n                return value / 1e-3;\r\n            case VolumeConcentrationUnits.Percent:\r\n                return value / 1e2;\r\n            case VolumeConcentrationUnits.PartsPerThousand:\r\n                return value / 1e3;\r\n            case VolumeConcentrationUnits.PartsPerMillion:\r\n                return value / 1e6;\r\n            case VolumeConcentrationUnits.PartsPerBillion:\r\n                return value / 1e9;\r\n            case VolumeConcentrationUnits.PartsPerTrillion:\r\n                return value / 1e12;\r\n            case VolumeConcentrationUnits.PicolitersPerLiter:\r\n                return (value) * 1e-12;\r\n            case VolumeConcentrationUnits.NanolitersPerLiter:\r\n                return (value) * 1e-9;\r\n            case VolumeConcentrationUnits.MicrolitersPerLiter:\r\n                return (value) * 0.000001;\r\n            case VolumeConcentrationUnits.MillilitersPerLiter:\r\n                return (value) * 0.001;\r\n            case VolumeConcentrationUnits.CentilitersPerLiter:\r\n                return (value) * 0.01;\r\n            case VolumeConcentrationUnits.DecilitersPerLiter:\r\n                return (value) * 0.1;\r\n            case VolumeConcentrationUnits.PicolitersPerMililiter:\r\n                return (value / 1e-3) * 1e-12;\r\n            case VolumeConcentrationUnits.NanolitersPerMililiter:\r\n                return (value / 1e-3) * 1e-9;\r\n            case VolumeConcentrationUnits.MicrolitersPerMililiter:\r\n                return (value / 1e-3) * 0.000001;\r\n            case VolumeConcentrationUnits.MillilitersPerMililiter:\r\n                return (value / 1e-3) * 0.001;\r\n            case VolumeConcentrationUnits.CentilitersPerMililiter:\r\n                return (value / 1e-3) * 0.01;\r\n            case VolumeConcentrationUnits.DecilitersPerMililiter:\r\n                return (value / 1e-3) * 0.1;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the VolumeConcentration to string.\r\n     * Note! the default format for VolumeConcentration is DecimalFractions.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the VolumeConcentration.\r\n     * @returns The string format of the VolumeConcentration.\r\n     */\r\n    toString(toUnit = VolumeConcentrationUnits.DecimalFractions) {\r\n        switch (toUnit) {\r\n            case VolumeConcentrationUnits.DecimalFractions:\r\n                return this.DecimalFractions + ` `;\r\n            case VolumeConcentrationUnits.LitersPerLiter:\r\n                return this.LitersPerLiter + ` L/L`;\r\n            case VolumeConcentrationUnits.LitersPerMililiter:\r\n                return this.LitersPerMililiter + ` L/mL`;\r\n            case VolumeConcentrationUnits.Percent:\r\n                return this.Percent + ` %`;\r\n            case VolumeConcentrationUnits.PartsPerThousand:\r\n                return this.PartsPerThousand + ` ‰`;\r\n            case VolumeConcentrationUnits.PartsPerMillion:\r\n                return this.PartsPerMillion + ` ppm`;\r\n            case VolumeConcentrationUnits.PartsPerBillion:\r\n                return this.PartsPerBillion + ` ppb`;\r\n            case VolumeConcentrationUnits.PartsPerTrillion:\r\n                return this.PartsPerTrillion + ` ppt`;\r\n            case VolumeConcentrationUnits.PicolitersPerLiter:\r\n                return this.PicolitersPerLiter + ` `;\r\n            case VolumeConcentrationUnits.NanolitersPerLiter:\r\n                return this.NanolitersPerLiter + ` `;\r\n            case VolumeConcentrationUnits.MicrolitersPerLiter:\r\n                return this.MicrolitersPerLiter + ` `;\r\n            case VolumeConcentrationUnits.MillilitersPerLiter:\r\n                return this.MillilitersPerLiter + ` `;\r\n            case VolumeConcentrationUnits.CentilitersPerLiter:\r\n                return this.CentilitersPerLiter + ` `;\r\n            case VolumeConcentrationUnits.DecilitersPerLiter:\r\n                return this.DecilitersPerLiter + ` `;\r\n            case VolumeConcentrationUnits.PicolitersPerMililiter:\r\n                return this.PicolitersPerMililiter + ` `;\r\n            case VolumeConcentrationUnits.NanolitersPerMililiter:\r\n                return this.NanolitersPerMililiter + ` `;\r\n            case VolumeConcentrationUnits.MicrolitersPerMililiter:\r\n                return this.MicrolitersPerMililiter + ` `;\r\n            case VolumeConcentrationUnits.MillilitersPerMililiter:\r\n                return this.MillilitersPerMililiter + ` `;\r\n            case VolumeConcentrationUnits.CentilitersPerMililiter:\r\n                return this.CentilitersPerMililiter + ` `;\r\n            case VolumeConcentrationUnits.DecilitersPerMililiter:\r\n                return this.DecilitersPerMililiter + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given VolumeConcentration are equals to the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns True if the given VolumeConcentration are equal to the current VolumeConcentration.\r\n     */\r\n    equals(volumeConcentration) {\r\n        return this.value === volumeConcentration.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given VolumeConcentration against the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns 0 if they are equal, -1 if the current VolumeConcentration is less then other, 1 if the current VolumeConcentration is greater then other.\r\n     */\r\n    compareTo(volumeConcentration) {\r\n        if (this.value > volumeConcentration.BaseValue)\r\n            return 1;\r\n        if (this.value < volumeConcentration.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given VolumeConcentration with the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns A new VolumeConcentration instance with the results.\r\n     */\r\n    add(volumeConcentration) {\r\n        return new VolumeConcentration(this.value + volumeConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given VolumeConcentration with the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns A new VolumeConcentration instance with the results.\r\n     */\r\n    subtract(volumeConcentration) {\r\n        return new VolumeConcentration(this.value - volumeConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given VolumeConcentration with the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns A new VolumeConcentration instance with the results.\r\n     */\r\n    multiply(volumeConcentration) {\r\n        return new VolumeConcentration(this.value * volumeConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given VolumeConcentration with the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns A new VolumeConcentration instance with the results.\r\n     */\r\n    divide(volumeConcentration) {\r\n        return new VolumeConcentration(this.value / volumeConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given VolumeConcentration with the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns A new VolumeConcentration instance with the results.\r\n     */\r\n    modulo(volumeConcentration) {\r\n        return new VolumeConcentration(this.value % volumeConcentration.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given VolumeConcentration with the current VolumeConcentration.\r\n     * @param volumeConcentration The other VolumeConcentration.\r\n     * @returns A new VolumeConcentration instance with the results.\r\n     */\r\n    pow(volumeConcentration) {\r\n        return new VolumeConcentration(this.value ** volumeConcentration.BaseValue);\r\n    }\r\n}\r\nexports.VolumeConcentration = VolumeConcentration;\r\n//# sourceMappingURL=volumeconcentration.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VolumeFlow = exports.VolumeFlowUnits = void 0;\r\n/** VolumeFlowUnits enumeration */\r\nvar VolumeFlowUnits;\r\n(function (VolumeFlowUnits) {\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicMetersPerSecond\"] = 0] = \"CubicMetersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicMetersPerMinute\"] = 1] = \"CubicMetersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicMetersPerHour\"] = 2] = \"CubicMetersPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicMetersPerDay\"] = 3] = \"CubicMetersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicFeetPerSecond\"] = 4] = \"CubicFeetPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicFeetPerMinute\"] = 5] = \"CubicFeetPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicFeetPerHour\"] = 6] = \"CubicFeetPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicYardsPerSecond\"] = 7] = \"CubicYardsPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicYardsPerMinute\"] = 8] = \"CubicYardsPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicYardsPerHour\"] = 9] = \"CubicYardsPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicYardsPerDay\"] = 10] = \"CubicYardsPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MillionUsGallonsPerDay\"] = 11] = \"MillionUsGallonsPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UsGallonsPerDay\"] = 12] = \"UsGallonsPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"LitersPerSecond\"] = 13] = \"LitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"LitersPerMinute\"] = 14] = \"LitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"LitersPerHour\"] = 15] = \"LitersPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"LitersPerDay\"] = 16] = \"LitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UsGallonsPerSecond\"] = 17] = \"UsGallonsPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UsGallonsPerMinute\"] = 18] = \"UsGallonsPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UkGallonsPerDay\"] = 19] = \"UkGallonsPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UkGallonsPerHour\"] = 20] = \"UkGallonsPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UkGallonsPerMinute\"] = 21] = \"UkGallonsPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UkGallonsPerSecond\"] = 22] = \"UkGallonsPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"KilousGallonsPerMinute\"] = 23] = \"KilousGallonsPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"UsGallonsPerHour\"] = 24] = \"UsGallonsPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicDecimetersPerMinute\"] = 25] = \"CubicDecimetersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"OilBarrelsPerDay\"] = 26] = \"OilBarrelsPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"OilBarrelsPerMinute\"] = 27] = \"OilBarrelsPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"OilBarrelsPerHour\"] = 28] = \"OilBarrelsPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"OilBarrelsPerSecond\"] = 29] = \"OilBarrelsPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicMillimetersPerSecond\"] = 30] = \"CubicMillimetersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"AcreFeetPerSecond\"] = 31] = \"AcreFeetPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"AcreFeetPerMinute\"] = 32] = \"AcreFeetPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"AcreFeetPerHour\"] = 33] = \"AcreFeetPerHour\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"AcreFeetPerDay\"] = 34] = \"AcreFeetPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CubicCentimetersPerMinute\"] = 35] = \"CubicCentimetersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"NanolitersPerSecond\"] = 36] = \"NanolitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MicrolitersPerSecond\"] = 37] = \"MicrolitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MillilitersPerSecond\"] = 38] = \"MillilitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CentilitersPerSecond\"] = 39] = \"CentilitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"DecilitersPerSecond\"] = 40] = \"DecilitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"KilolitersPerSecond\"] = 41] = \"KilolitersPerSecond\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"NanolitersPerMinute\"] = 42] = \"NanolitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MicrolitersPerMinute\"] = 43] = \"MicrolitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MillilitersPerMinute\"] = 44] = \"MillilitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CentilitersPerMinute\"] = 45] = \"CentilitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"DecilitersPerMinute\"] = 46] = \"DecilitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"KilolitersPerMinute\"] = 47] = \"KilolitersPerMinute\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"NanolitersPerDay\"] = 48] = \"NanolitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MicrolitersPerDay\"] = 49] = \"MicrolitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MillilitersPerDay\"] = 50] = \"MillilitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"CentilitersPerDay\"] = 51] = \"CentilitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"DecilitersPerDay\"] = 52] = \"DecilitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"KilolitersPerDay\"] = 53] = \"KilolitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MegalitersPerDay\"] = 54] = \"MegalitersPerDay\";\r\n    /** */\r\n    VolumeFlowUnits[VolumeFlowUnits[\"MegaukGallonsPerSecond\"] = 55] = \"MegaukGallonsPerSecond\";\r\n})(VolumeFlowUnits = exports.VolumeFlowUnits || (exports.VolumeFlowUnits = {}));\r\n/** In physics and engineering, in particular fluid dynamics and hydrometry, the volumetric flow rate, (also known as volume flow rate, rate of fluid flow or volume velocity) is the volume of fluid which passes through a given surface per unit time. The SI unit is m³/s (cubic meters per second). In US Customary Units and British Imperial Units, volumetric flow rate is often expressed as ft³/s (cubic feet per second). It is usually represented by the symbol Q. */\r\nclass VolumeFlow {\r\n    /**\r\n     * Create a new VolumeFlow.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘VolumeFlow’ unit to create from.\r\n     * The default unit is CubicMetersPerSecond\r\n     */\r\n    constructor(value, fromUnit = VolumeFlowUnits.CubicMetersPerSecond) {\r\n        this.cubicmeterspersecondLazy = null;\r\n        this.cubicmetersperminuteLazy = null;\r\n        this.cubicmetersperhourLazy = null;\r\n        this.cubicmetersperdayLazy = null;\r\n        this.cubicfeetpersecondLazy = null;\r\n        this.cubicfeetperminuteLazy = null;\r\n        this.cubicfeetperhourLazy = null;\r\n        this.cubicyardspersecondLazy = null;\r\n        this.cubicyardsperminuteLazy = null;\r\n        this.cubicyardsperhourLazy = null;\r\n        this.cubicyardsperdayLazy = null;\r\n        this.millionusgallonsperdayLazy = null;\r\n        this.usgallonsperdayLazy = null;\r\n        this.literspersecondLazy = null;\r\n        this.litersperminuteLazy = null;\r\n        this.litersperhourLazy = null;\r\n        this.litersperdayLazy = null;\r\n        this.usgallonspersecondLazy = null;\r\n        this.usgallonsperminuteLazy = null;\r\n        this.ukgallonsperdayLazy = null;\r\n        this.ukgallonsperhourLazy = null;\r\n        this.ukgallonsperminuteLazy = null;\r\n        this.ukgallonspersecondLazy = null;\r\n        this.kilousgallonsperminuteLazy = null;\r\n        this.usgallonsperhourLazy = null;\r\n        this.cubicdecimetersperminuteLazy = null;\r\n        this.oilbarrelsperdayLazy = null;\r\n        this.oilbarrelsperminuteLazy = null;\r\n        this.oilbarrelsperhourLazy = null;\r\n        this.oilbarrelspersecondLazy = null;\r\n        this.cubicmillimeterspersecondLazy = null;\r\n        this.acrefeetpersecondLazy = null;\r\n        this.acrefeetperminuteLazy = null;\r\n        this.acrefeetperhourLazy = null;\r\n        this.acrefeetperdayLazy = null;\r\n        this.cubiccentimetersperminuteLazy = null;\r\n        this.nanoliterspersecondLazy = null;\r\n        this.microliterspersecondLazy = null;\r\n        this.milliliterspersecondLazy = null;\r\n        this.centiliterspersecondLazy = null;\r\n        this.deciliterspersecondLazy = null;\r\n        this.kiloliterspersecondLazy = null;\r\n        this.nanolitersperminuteLazy = null;\r\n        this.microlitersperminuteLazy = null;\r\n        this.millilitersperminuteLazy = null;\r\n        this.centilitersperminuteLazy = null;\r\n        this.decilitersperminuteLazy = null;\r\n        this.kilolitersperminuteLazy = null;\r\n        this.nanolitersperdayLazy = null;\r\n        this.microlitersperdayLazy = null;\r\n        this.millilitersperdayLazy = null;\r\n        this.centilitersperdayLazy = null;\r\n        this.decilitersperdayLazy = null;\r\n        this.kilolitersperdayLazy = null;\r\n        this.megalitersperdayLazy = null;\r\n        this.megaukgallonspersecondLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of VolumeFlow is CubicMetersPerSecond.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get CubicMetersPerSecond() {\r\n        if (this.cubicmeterspersecondLazy !== null) {\r\n            return this.cubicmeterspersecondLazy;\r\n        }\r\n        return this.cubicmeterspersecondLazy = this.convertFromBase(VolumeFlowUnits.CubicMetersPerSecond);\r\n    }\r\n    /** */\r\n    get CubicMetersPerMinute() {\r\n        if (this.cubicmetersperminuteLazy !== null) {\r\n            return this.cubicmetersperminuteLazy;\r\n        }\r\n        return this.cubicmetersperminuteLazy = this.convertFromBase(VolumeFlowUnits.CubicMetersPerMinute);\r\n    }\r\n    /** */\r\n    get CubicMetersPerHour() {\r\n        if (this.cubicmetersperhourLazy !== null) {\r\n            return this.cubicmetersperhourLazy;\r\n        }\r\n        return this.cubicmetersperhourLazy = this.convertFromBase(VolumeFlowUnits.CubicMetersPerHour);\r\n    }\r\n    /** */\r\n    get CubicMetersPerDay() {\r\n        if (this.cubicmetersperdayLazy !== null) {\r\n            return this.cubicmetersperdayLazy;\r\n        }\r\n        return this.cubicmetersperdayLazy = this.convertFromBase(VolumeFlowUnits.CubicMetersPerDay);\r\n    }\r\n    /** */\r\n    get CubicFeetPerSecond() {\r\n        if (this.cubicfeetpersecondLazy !== null) {\r\n            return this.cubicfeetpersecondLazy;\r\n        }\r\n        return this.cubicfeetpersecondLazy = this.convertFromBase(VolumeFlowUnits.CubicFeetPerSecond);\r\n    }\r\n    /** */\r\n    get CubicFeetPerMinute() {\r\n        if (this.cubicfeetperminuteLazy !== null) {\r\n            return this.cubicfeetperminuteLazy;\r\n        }\r\n        return this.cubicfeetperminuteLazy = this.convertFromBase(VolumeFlowUnits.CubicFeetPerMinute);\r\n    }\r\n    /** */\r\n    get CubicFeetPerHour() {\r\n        if (this.cubicfeetperhourLazy !== null) {\r\n            return this.cubicfeetperhourLazy;\r\n        }\r\n        return this.cubicfeetperhourLazy = this.convertFromBase(VolumeFlowUnits.CubicFeetPerHour);\r\n    }\r\n    /** */\r\n    get CubicYardsPerSecond() {\r\n        if (this.cubicyardspersecondLazy !== null) {\r\n            return this.cubicyardspersecondLazy;\r\n        }\r\n        return this.cubicyardspersecondLazy = this.convertFromBase(VolumeFlowUnits.CubicYardsPerSecond);\r\n    }\r\n    /** */\r\n    get CubicYardsPerMinute() {\r\n        if (this.cubicyardsperminuteLazy !== null) {\r\n            return this.cubicyardsperminuteLazy;\r\n        }\r\n        return this.cubicyardsperminuteLazy = this.convertFromBase(VolumeFlowUnits.CubicYardsPerMinute);\r\n    }\r\n    /** */\r\n    get CubicYardsPerHour() {\r\n        if (this.cubicyardsperhourLazy !== null) {\r\n            return this.cubicyardsperhourLazy;\r\n        }\r\n        return this.cubicyardsperhourLazy = this.convertFromBase(VolumeFlowUnits.CubicYardsPerHour);\r\n    }\r\n    /** */\r\n    get CubicYardsPerDay() {\r\n        if (this.cubicyardsperdayLazy !== null) {\r\n            return this.cubicyardsperdayLazy;\r\n        }\r\n        return this.cubicyardsperdayLazy = this.convertFromBase(VolumeFlowUnits.CubicYardsPerDay);\r\n    }\r\n    /** */\r\n    get MillionUsGallonsPerDay() {\r\n        if (this.millionusgallonsperdayLazy !== null) {\r\n            return this.millionusgallonsperdayLazy;\r\n        }\r\n        return this.millionusgallonsperdayLazy = this.convertFromBase(VolumeFlowUnits.MillionUsGallonsPerDay);\r\n    }\r\n    /** */\r\n    get UsGallonsPerDay() {\r\n        if (this.usgallonsperdayLazy !== null) {\r\n            return this.usgallonsperdayLazy;\r\n        }\r\n        return this.usgallonsperdayLazy = this.convertFromBase(VolumeFlowUnits.UsGallonsPerDay);\r\n    }\r\n    /** */\r\n    get LitersPerSecond() {\r\n        if (this.literspersecondLazy !== null) {\r\n            return this.literspersecondLazy;\r\n        }\r\n        return this.literspersecondLazy = this.convertFromBase(VolumeFlowUnits.LitersPerSecond);\r\n    }\r\n    /** */\r\n    get LitersPerMinute() {\r\n        if (this.litersperminuteLazy !== null) {\r\n            return this.litersperminuteLazy;\r\n        }\r\n        return this.litersperminuteLazy = this.convertFromBase(VolumeFlowUnits.LitersPerMinute);\r\n    }\r\n    /** */\r\n    get LitersPerHour() {\r\n        if (this.litersperhourLazy !== null) {\r\n            return this.litersperhourLazy;\r\n        }\r\n        return this.litersperhourLazy = this.convertFromBase(VolumeFlowUnits.LitersPerHour);\r\n    }\r\n    /** */\r\n    get LitersPerDay() {\r\n        if (this.litersperdayLazy !== null) {\r\n            return this.litersperdayLazy;\r\n        }\r\n        return this.litersperdayLazy = this.convertFromBase(VolumeFlowUnits.LitersPerDay);\r\n    }\r\n    /** */\r\n    get UsGallonsPerSecond() {\r\n        if (this.usgallonspersecondLazy !== null) {\r\n            return this.usgallonspersecondLazy;\r\n        }\r\n        return this.usgallonspersecondLazy = this.convertFromBase(VolumeFlowUnits.UsGallonsPerSecond);\r\n    }\r\n    /** */\r\n    get UsGallonsPerMinute() {\r\n        if (this.usgallonsperminuteLazy !== null) {\r\n            return this.usgallonsperminuteLazy;\r\n        }\r\n        return this.usgallonsperminuteLazy = this.convertFromBase(VolumeFlowUnits.UsGallonsPerMinute);\r\n    }\r\n    /** */\r\n    get UkGallonsPerDay() {\r\n        if (this.ukgallonsperdayLazy !== null) {\r\n            return this.ukgallonsperdayLazy;\r\n        }\r\n        return this.ukgallonsperdayLazy = this.convertFromBase(VolumeFlowUnits.UkGallonsPerDay);\r\n    }\r\n    /** */\r\n    get UkGallonsPerHour() {\r\n        if (this.ukgallonsperhourLazy !== null) {\r\n            return this.ukgallonsperhourLazy;\r\n        }\r\n        return this.ukgallonsperhourLazy = this.convertFromBase(VolumeFlowUnits.UkGallonsPerHour);\r\n    }\r\n    /** */\r\n    get UkGallonsPerMinute() {\r\n        if (this.ukgallonsperminuteLazy !== null) {\r\n            return this.ukgallonsperminuteLazy;\r\n        }\r\n        return this.ukgallonsperminuteLazy = this.convertFromBase(VolumeFlowUnits.UkGallonsPerMinute);\r\n    }\r\n    /** */\r\n    get UkGallonsPerSecond() {\r\n        if (this.ukgallonspersecondLazy !== null) {\r\n            return this.ukgallonspersecondLazy;\r\n        }\r\n        return this.ukgallonspersecondLazy = this.convertFromBase(VolumeFlowUnits.UkGallonsPerSecond);\r\n    }\r\n    /** */\r\n    get KilousGallonsPerMinute() {\r\n        if (this.kilousgallonsperminuteLazy !== null) {\r\n            return this.kilousgallonsperminuteLazy;\r\n        }\r\n        return this.kilousgallonsperminuteLazy = this.convertFromBase(VolumeFlowUnits.KilousGallonsPerMinute);\r\n    }\r\n    /** */\r\n    get UsGallonsPerHour() {\r\n        if (this.usgallonsperhourLazy !== null) {\r\n            return this.usgallonsperhourLazy;\r\n        }\r\n        return this.usgallonsperhourLazy = this.convertFromBase(VolumeFlowUnits.UsGallonsPerHour);\r\n    }\r\n    /** */\r\n    get CubicDecimetersPerMinute() {\r\n        if (this.cubicdecimetersperminuteLazy !== null) {\r\n            return this.cubicdecimetersperminuteLazy;\r\n        }\r\n        return this.cubicdecimetersperminuteLazy = this.convertFromBase(VolumeFlowUnits.CubicDecimetersPerMinute);\r\n    }\r\n    /** */\r\n    get OilBarrelsPerDay() {\r\n        if (this.oilbarrelsperdayLazy !== null) {\r\n            return this.oilbarrelsperdayLazy;\r\n        }\r\n        return this.oilbarrelsperdayLazy = this.convertFromBase(VolumeFlowUnits.OilBarrelsPerDay);\r\n    }\r\n    /** */\r\n    get OilBarrelsPerMinute() {\r\n        if (this.oilbarrelsperminuteLazy !== null) {\r\n            return this.oilbarrelsperminuteLazy;\r\n        }\r\n        return this.oilbarrelsperminuteLazy = this.convertFromBase(VolumeFlowUnits.OilBarrelsPerMinute);\r\n    }\r\n    /** */\r\n    get OilBarrelsPerHour() {\r\n        if (this.oilbarrelsperhourLazy !== null) {\r\n            return this.oilbarrelsperhourLazy;\r\n        }\r\n        return this.oilbarrelsperhourLazy = this.convertFromBase(VolumeFlowUnits.OilBarrelsPerHour);\r\n    }\r\n    /** */\r\n    get OilBarrelsPerSecond() {\r\n        if (this.oilbarrelspersecondLazy !== null) {\r\n            return this.oilbarrelspersecondLazy;\r\n        }\r\n        return this.oilbarrelspersecondLazy = this.convertFromBase(VolumeFlowUnits.OilBarrelsPerSecond);\r\n    }\r\n    /** */\r\n    get CubicMillimetersPerSecond() {\r\n        if (this.cubicmillimeterspersecondLazy !== null) {\r\n            return this.cubicmillimeterspersecondLazy;\r\n        }\r\n        return this.cubicmillimeterspersecondLazy = this.convertFromBase(VolumeFlowUnits.CubicMillimetersPerSecond);\r\n    }\r\n    /** */\r\n    get AcreFeetPerSecond() {\r\n        if (this.acrefeetpersecondLazy !== null) {\r\n            return this.acrefeetpersecondLazy;\r\n        }\r\n        return this.acrefeetpersecondLazy = this.convertFromBase(VolumeFlowUnits.AcreFeetPerSecond);\r\n    }\r\n    /** */\r\n    get AcreFeetPerMinute() {\r\n        if (this.acrefeetperminuteLazy !== null) {\r\n            return this.acrefeetperminuteLazy;\r\n        }\r\n        return this.acrefeetperminuteLazy = this.convertFromBase(VolumeFlowUnits.AcreFeetPerMinute);\r\n    }\r\n    /** */\r\n    get AcreFeetPerHour() {\r\n        if (this.acrefeetperhourLazy !== null) {\r\n            return this.acrefeetperhourLazy;\r\n        }\r\n        return this.acrefeetperhourLazy = this.convertFromBase(VolumeFlowUnits.AcreFeetPerHour);\r\n    }\r\n    /** */\r\n    get AcreFeetPerDay() {\r\n        if (this.acrefeetperdayLazy !== null) {\r\n            return this.acrefeetperdayLazy;\r\n        }\r\n        return this.acrefeetperdayLazy = this.convertFromBase(VolumeFlowUnits.AcreFeetPerDay);\r\n    }\r\n    /** */\r\n    get CubicCentimetersPerMinute() {\r\n        if (this.cubiccentimetersperminuteLazy !== null) {\r\n            return this.cubiccentimetersperminuteLazy;\r\n        }\r\n        return this.cubiccentimetersperminuteLazy = this.convertFromBase(VolumeFlowUnits.CubicCentimetersPerMinute);\r\n    }\r\n    /** */\r\n    get NanolitersPerSecond() {\r\n        if (this.nanoliterspersecondLazy !== null) {\r\n            return this.nanoliterspersecondLazy;\r\n        }\r\n        return this.nanoliterspersecondLazy = this.convertFromBase(VolumeFlowUnits.NanolitersPerSecond);\r\n    }\r\n    /** */\r\n    get MicrolitersPerSecond() {\r\n        if (this.microliterspersecondLazy !== null) {\r\n            return this.microliterspersecondLazy;\r\n        }\r\n        return this.microliterspersecondLazy = this.convertFromBase(VolumeFlowUnits.MicrolitersPerSecond);\r\n    }\r\n    /** */\r\n    get MillilitersPerSecond() {\r\n        if (this.milliliterspersecondLazy !== null) {\r\n            return this.milliliterspersecondLazy;\r\n        }\r\n        return this.milliliterspersecondLazy = this.convertFromBase(VolumeFlowUnits.MillilitersPerSecond);\r\n    }\r\n    /** */\r\n    get CentilitersPerSecond() {\r\n        if (this.centiliterspersecondLazy !== null) {\r\n            return this.centiliterspersecondLazy;\r\n        }\r\n        return this.centiliterspersecondLazy = this.convertFromBase(VolumeFlowUnits.CentilitersPerSecond);\r\n    }\r\n    /** */\r\n    get DecilitersPerSecond() {\r\n        if (this.deciliterspersecondLazy !== null) {\r\n            return this.deciliterspersecondLazy;\r\n        }\r\n        return this.deciliterspersecondLazy = this.convertFromBase(VolumeFlowUnits.DecilitersPerSecond);\r\n    }\r\n    /** */\r\n    get KilolitersPerSecond() {\r\n        if (this.kiloliterspersecondLazy !== null) {\r\n            return this.kiloliterspersecondLazy;\r\n        }\r\n        return this.kiloliterspersecondLazy = this.convertFromBase(VolumeFlowUnits.KilolitersPerSecond);\r\n    }\r\n    /** */\r\n    get NanolitersPerMinute() {\r\n        if (this.nanolitersperminuteLazy !== null) {\r\n            return this.nanolitersperminuteLazy;\r\n        }\r\n        return this.nanolitersperminuteLazy = this.convertFromBase(VolumeFlowUnits.NanolitersPerMinute);\r\n    }\r\n    /** */\r\n    get MicrolitersPerMinute() {\r\n        if (this.microlitersperminuteLazy !== null) {\r\n            return this.microlitersperminuteLazy;\r\n        }\r\n        return this.microlitersperminuteLazy = this.convertFromBase(VolumeFlowUnits.MicrolitersPerMinute);\r\n    }\r\n    /** */\r\n    get MillilitersPerMinute() {\r\n        if (this.millilitersperminuteLazy !== null) {\r\n            return this.millilitersperminuteLazy;\r\n        }\r\n        return this.millilitersperminuteLazy = this.convertFromBase(VolumeFlowUnits.MillilitersPerMinute);\r\n    }\r\n    /** */\r\n    get CentilitersPerMinute() {\r\n        if (this.centilitersperminuteLazy !== null) {\r\n            return this.centilitersperminuteLazy;\r\n        }\r\n        return this.centilitersperminuteLazy = this.convertFromBase(VolumeFlowUnits.CentilitersPerMinute);\r\n    }\r\n    /** */\r\n    get DecilitersPerMinute() {\r\n        if (this.decilitersperminuteLazy !== null) {\r\n            return this.decilitersperminuteLazy;\r\n        }\r\n        return this.decilitersperminuteLazy = this.convertFromBase(VolumeFlowUnits.DecilitersPerMinute);\r\n    }\r\n    /** */\r\n    get KilolitersPerMinute() {\r\n        if (this.kilolitersperminuteLazy !== null) {\r\n            return this.kilolitersperminuteLazy;\r\n        }\r\n        return this.kilolitersperminuteLazy = this.convertFromBase(VolumeFlowUnits.KilolitersPerMinute);\r\n    }\r\n    /** */\r\n    get NanolitersPerDay() {\r\n        if (this.nanolitersperdayLazy !== null) {\r\n            return this.nanolitersperdayLazy;\r\n        }\r\n        return this.nanolitersperdayLazy = this.convertFromBase(VolumeFlowUnits.NanolitersPerDay);\r\n    }\r\n    /** */\r\n    get MicrolitersPerDay() {\r\n        if (this.microlitersperdayLazy !== null) {\r\n            return this.microlitersperdayLazy;\r\n        }\r\n        return this.microlitersperdayLazy = this.convertFromBase(VolumeFlowUnits.MicrolitersPerDay);\r\n    }\r\n    /** */\r\n    get MillilitersPerDay() {\r\n        if (this.millilitersperdayLazy !== null) {\r\n            return this.millilitersperdayLazy;\r\n        }\r\n        return this.millilitersperdayLazy = this.convertFromBase(VolumeFlowUnits.MillilitersPerDay);\r\n    }\r\n    /** */\r\n    get CentilitersPerDay() {\r\n        if (this.centilitersperdayLazy !== null) {\r\n            return this.centilitersperdayLazy;\r\n        }\r\n        return this.centilitersperdayLazy = this.convertFromBase(VolumeFlowUnits.CentilitersPerDay);\r\n    }\r\n    /** */\r\n    get DecilitersPerDay() {\r\n        if (this.decilitersperdayLazy !== null) {\r\n            return this.decilitersperdayLazy;\r\n        }\r\n        return this.decilitersperdayLazy = this.convertFromBase(VolumeFlowUnits.DecilitersPerDay);\r\n    }\r\n    /** */\r\n    get KilolitersPerDay() {\r\n        if (this.kilolitersperdayLazy !== null) {\r\n            return this.kilolitersperdayLazy;\r\n        }\r\n        return this.kilolitersperdayLazy = this.convertFromBase(VolumeFlowUnits.KilolitersPerDay);\r\n    }\r\n    /** */\r\n    get MegalitersPerDay() {\r\n        if (this.megalitersperdayLazy !== null) {\r\n            return this.megalitersperdayLazy;\r\n        }\r\n        return this.megalitersperdayLazy = this.convertFromBase(VolumeFlowUnits.MegalitersPerDay);\r\n    }\r\n    /** */\r\n    get MegaukGallonsPerSecond() {\r\n        if (this.megaukgallonspersecondLazy !== null) {\r\n            return this.megaukgallonspersecondLazy;\r\n        }\r\n        return this.megaukgallonspersecondLazy = this.convertFromBase(VolumeFlowUnits.MegaukGallonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicMetersPerSecond\r\n     *\r\n     * @param value The unit as CubicMetersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicMetersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicMetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicMetersPerMinute\r\n     *\r\n     * @param value The unit as CubicMetersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicMetersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicMetersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicMetersPerHour\r\n     *\r\n     * @param value The unit as CubicMetersPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicMetersPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicMetersPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicMetersPerDay\r\n     *\r\n     * @param value The unit as CubicMetersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicMetersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicMetersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicFeetPerSecond\r\n     *\r\n     * @param value The unit as CubicFeetPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicFeetPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicFeetPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicFeetPerMinute\r\n     *\r\n     * @param value The unit as CubicFeetPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicFeetPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicFeetPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicFeetPerHour\r\n     *\r\n     * @param value The unit as CubicFeetPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicFeetPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicFeetPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicYardsPerSecond\r\n     *\r\n     * @param value The unit as CubicYardsPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicYardsPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicYardsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicYardsPerMinute\r\n     *\r\n     * @param value The unit as CubicYardsPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicYardsPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicYardsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicYardsPerHour\r\n     *\r\n     * @param value The unit as CubicYardsPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicYardsPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicYardsPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicYardsPerDay\r\n     *\r\n     * @param value The unit as CubicYardsPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicYardsPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicYardsPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MillionUsGallonsPerDay\r\n     *\r\n     * @param value The unit as MillionUsGallonsPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMillionUsGallonsPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MillionUsGallonsPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UsGallonsPerDay\r\n     *\r\n     * @param value The unit as UsGallonsPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUsGallonsPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UsGallonsPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a LitersPerSecond\r\n     *\r\n     * @param value The unit as LitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromLitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.LitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a LitersPerMinute\r\n     *\r\n     * @param value The unit as LitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromLitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.LitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a LitersPerHour\r\n     *\r\n     * @param value The unit as LitersPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromLitersPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.LitersPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a LitersPerDay\r\n     *\r\n     * @param value The unit as LitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromLitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.LitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UsGallonsPerSecond\r\n     *\r\n     * @param value The unit as UsGallonsPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUsGallonsPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UsGallonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UsGallonsPerMinute\r\n     *\r\n     * @param value The unit as UsGallonsPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUsGallonsPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UsGallonsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UkGallonsPerDay\r\n     *\r\n     * @param value The unit as UkGallonsPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUkGallonsPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UkGallonsPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UkGallonsPerHour\r\n     *\r\n     * @param value The unit as UkGallonsPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUkGallonsPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UkGallonsPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UkGallonsPerMinute\r\n     *\r\n     * @param value The unit as UkGallonsPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUkGallonsPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UkGallonsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UkGallonsPerSecond\r\n     *\r\n     * @param value The unit as UkGallonsPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUkGallonsPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UkGallonsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a KilousGallonsPerMinute\r\n     *\r\n     * @param value The unit as KilousGallonsPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromKilousGallonsPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.KilousGallonsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a UsGallonsPerHour\r\n     *\r\n     * @param value The unit as UsGallonsPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromUsGallonsPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.UsGallonsPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicDecimetersPerMinute\r\n     *\r\n     * @param value The unit as CubicDecimetersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicDecimetersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicDecimetersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a OilBarrelsPerDay\r\n     *\r\n     * @param value The unit as OilBarrelsPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromOilBarrelsPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.OilBarrelsPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a OilBarrelsPerMinute\r\n     *\r\n     * @param value The unit as OilBarrelsPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromOilBarrelsPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.OilBarrelsPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a OilBarrelsPerHour\r\n     *\r\n     * @param value The unit as OilBarrelsPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromOilBarrelsPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.OilBarrelsPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a OilBarrelsPerSecond\r\n     *\r\n     * @param value The unit as OilBarrelsPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromOilBarrelsPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.OilBarrelsPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicMillimetersPerSecond\r\n     *\r\n     * @param value The unit as CubicMillimetersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicMillimetersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicMillimetersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a AcreFeetPerSecond\r\n     *\r\n     * @param value The unit as AcreFeetPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromAcreFeetPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.AcreFeetPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a AcreFeetPerMinute\r\n     *\r\n     * @param value The unit as AcreFeetPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromAcreFeetPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.AcreFeetPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a AcreFeetPerHour\r\n     *\r\n     * @param value The unit as AcreFeetPerHour to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromAcreFeetPerHour(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.AcreFeetPerHour);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a AcreFeetPerDay\r\n     *\r\n     * @param value The unit as AcreFeetPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromAcreFeetPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.AcreFeetPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CubicCentimetersPerMinute\r\n     *\r\n     * @param value The unit as CubicCentimetersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCubicCentimetersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CubicCentimetersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a NanolitersPerSecond\r\n     *\r\n     * @param value The unit as NanolitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromNanolitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.NanolitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MicrolitersPerSecond\r\n     *\r\n     * @param value The unit as MicrolitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMicrolitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MicrolitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MillilitersPerSecond\r\n     *\r\n     * @param value The unit as MillilitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMillilitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MillilitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CentilitersPerSecond\r\n     *\r\n     * @param value The unit as CentilitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCentilitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CentilitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a DecilitersPerSecond\r\n     *\r\n     * @param value The unit as DecilitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromDecilitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.DecilitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a KilolitersPerSecond\r\n     *\r\n     * @param value The unit as KilolitersPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromKilolitersPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.KilolitersPerSecond);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a NanolitersPerMinute\r\n     *\r\n     * @param value The unit as NanolitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromNanolitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.NanolitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MicrolitersPerMinute\r\n     *\r\n     * @param value The unit as MicrolitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMicrolitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MicrolitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MillilitersPerMinute\r\n     *\r\n     * @param value The unit as MillilitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMillilitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MillilitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CentilitersPerMinute\r\n     *\r\n     * @param value The unit as CentilitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCentilitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CentilitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a DecilitersPerMinute\r\n     *\r\n     * @param value The unit as DecilitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromDecilitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.DecilitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a KilolitersPerMinute\r\n     *\r\n     * @param value The unit as KilolitersPerMinute to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromKilolitersPerMinute(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.KilolitersPerMinute);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a NanolitersPerDay\r\n     *\r\n     * @param value The unit as NanolitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromNanolitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.NanolitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MicrolitersPerDay\r\n     *\r\n     * @param value The unit as MicrolitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMicrolitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MicrolitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MillilitersPerDay\r\n     *\r\n     * @param value The unit as MillilitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMillilitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MillilitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a CentilitersPerDay\r\n     *\r\n     * @param value The unit as CentilitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromCentilitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.CentilitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a DecilitersPerDay\r\n     *\r\n     * @param value The unit as DecilitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromDecilitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.DecilitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a KilolitersPerDay\r\n     *\r\n     * @param value The unit as KilolitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromKilolitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.KilolitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MegalitersPerDay\r\n     *\r\n     * @param value The unit as MegalitersPerDay to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMegalitersPerDay(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MegalitersPerDay);\r\n    }\r\n    /**\r\n     * Create a new VolumeFlow instance from a MegaukGallonsPerSecond\r\n     *\r\n     * @param value The unit as MegaukGallonsPerSecond to create a new VolumeFlow from.\r\n     * @returns The new VolumeFlow instance.\r\n     */\r\n    static FromMegaukGallonsPerSecond(value) {\r\n        return new VolumeFlow(value, VolumeFlowUnits.MegaukGallonsPerSecond);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case VolumeFlowUnits.CubicMetersPerSecond:\r\n                return this.value;\r\n            case VolumeFlowUnits.CubicMetersPerMinute:\r\n                return this.value * 60;\r\n            case VolumeFlowUnits.CubicMetersPerHour:\r\n                return this.value * 3600;\r\n            case VolumeFlowUnits.CubicMetersPerDay:\r\n                return this.value * 86400;\r\n            case VolumeFlowUnits.CubicFeetPerSecond:\r\n                return this.value * 35.314666721;\r\n            case VolumeFlowUnits.CubicFeetPerMinute:\r\n                return this.value * 2118.88000326;\r\n            case VolumeFlowUnits.CubicFeetPerHour:\r\n                return this.value / 7.8657907199999087346816086183876e-6;\r\n            case VolumeFlowUnits.CubicYardsPerSecond:\r\n                return this.value / 0.764554857984;\r\n            case VolumeFlowUnits.CubicYardsPerMinute:\r\n                return this.value / 0.0127425809664;\r\n            case VolumeFlowUnits.CubicYardsPerHour:\r\n                return this.value / 2.1237634944E-4;\r\n            case VolumeFlowUnits.CubicYardsPerDay:\r\n                return this.value * 113007;\r\n            case VolumeFlowUnits.MillionUsGallonsPerDay:\r\n                return this.value * 22.824465227;\r\n            case VolumeFlowUnits.UsGallonsPerDay:\r\n                return this.value * 22824465.227;\r\n            case VolumeFlowUnits.LitersPerSecond:\r\n                return this.value * 1000;\r\n            case VolumeFlowUnits.LitersPerMinute:\r\n                return this.value * 60000.00000;\r\n            case VolumeFlowUnits.LitersPerHour:\r\n                return this.value * 3600000.000;\r\n            case VolumeFlowUnits.LitersPerDay:\r\n                return this.value * 86400000;\r\n            case VolumeFlowUnits.UsGallonsPerSecond:\r\n                return this.value * 264.1720523581484;\r\n            case VolumeFlowUnits.UsGallonsPerMinute:\r\n                return this.value * 15850.323141489;\r\n            case VolumeFlowUnits.UkGallonsPerDay:\r\n                return this.value * 19005304;\r\n            case VolumeFlowUnits.UkGallonsPerHour:\r\n                return this.value * 791887.667;\r\n            case VolumeFlowUnits.UkGallonsPerMinute:\r\n                return this.value * 13198.2;\r\n            case VolumeFlowUnits.UkGallonsPerSecond:\r\n                return this.value * 219.969;\r\n            case VolumeFlowUnits.KilousGallonsPerMinute:\r\n                return this.value * 15.850323141489;\r\n            case VolumeFlowUnits.UsGallonsPerHour:\r\n                return this.value * 951019.38848933424;\r\n            case VolumeFlowUnits.CubicDecimetersPerMinute:\r\n                return this.value * 60000.00000;\r\n            case VolumeFlowUnits.OilBarrelsPerDay:\r\n                return this.value / 1.8401307283333333333333333333333e-6;\r\n            case VolumeFlowUnits.OilBarrelsPerMinute:\r\n                return this.value / 2.64978825e-3;\r\n            case VolumeFlowUnits.OilBarrelsPerHour:\r\n                return this.value / 4.41631375e-5;\r\n            case VolumeFlowUnits.OilBarrelsPerSecond:\r\n                return this.value * 6.28981;\r\n            case VolumeFlowUnits.CubicMillimetersPerSecond:\r\n                return this.value / 1e-9;\r\n            case VolumeFlowUnits.AcreFeetPerSecond:\r\n                return this.value * 0.000810713194;\r\n            case VolumeFlowUnits.AcreFeetPerMinute:\r\n                return this.value * 0.0486427916;\r\n            case VolumeFlowUnits.AcreFeetPerHour:\r\n                return this.value * 2.91857;\r\n            case VolumeFlowUnits.AcreFeetPerDay:\r\n                return this.value * 70.0457;\r\n            case VolumeFlowUnits.CubicCentimetersPerMinute:\r\n                return this.value / 1.6666666666667e-8;\r\n            case VolumeFlowUnits.NanolitersPerSecond:\r\n                return (this.value * 1000) / 1e-9;\r\n            case VolumeFlowUnits.MicrolitersPerSecond:\r\n                return (this.value * 1000) / 0.000001;\r\n            case VolumeFlowUnits.MillilitersPerSecond:\r\n                return (this.value * 1000) / 0.001;\r\n            case VolumeFlowUnits.CentilitersPerSecond:\r\n                return (this.value * 1000) / 0.01;\r\n            case VolumeFlowUnits.DecilitersPerSecond:\r\n                return (this.value * 1000) / 0.1;\r\n            case VolumeFlowUnits.KilolitersPerSecond:\r\n                return (this.value * 1000) / 1000;\r\n            case VolumeFlowUnits.NanolitersPerMinute:\r\n                return (this.value * 60000.00000) / 1e-9;\r\n            case VolumeFlowUnits.MicrolitersPerMinute:\r\n                return (this.value * 60000.00000) / 0.000001;\r\n            case VolumeFlowUnits.MillilitersPerMinute:\r\n                return (this.value * 60000.00000) / 0.001;\r\n            case VolumeFlowUnits.CentilitersPerMinute:\r\n                return (this.value * 60000.00000) / 0.01;\r\n            case VolumeFlowUnits.DecilitersPerMinute:\r\n                return (this.value * 60000.00000) / 0.1;\r\n            case VolumeFlowUnits.KilolitersPerMinute:\r\n                return (this.value * 60000.00000) / 1000;\r\n            case VolumeFlowUnits.NanolitersPerDay:\r\n                return (this.value * 86400000) / 1e-9;\r\n            case VolumeFlowUnits.MicrolitersPerDay:\r\n                return (this.value * 86400000) / 0.000001;\r\n            case VolumeFlowUnits.MillilitersPerDay:\r\n                return (this.value * 86400000) / 0.001;\r\n            case VolumeFlowUnits.CentilitersPerDay:\r\n                return (this.value * 86400000) / 0.01;\r\n            case VolumeFlowUnits.DecilitersPerDay:\r\n                return (this.value * 86400000) / 0.1;\r\n            case VolumeFlowUnits.KilolitersPerDay:\r\n                return (this.value * 86400000) / 1000;\r\n            case VolumeFlowUnits.MegalitersPerDay:\r\n                return (this.value * 86400000) / 1000000;\r\n            case VolumeFlowUnits.MegaukGallonsPerSecond:\r\n                return (this.value * 219.969) / 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case VolumeFlowUnits.CubicMetersPerSecond:\r\n                return value;\r\n            case VolumeFlowUnits.CubicMetersPerMinute:\r\n                return value / 60;\r\n            case VolumeFlowUnits.CubicMetersPerHour:\r\n                return value / 3600;\r\n            case VolumeFlowUnits.CubicMetersPerDay:\r\n                return value / 86400;\r\n            case VolumeFlowUnits.CubicFeetPerSecond:\r\n                return value / 35.314666721;\r\n            case VolumeFlowUnits.CubicFeetPerMinute:\r\n                return value / 2118.88000326;\r\n            case VolumeFlowUnits.CubicFeetPerHour:\r\n                return value * 7.8657907199999087346816086183876e-6;\r\n            case VolumeFlowUnits.CubicYardsPerSecond:\r\n                return value * 0.764554857984;\r\n            case VolumeFlowUnits.CubicYardsPerMinute:\r\n                return value * 0.0127425809664;\r\n            case VolumeFlowUnits.CubicYardsPerHour:\r\n                return value * 2.1237634944E-4;\r\n            case VolumeFlowUnits.CubicYardsPerDay:\r\n                return value / 113007;\r\n            case VolumeFlowUnits.MillionUsGallonsPerDay:\r\n                return value / 22.824465227;\r\n            case VolumeFlowUnits.UsGallonsPerDay:\r\n                return value / 22824465.227;\r\n            case VolumeFlowUnits.LitersPerSecond:\r\n                return value / 1000;\r\n            case VolumeFlowUnits.LitersPerMinute:\r\n                return value / 60000.00000;\r\n            case VolumeFlowUnits.LitersPerHour:\r\n                return value / 3600000.000;\r\n            case VolumeFlowUnits.LitersPerDay:\r\n                return value / 86400000;\r\n            case VolumeFlowUnits.UsGallonsPerSecond:\r\n                return value / 264.1720523581484;\r\n            case VolumeFlowUnits.UsGallonsPerMinute:\r\n                return value / 15850.323141489;\r\n            case VolumeFlowUnits.UkGallonsPerDay:\r\n                return value / 19005304;\r\n            case VolumeFlowUnits.UkGallonsPerHour:\r\n                return value / 791887.667;\r\n            case VolumeFlowUnits.UkGallonsPerMinute:\r\n                return value / 13198.2;\r\n            case VolumeFlowUnits.UkGallonsPerSecond:\r\n                return value / 219.969;\r\n            case VolumeFlowUnits.KilousGallonsPerMinute:\r\n                return value / 15.850323141489;\r\n            case VolumeFlowUnits.UsGallonsPerHour:\r\n                return value / 951019.38848933424;\r\n            case VolumeFlowUnits.CubicDecimetersPerMinute:\r\n                return value / 60000.00000;\r\n            case VolumeFlowUnits.OilBarrelsPerDay:\r\n                return value * 1.8401307283333333333333333333333e-6;\r\n            case VolumeFlowUnits.OilBarrelsPerMinute:\r\n                return value * 2.64978825e-3;\r\n            case VolumeFlowUnits.OilBarrelsPerHour:\r\n                return value * 4.41631375e-5;\r\n            case VolumeFlowUnits.OilBarrelsPerSecond:\r\n                return value / 6.28981;\r\n            case VolumeFlowUnits.CubicMillimetersPerSecond:\r\n                return value * 1e-9;\r\n            case VolumeFlowUnits.AcreFeetPerSecond:\r\n                return value / 0.000810713194;\r\n            case VolumeFlowUnits.AcreFeetPerMinute:\r\n                return value / 0.0486427916;\r\n            case VolumeFlowUnits.AcreFeetPerHour:\r\n                return value / 2.91857;\r\n            case VolumeFlowUnits.AcreFeetPerDay:\r\n                return value / 70.0457;\r\n            case VolumeFlowUnits.CubicCentimetersPerMinute:\r\n                return value * 1.6666666666667e-8;\r\n            case VolumeFlowUnits.NanolitersPerSecond:\r\n                return (value / 1000) * 1e-9;\r\n            case VolumeFlowUnits.MicrolitersPerSecond:\r\n                return (value / 1000) * 0.000001;\r\n            case VolumeFlowUnits.MillilitersPerSecond:\r\n                return (value / 1000) * 0.001;\r\n            case VolumeFlowUnits.CentilitersPerSecond:\r\n                return (value / 1000) * 0.01;\r\n            case VolumeFlowUnits.DecilitersPerSecond:\r\n                return (value / 1000) * 0.1;\r\n            case VolumeFlowUnits.KilolitersPerSecond:\r\n                return (value / 1000) * 1000;\r\n            case VolumeFlowUnits.NanolitersPerMinute:\r\n                return (value / 60000.00000) * 1e-9;\r\n            case VolumeFlowUnits.MicrolitersPerMinute:\r\n                return (value / 60000.00000) * 0.000001;\r\n            case VolumeFlowUnits.MillilitersPerMinute:\r\n                return (value / 60000.00000) * 0.001;\r\n            case VolumeFlowUnits.CentilitersPerMinute:\r\n                return (value / 60000.00000) * 0.01;\r\n            case VolumeFlowUnits.DecilitersPerMinute:\r\n                return (value / 60000.00000) * 0.1;\r\n            case VolumeFlowUnits.KilolitersPerMinute:\r\n                return (value / 60000.00000) * 1000;\r\n            case VolumeFlowUnits.NanolitersPerDay:\r\n                return (value / 86400000) * 1e-9;\r\n            case VolumeFlowUnits.MicrolitersPerDay:\r\n                return (value / 86400000) * 0.000001;\r\n            case VolumeFlowUnits.MillilitersPerDay:\r\n                return (value / 86400000) * 0.001;\r\n            case VolumeFlowUnits.CentilitersPerDay:\r\n                return (value / 86400000) * 0.01;\r\n            case VolumeFlowUnits.DecilitersPerDay:\r\n                return (value / 86400000) * 0.1;\r\n            case VolumeFlowUnits.KilolitersPerDay:\r\n                return (value / 86400000) * 1000;\r\n            case VolumeFlowUnits.MegalitersPerDay:\r\n                return (value / 86400000) * 1000000;\r\n            case VolumeFlowUnits.MegaukGallonsPerSecond:\r\n                return (value / 219.969) * 1000000;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the VolumeFlow to string.\r\n     * Note! the default format for VolumeFlow is CubicMetersPerSecond.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the VolumeFlow.\r\n     * @returns The string format of the VolumeFlow.\r\n     */\r\n    toString(toUnit = VolumeFlowUnits.CubicMetersPerSecond) {\r\n        switch (toUnit) {\r\n            case VolumeFlowUnits.CubicMetersPerSecond:\r\n                return this.CubicMetersPerSecond + ` m³/s`;\r\n            case VolumeFlowUnits.CubicMetersPerMinute:\r\n                return this.CubicMetersPerMinute + ` m³/min`;\r\n            case VolumeFlowUnits.CubicMetersPerHour:\r\n                return this.CubicMetersPerHour + ` m³/h`;\r\n            case VolumeFlowUnits.CubicMetersPerDay:\r\n                return this.CubicMetersPerDay + ` m³/d`;\r\n            case VolumeFlowUnits.CubicFeetPerSecond:\r\n                return this.CubicFeetPerSecond + ` ft³/s`;\r\n            case VolumeFlowUnits.CubicFeetPerMinute:\r\n                return this.CubicFeetPerMinute + ` ft³/min`;\r\n            case VolumeFlowUnits.CubicFeetPerHour:\r\n                return this.CubicFeetPerHour + ` ft³/h`;\r\n            case VolumeFlowUnits.CubicYardsPerSecond:\r\n                return this.CubicYardsPerSecond + ` yd³/s`;\r\n            case VolumeFlowUnits.CubicYardsPerMinute:\r\n                return this.CubicYardsPerMinute + ` yd³/min`;\r\n            case VolumeFlowUnits.CubicYardsPerHour:\r\n                return this.CubicYardsPerHour + ` yd³/h`;\r\n            case VolumeFlowUnits.CubicYardsPerDay:\r\n                return this.CubicYardsPerDay + ` cy/day`;\r\n            case VolumeFlowUnits.MillionUsGallonsPerDay:\r\n                return this.MillionUsGallonsPerDay + ` MGD`;\r\n            case VolumeFlowUnits.UsGallonsPerDay:\r\n                return this.UsGallonsPerDay + ` gpd`;\r\n            case VolumeFlowUnits.LitersPerSecond:\r\n                return this.LitersPerSecond + ` L/s`;\r\n            case VolumeFlowUnits.LitersPerMinute:\r\n                return this.LitersPerMinute + ` L/min`;\r\n            case VolumeFlowUnits.LitersPerHour:\r\n                return this.LitersPerHour + ` L/h`;\r\n            case VolumeFlowUnits.LitersPerDay:\r\n                return this.LitersPerDay + ` l/day`;\r\n            case VolumeFlowUnits.UsGallonsPerSecond:\r\n                return this.UsGallonsPerSecond + ` gal (U.S.)/s`;\r\n            case VolumeFlowUnits.UsGallonsPerMinute:\r\n                return this.UsGallonsPerMinute + ` gal (U.S.)/min`;\r\n            case VolumeFlowUnits.UkGallonsPerDay:\r\n                return this.UkGallonsPerDay + ` gal (U. K.)/d`;\r\n            case VolumeFlowUnits.UkGallonsPerHour:\r\n                return this.UkGallonsPerHour + ` gal (imp.)/h`;\r\n            case VolumeFlowUnits.UkGallonsPerMinute:\r\n                return this.UkGallonsPerMinute + ` gal (imp.)/min`;\r\n            case VolumeFlowUnits.UkGallonsPerSecond:\r\n                return this.UkGallonsPerSecond + ` gal (imp.)/s`;\r\n            case VolumeFlowUnits.KilousGallonsPerMinute:\r\n                return this.KilousGallonsPerMinute + ` kgal (U.S.)/min`;\r\n            case VolumeFlowUnits.UsGallonsPerHour:\r\n                return this.UsGallonsPerHour + ` gal (U.S.)/h`;\r\n            case VolumeFlowUnits.CubicDecimetersPerMinute:\r\n                return this.CubicDecimetersPerMinute + ` dm³/min`;\r\n            case VolumeFlowUnits.OilBarrelsPerDay:\r\n                return this.OilBarrelsPerDay + ` bbl/d`;\r\n            case VolumeFlowUnits.OilBarrelsPerMinute:\r\n                return this.OilBarrelsPerMinute + ` bbl/min`;\r\n            case VolumeFlowUnits.OilBarrelsPerHour:\r\n                return this.OilBarrelsPerHour + ` bbl/hr`;\r\n            case VolumeFlowUnits.OilBarrelsPerSecond:\r\n                return this.OilBarrelsPerSecond + ` bbl/s`;\r\n            case VolumeFlowUnits.CubicMillimetersPerSecond:\r\n                return this.CubicMillimetersPerSecond + ` mm³/s`;\r\n            case VolumeFlowUnits.AcreFeetPerSecond:\r\n                return this.AcreFeetPerSecond + ` af/s`;\r\n            case VolumeFlowUnits.AcreFeetPerMinute:\r\n                return this.AcreFeetPerMinute + ` af/m`;\r\n            case VolumeFlowUnits.AcreFeetPerHour:\r\n                return this.AcreFeetPerHour + ` af/h`;\r\n            case VolumeFlowUnits.AcreFeetPerDay:\r\n                return this.AcreFeetPerDay + ` af/d`;\r\n            case VolumeFlowUnits.CubicCentimetersPerMinute:\r\n                return this.CubicCentimetersPerMinute + ` cm³/min`;\r\n            case VolumeFlowUnits.NanolitersPerSecond:\r\n                return this.NanolitersPerSecond + ` `;\r\n            case VolumeFlowUnits.MicrolitersPerSecond:\r\n                return this.MicrolitersPerSecond + ` `;\r\n            case VolumeFlowUnits.MillilitersPerSecond:\r\n                return this.MillilitersPerSecond + ` `;\r\n            case VolumeFlowUnits.CentilitersPerSecond:\r\n                return this.CentilitersPerSecond + ` `;\r\n            case VolumeFlowUnits.DecilitersPerSecond:\r\n                return this.DecilitersPerSecond + ` `;\r\n            case VolumeFlowUnits.KilolitersPerSecond:\r\n                return this.KilolitersPerSecond + ` `;\r\n            case VolumeFlowUnits.NanolitersPerMinute:\r\n                return this.NanolitersPerMinute + ` `;\r\n            case VolumeFlowUnits.MicrolitersPerMinute:\r\n                return this.MicrolitersPerMinute + ` `;\r\n            case VolumeFlowUnits.MillilitersPerMinute:\r\n                return this.MillilitersPerMinute + ` `;\r\n            case VolumeFlowUnits.CentilitersPerMinute:\r\n                return this.CentilitersPerMinute + ` `;\r\n            case VolumeFlowUnits.DecilitersPerMinute:\r\n                return this.DecilitersPerMinute + ` `;\r\n            case VolumeFlowUnits.KilolitersPerMinute:\r\n                return this.KilolitersPerMinute + ` `;\r\n            case VolumeFlowUnits.NanolitersPerDay:\r\n                return this.NanolitersPerDay + ` `;\r\n            case VolumeFlowUnits.MicrolitersPerDay:\r\n                return this.MicrolitersPerDay + ` `;\r\n            case VolumeFlowUnits.MillilitersPerDay:\r\n                return this.MillilitersPerDay + ` `;\r\n            case VolumeFlowUnits.CentilitersPerDay:\r\n                return this.CentilitersPerDay + ` `;\r\n            case VolumeFlowUnits.DecilitersPerDay:\r\n                return this.DecilitersPerDay + ` `;\r\n            case VolumeFlowUnits.KilolitersPerDay:\r\n                return this.KilolitersPerDay + ` `;\r\n            case VolumeFlowUnits.MegalitersPerDay:\r\n                return this.MegalitersPerDay + ` `;\r\n            case VolumeFlowUnits.MegaukGallonsPerSecond:\r\n                return this.MegaukGallonsPerSecond + ` `;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given VolumeFlow are equals to the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns True if the given VolumeFlow are equal to the current VolumeFlow.\r\n     */\r\n    equals(volumeFlow) {\r\n        return this.value === volumeFlow.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given VolumeFlow against the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns 0 if they are equal, -1 if the current VolumeFlow is less then other, 1 if the current VolumeFlow is greater then other.\r\n     */\r\n    compareTo(volumeFlow) {\r\n        if (this.value > volumeFlow.BaseValue)\r\n            return 1;\r\n        if (this.value < volumeFlow.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given VolumeFlow with the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns A new VolumeFlow instance with the results.\r\n     */\r\n    add(volumeFlow) {\r\n        return new VolumeFlow(this.value + volumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given VolumeFlow with the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns A new VolumeFlow instance with the results.\r\n     */\r\n    subtract(volumeFlow) {\r\n        return new VolumeFlow(this.value - volumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given VolumeFlow with the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns A new VolumeFlow instance with the results.\r\n     */\r\n    multiply(volumeFlow) {\r\n        return new VolumeFlow(this.value * volumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given VolumeFlow with the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns A new VolumeFlow instance with the results.\r\n     */\r\n    divide(volumeFlow) {\r\n        return new VolumeFlow(this.value / volumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given VolumeFlow with the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns A new VolumeFlow instance with the results.\r\n     */\r\n    modulo(volumeFlow) {\r\n        return new VolumeFlow(this.value % volumeFlow.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given VolumeFlow with the current VolumeFlow.\r\n     * @param volumeFlow The other VolumeFlow.\r\n     * @returns A new VolumeFlow instance with the results.\r\n     */\r\n    pow(volumeFlow) {\r\n        return new VolumeFlow(this.value ** volumeFlow.BaseValue);\r\n    }\r\n}\r\nexports.VolumeFlow = VolumeFlow;\r\n//# sourceMappingURL=volumeflow.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VolumePerLength = exports.VolumePerLengthUnits = void 0;\r\n/** VolumePerLengthUnits enumeration */\r\nvar VolumePerLengthUnits;\r\n(function (VolumePerLengthUnits) {\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"CubicMetersPerMeter\"] = 0] = \"CubicMetersPerMeter\";\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"LitersPerMeter\"] = 1] = \"LitersPerMeter\";\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"LitersPerKilometer\"] = 2] = \"LitersPerKilometer\";\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"LitersPerMillimeter\"] = 3] = \"LitersPerMillimeter\";\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"OilBarrelsPerFoot\"] = 4] = \"OilBarrelsPerFoot\";\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"CubicYardsPerFoot\"] = 5] = \"CubicYardsPerFoot\";\r\n    /** */\r\n    VolumePerLengthUnits[VolumePerLengthUnits[\"CubicYardsPerUsSurveyFoot\"] = 6] = \"CubicYardsPerUsSurveyFoot\";\r\n})(VolumePerLengthUnits = exports.VolumePerLengthUnits || (exports.VolumePerLengthUnits = {}));\r\n/** Volume, typically of fluid, that a container can hold within a unit of length. */\r\nclass VolumePerLength {\r\n    /**\r\n     * Create a new VolumePerLength.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘VolumePerLength’ unit to create from.\r\n     * The default unit is CubicMetersPerMeter\r\n     */\r\n    constructor(value, fromUnit = VolumePerLengthUnits.CubicMetersPerMeter) {\r\n        this.cubicmeterspermeterLazy = null;\r\n        this.literspermeterLazy = null;\r\n        this.litersperkilometerLazy = null;\r\n        this.literspermillimeterLazy = null;\r\n        this.oilbarrelsperfootLazy = null;\r\n        this.cubicyardsperfootLazy = null;\r\n        this.cubicyardsperussurveyfootLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of VolumePerLength is CubicMetersPerMeter.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get CubicMetersPerMeter() {\r\n        if (this.cubicmeterspermeterLazy !== null) {\r\n            return this.cubicmeterspermeterLazy;\r\n        }\r\n        return this.cubicmeterspermeterLazy = this.convertFromBase(VolumePerLengthUnits.CubicMetersPerMeter);\r\n    }\r\n    /** */\r\n    get LitersPerMeter() {\r\n        if (this.literspermeterLazy !== null) {\r\n            return this.literspermeterLazy;\r\n        }\r\n        return this.literspermeterLazy = this.convertFromBase(VolumePerLengthUnits.LitersPerMeter);\r\n    }\r\n    /** */\r\n    get LitersPerKilometer() {\r\n        if (this.litersperkilometerLazy !== null) {\r\n            return this.litersperkilometerLazy;\r\n        }\r\n        return this.litersperkilometerLazy = this.convertFromBase(VolumePerLengthUnits.LitersPerKilometer);\r\n    }\r\n    /** */\r\n    get LitersPerMillimeter() {\r\n        if (this.literspermillimeterLazy !== null) {\r\n            return this.literspermillimeterLazy;\r\n        }\r\n        return this.literspermillimeterLazy = this.convertFromBase(VolumePerLengthUnits.LitersPerMillimeter);\r\n    }\r\n    /** */\r\n    get OilBarrelsPerFoot() {\r\n        if (this.oilbarrelsperfootLazy !== null) {\r\n            return this.oilbarrelsperfootLazy;\r\n        }\r\n        return this.oilbarrelsperfootLazy = this.convertFromBase(VolumePerLengthUnits.OilBarrelsPerFoot);\r\n    }\r\n    /** */\r\n    get CubicYardsPerFoot() {\r\n        if (this.cubicyardsperfootLazy !== null) {\r\n            return this.cubicyardsperfootLazy;\r\n        }\r\n        return this.cubicyardsperfootLazy = this.convertFromBase(VolumePerLengthUnits.CubicYardsPerFoot);\r\n    }\r\n    /** */\r\n    get CubicYardsPerUsSurveyFoot() {\r\n        if (this.cubicyardsperussurveyfootLazy !== null) {\r\n            return this.cubicyardsperussurveyfootLazy;\r\n        }\r\n        return this.cubicyardsperussurveyfootLazy = this.convertFromBase(VolumePerLengthUnits.CubicYardsPerUsSurveyFoot);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a CubicMetersPerMeter\r\n     *\r\n     * @param value The unit as CubicMetersPerMeter to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromCubicMetersPerMeter(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.CubicMetersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a LitersPerMeter\r\n     *\r\n     * @param value The unit as LitersPerMeter to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromLitersPerMeter(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.LitersPerMeter);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a LitersPerKilometer\r\n     *\r\n     * @param value The unit as LitersPerKilometer to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromLitersPerKilometer(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.LitersPerKilometer);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a LitersPerMillimeter\r\n     *\r\n     * @param value The unit as LitersPerMillimeter to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromLitersPerMillimeter(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.LitersPerMillimeter);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a OilBarrelsPerFoot\r\n     *\r\n     * @param value The unit as OilBarrelsPerFoot to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromOilBarrelsPerFoot(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.OilBarrelsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a CubicYardsPerFoot\r\n     *\r\n     * @param value The unit as CubicYardsPerFoot to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromCubicYardsPerFoot(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.CubicYardsPerFoot);\r\n    }\r\n    /**\r\n     * Create a new VolumePerLength instance from a CubicYardsPerUsSurveyFoot\r\n     *\r\n     * @param value The unit as CubicYardsPerUsSurveyFoot to create a new VolumePerLength from.\r\n     * @returns The new VolumePerLength instance.\r\n     */\r\n    static FromCubicYardsPerUsSurveyFoot(value) {\r\n        return new VolumePerLength(value, VolumePerLengthUnits.CubicYardsPerUsSurveyFoot);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case VolumePerLengthUnits.CubicMetersPerMeter:\r\n                return this.value;\r\n            case VolumePerLengthUnits.LitersPerMeter:\r\n                return this.value * 1000;\r\n            case VolumePerLengthUnits.LitersPerKilometer:\r\n                return this.value * 1e6;\r\n            case VolumePerLengthUnits.LitersPerMillimeter:\r\n                return this.value;\r\n            case VolumePerLengthUnits.OilBarrelsPerFoot:\r\n                return this.value * 1.91713408;\r\n            case VolumePerLengthUnits.CubicYardsPerFoot:\r\n                return this.value / 2.50838208;\r\n            case VolumePerLengthUnits.CubicYardsPerUsSurveyFoot:\r\n                return this.value / 2.50837706323584;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case VolumePerLengthUnits.CubicMetersPerMeter:\r\n                return value;\r\n            case VolumePerLengthUnits.LitersPerMeter:\r\n                return value / 1000;\r\n            case VolumePerLengthUnits.LitersPerKilometer:\r\n                return value / 1e6;\r\n            case VolumePerLengthUnits.LitersPerMillimeter:\r\n                return value;\r\n            case VolumePerLengthUnits.OilBarrelsPerFoot:\r\n                return value / 1.91713408;\r\n            case VolumePerLengthUnits.CubicYardsPerFoot:\r\n                return value * 2.50838208;\r\n            case VolumePerLengthUnits.CubicYardsPerUsSurveyFoot:\r\n                return value * 2.50837706323584;\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the VolumePerLength to string.\r\n     * Note! the default format for VolumePerLength is CubicMetersPerMeter.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the VolumePerLength.\r\n     * @returns The string format of the VolumePerLength.\r\n     */\r\n    toString(toUnit = VolumePerLengthUnits.CubicMetersPerMeter) {\r\n        switch (toUnit) {\r\n            case VolumePerLengthUnits.CubicMetersPerMeter:\r\n                return this.CubicMetersPerMeter + ` m³/m`;\r\n            case VolumePerLengthUnits.LitersPerMeter:\r\n                return this.LitersPerMeter + ` l/m`;\r\n            case VolumePerLengthUnits.LitersPerKilometer:\r\n                return this.LitersPerKilometer + ` l/km`;\r\n            case VolumePerLengthUnits.LitersPerMillimeter:\r\n                return this.LitersPerMillimeter + ` l/mm`;\r\n            case VolumePerLengthUnits.OilBarrelsPerFoot:\r\n                return this.OilBarrelsPerFoot + ` bbl/ft`;\r\n            case VolumePerLengthUnits.CubicYardsPerFoot:\r\n                return this.CubicYardsPerFoot + ` yd³/ft`;\r\n            case VolumePerLengthUnits.CubicYardsPerUsSurveyFoot:\r\n                return this.CubicYardsPerUsSurveyFoot + ` yd³/ftUS`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given VolumePerLength are equals to the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns True if the given VolumePerLength are equal to the current VolumePerLength.\r\n     */\r\n    equals(volumePerLength) {\r\n        return this.value === volumePerLength.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given VolumePerLength against the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns 0 if they are equal, -1 if the current VolumePerLength is less then other, 1 if the current VolumePerLength is greater then other.\r\n     */\r\n    compareTo(volumePerLength) {\r\n        if (this.value > volumePerLength.BaseValue)\r\n            return 1;\r\n        if (this.value < volumePerLength.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given VolumePerLength with the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns A new VolumePerLength instance with the results.\r\n     */\r\n    add(volumePerLength) {\r\n        return new VolumePerLength(this.value + volumePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given VolumePerLength with the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns A new VolumePerLength instance with the results.\r\n     */\r\n    subtract(volumePerLength) {\r\n        return new VolumePerLength(this.value - volumePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given VolumePerLength with the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns A new VolumePerLength instance with the results.\r\n     */\r\n    multiply(volumePerLength) {\r\n        return new VolumePerLength(this.value * volumePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given VolumePerLength with the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns A new VolumePerLength instance with the results.\r\n     */\r\n    divide(volumePerLength) {\r\n        return new VolumePerLength(this.value / volumePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given VolumePerLength with the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns A new VolumePerLength instance with the results.\r\n     */\r\n    modulo(volumePerLength) {\r\n        return new VolumePerLength(this.value % volumePerLength.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given VolumePerLength with the current VolumePerLength.\r\n     * @param volumePerLength The other VolumePerLength.\r\n     * @returns A new VolumePerLength instance with the results.\r\n     */\r\n    pow(volumePerLength) {\r\n        return new VolumePerLength(this.value ** volumePerLength.BaseValue);\r\n    }\r\n}\r\nexports.VolumePerLength = VolumePerLength;\r\n//# sourceMappingURL=volumeperlength.g.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WarpingMomentOfInertia = exports.WarpingMomentOfInertiaUnits = void 0;\r\n/** WarpingMomentOfInertiaUnits enumeration */\r\nvar WarpingMomentOfInertiaUnits;\r\n(function (WarpingMomentOfInertiaUnits) {\r\n    /** */\r\n    WarpingMomentOfInertiaUnits[WarpingMomentOfInertiaUnits[\"MetersToTheSixth\"] = 0] = \"MetersToTheSixth\";\r\n    /** */\r\n    WarpingMomentOfInertiaUnits[WarpingMomentOfInertiaUnits[\"DecimetersToTheSixth\"] = 1] = \"DecimetersToTheSixth\";\r\n    /** */\r\n    WarpingMomentOfInertiaUnits[WarpingMomentOfInertiaUnits[\"CentimetersToTheSixth\"] = 2] = \"CentimetersToTheSixth\";\r\n    /** */\r\n    WarpingMomentOfInertiaUnits[WarpingMomentOfInertiaUnits[\"MillimetersToTheSixth\"] = 3] = \"MillimetersToTheSixth\";\r\n    /** */\r\n    WarpingMomentOfInertiaUnits[WarpingMomentOfInertiaUnits[\"FeetToTheSixth\"] = 4] = \"FeetToTheSixth\";\r\n    /** */\r\n    WarpingMomentOfInertiaUnits[WarpingMomentOfInertiaUnits[\"InchesToTheSixth\"] = 5] = \"InchesToTheSixth\";\r\n})(WarpingMomentOfInertiaUnits = exports.WarpingMomentOfInertiaUnits || (exports.WarpingMomentOfInertiaUnits = {}));\r\n/** A geometric property of an area that is used to determine the warping stress. */\r\nclass WarpingMomentOfInertia {\r\n    /**\r\n     * Create a new WarpingMomentOfInertia.\r\n     * @param value The value.\r\n     * @param fromUnit The ‘WarpingMomentOfInertia’ unit to create from.\r\n     * The default unit is MetersToTheSixth\r\n     */\r\n    constructor(value, fromUnit = WarpingMomentOfInertiaUnits.MetersToTheSixth) {\r\n        this.meterstothesixthLazy = null;\r\n        this.decimeterstothesixthLazy = null;\r\n        this.centimeterstothesixthLazy = null;\r\n        this.millimeterstothesixthLazy = null;\r\n        this.feettothesixthLazy = null;\r\n        this.inchestothesixthLazy = null;\r\n        if (isNaN(value))\r\n            throw new TypeError('invalid unit value ‘' + value + '’');\r\n        this.value = this.convertToBase(value, fromUnit);\r\n    }\r\n    /**\r\n     * The base value of WarpingMomentOfInertia is MetersToTheSixth.\r\n     * This accessor used when needs a value for calculations and it's better to use directly the base value\r\n     */\r\n    get BaseValue() {\r\n        return this.value;\r\n    }\r\n    /** */\r\n    get MetersToTheSixth() {\r\n        if (this.meterstothesixthLazy !== null) {\r\n            return this.meterstothesixthLazy;\r\n        }\r\n        return this.meterstothesixthLazy = this.convertFromBase(WarpingMomentOfInertiaUnits.MetersToTheSixth);\r\n    }\r\n    /** */\r\n    get DecimetersToTheSixth() {\r\n        if (this.decimeterstothesixthLazy !== null) {\r\n            return this.decimeterstothesixthLazy;\r\n        }\r\n        return this.decimeterstothesixthLazy = this.convertFromBase(WarpingMomentOfInertiaUnits.DecimetersToTheSixth);\r\n    }\r\n    /** */\r\n    get CentimetersToTheSixth() {\r\n        if (this.centimeterstothesixthLazy !== null) {\r\n            return this.centimeterstothesixthLazy;\r\n        }\r\n        return this.centimeterstothesixthLazy = this.convertFromBase(WarpingMomentOfInertiaUnits.CentimetersToTheSixth);\r\n    }\r\n    /** */\r\n    get MillimetersToTheSixth() {\r\n        if (this.millimeterstothesixthLazy !== null) {\r\n            return this.millimeterstothesixthLazy;\r\n        }\r\n        return this.millimeterstothesixthLazy = this.convertFromBase(WarpingMomentOfInertiaUnits.MillimetersToTheSixth);\r\n    }\r\n    /** */\r\n    get FeetToTheSixth() {\r\n        if (this.feettothesixthLazy !== null) {\r\n            return this.feettothesixthLazy;\r\n        }\r\n        return this.feettothesixthLazy = this.convertFromBase(WarpingMomentOfInertiaUnits.FeetToTheSixth);\r\n    }\r\n    /** */\r\n    get InchesToTheSixth() {\r\n        if (this.inchestothesixthLazy !== null) {\r\n            return this.inchestothesixthLazy;\r\n        }\r\n        return this.inchestothesixthLazy = this.convertFromBase(WarpingMomentOfInertiaUnits.InchesToTheSixth);\r\n    }\r\n    /**\r\n     * Create a new WarpingMomentOfInertia instance from a MetersToTheSixth\r\n     *\r\n     * @param value The unit as MetersToTheSixth to create a new WarpingMomentOfInertia from.\r\n     * @returns The new WarpingMomentOfInertia instance.\r\n     */\r\n    static FromMetersToTheSixth(value) {\r\n        return new WarpingMomentOfInertia(value, WarpingMomentOfInertiaUnits.MetersToTheSixth);\r\n    }\r\n    /**\r\n     * Create a new WarpingMomentOfInertia instance from a DecimetersToTheSixth\r\n     *\r\n     * @param value The unit as DecimetersToTheSixth to create a new WarpingMomentOfInertia from.\r\n     * @returns The new WarpingMomentOfInertia instance.\r\n     */\r\n    static FromDecimetersToTheSixth(value) {\r\n        return new WarpingMomentOfInertia(value, WarpingMomentOfInertiaUnits.DecimetersToTheSixth);\r\n    }\r\n    /**\r\n     * Create a new WarpingMomentOfInertia instance from a CentimetersToTheSixth\r\n     *\r\n     * @param value The unit as CentimetersToTheSixth to create a new WarpingMomentOfInertia from.\r\n     * @returns The new WarpingMomentOfInertia instance.\r\n     */\r\n    static FromCentimetersToTheSixth(value) {\r\n        return new WarpingMomentOfInertia(value, WarpingMomentOfInertiaUnits.CentimetersToTheSixth);\r\n    }\r\n    /**\r\n     * Create a new WarpingMomentOfInertia instance from a MillimetersToTheSixth\r\n     *\r\n     * @param value The unit as MillimetersToTheSixth to create a new WarpingMomentOfInertia from.\r\n     * @returns The new WarpingMomentOfInertia instance.\r\n     */\r\n    static FromMillimetersToTheSixth(value) {\r\n        return new WarpingMomentOfInertia(value, WarpingMomentOfInertiaUnits.MillimetersToTheSixth);\r\n    }\r\n    /**\r\n     * Create a new WarpingMomentOfInertia instance from a FeetToTheSixth\r\n     *\r\n     * @param value The unit as FeetToTheSixth to create a new WarpingMomentOfInertia from.\r\n     * @returns The new WarpingMomentOfInertia instance.\r\n     */\r\n    static FromFeetToTheSixth(value) {\r\n        return new WarpingMomentOfInertia(value, WarpingMomentOfInertiaUnits.FeetToTheSixth);\r\n    }\r\n    /**\r\n     * Create a new WarpingMomentOfInertia instance from a InchesToTheSixth\r\n     *\r\n     * @param value The unit as InchesToTheSixth to create a new WarpingMomentOfInertia from.\r\n     * @returns The new WarpingMomentOfInertia instance.\r\n     */\r\n    static FromInchesToTheSixth(value) {\r\n        return new WarpingMomentOfInertia(value, WarpingMomentOfInertiaUnits.InchesToTheSixth);\r\n    }\r\n    convertFromBase(toUnit) {\r\n        switch (toUnit) {\r\n            case WarpingMomentOfInertiaUnits.MetersToTheSixth:\r\n                return this.value;\r\n            case WarpingMomentOfInertiaUnits.DecimetersToTheSixth:\r\n                return this.value * 1e6;\r\n            case WarpingMomentOfInertiaUnits.CentimetersToTheSixth:\r\n                return this.value * 1e12;\r\n            case WarpingMomentOfInertiaUnits.MillimetersToTheSixth:\r\n                return this.value * 1e18;\r\n            case WarpingMomentOfInertiaUnits.FeetToTheSixth:\r\n                return this.value / Math.pow(0.3048, 6);\r\n            case WarpingMomentOfInertiaUnits.InchesToTheSixth:\r\n                return this.value / Math.pow(2.54e-2, 6);\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    convertToBase(value, fromUnit) {\r\n        switch (fromUnit) {\r\n            case WarpingMomentOfInertiaUnits.MetersToTheSixth:\r\n                return value;\r\n            case WarpingMomentOfInertiaUnits.DecimetersToTheSixth:\r\n                return value / 1e6;\r\n            case WarpingMomentOfInertiaUnits.CentimetersToTheSixth:\r\n                return value / 1e12;\r\n            case WarpingMomentOfInertiaUnits.MillimetersToTheSixth:\r\n                return value / 1e18;\r\n            case WarpingMomentOfInertiaUnits.FeetToTheSixth:\r\n                return value * Math.pow(0.3048, 6);\r\n            case WarpingMomentOfInertiaUnits.InchesToTheSixth:\r\n                return value * Math.pow(2.54e-2, 6);\r\n            default:\r\n                break;\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Format the WarpingMomentOfInertia to string.\r\n     * Note! the default format for WarpingMomentOfInertia is MetersToTheSixth.\r\n     * To specify the unit fromat set the 'toUnit' parameter.\r\n     * @param toUnit The unit to format the WarpingMomentOfInertia.\r\n     * @returns The string format of the WarpingMomentOfInertia.\r\n     */\r\n    toString(toUnit = WarpingMomentOfInertiaUnits.MetersToTheSixth) {\r\n        switch (toUnit) {\r\n            case WarpingMomentOfInertiaUnits.MetersToTheSixth:\r\n                return this.MetersToTheSixth + ` m⁶`;\r\n            case WarpingMomentOfInertiaUnits.DecimetersToTheSixth:\r\n                return this.DecimetersToTheSixth + ` dm⁶`;\r\n            case WarpingMomentOfInertiaUnits.CentimetersToTheSixth:\r\n                return this.CentimetersToTheSixth + ` cm⁶`;\r\n            case WarpingMomentOfInertiaUnits.MillimetersToTheSixth:\r\n                return this.MillimetersToTheSixth + ` mm⁶`;\r\n            case WarpingMomentOfInertiaUnits.FeetToTheSixth:\r\n                return this.FeetToTheSixth + ` ft⁶`;\r\n            case WarpingMomentOfInertiaUnits.InchesToTheSixth:\r\n                return this.InchesToTheSixth + ` in⁶`;\r\n            default:\r\n                break;\r\n        }\r\n        return this.value.toString();\r\n    }\r\n    /**\r\n     * Check if the given WarpingMomentOfInertia are equals to the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns True if the given WarpingMomentOfInertia are equal to the current WarpingMomentOfInertia.\r\n     */\r\n    equals(warpingMomentOfInertia) {\r\n        return this.value === warpingMomentOfInertia.BaseValue;\r\n    }\r\n    /**\r\n     * Compare the given WarpingMomentOfInertia against the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns 0 if they are equal, -1 if the current WarpingMomentOfInertia is less then other, 1 if the current WarpingMomentOfInertia is greater then other.\r\n     */\r\n    compareTo(warpingMomentOfInertia) {\r\n        if (this.value > warpingMomentOfInertia.BaseValue)\r\n            return 1;\r\n        if (this.value < warpingMomentOfInertia.BaseValue)\r\n            return -1;\r\n        return 0;\r\n    }\r\n    /**\r\n     * Add the given WarpingMomentOfInertia with the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns A new WarpingMomentOfInertia instance with the results.\r\n     */\r\n    add(warpingMomentOfInertia) {\r\n        return new WarpingMomentOfInertia(this.value + warpingMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Subtract the given WarpingMomentOfInertia with the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns A new WarpingMomentOfInertia instance with the results.\r\n     */\r\n    subtract(warpingMomentOfInertia) {\r\n        return new WarpingMomentOfInertia(this.value - warpingMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Multiply the given WarpingMomentOfInertia with the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns A new WarpingMomentOfInertia instance with the results.\r\n     */\r\n    multiply(warpingMomentOfInertia) {\r\n        return new WarpingMomentOfInertia(this.value * warpingMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Divide the given WarpingMomentOfInertia with the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns A new WarpingMomentOfInertia instance with the results.\r\n     */\r\n    divide(warpingMomentOfInertia) {\r\n        return new WarpingMomentOfInertia(this.value / warpingMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Modulo the given WarpingMomentOfInertia with the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns A new WarpingMomentOfInertia instance with the results.\r\n     */\r\n    modulo(warpingMomentOfInertia) {\r\n        return new WarpingMomentOfInertia(this.value % warpingMomentOfInertia.BaseValue);\r\n    }\r\n    /**\r\n     * Pow the given WarpingMomentOfInertia with the current WarpingMomentOfInertia.\r\n     * @param warpingMomentOfInertia The other WarpingMomentOfInertia.\r\n     * @returns A new WarpingMomentOfInertia instance with the results.\r\n     */\r\n    pow(warpingMomentOfInertia) {\r\n        return new WarpingMomentOfInertia(this.value ** warpingMomentOfInertia.BaseValue);\r\n    }\r\n}\r\nexports.WarpingMomentOfInertia = WarpingMomentOfInertia;\r\n//# sourceMappingURL=warpingmomentofinertia.g.js.map","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/**\n * Takes an array of [keyValue1, keyValue2] pairs and creates an object of {keyValue1: keyValue2, keyValue2: keyValue1}\n * @param {Array} array the array of pairs\n * @return {Object} the {key, value} pair object\n */\nfunction arrayToObject(array) {\n  return array.reduce(function (obj, _ref) {\n    var prop1 = _ref[0],\n        prop2 = _ref[1];\n    obj[prop1] = prop2;\n    obj[prop2] = prop1;\n    return obj;\n  }, {});\n}\n\nfunction isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\nfunction isNullOrUndefined(val) {\n  return val === null || typeof val === 'undefined';\n}\n\nfunction isObject(val) {\n  return val && typeof val === 'object';\n}\n\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\nfunction includes(inclusive, inclusee) {\n  return inclusive.indexOf(inclusee) !== -1;\n}\n/**\n * Flip the sign of a CSS value, possibly with a unit.\n *\n * We can't just negate the value with unary minus due to the units.\n *\n * @private\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example -77%)\n */\n\n\nfunction flipSign(value) {\n  if (parseFloat(value) === 0) {\n    // Don't mangle zeroes\n    return value;\n  }\n\n  if (value[0] === '-') {\n    return value.slice(1);\n  }\n\n  return \"-\" + value;\n}\n\nfunction flipTransformSign(match, prefix, offset, suffix) {\n  return prefix + flipSign(offset) + suffix;\n}\n/**\n * Takes a percentage for background position and inverts it.\n * This was copied and modified from CSSJanus:\n * https://github.com/cssjanus/cssjanus/blob/4245f834365f6cfb0239191a151432fb85abab23/src/cssjanus.js#L152-L175\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example 23%)\n */\n\n\nfunction calculateNewBackgroundPosition(value) {\n  var idx = value.indexOf('.');\n\n  if (idx === -1) {\n    value = 100 - parseFloat(value) + \"%\";\n  } else {\n    // Two off, one for the \"%\" at the end, one for the dot itself\n    var len = value.length - idx - 2;\n    value = 100 - parseFloat(value);\n    value = value.toFixed(len) + \"%\";\n  }\n\n  return value;\n}\n/**\n * This takes a list of CSS values and converts it to an array\n * @param {String} value - something like `1px`, `1px 2em`, or `3pt rgb(150, 230, 550) 40px calc(100% - 5px)`\n * @return {Array} the split values (for example: `['3pt', 'rgb(150, 230, 550)', '40px', 'calc(100% - 5px)']`)\n */\n\n\nfunction getValuesAsList(value) {\n  return value.replace(/ +/g, ' ') // remove all extraneous spaces\n  .split(' ').map(function (i) {\n    return i.trim();\n  }) // get rid of extra space before/after each item\n  .filter(Boolean) // get rid of empty strings\n  // join items which are within parenthese\n  // luckily `calc (100% - 5px)` is invalid syntax and it must be `calc(100% - 5px)`, otherwise this would be even more complex\n  .reduce(function (_ref2, item) {\n    var list = _ref2.list,\n        state = _ref2.state;\n    var openParansCount = (item.match(/\\(/g) || []).length;\n    var closedParansCount = (item.match(/\\)/g) || []).length;\n\n    if (state.parensDepth > 0) {\n      list[list.length - 1] = list[list.length - 1] + \" \" + item;\n    } else {\n      list.push(item);\n    }\n\n    state.parensDepth += openParansCount - closedParansCount;\n    return {\n      list: list,\n      state: state\n    };\n  }, {\n    list: [],\n    state: {\n      parensDepth: 0\n    }\n  }).list;\n}\n/**\n * This is intended for properties that are `top right bottom left` and will switch them to `top left bottom right`\n * @param {String} value - `1px 2px 3px 4px` for example, but also handles cases where there are too few/too many and\n * simply returns the value in those cases (which is the correct behavior)\n * @return {String} the result - `1px 4px 3px 2px` for example.\n */\n\n\nfunction handleQuartetValues(value) {\n  var splitValues = getValuesAsList(value);\n\n  if (splitValues.length <= 3 || splitValues.length > 4) {\n    return value;\n  }\n\n  var top = splitValues[0],\n      right = splitValues[1],\n      bottom = splitValues[2],\n      left = splitValues[3];\n  return [top, left, bottom, right].join(' ');\n}\n\nvar propertyValueConverters = {\n  padding: function padding(_ref) {\n    var value = _ref.value;\n\n    if (isNumber(value)) {\n      return value;\n    }\n\n    return handleQuartetValues(value);\n  },\n  textShadow: function textShadow(_ref2) {\n    var value = _ref2.value;\n    // intentionally leaving off the `g` flag here because we only want to change the first number (which is the offset-x)\n    return value.replace(/(-*)([.|\\d]+)/, function (match, negative, number) {\n      if (number === '0') {\n        return match;\n      }\n\n      var doubleNegative = negative === '' ? '-' : '';\n      return \"\" + doubleNegative + number;\n    });\n  },\n  borderColor: function borderColor(_ref3) {\n    var value = _ref3.value;\n    return handleQuartetValues(value);\n  },\n  borderRadius: function borderRadius(_ref4) {\n    var value = _ref4.value;\n\n    if (isNumber(value)) {\n      return value;\n    }\n\n    if (includes(value, '/')) {\n      var _value$split = value.split('/'),\n          radius1 = _value$split[0],\n          radius2 = _value$split[1];\n\n      var convertedRadius1 = propertyValueConverters.borderRadius({\n        value: radius1.trim()\n      });\n      var convertedRadius2 = propertyValueConverters.borderRadius({\n        value: radius2.trim()\n      });\n      return convertedRadius1 + \" / \" + convertedRadius2;\n    }\n\n    var splitValues = getValuesAsList(value);\n\n    switch (splitValues.length) {\n      case 2:\n        {\n          return splitValues.reverse().join(' ');\n        }\n\n      case 4:\n        {\n          var topLeft = splitValues[0],\n              topRight = splitValues[1],\n              bottomRight = splitValues[2],\n              bottomLeft = splitValues[3];\n          return [topRight, topLeft, bottomLeft, bottomRight].join(' ');\n        }\n\n      default:\n        {\n          return value;\n        }\n    }\n  },\n  background: function background(_ref5) {\n    var value = _ref5.value,\n        valuesToConvert = _ref5.valuesToConvert,\n        isRtl = _ref5.isRtl,\n        bgImgDirectionRegex = _ref5.bgImgDirectionRegex,\n        bgPosDirectionRegex = _ref5.bgPosDirectionRegex;\n\n    if (isNumber(value)) {\n      return value;\n    } // Yeah, this is in need of a refactor 🙃...\n    // but this property is a tough cookie 🍪\n    // get the backgroundPosition out of the string by removing everything that couldn't be the backgroundPosition value\n\n\n    var backgroundPositionValue = value.replace(/(url\\(.*?\\))|(rgba?\\(.*?\\))|(hsl\\(.*?\\))|(#[a-fA-F0-9]+)|((^| )(\\D)+( |$))/g, '').trim(); // replace that backgroundPosition value with the converted version\n\n    value = value.replace(backgroundPositionValue, propertyValueConverters.backgroundPosition({\n      value: backgroundPositionValue,\n      valuesToConvert: valuesToConvert,\n      isRtl: isRtl,\n      bgPosDirectionRegex: bgPosDirectionRegex\n    })); // do the backgroundImage value replacing on the whole value (because why not?)\n\n    return propertyValueConverters.backgroundImage({\n      value: value,\n      valuesToConvert: valuesToConvert,\n      bgImgDirectionRegex: bgImgDirectionRegex\n    });\n  },\n  backgroundImage: function backgroundImage(_ref6) {\n    var value = _ref6.value,\n        valuesToConvert = _ref6.valuesToConvert,\n        bgImgDirectionRegex = _ref6.bgImgDirectionRegex;\n\n    if (!includes(value, 'url(') && !includes(value, 'linear-gradient(')) {\n      return value;\n    }\n\n    return value.replace(bgImgDirectionRegex, function (match, g1, group2) {\n      return match.replace(group2, valuesToConvert[group2]);\n    });\n  },\n  backgroundPosition: function backgroundPosition(_ref7) {\n    var value = _ref7.value,\n        valuesToConvert = _ref7.valuesToConvert,\n        isRtl = _ref7.isRtl,\n        bgPosDirectionRegex = _ref7.bgPosDirectionRegex;\n    return value // intentionally only grabbing the first instance of this because that represents `left`\n    .replace(isRtl ? /^((-|\\d|\\.)+%)/ : null, function (match, group) {\n      return calculateNewBackgroundPosition(group);\n    }).replace(bgPosDirectionRegex, function (match) {\n      return valuesToConvert[match];\n    });\n  },\n  backgroundPositionX: function backgroundPositionX(_ref8) {\n    var value = _ref8.value,\n        valuesToConvert = _ref8.valuesToConvert,\n        isRtl = _ref8.isRtl,\n        bgPosDirectionRegex = _ref8.bgPosDirectionRegex;\n\n    if (isNumber(value)) {\n      return value;\n    }\n\n    return propertyValueConverters.backgroundPosition({\n      value: value,\n      valuesToConvert: valuesToConvert,\n      isRtl: isRtl,\n      bgPosDirectionRegex: bgPosDirectionRegex\n    });\n  },\n  transition: function transition(_ref9) {\n    var value = _ref9.value,\n        propertiesToConvert = _ref9.propertiesToConvert;\n    return value.split(/,\\s*/g).map(function (transition) {\n      var values = transition.split(' '); // Property is always defined first\n\n      values[0] = propertiesToConvert[values[0]] || values[0];\n      return values.join(' ');\n    }).join(', ');\n  },\n  transitionProperty: function transitionProperty(_ref10) {\n    var value = _ref10.value,\n        propertiesToConvert = _ref10.propertiesToConvert;\n    return value.split(/,\\s*/g).map(function (prop) {\n      return propertiesToConvert[prop] || prop;\n    }).join(', ');\n  },\n  transform: function transform(_ref11) {\n    var value = _ref11.value;\n    // This was copied and modified from CSSJanus:\n    // https://github.com/cssjanus/cssjanus/blob/4a40f001b1ba35567112d8b8e1d9d95eda4234c3/src/cssjanus.js#L152-L153\n    var nonAsciiPattern = \"[^\\\\u0020-\\\\u007e]\";\n    var escapePattern = \"(?:\" + '(?:(?:\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)' + \"|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])\";\n    var signedQuantPattern = \"((?:-?\" + ('(?:[0-9]*\\\\.[0-9]+|[0-9]+)' + \"(?:\\\\s*\" + '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)' + \"|\" + (\"-?\" + (\"(?:[_a-z]|\" + nonAsciiPattern + \"|\" + escapePattern + \")\") + (\"(?:[_a-z0-9-]|\" + nonAsciiPattern + \"|\" + escapePattern + \")\") + \"*\") + \")?\") + \")|(?:inherit|auto))\";\n    var translateXRegExp = new RegExp(\"(translateX\\\\s*\\\\(\\\\s*)\" + signedQuantPattern + \"(\\\\s*\\\\))\", 'gi');\n    var translateRegExp = new RegExp(\"(translate\\\\s*\\\\(\\\\s*)\" + signedQuantPattern + \"((?:\\\\s*,\\\\s*\" + signedQuantPattern + \"){0,1}\\\\s*\\\\))\", 'gi');\n    var translate3dRegExp = new RegExp(\"(translate3d\\\\s*\\\\(\\\\s*)\" + signedQuantPattern + \"((?:\\\\s*,\\\\s*\" + signedQuantPattern + \"){0,2}\\\\s*\\\\))\", 'gi');\n    var rotateRegExp = new RegExp(\"(rotate[ZY]?\\\\s*\\\\(\\\\s*)\" + signedQuantPattern + \"(\\\\s*\\\\))\", 'gi');\n    return value.replace(translateXRegExp, flipTransformSign).replace(translateRegExp, flipTransformSign).replace(translate3dRegExp, flipTransformSign).replace(rotateRegExp, flipTransformSign);\n  }\n};\npropertyValueConverters.objectPosition = propertyValueConverters.backgroundPosition;\npropertyValueConverters.margin = propertyValueConverters.padding;\npropertyValueConverters.borderWidth = propertyValueConverters.padding;\npropertyValueConverters.boxShadow = propertyValueConverters.textShadow;\npropertyValueConverters.webkitBoxShadow = propertyValueConverters.boxShadow;\npropertyValueConverters.mozBoxShadow = propertyValueConverters.boxShadow;\npropertyValueConverters.WebkitBoxShadow = propertyValueConverters.boxShadow;\npropertyValueConverters.MozBoxShadow = propertyValueConverters.boxShadow;\npropertyValueConverters.borderStyle = propertyValueConverters.borderColor;\npropertyValueConverters.webkitTransform = propertyValueConverters.transform;\npropertyValueConverters.mozTransform = propertyValueConverters.transform;\npropertyValueConverters.WebkitTransform = propertyValueConverters.transform;\npropertyValueConverters.MozTransform = propertyValueConverters.transform;\npropertyValueConverters.transformOrigin = propertyValueConverters.backgroundPosition;\npropertyValueConverters.webkitTransformOrigin = propertyValueConverters.transformOrigin;\npropertyValueConverters.mozTransformOrigin = propertyValueConverters.transformOrigin;\npropertyValueConverters.WebkitTransformOrigin = propertyValueConverters.transformOrigin;\npropertyValueConverters.MozTransformOrigin = propertyValueConverters.transformOrigin;\npropertyValueConverters.webkitTransition = propertyValueConverters.transition;\npropertyValueConverters.mozTransition = propertyValueConverters.transition;\npropertyValueConverters.WebkitTransition = propertyValueConverters.transition;\npropertyValueConverters.MozTransition = propertyValueConverters.transition;\npropertyValueConverters.webkitTransitionProperty = propertyValueConverters.transitionProperty;\npropertyValueConverters.mozTransitionProperty = propertyValueConverters.transitionProperty;\npropertyValueConverters.WebkitTransitionProperty = propertyValueConverters.transitionProperty;\npropertyValueConverters.MozTransitionProperty = propertyValueConverters.transitionProperty; // kebab-case versions\n\npropertyValueConverters['text-shadow'] = propertyValueConverters.textShadow;\npropertyValueConverters['border-color'] = propertyValueConverters.borderColor;\npropertyValueConverters['border-radius'] = propertyValueConverters.borderRadius;\npropertyValueConverters['background-image'] = propertyValueConverters.backgroundImage;\npropertyValueConverters['background-position'] = propertyValueConverters.backgroundPosition;\npropertyValueConverters['background-position-x'] = propertyValueConverters.backgroundPositionX;\npropertyValueConverters['object-position'] = propertyValueConverters.objectPosition;\npropertyValueConverters['border-width'] = propertyValueConverters.padding;\npropertyValueConverters['box-shadow'] = propertyValueConverters.textShadow;\npropertyValueConverters['-webkit-box-shadow'] = propertyValueConverters.textShadow;\npropertyValueConverters['-moz-box-shadow'] = propertyValueConverters.textShadow;\npropertyValueConverters['border-style'] = propertyValueConverters.borderColor;\npropertyValueConverters['-webkit-transform'] = propertyValueConverters.transform;\npropertyValueConverters['-moz-transform'] = propertyValueConverters.transform;\npropertyValueConverters['transform-origin'] = propertyValueConverters.transformOrigin;\npropertyValueConverters['-webkit-transform-origin'] = propertyValueConverters.transformOrigin;\npropertyValueConverters['-moz-transform-origin'] = propertyValueConverters.transformOrigin;\npropertyValueConverters['-webkit-transition'] = propertyValueConverters.transition;\npropertyValueConverters['-moz-transition'] = propertyValueConverters.transition;\npropertyValueConverters['transition-property'] = propertyValueConverters.transitionProperty;\npropertyValueConverters['-webkit-transition-property'] = propertyValueConverters.transitionProperty;\npropertyValueConverters['-moz-transition-property'] = propertyValueConverters.transitionProperty;\n\nvar propertiesToConvert = arrayToObject([['paddingLeft', 'paddingRight'], ['marginLeft', 'marginRight'], ['left', 'right'], ['borderLeft', 'borderRight'], ['borderLeftColor', 'borderRightColor'], ['borderLeftStyle', 'borderRightStyle'], ['borderLeftWidth', 'borderRightWidth'], ['borderTopLeftRadius', 'borderTopRightRadius'], ['borderBottomLeftRadius', 'borderBottomRightRadius'], // kebab-case versions\n['padding-left', 'padding-right'], ['margin-left', 'margin-right'], ['border-left', 'border-right'], ['border-left-color', 'border-right-color'], ['border-left-style', 'border-right-style'], ['border-left-width', 'border-right-width'], ['border-top-left-radius', 'border-top-right-radius'], ['border-bottom-left-radius', 'border-bottom-right-radius']]);\nvar propsToIgnore = ['content']; // this is the same as the propertiesToConvert except for values\n\nvar valuesToConvert = arrayToObject([['ltr', 'rtl'], ['left', 'right'], ['w-resize', 'e-resize'], ['sw-resize', 'se-resize'], ['nw-resize', 'ne-resize']]); // Sorry for the regex 😞, but basically thisis used to replace _every_ instance of\n// `ltr`, `rtl`, `right`, and `left` in `backgroundimage` with the corresponding opposite.\n// A situation we're accepting here:\n// url('/left/right/rtl/ltr.png') will be changed to url('/right/left/ltr/rtl.png')\n// Definite trade-offs here, but I think it's a good call.\n\nvar bgImgDirectionRegex = new RegExp('(^|\\\\W|_)((ltr)|(rtl)|(left)|(right))(\\\\W|_|$)', 'g');\nvar bgPosDirectionRegex = new RegExp('(left)|(right)');\n/**\n * converts properties and values in the CSS in JS object to their corresponding RTL values\n * @param {Object} object the CSS in JS object\n * @return {Object} the RTL converted object\n */\n\nfunction convert(object) {\n  return Object.keys(object).reduce(function (newObj, originalKey) {\n    var originalValue = object[originalKey];\n\n    if (isString(originalValue)) {\n      // you're welcome to later code 😺\n      originalValue = originalValue.trim();\n    } // Some properties should never be transformed\n\n\n    if (includes(propsToIgnore, originalKey)) {\n      newObj[originalKey] = originalValue;\n      return newObj;\n    }\n\n    var _convertProperty = convertProperty(originalKey, originalValue),\n        key = _convertProperty.key,\n        value = _convertProperty.value;\n\n    newObj[key] = value;\n    return newObj;\n  }, Array.isArray(object) ? [] : {});\n}\n/**\n * Converts a property and its value to the corresponding RTL key and value\n * @param {String} originalKey the original property key\n * @param {Number|String|Object} originalValue the original css property value\n * @return {Object} the new {key, value} pair\n */\n\nfunction convertProperty(originalKey, originalValue) {\n  var isNoFlip = /\\/\\*\\s?@noflip\\s?\\*\\//.test(originalValue);\n  var key = isNoFlip ? originalKey : getPropertyDoppelganger(originalKey);\n  var value = isNoFlip ? originalValue : getValueDoppelganger(key, originalValue);\n  return {\n    key: key,\n    value: value\n  };\n}\n/**\n * This gets the RTL version of the given property if it has a corresponding RTL property\n * @param {String} property the name of the property\n * @return {String} the name of the RTL property\n */\n\nfunction getPropertyDoppelganger(property) {\n  return propertiesToConvert[property] || property;\n}\n/**\n * This converts the given value to the RTL version of that value based on the key\n * @param {String} key this is the key (note: this should be the RTL version of the originalKey)\n * @param {String|Number|Object} originalValue the original css property value. If it's an object, then we'll convert that as well\n * @return {String|Number|Object} the converted value\n */\n\nfunction getValueDoppelganger(key, originalValue) {\n  /* eslint complexity:[2, 10] */\n  // let's try to keep the complexity down... If we have to do this much more, let's break this up\n  if (isNullOrUndefined(originalValue) || isBoolean(originalValue)) {\n    return originalValue;\n  }\n\n  if (isObject(originalValue)) {\n    return convert(originalValue); // recurssion 🌀\n  }\n\n  var isNum = isNumber(originalValue);\n  var isFunc = isFunction(originalValue);\n  var importantlessValue = isNum || isFunc ? originalValue : originalValue.replace(/ !important.*?$/, '');\n  var isImportant = !isNum && importantlessValue.length !== originalValue.length;\n  var valueConverter = propertyValueConverters[key];\n  var newValue;\n\n  if (valueConverter) {\n    newValue = valueConverter({\n      value: importantlessValue,\n      valuesToConvert: valuesToConvert,\n      propertiesToConvert: propertiesToConvert,\n      isRtl: true,\n      bgImgDirectionRegex: bgImgDirectionRegex,\n      bgPosDirectionRegex: bgPosDirectionRegex\n    });\n  } else {\n    newValue = valuesToConvert[importantlessValue] || importantlessValue;\n  }\n\n  if (isImportant) {\n    return newValue + \" !important\";\n  }\n\n  return newValue;\n}\n\nexport { propertiesToConvert as a, propsToIgnore as b, convert as c, convertProperty as d, getValueDoppelganger as e, arrayToObject as f, getPropertyDoppelganger as g, calculateNewBackgroundPosition as h, flipTransformSign as i, flipSign as j, handleQuartetValues as k, includes as l, isBoolean as m, isFunction as n, isNullOrUndefined as o, propertyValueConverters as p, isNumber as q, isObject as r, isString as s, getValuesAsList as t, valuesToConvert as v };\n","import { c as convert } from './convert-09159978.js';\n\n\n\nexport default convert;\n","import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: deprecatedPropType(PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nexport function isPlainObject(item) {\n  return item && _typeof(item) === 'object' && item.constructor === Object;\n}\nexport default function deepmerge(target, source) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  var output = options.clone ? _extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target) {\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","/* eslint-disable no-restricted-syntax */\nexport default function getThemeProps(params) {\n  var theme = params.theme,\n      name = params.name,\n      props = params.props;\n\n  if (!theme || !theme.props || !theme.props[name]) {\n    return props;\n  } // Resolve default props, code borrow from React source.\n  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221\n\n\n  var defaultProps = theme.props[name];\n  var propName;\n\n  for (propName in defaultProps) {\n    if (props[propName] === undefined) {\n      props[propName] = defaultProps[propName];\n    }\n  }\n\n  return props;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import _formatMuiErrorMessage from \"./formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`capitalize(string)\\` expects a string argument.` : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.shape({\n    __emotion_styles: PropTypes.any.isRequired\n  }), PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nvar warnedOnce = false;\n\nfunction styleFunctionSx(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    if (props.sx) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.sx))), omit(props.sx, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: chainPropTypes(PropTypes.object, function (props) {\n      if (!warnedOnce && props.css !== undefined) {\n        warnedOnce = true;\n        return new Error('Material-UI: The `css` prop is deprecated, please use the `sx` prop instead.');\n      }\n\n      return null;\n    }),\n    sx: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', 'sx'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n/**\r\n *\r\n * @deprecated\r\n * The css style function is deprecated. Use the `styleFunctionSx` instead.\r\n */\n\n\nexport function css(styleFunction) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Material-UI: The `css` function is deprecated. Use the `styleFunctionSx` instead.');\n  }\n\n  return styleFunctionSx(styleFunction);\n}\nexport default styleFunctionSx;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var gridGap = style({\n  prop: 'gridGap'\n});\nexport var gridColumnGap = style({\n  prop: 'gridColumnGap'\n});\nexport var gridRowGap = style({\n  prop: 'gridRowGap'\n});\nexport var gridColumn = style({\n  prop: 'gridColumn'\n});\nexport var gridRow = style({\n  prop: 'gridRow'\n});\nexport var gridAutoFlow = style({\n  prop: 'gridAutoFlow'\n});\nexport var gridAutoColumns = style({\n  prop: 'gridAutoColumns'\n});\nexport var gridAutoRows = style({\n  prop: 'gridAutoRows'\n});\nexport var gridTemplateColumns = style({\n  prop: 'gridTemplateColumns'\n});\nexport var gridTemplateRows = style({\n  prop: 'gridTemplateRows'\n});\nexport var gridTemplateAreas = style({\n  prop: 'gridTemplateAreas'\n});\nexport var gridArea = style({\n  prop: 'gridArea'\n});\nvar grid = compose(gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\nexport default grid;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nexport var boxSizing = style({\n  prop: 'boxSizing'\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\nexport default sizing;","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  var componentCreator = function componentCreator(style) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var stylesOrCreator = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style(_extends({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var filterProps;\n    var propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    var StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      var children = props.children,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      var classes = useStyles(props);\n      var className = clsx(classes.root, classNameProp);\n      var spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/React.createElement(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread), children);\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, function (props) {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat(classNamePrefix, \")\");\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, grid, palette, positions, shadows, sizing, spacing, typography, styleFunctionSx } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = styleFunctionSx(compose(borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"values\", \"unit\", \"step\"];\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.\n\nexport default function createBreakpoints(breakpoints) {\n  const {\n    // The breakpoint **start** at this value.\n    // For instance with the first breakpoint xs: [xs, sm).\n    values = {\n      xs: 0,\n      // phone\n      sm: 600,\n      // tablets\n      md: 900,\n      // small laptop\n      lg: 1200,\n      // desktop\n      xl: 1536 // large screens\n\n    },\n    unit = 'px',\n    step = 5\n  } = breakpoints,\n        other = _objectWithoutPropertiesLoose(breakpoints, _excluded);\n\n  const keys = Object.keys(values);\n\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n\n    return up(key);\n  }\n\n  return _extends({\n    keys,\n    values,\n    up,\n    down,\n    between,\n    only,\n    unit\n  }, other);\n}","const shape = {\n  borderRadius: 4\n};\nexport default shape;","import { createUnarySpacing } from '../spacing';\n\n/* tslint:enable:unified-signatures */\nexport default function createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  const transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  const spacing = (...argsInput) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n\n  spacing.mui = true;\n  return spacing;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\n\nfunction createTheme(options = {}, ...args) {\n  const {\n    breakpoints: breakpointsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    shape: shapeInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: _extends({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: _extends({}, shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  return muiTheme;\n}\n\nexport default createTheme;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  var classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props.in,\n      _props$onExited = props.onExited,\n      onExited = _props$onExited === void 0 ? function () {} : _props$onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      leaving = _React$useState[0],\n      setLeaving = _React$useState[1];\n\n  var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  var handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(function () {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      var timeoutId = setTimeout(handleExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: childClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nvar DURATION = 550;\nexport var DELAY_RIPPLE = 80;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit'\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripple` class. */\n    ripple: {\n      opacity: 0,\n      position: 'absolute'\n    },\n\n    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n    rippleVisible: {\n      opacity: 0.3,\n      transform: 'scale(1)',\n      animation: \"$enter \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n    ripplePulsate: {\n      animationDuration: \"\".concat(theme.transitions.duration.shorter, \"ms\")\n    },\n\n    /* Styles applied to the internal `Ripple` components `child` class. */\n    child: {\n      opacity: 1,\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n    childLeaving: {\n      opacity: 0,\n      animation: \"$exit \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n    childPulsate: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      animation: \"$pulsate 2500ms \".concat(theme.transitions.easing.easeInOut, \" 200ms infinite\")\n    },\n    '@keyframes enter': {\n      '0%': {\n        transform: 'scale(0)',\n        opacity: 0.1\n      },\n      '100%': {\n        transform: 'scale(1)',\n        opacity: 0.3\n      }\n    },\n    '@keyframes exit': {\n      '0%': {\n        opacity: 1\n      },\n      '100%': {\n        opacity: 0\n      }\n    },\n    '@keyframes pulsate': {\n      '0%': {\n        transform: 'scale(1)'\n      },\n      '50%': {\n        transform: 'scale(0.92)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    }\n  };\n};\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nvar TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"center\", \"classes\", \"className\"]);\n\n  var _React$useState = React.useState([]),\n      ripples = _React$useState[0],\n      setRipples = _React$useState[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [/*#__PURE__*/React.createElement(Ripple, {\n        key: nextKey.current,\n        classes: classes,\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize\n      })]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = function () {\n          startCommit({\n            pulsate: pulsate,\n            rippleX: rippleX,\n            rippleY: rippleY,\n            rippleSize: rippleSize,\n            cb: cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(function () {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    },\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n\n  var _React$useState2 = React.useState(false),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, enableTouchRipple ?\n  /*#__PURE__*/\n\n  /* TouchRipple is only needed client-side, x2 boost on the server. */\n  React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: deprecatedPropType(refType, 'Use `ref` instead.'),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context';\nimport { warnOnce, loadNamespaces, hasLoadedNamespace } from './utils';\nexport function useTranslation(ns) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var i18nFromProps = props.i18n;\n\n  var _ref = useContext(I18nContext) || {},\n      i18nFromContext = _ref.i18n,\n      defaultNSFromContext = _ref.defaultNS;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n\n    var notReadyT = function notReadyT(k) {\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    var retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n\n  var i18nOptions = _objectSpread(_objectSpread(_objectSpread({}, getDefaults()), i18n.options.react), props);\n\n  var useSuspense = i18nOptions.useSuspense;\n  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function (n) {\n    return hasLoadedNamespace(n, i18n, i18nOptions);\n  });\n\n  function getT() {\n    return i18n.getFixedT(null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0]);\n  }\n\n  var _useState = useState(getT),\n      _useState2 = _slicedToArray(_useState, 2),\n      t = _useState2[0],\n      setT = _useState2[1];\n\n  var isMounted = useRef(true);\n  useEffect(function () {\n    var bindI18n = i18nOptions.bindI18n,\n        bindI18nStore = i18nOptions.bindI18nStore;\n    isMounted.current = true;\n\n    if (!ready && !useSuspense) {\n      loadNamespaces(i18n, namespaces, function () {\n        if (isMounted.current) setT(getT);\n      });\n    }\n\n    function boundReset() {\n      if (isMounted.current) setT(getT);\n    }\n\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return function () {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(function (e) {\n        return i18n.off(e, boundReset);\n      });\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(function (e) {\n        return i18n.store.off(e, boundReset);\n      });\n    };\n  }, [i18n, namespaces.join()]);\n  var isInitial = useRef(true);\n  useEffect(function () {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n\n    isInitial.current = false;\n  }, [i18n]);\n  var ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(function (resolve) {\n    loadNamespaces(i18n, namespaces, function () {\n      resolve();\n    });\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return \"scale(\".concat(value, \", \").concat(Math.pow(value, 2), \")\");\n}\n\nvar styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  var children = props.children,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? 'auto' : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var timer = React.useRef();\n  var autoTimeout = React.useRef();\n  var theme = useTheme();\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var foreignRef = useForkRef(children.ref, ref);\n  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEntering = normalizedTransitionCallback(onEntering);\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        delay = _getTransitionProps.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        delay = _getTransitionProps2.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the child component.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _GlobalStyles;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n};\nexport const body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport const styles = theme => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html,\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [_GlobalStyles || (_GlobalStyles = /*#__PURE__*/_jsx(GlobalStyles, {\n      styles: styles\n    })), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default CssBaseline;","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\n\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nexport function hexToRgb(color) {\n  color = color.substr(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\n\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\n\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].substr(1);\n    }\n\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n\n  return `${type}(${values})`;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}","import warning from 'tiny-warning';\nimport { createRule } from 'jss';\n\nvar now = Date.now();\nvar fnValuesNs = \"fnValues\" + now;\nvar fnRuleNs = \"fnStyle\" + ++now;\n\nvar functionPlugin = function functionPlugin() {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (typeof decl !== 'function') return null;\n      var rule = createRule(name, {}, options);\n      rule[fnRuleNs] = decl;\n      return rule;\n    },\n    onProcessStyle: function onProcessStyle(style, rule) {\n      // We need to extract function values from the declaration, so that we can keep core unaware of them.\n      // We need to do that only once.\n      // We don't need to extract functions on each style update, since this can happen only once.\n      // We don't support function values inside of function rules.\n      if (fnValuesNs in rule || fnRuleNs in rule) return style;\n      var fnValues = {};\n\n      for (var prop in style) {\n        var value = style[prop];\n        if (typeof value !== 'function') continue;\n        delete style[prop];\n        fnValues[prop] = value;\n      } // $FlowFixMe[prop-missing]\n\n\n      rule[fnValuesNs] = fnValues;\n      return style;\n    },\n    onUpdate: function onUpdate(data, rule, sheet, options) {\n      var styleRule = rule; // $FlowFixMe[prop-missing]\n\n      var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object\n      // will be returned from that function.\n\n      if (fnRule) {\n        // Empty object will remove all currently defined props\n        // in case function rule returns a falsy value.\n        styleRule.style = fnRule(data) || {};\n\n        if (process.env.NODE_ENV === 'development') {\n          for (var prop in styleRule.style) {\n            if (typeof styleRule.style[prop] === 'function') {\n              process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Function values inside function rules are not supported.') : void 0;\n              break;\n            }\n          }\n        }\n      } // $FlowFixMe[prop-missing]\n\n\n      var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.\n\n      if (fnValues) {\n        for (var _prop in fnValues) {\n          styleRule.prop(_prop, fnValues[_prop](data), options);\n        }\n      }\n    }\n  };\n};\n\nexport default functionPlugin;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\n\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.rules = void 0;\n    this.options = void 0;\n    this.key = void 0;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (rule) this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.rules.toString();\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.options = void 0;\n    this.rule = void 0;\n    this.isProcessed = false;\n    this.key = void 0;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return;\n    handleNestedGlobalContainerRule(rule, sheet);\n    handlePrefixedGlobalRule(rule, sheet);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport warning from 'tiny-warning';\n\nvar separatorRegExp = /\\s*,\\s*/g;\nvar parentRegExp = /&/g;\nvar refRegExp = /\\$([\\w-]+)/g;\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\nfunction jssNested() {\n  // Get a function to be used for $ref replacement.\n  function getReplaceRef(container, sheet) {\n    return function (match, key) {\n      var rule = container.getRule(key) || sheet && sheet.getRule(key);\n\n      if (rule) {\n        rule = rule;\n        return rule.selector;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Could not find the referenced rule \\\"\" + key + \"\\\" in \\\"\" + (container.options.meta || container.toString()) + \"\\\".\") : void 0;\n      return key;\n    };\n  }\n\n  function replaceParentRefs(nestedProp, parentProp) {\n    var parentSelectors = parentProp.split(separatorRegExp);\n    var nestedSelectors = nestedProp.split(separatorRegExp);\n    var result = '';\n\n    for (var i = 0; i < parentSelectors.length; i++) {\n      var parent = parentSelectors[i];\n\n      for (var j = 0; j < nestedSelectors.length; j++) {\n        var nested = nestedSelectors[j];\n        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.\n\n        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + \" \" + nested;\n      }\n    }\n\n    return result;\n  }\n\n  function getOptions(rule, container, prevOptions) {\n    // Options has been already created, now we only increase index.\n    if (prevOptions) return _extends({}, prevOptions, {\n      index: prevOptions.index + 1 // $FlowFixMe[prop-missing]\n\n    });\n    var nestingLevel = rule.options.nestingLevel;\n    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n\n    var options = _extends({}, rule.options, {\n      nestingLevel: nestingLevel,\n      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.\n\n    });\n\n    delete options.name;\n    return options;\n  }\n\n  function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style') return style;\n    var styleRule = rule;\n    var container = styleRule.options.parent;\n    var options;\n    var replaceRef;\n\n    for (var prop in style) {\n      var isNested = prop.indexOf('&') !== -1;\n      var isNestedConditional = prop[0] === '@';\n      if (!isNested && !isNestedConditional) continue;\n      options = getOptions(styleRule, container, options);\n\n      if (isNested) {\n        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for\n        // all nested rules within the sheet.\n\n        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.\n\n        selector = selector.replace(refRegExp, replaceRef);\n        container.addRule(selector, style[prop], _extends({}, options, {\n          selector: selector\n        }));\n      } else if (isNestedConditional) {\n        // Place conditional right after the parent rule to ensure right ordering.\n        container.addRule(prop, {}, options) // Flow expects more options but they aren't required\n        // And flow doesn't know this will always be a StyleRule which has the addRule method\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[prop-missing]\n        .addRule(styleRule.key, style[prop], {\n          selector: styleRule.selector\n        });\n      }\n\n      delete style[prop];\n    }\n\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssNested;\n","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","import hyphenate from 'hyphenate-style-name';\n\n/**\n * Convert camel cased property names to dash separated.\n *\n * @param {Object} style\n * @return {Object}\n */\n\nfunction convertCase(style) {\n  var converted = {};\n\n  for (var prop in style) {\n    var key = prop.indexOf('--') === 0 ? prop : hyphenate(prop);\n    converted[key] = style[prop];\n  }\n\n  if (style.fallbacks) {\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\n  }\n\n  return converted;\n}\n/**\n * Allow camel cased property names by converting them back to dasherized.\n *\n * @param {Rule} rule\n */\n\n\nfunction camelCase() {\n  function onProcessStyle(style) {\n    if (Array.isArray(style)) {\n      // Handle rules like @font-face, which can have multiple styles in an array\n      for (var index = 0; index < style.length; index++) {\n        style[index] = convertCase(style[index]);\n      }\n\n      return style;\n    }\n\n    return convertCase(style);\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop.indexOf('--') === 0) {\n      return value;\n    }\n\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\n\n    if (prop === hyphenatedProp) return value;\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default camelCase;\n","import { hasCSSTOMSupport } from 'jss';\n\nvar px = hasCSSTOMSupport && CSS ? CSS.px : 'px';\nvar ms = hasCSSTOMSupport && CSS ? CSS.ms : 'ms';\nvar percent = hasCSSTOMSupport && CSS ? CSS.percent : '%';\n/**\n * Generated jss-plugin-default-unit CSS property units\n *\n * @type object\n */\n\nvar defaultUnits = {\n  // Animation properties\n  'animation-delay': ms,\n  'animation-duration': ms,\n  // Background properties\n  'background-position': px,\n  'background-position-x': px,\n  'background-position-y': px,\n  'background-size': px,\n  // Border Properties\n  border: px,\n  'border-bottom': px,\n  'border-bottom-left-radius': px,\n  'border-bottom-right-radius': px,\n  'border-bottom-width': px,\n  'border-left': px,\n  'border-left-width': px,\n  'border-radius': px,\n  'border-right': px,\n  'border-right-width': px,\n  'border-top': px,\n  'border-top-left-radius': px,\n  'border-top-right-radius': px,\n  'border-top-width': px,\n  'border-width': px,\n  'border-block': px,\n  'border-block-end': px,\n  'border-block-end-width': px,\n  'border-block-start': px,\n  'border-block-start-width': px,\n  'border-block-width': px,\n  'border-inline': px,\n  'border-inline-end': px,\n  'border-inline-end-width': px,\n  'border-inline-start': px,\n  'border-inline-start-width': px,\n  'border-inline-width': px,\n  'border-start-start-radius': px,\n  'border-start-end-radius': px,\n  'border-end-start-radius': px,\n  'border-end-end-radius': px,\n  // Margin properties\n  margin: px,\n  'margin-bottom': px,\n  'margin-left': px,\n  'margin-right': px,\n  'margin-top': px,\n  'margin-block': px,\n  'margin-block-end': px,\n  'margin-block-start': px,\n  'margin-inline': px,\n  'margin-inline-end': px,\n  'margin-inline-start': px,\n  // Padding properties\n  padding: px,\n  'padding-bottom': px,\n  'padding-left': px,\n  'padding-right': px,\n  'padding-top': px,\n  'padding-block': px,\n  'padding-block-end': px,\n  'padding-block-start': px,\n  'padding-inline': px,\n  'padding-inline-end': px,\n  'padding-inline-start': px,\n  // Mask properties\n  'mask-position-x': px,\n  'mask-position-y': px,\n  'mask-size': px,\n  // Width and height properties\n  height: px,\n  width: px,\n  'min-height': px,\n  'max-height': px,\n  'min-width': px,\n  'max-width': px,\n  // Position properties\n  bottom: px,\n  left: px,\n  top: px,\n  right: px,\n  inset: px,\n  'inset-block': px,\n  'inset-block-end': px,\n  'inset-block-start': px,\n  'inset-inline': px,\n  'inset-inline-end': px,\n  'inset-inline-start': px,\n  // Shadow properties\n  'box-shadow': px,\n  'text-shadow': px,\n  // Column properties\n  'column-gap': px,\n  'column-rule': px,\n  'column-rule-width': px,\n  'column-width': px,\n  // Font and text properties\n  'font-size': px,\n  'font-size-delta': px,\n  'letter-spacing': px,\n  'text-decoration-thickness': px,\n  'text-indent': px,\n  'text-stroke': px,\n  'text-stroke-width': px,\n  'word-spacing': px,\n  // Motion properties\n  motion: px,\n  'motion-offset': px,\n  // Outline properties\n  outline: px,\n  'outline-offset': px,\n  'outline-width': px,\n  // Perspective properties\n  perspective: px,\n  'perspective-origin-x': percent,\n  'perspective-origin-y': percent,\n  // Transform properties\n  'transform-origin': percent,\n  'transform-origin-x': percent,\n  'transform-origin-y': percent,\n  'transform-origin-z': percent,\n  // Transition properties\n  'transition-delay': ms,\n  'transition-duration': ms,\n  // Alignment properties\n  'vertical-align': px,\n  'flex-basis': px,\n  // Some random properties\n  'shape-margin': px,\n  size: px,\n  gap: px,\n  // Grid properties\n  grid: px,\n  'grid-gap': px,\n  'row-gap': px,\n  'grid-row-gap': px,\n  'grid-column-gap': px,\n  'grid-template-rows': px,\n  'grid-template-columns': px,\n  'grid-auto-rows': px,\n  'grid-auto-columns': px,\n  // Not existing properties.\n  // Used to avoid issues with jss-plugin-expand integration.\n  'box-shadow-x': px,\n  'box-shadow-y': px,\n  'box-shadow-blur': px,\n  'box-shadow-spread': px,\n  'font-line-height': px,\n  'text-shadow-x': px,\n  'text-shadow-y': px,\n  'text-shadow-blur': px\n};\n\n/**\n * Clones the object and adds a camel cased property version.\n */\nfunction addCamelCasedVersion(obj) {\n  var regExp = /(-[a-z])/g;\n\n  var replace = function replace(str) {\n    return str[1].toUpperCase();\n  };\n\n  var newObj = {};\n\n  for (var _key in obj) {\n    newObj[_key] = obj[_key];\n    newObj[_key.replace(regExp, replace)] = obj[_key];\n  }\n\n  return newObj;\n}\n\nvar units = addCamelCasedVersion(defaultUnits);\n/**\n * Recursive deep style passing function\n */\n\nfunction iterate(prop, value, options) {\n  if (value == null) return value;\n\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      value[i] = iterate(prop, value[i], options);\n    }\n  } else if (typeof value === 'object') {\n    if (prop === 'fallbacks') {\n      for (var innerProp in value) {\n        value[innerProp] = iterate(innerProp, value[innerProp], options);\n      }\n    } else {\n      for (var _innerProp in value) {\n        value[_innerProp] = iterate(prop + \"-\" + _innerProp, value[_innerProp], options);\n      }\n    } // eslint-disable-next-line no-restricted-globals\n\n  } else if (typeof value === 'number' && isNaN(value) === false) {\n    var unit = options[prop] || units[prop]; // Add the unit if available, except for the special case of 0px.\n\n    if (unit && !(value === 0 && unit === px)) {\n      return typeof unit === 'function' ? unit(value).toString() : \"\" + value + unit;\n    }\n\n    return value.toString();\n  }\n\n  return value;\n}\n/**\n * Add unit to numeric values.\n */\n\n\nfunction defaultUnit(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var camelCasedOptions = addCamelCasedVersion(options);\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n\n    for (var prop in style) {\n      style[prop] = iterate(prop, style[prop], camelCasedOptions);\n    }\n\n    return style;\n  }\n\n  function onChangeValue(value, prop) {\n    return iterate(prop, value, camelCasedOptions);\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default defaultUnit;\n","import isInBrowser from 'is-in-browser';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\n\n// Export javascript style and css style vendor prefixes.\nvar js = '';\nvar css = '';\nvar vendor = '';\nvar browser = '';\nvar isTouch = isInBrowser && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.\n\nif (isInBrowser) {\n  // Order matters. We need to check Webkit the last one because\n  // other vendors use to add Webkit prefixes to some properties\n  var jsCssMap = {\n    Moz: '-moz-',\n    ms: '-ms-',\n    O: '-o-',\n    Webkit: '-webkit-'\n  };\n\n  var _document$createEleme = document.createElement('p'),\n      style = _document$createEleme.style;\n\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      js = key;\n      css = jsCssMap[key];\n      break;\n    }\n  } // Correctly detect the Edge browser.\n\n\n  if (js === 'Webkit' && 'msHyphens' in style) {\n    js = 'ms';\n    css = jsCssMap.ms;\n    browser = 'edge';\n  } // Correctly detect the Safari browser.\n\n\n  if (js === 'Webkit' && '-apple-trailing-word' in style) {\n    vendor = 'apple';\n  }\n}\n/**\n * Vendor prefix string for the current browser.\n *\n * @type {{js: String, css: String, vendor: String, browser: String}}\n * @api public\n */\n\n\nvar prefix = {\n  js: js,\n  css: css,\n  vendor: vendor,\n  browser: browser,\n  isTouch: isTouch\n};\n\n/**\n * Test if a keyframe at-rule should be prefixed or not\n *\n * @param {String} vendor prefix string for the current browser.\n * @return {String}\n * @api public\n */\n\nfunction supportedKeyframes(key) {\n  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'\n  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.\n  // https://caniuse.com/#search=keyframes\n\n  if (prefix.js === 'ms') return key;\n  return \"@\" + prefix.css + \"keyframes\" + key.substr(10);\n}\n\n// https://caniuse.com/#search=appearance\n\nvar appearence = {\n  noPrefill: ['appearance'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'appearance') return false;\n    if (prefix.js === 'ms') return \"-webkit-\" + prop;\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=color-adjust\n\nvar colorAdjust = {\n  noPrefill: ['color-adjust'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'color-adjust') return false;\n    if (prefix.js === 'Webkit') return prefix.css + \"print-\" + prop;\n    return prop;\n  }\n};\n\nvar regExp = /[-\\s]+(.)?/g;\n/**\n * Replaces the letter with the capital letter\n *\n * @param {String} match\n * @param {String} c\n * @return {String}\n * @api private\n */\n\nfunction toUpper(match, c) {\n  return c ? c.toUpperCase() : '';\n}\n/**\n * Convert dash separated strings to camel-cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nfunction camelize(str) {\n  return str.replace(regExp, toUpper);\n}\n\n/**\n * Convert dash separated strings to pascal cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction pascalize(str) {\n  return camelize(\"-\" + str);\n}\n\n// but we can use a longhand property instead.\n// https://caniuse.com/#search=mask\n\nvar mask = {\n  noPrefill: ['mask'],\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^mask/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var longhand = 'mask-image';\n\n      if (camelize(longhand) in style) {\n        return prop;\n      }\n\n      if (prefix.js + pascalize(longhand) in style) {\n        return prefix.css + prop;\n      }\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=text-orientation\n\nvar textOrientation = {\n  noPrefill: ['text-orientation'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'text-orientation') return false;\n\n    if (prefix.vendor === 'apple' && !prefix.isTouch) {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=transform\n\nvar transform = {\n  noPrefill: ['transform'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transform') return false;\n\n    if (options.transform) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=transition\n\nvar transition = {\n  noPrefill: ['transition'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transition') return false;\n\n    if (options.transition) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=writing-mode\n\nvar writingMode = {\n  noPrefill: ['writing-mode'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'writing-mode') return false;\n\n    if (prefix.js === 'Webkit' || prefix.js === 'ms' && prefix.browser !== 'edge') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=user-select\n\nvar userSelect = {\n  noPrefill: ['user-select'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'user-select') return false;\n\n    if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=multicolumn\n// https://github.com/postcss/autoprefixer/issues/491\n// https://github.com/postcss/autoprefixer/issues/177\n\nvar breakPropsOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^break-/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var jsProp = \"WebkitColumn\" + pascalize(prop);\n      return jsProp in style ? prefix.css + \"column-\" + prop : false;\n    }\n\n    if (prefix.js === 'Moz') {\n      var _jsProp = \"page\" + pascalize(prop);\n\n      return _jsProp in style ? \"page-\" + prop : false;\n    }\n\n    return false;\n  }\n};\n\n// See https://github.com/postcss/autoprefixer/issues/324.\n\nvar inlineLogicalOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^(border|margin|padding)-inline/.test(prop)) return false;\n    if (prefix.js === 'Moz') return prop;\n    var newProp = prop.replace('-inline', '');\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\n// Camelization is required because we can't test using.\n// CSS syntax for e.g. in FF.\n\nvar unprefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    return camelize(prop) in style ? prop : false;\n  }\n};\n\nvar prefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.\n\n    if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.\n\n    if (prop[0] === '-' && prop[1] === '-') return prop;\n    if (prefix.js + pascalized in style) return prefix.css + prop; // Try webkit fallback.\n\n    if (prefix.js !== 'Webkit' && \"Webkit\" + pascalized in style) return \"-webkit-\" + prop;\n    return false;\n  }\n};\n\n// https://caniuse.com/#search=scroll-snap\n\nvar scrollSnap = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop.substring(0, 11) !== 'scroll-snap') return false;\n\n    if (prefix.js === 'ms') {\n      return \"\" + prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=overscroll-behavior\n\nvar overscrollBehavior = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'overscroll-behavior') return false;\n\n    if (prefix.js === 'ms') {\n      return prefix.css + \"scroll-chaining\";\n    }\n\n    return prop;\n  }\n};\n\nvar propMap = {\n  'flex-grow': 'flex-positive',\n  'flex-shrink': 'flex-negative',\n  'flex-basis': 'flex-preferred-size',\n  'justify-content': 'flex-pack',\n  order: 'flex-order',\n  'align-items': 'flex-align',\n  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.\n\n}; // Support old flex spec from 2012.\n\nvar flex2012 = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var newProp = propMap[prop];\n    if (!newProp) return false;\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\nvar propMap$1 = {\n  flex: 'box-flex',\n  'flex-grow': 'box-flex',\n  'flex-direction': ['box-orient', 'box-direction'],\n  order: 'box-ordinal-group',\n  'align-items': 'box-align',\n  'flex-flow': ['box-orient', 'box-direction'],\n  'justify-content': 'box-pack'\n};\nvar propKeys = Object.keys(propMap$1);\n\nvar prefixCss = function prefixCss(p) {\n  return prefix.css + p;\n}; // Support old flex spec from 2009.\n\n\nvar flex2009 = {\n  supportedProperty: function supportedProperty(prop, style, _ref) {\n    var multiple = _ref.multiple;\n\n    if (propKeys.indexOf(prop) > -1) {\n      var newProp = propMap$1[prop];\n\n      if (!Array.isArray(newProp)) {\n        return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n      }\n\n      if (!multiple) return false;\n\n      for (var i = 0; i < newProp.length; i++) {\n        if (!(prefix.js + pascalize(newProp[0]) in style)) {\n          return false;\n        }\n      }\n\n      return newProp.map(prefixCss);\n    }\n\n    return false;\n  }\n};\n\n// plugins = [\n//   ...plugins,\n//    breakPropsOld,\n//    inlineLogicalOld,\n//    unprefixed,\n//    prefixed,\n//    scrollSnap,\n//    flex2012,\n//    flex2009\n// ]\n// Plugins without 'noPrefill' value, going last.\n// 'flex-*' plugins should be at the bottom.\n// 'flex2009' going after 'flex2012'.\n// 'prefixed' going after 'unprefixed'\n\nvar plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];\nvar propertyDetectors = plugins.filter(function (p) {\n  return p.supportedProperty;\n}).map(function (p) {\n  return p.supportedProperty;\n});\nvar noPrefill = plugins.filter(function (p) {\n  return p.noPrefill;\n}).reduce(function (a, p) {\n  a.push.apply(a, _toConsumableArray(p.noPrefill));\n  return a;\n}, []);\n\nvar el;\nvar cache = {};\n\nif (isInBrowser) {\n  el = document.createElement('p'); // We test every property on vendor prefix requirement.\n  // Once tested, result is cached. It gives us up to 70% perf boost.\n  // http://jsperf.com/element-style-object-access-vs-plain-object\n  //\n  // Prefill cache with known css properties to reduce amount of\n  // properties we need to feature test at runtime.\n  // http://davidwalsh.name/vendor-prefix\n\n  var computed = window.getComputedStyle(document.documentElement, '');\n\n  for (var key$1 in computed) {\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(key$1)) cache[computed[key$1]] = computed[key$1];\n  } // Properties that cannot be correctly detected using the\n  // cache prefill method.\n\n\n  noPrefill.forEach(function (x) {\n    return delete cache[x];\n  });\n}\n/**\n * Test if a property is supported, returns supported property with vendor\n * prefix if required. Returns `false` if not supported.\n *\n * @param {String} prop dash separated\n * @param {Object} [options]\n * @return {String|Boolean}\n * @api public\n */\n\n\nfunction supportedProperty(prop, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // For server-side rendering.\n  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache[prop] != null) {\n    return cache[prop];\n  } // Check if 'transition' or 'transform' natively supported in browser.\n\n\n  if (prop === 'transition' || prop === 'transform') {\n    options[prop] = prop in el.style;\n  } // Find a plugin for current prefix property.\n\n\n  for (var i = 0; i < propertyDetectors.length; i++) {\n    cache[prop] = propertyDetectors[i](prop, el.style, options); // Break loop, if value found.\n\n    if (cache[prop]) break;\n  } // Reset styles for current property.\n  // Firefox can even throw an error for invalid properties, e.g., \"0\".\n\n\n  try {\n    el.style[prop] = '';\n  } catch (err) {\n    return false;\n  }\n\n  return cache[prop];\n}\n\nvar cache$1 = {};\nvar transitionProperties = {\n  transition: 1,\n  'transition-property': 1,\n  '-webkit-transition': 1,\n  '-webkit-transition-property': 1\n};\nvar transPropsRegExp = /(^\\s*[\\w-]+)|, (\\s*[\\w-]+)(?![^()]*\\))/g;\nvar el$1;\n/**\n * Returns prefixed value transition/transform if needed.\n *\n * @param {String} match\n * @param {String} p1\n * @param {String} p2\n * @return {String}\n * @api private\n */\n\nfunction prefixTransitionCallback(match, p1, p2) {\n  if (p1 === 'var') return 'var';\n  if (p1 === 'all') return 'all';\n  if (p2 === 'all') return ', all';\n  var prefixedValue = p1 ? supportedProperty(p1) : \", \" + supportedProperty(p2);\n  if (!prefixedValue) return p1 || p2;\n  return prefixedValue;\n}\n\nif (isInBrowser) el$1 = document.createElement('p');\n/**\n * Returns prefixed value if needed. Returns `false` if value is not supported.\n *\n * @param {String} property\n * @param {String} value\n * @return {String|Boolean}\n * @api public\n */\n\nfunction supportedValue(property, value) {\n  // For server-side rendering.\n  var prefixedValue = value;\n  if (!el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.\n  // We want only prefixable values here.\n  // eslint-disable-next-line no-restricted-globals\n\n  if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {\n    return prefixedValue;\n  } // Create cache key for current value.\n\n\n  var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache$1[cacheKey] != null) {\n    return cache$1[cacheKey];\n  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.\n\n\n  try {\n    // Test value as it is.\n    el$1.style[property] = prefixedValue;\n  } catch (err) {\n    // Return false if value not supported.\n    cache$1[cacheKey] = false;\n    return false;\n  } // If 'transition' or 'transition-property' property.\n\n\n  if (transitionProperties[property]) {\n    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);\n  } else if (el$1.style[property] === '') {\n    // Value with a vendor prefix.\n    prefixedValue = prefix.css + prefixedValue; // Hardcode test to convert \"flex\" to \"-ms-flexbox\" for IE10.\n\n    if (prefixedValue === '-ms-flex') el$1.style[property] = '-ms-flexbox'; // Test prefixed value.\n\n    el$1.style[property] = prefixedValue; // Return false if value not supported.\n\n    if (el$1.style[property] === '') {\n      cache$1[cacheKey] = false;\n      return false;\n    }\n  } // Reset styles for current property.\n\n\n  el$1.style[property] = ''; // Write current value to cache.\n\n  cache$1[cacheKey] = prefixedValue;\n  return cache$1[cacheKey];\n}\n\nexport { prefix, supportedKeyframes, supportedProperty, supportedValue };\n","import { supportedKeyframes, supportedValue, supportedProperty } from 'css-vendor';\nimport { toCssValue } from 'jss';\n\n/**\n * Add vendor prefix to a property name when needed.\n *\n * @api public\n */\n\nfunction jssVendorPrefixer() {\n  function onProcessRule(rule) {\n    if (rule.type === 'keyframes') {\n      var atRule = rule;\n      atRule.at = supportedKeyframes(atRule.at);\n    }\n  }\n\n  function prefixStyle(style) {\n    for (var prop in style) {\n      var value = style[prop];\n\n      if (prop === 'fallbacks' && Array.isArray(value)) {\n        style[prop] = value.map(prefixStyle);\n        continue;\n      }\n\n      var changeProp = false;\n      var supportedProp = supportedProperty(prop);\n      if (supportedProp && supportedProp !== prop) changeProp = true;\n      var changeValue = false;\n      var supportedValue$1 = supportedValue(supportedProp, toCssValue(value));\n      if (supportedValue$1 && supportedValue$1 !== value) changeValue = true;\n\n      if (changeProp || changeValue) {\n        if (changeProp) delete style[prop];\n        style[supportedProp || prop] = supportedValue$1 || value;\n      }\n    }\n\n    return style;\n  }\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n    return prefixStyle(style);\n  }\n\n  function onChangeValue(value, prop) {\n    return supportedValue(prop, toCssValue(value)) || value;\n  }\n\n  return {\n    onProcessRule: onProcessRule,\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssVendorPrefixer;\n","/**\n * Sort props by length.\n */\nfunction jssPropsSort() {\n  var sort = function sort(prop0, prop1) {\n    if (prop0.length === prop1.length) {\n      return prop0 > prop1 ? 1 : -1;\n    }\n\n    return prop0.length - prop1.length;\n  };\n\n  return {\n    onProcessStyle: function onProcessStyle(style, rule) {\n      if (rule.type !== 'style') return style;\n      var newStyle = {};\n      var props = Object.keys(style).sort(sort);\n\n      for (var i = 0; i < props.length; i++) {\n        newStyle[props[i]] = style[props[i]];\n      }\n\n      return newStyle;\n    }\n  };\n}\n\nexport default jssPropsSort;\n","import functions from 'jss-plugin-rule-value-function';\nimport global from 'jss-plugin-global';\nimport nested from 'jss-plugin-nested';\nimport camelCase from 'jss-plugin-camel-case';\nimport defaultUnit from 'jss-plugin-default-unit';\nimport vendorPrefixer from 'jss-plugin-vendor-prefixer';\nimport propsSort from 'jss-plugin-props-sort'; // Subset of jss-preset-default with only the plugins the Material-UI components are using.\n\nexport default function jssPreset() {\n  return {\n    plugins: [functions(), global(), nested(), camelCase(), defaultUnit(), // Disable the vendor prefixer server-side, it does nothing.\n    // This way, we can get a performance boost.\n    // In the documentation, we are using `autoprefixer` to solve this problem.\n    typeof window === 'undefined' ? null : vendorPrefixer(), propsSort()]\n  };\n}","// Used https://github.com/thinkloop/multi-key-cache as inspiration\nvar multiKeyStore = {\n  set: function set(cache, key1, key2, value) {\n    var subCache = cache.get(key1);\n\n    if (!subCache) {\n      subCache = new Map();\n      cache.set(key1, subCache);\n    }\n\n    subCache.set(key2, value);\n  },\n  get: function get(cache, key1, key2) {\n    var subCache = cache.get(key1);\n    return subCache ? subCache.get(key2) : undefined;\n  },\n  delete: function _delete(cache, key1, key2) {\n    var subCache = cache.get(key1);\n    subCache.delete(key2);\n  }\n};\nexport default multiKeyStore;","/* eslint-disable import/prefer-default-export */\n// Global index counter to preserve source order.\n// We create the style sheet during the creation of the component,\n// children are handled after the parents, so the order of style elements would be parent->child.\n// It is a problem though when a parent passes a className\n// which needs to override any child's styles.\n// StyleSheet of the child has a higher specificity, because of the source order.\n// So our solution is to render sheets them in the reverse order child->sheet, so\n// that parent has a higher specificity.\nvar indexCounter = -1e9;\nexport function increment() {\n  indexCounter += 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (indexCounter >= 0) {\n      console.warn(['Material-UI: You might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join('\\n'));\n    }\n  }\n\n  return indexCounter;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { deepmerge } from '@material-ui/utils';\nimport noopTheme from './noopTheme';\nexport default function getStylesCreator(stylesOrCreator) {\n  var themingEnabled = typeof stylesOrCreator === 'function';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (_typeof(stylesOrCreator) !== 'object' && !themingEnabled) {\n      console.error(['Material-UI: The `styles` argument provided is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\\n'));\n    }\n  }\n\n  return {\n    create: function create(theme, name) {\n      var styles;\n\n      try {\n        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (themingEnabled === true && theme === noopTheme) {\n            // TODO: prepend error message/name instead\n            console.error(['Material-UI: The `styles` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n          }\n        }\n\n        throw err;\n      }\n\n      if (!name || !theme.overrides || !theme.overrides[name]) {\n        return styles;\n      }\n\n      var overrides = theme.overrides[name];\n\n      var stylesWithOverrides = _extends({}, styles);\n\n      Object.keys(overrides).forEach(function (key) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!stylesWithOverrides[key]) {\n            console.warn(['Material-UI: You are trying to override a style that does not exist.', \"Fix the `\".concat(key, \"` key of `theme.overrides.\").concat(name, \"`.\")].join('\\n'));\n          }\n        }\n\n        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key], overrides[key]);\n      });\n      return stylesWithOverrides;\n    },\n    options: {}\n  };\n}","// We use the same empty object to ref count the styles that don't need a theme object.\nvar noopTheme = {};\nexport default noopTheme;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getDynamicStyles } from 'jss';\nimport mergeClasses from '../mergeClasses';\nimport multiKeyStore from './multiKeyStore';\nimport useTheme from '../useTheme';\nimport { StylesContext } from '../StylesProvider';\nimport { increment } from './indexCounter';\nimport getStylesCreator from '../getStylesCreator';\nimport noopTheme from '../getStylesCreator/noopTheme';\n\nfunction getClasses(_ref, classes, Component) {\n  var state = _ref.state,\n      stylesOptions = _ref.stylesOptions;\n\n  if (stylesOptions.disableGeneration) {\n    return classes || {};\n  }\n\n  if (!state.cacheClasses) {\n    state.cacheClasses = {\n      // Cache for the finalized classes value.\n      value: null,\n      // Cache for the last used classes prop pointer.\n      lastProp: null,\n      // Cache for the last used rendered classes pointer.\n      lastJSS: {}\n    };\n  } // Tracks if either the rendered classes or classes prop has changed,\n  // requiring the generation of a new finalized classes object.\n\n\n  var generate = false;\n\n  if (state.classes !== state.cacheClasses.lastJSS) {\n    state.cacheClasses.lastJSS = state.classes;\n    generate = true;\n  }\n\n  if (classes !== state.cacheClasses.lastProp) {\n    state.cacheClasses.lastProp = classes;\n    generate = true;\n  }\n\n  if (generate) {\n    state.cacheClasses.value = mergeClasses({\n      baseClasses: state.cacheClasses.lastJSS,\n      newClasses: classes,\n      Component: Component\n    });\n  }\n\n  return state.cacheClasses.value;\n}\n\nfunction attach(_ref2, props) {\n  var state = _ref2.state,\n      theme = _ref2.theme,\n      stylesOptions = _ref2.stylesOptions,\n      stylesCreator = _ref2.stylesCreator,\n      name = _ref2.name;\n\n  if (stylesOptions.disableGeneration) {\n    return;\n  }\n\n  var sheetManager = multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme);\n\n  if (!sheetManager) {\n    sheetManager = {\n      refs: 0,\n      staticSheet: null,\n      dynamicStyles: null\n    };\n    multiKeyStore.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);\n  }\n\n  var options = _extends({}, stylesCreator.options, stylesOptions, {\n    theme: theme,\n    flip: typeof stylesOptions.flip === 'boolean' ? stylesOptions.flip : theme.direction === 'rtl'\n  });\n\n  options.generateId = options.serverGenerateClassName || options.generateClassName;\n  var sheetsRegistry = stylesOptions.sheetsRegistry;\n\n  if (sheetManager.refs === 0) {\n    var staticSheet;\n\n    if (stylesOptions.sheetsCache) {\n      staticSheet = multiKeyStore.get(stylesOptions.sheetsCache, stylesCreator, theme);\n    }\n\n    var styles = stylesCreator.create(theme, name);\n\n    if (!staticSheet) {\n      staticSheet = stylesOptions.jss.createStyleSheet(styles, _extends({\n        link: false\n      }, options));\n      staticSheet.attach();\n\n      if (stylesOptions.sheetsCache) {\n        multiKeyStore.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);\n      }\n    }\n\n    if (sheetsRegistry) {\n      sheetsRegistry.add(staticSheet);\n    }\n\n    sheetManager.staticSheet = staticSheet;\n    sheetManager.dynamicStyles = getDynamicStyles(styles);\n  }\n\n  if (sheetManager.dynamicStyles) {\n    var dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, _extends({\n      link: true\n    }, options));\n    dynamicSheet.update(props);\n    dynamicSheet.attach();\n    state.dynamicSheet = dynamicSheet;\n    state.classes = mergeClasses({\n      baseClasses: sheetManager.staticSheet.classes,\n      newClasses: dynamicSheet.classes\n    });\n\n    if (sheetsRegistry) {\n      sheetsRegistry.add(dynamicSheet);\n    }\n  } else {\n    state.classes = sheetManager.staticSheet.classes;\n  }\n\n  sheetManager.refs += 1;\n}\n\nfunction update(_ref3, props) {\n  var state = _ref3.state;\n\n  if (state.dynamicSheet) {\n    state.dynamicSheet.update(props);\n  }\n}\n\nfunction detach(_ref4) {\n  var state = _ref4.state,\n      theme = _ref4.theme,\n      stylesOptions = _ref4.stylesOptions,\n      stylesCreator = _ref4.stylesCreator;\n\n  if (stylesOptions.disableGeneration) {\n    return;\n  }\n\n  var sheetManager = multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme);\n  sheetManager.refs -= 1;\n  var sheetsRegistry = stylesOptions.sheetsRegistry;\n\n  if (sheetManager.refs === 0) {\n    multiKeyStore.delete(stylesOptions.sheetsManager, stylesCreator, theme);\n    stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);\n\n    if (sheetsRegistry) {\n      sheetsRegistry.remove(sheetManager.staticSheet);\n    }\n  }\n\n  if (state.dynamicSheet) {\n    stylesOptions.jss.removeStyleSheet(state.dynamicSheet);\n\n    if (sheetsRegistry) {\n      sheetsRegistry.remove(state.dynamicSheet);\n    }\n  }\n}\n\nfunction useSynchronousEffect(func, values) {\n  var key = React.useRef([]);\n  var output; // Store \"generation\" key. Just returns a new object every time\n\n  var currentKey = React.useMemo(function () {\n    return {};\n  }, values); // eslint-disable-line react-hooks/exhaustive-deps\n  // \"the first render\", or \"memo dropped the value\"\n\n  if (key.current !== currentKey) {\n    key.current = currentKey;\n    output = func();\n  }\n\n  React.useEffect(function () {\n    return function () {\n      if (output) {\n        output();\n      }\n    };\n  }, [currentKey] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n}\n\nexport default function makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var name = options.name,\n      classNamePrefixOption = options.classNamePrefix,\n      Component = options.Component,\n      _options$defaultTheme = options.defaultTheme,\n      defaultTheme = _options$defaultTheme === void 0 ? noopTheme : _options$defaultTheme,\n      stylesOptions2 = _objectWithoutProperties(options, [\"name\", \"classNamePrefix\", \"Component\", \"defaultTheme\"]);\n\n  var stylesCreator = getStylesCreator(stylesOrCreator);\n  var classNamePrefix = name || classNamePrefixOption || 'makeStyles';\n  stylesCreator.options = {\n    index: increment(),\n    name: name,\n    meta: classNamePrefix,\n    classNamePrefix: classNamePrefix\n  };\n\n  var useStyles = function useStyles() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var theme = useTheme() || defaultTheme;\n\n    var stylesOptions = _extends({}, React.useContext(StylesContext), stylesOptions2);\n\n    var instance = React.useRef();\n    var shouldUpdate = React.useRef();\n    useSynchronousEffect(function () {\n      var current = {\n        name: name,\n        state: {},\n        stylesCreator: stylesCreator,\n        stylesOptions: stylesOptions,\n        theme: theme\n      };\n      attach(current, props);\n      shouldUpdate.current = false;\n      instance.current = current;\n      return function () {\n        detach(current);\n      };\n    }, [theme, stylesCreator]);\n    React.useEffect(function () {\n      if (shouldUpdate.current) {\n        update(instance.current, props);\n      }\n\n      shouldUpdate.current = true;\n    });\n    var classes = getClasses(instance.current, props.classes, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue(classes);\n    }\n\n    return classes;\n  };\n\n  return useStyles;\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var activatedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(function () {\n      activatedRef.current = true;\n    }, 0);\n    return function () {\n      activatedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : {},\n    children: props.children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import nested from '../ThemeProvider/nested';\n/**\n * This is the list of the style rule name we use as drop in replacement for the built-in\n * pseudo classes (:checked, :disabled, :focused, etc.).\n *\n * Why do they exist in the first place?\n * These classes are used at a specificity of 2.\n * It allows them to override previously definied styles as well as\n * being untouched by simple user overrides.\n */\n\nvar pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected']; // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nexport default function createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$disableGloba = options.disableGlobal,\n      disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var seedPrefix = seed === '' ? '' : \"\".concat(seed, \"-\");\n  var ruleCounter = 0;\n\n  var getNextCounterId = function getNextCounterId() {\n    ruleCounter += 1;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (ruleCounter >= 1e10) {\n        console.warn(['Material-UI: You might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join(''));\n      }\n    }\n\n    return ruleCounter;\n  };\n\n  return function (rule, styleSheet) {\n    var name = styleSheet.options.name; // Is a global static MUI style?\n\n    if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {\n      // We can use a shorthand class name, we never use the keys to style the components.\n      if (pseudoClasses.indexOf(rule.key) !== -1) {\n        return \"Mui-\".concat(rule.key);\n      }\n\n      var prefix = \"\".concat(seedPrefix).concat(name, \"-\").concat(rule.key);\n\n      if (!styleSheet.options.theme[nested] || seed !== '') {\n        return prefix;\n      }\n\n      return \"\".concat(prefix, \"-\").concat(getNextCounterId());\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());\n    }\n\n    var suffix = \"\".concat(rule.key, \"-\").concat(getNextCounterId()); // Help with debuggability.\n\n    if (styleSheet.options.classNamePrefix) {\n      return \"\".concat(seedPrefix).concat(styleSheet.options.classNamePrefix, \"-\").concat(suffix);\n    }\n\n    return \"\".concat(seedPrefix).concat(suffix);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport createGenerateClassName from '../createGenerateClassName';\nimport { create } from 'jss';\nimport jssPreset from '../jssPreset'; // Default JSS instance.\n\nvar jss = create(jssPreset()); // Use a singleton or the provided one by the context.\n//\n// The counter-based approach doesn't tolerate any mistake.\n// It's much safer to use the same counter everywhere.\n\nvar generateClassName = createGenerateClassName(); // Exported for test purposes\n\nexport var sheetsManager = new Map();\nvar defaultOptions = {\n  disableGeneration: false,\n  generateClassName: generateClassName,\n  jss: jss,\n  sheetsCache: null,\n  sheetsManager: sheetsManager,\n  sheetsRegistry: null\n};\nexport var StylesContext = React.createContext(defaultOptions);\n\nif (process.env.NODE_ENV !== 'production') {\n  StylesContext.displayName = 'StylesContext';\n}\n\nvar injectFirstNode;\nexport default function StylesProvider(props) {\n  var children = props.children,\n      _props$injectFirst = props.injectFirst,\n      injectFirst = _props$injectFirst === void 0 ? false : _props$injectFirst,\n      _props$disableGenerat = props.disableGeneration,\n      disableGeneration = _props$disableGenerat === void 0 ? false : _props$disableGenerat,\n      localOptions = _objectWithoutProperties(props, [\"children\", \"injectFirst\", \"disableGeneration\"]);\n\n  var outerOptions = React.useContext(StylesContext);\n\n  var context = _extends({}, outerOptions, {\n    disableGeneration: disableGeneration\n  }, localOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'undefined' && !context.sheetsManager) {\n      console.error('Material-UI: You need to use the ServerStyleSheets API when rendering on the server.');\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (context.jss.options.insertionPoint && injectFirst) {\n      console.error('Material-UI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.');\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (injectFirst && localOptions.jss) {\n      console.error('Material-UI: You cannot use the jss and injectFirst props at the same time.');\n    }\n  }\n\n  if (!context.jss.options.insertionPoint && injectFirst && typeof window !== 'undefined') {\n    if (!injectFirstNode) {\n      var head = document.head;\n      injectFirstNode = document.createComment('mui-inject-first');\n      head.insertBefore(injectFirstNode, head.firstChild);\n    }\n\n    context.jss = create({\n      plugins: jssPreset().plugins,\n      insertionPoint: injectFirstNode\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StylesContext.Provider, {\n    value: context\n  }, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * You can disable the generation of the styles with this option.\n   * It can be useful when traversing the React tree outside of the HTML\n   * rendering step on the server.\n   * Let's say you are using react-apollo to extract all\n   * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.\n   */\n  disableGeneration: PropTypes.bool,\n\n  /**\n   * JSS's class name generator.\n   */\n  generateClassName: PropTypes.func,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override Material-UI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool,\n\n  /**\n   * JSS's instance.\n   */\n  jss: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  serverGenerateClassName: PropTypes.func,\n\n  /**\n   * @ignore\n   *\n   * Beta feature.\n   *\n   * Cache for the sheets.\n   */\n  sheetsCache: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * The sheetsManager is used to deduplicate style sheet injection in the page.\n   * It's deduplicating using the (theme, styles) couple.\n   * On the server, you should provide a new instance for each request.\n   */\n  sheetsManager: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * Collect the sheets.\n   */\n  sheetsRegistry: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = exactProp(StylesProvider.propTypes) : void 0;\n}","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\nexport function createUnarySpacing(theme) {\n  var themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(\"Material-UI: Expected spacing argument to be a number, got \".concat(abs, \".\"));\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (abs > themeSpacing.length - 1) {\n          console.error([\"Material-UI: The value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([\"Material-UI: The `theme.spacing` value (\".concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = createUnarySpacing(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;"],"sourceRoot":""}