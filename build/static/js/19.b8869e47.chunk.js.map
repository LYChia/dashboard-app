{"version":3,"sources":["components/NoContent.tsx","components/layouts/PageLayout.tsx","pages/dashboard-pages/Network.tsx"],"names":["NoContent","props","theme","useTheme","desktopMode","useMediaQuery","breakpoints","up","Icon","message","fontRatio","style","width","height","textAlign","container","direction","justifyContent","alignItems","fontSize","color","getModeColor","marginTop","PageLayout","largeDesktopMode","className","showSideInfo","children","elevation","sideInfo","sortDevicesFormula","a","b","ip","compareIpByDevicePart","name","NAME_MOBILE_WIDTH","DEFAULT_FONT_RATION","NAME_DESKTOP_WIDTH","NetworkDesktopLayout","component","Paper","stickyHeader","title","align","mac","vendor","devices","map","device","content","NetworkMobileLayout","titleFontSize","textFontSize","margin","padding","marginBottom","palette","text","hint","Network","t","useTranslation","wideDesktopMode","useData","devicesService","loading","useState","saving","setSaving","filteredDevices","setFilteredDevices","editNameMode","setEditNameMode","lastName","setDevice","ApiFacade","DevicesApi","setDeviceName","postNewData","handleServerRestError","useEffect","searchString","searchText","trim","toLowerCase","filter","d","includes","sort","calcDevicesFilter","length","RouterIcon","NetworkLayout","editName","setEditName","nameCellWidth","minWidth","textOverflow","overflowWrap","disabled","variant","value","undefined","onChange","e","target","onClick","marginLeft","size","thickness","setName"],"mappings":"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","file":"static/js/19.b8869e47.chunk.js","sourcesContent":["import { Grid, Theme, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { getModeColor } from \"../logic/common/themeUtils\";\n\ninterface NoContentProps {\n\tfontRatio?: number;\n\tIcon: any;\n\tmessage: string;\n}\n\n/**\n * Generic 'no content' component to show for empty pages\n */\nexport function NoContent(props: NoContentProps) {\n\tconst theme = useTheme();\n\tconst desktopMode = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\n\n\tconst { Icon, message } = props;\n\tconst fontRatio = props.fontRatio || (desktopMode ? 50 : 35);\n\n\treturn <Grid\n\t\tstyle={{ width: '100%', height: '100%', textAlign: 'center' }}\n\t\tcontainer\n\t\tdirection=\"column\"\n\t\tjustifyContent=\"center\"\n\t\talignItems=\"center\"\n\t>\n\t\t<div>\n\t\t\t<Icon style={{ fontSize: fontRatio * 5, color: getModeColor(false, theme) }} />\n\t\t</div>\n\t\t<Typography style={{ fontSize: fontRatio * 0.9, marginTop: fontRatio * 0.5, color: getModeColor(false, theme) }} >{message}</Typography>\n\t</Grid>\n}","import { Paper, Theme, useMediaQuery } from \"@material-ui/core\";\nimport '../../theme/styles/layout/pageWithSideInfoLayout.scss';\n\ninterface PageLayoutProps {\n\t/** Page content */\n\tchildren: JSX.Element;\n\t/** Side info component */\n\tsideInfo?: JSX.Element;\n\t/** Whenever to show the Side info */\n\tshowSideInfo?: boolean;\n}\n\n/**\n * Dashboard page layout.\n * The layout contain creating fixed size of page content with scroll in case of overflow and as option \n * \"sideinfo\" with opening/closing smooth animation.\n * @param props The @see PageLayoutProps props\n */\nexport function PageLayout(props: PageLayoutProps) {\n\tconst largeDesktopMode = useMediaQuery((theme: Theme) => theme.breakpoints.up('md'));\n\tconst desktopMode = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\n\n\treturn <div className=\"page-container\">\n\t\t{/* Show page content only if side-info is hidden *or* it's very wide screen */}\n\t\t{<div className={`main-page-area ${props.showSideInfo && '---page-side-info-enabled'} ${!largeDesktopMode && props.showSideInfo && '--hide-main-page-area'}`}>\n\t\t\t{/* The page container */}\n\t\t\t<div className={`main-page-container ${!desktopMode && '--mobile'}`}>\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t</div>}\n\t\t{/* If side info should be shown, show it */}\n\t\t{<div className={`page-side-info-area-container ${props.showSideInfo && '--page-side-info-enabled'} ${!largeDesktopMode && '--small-screen'}`}>\n\t\t\t<Paper elevation={3} className=\"page-side-full-info-card\" >\n\t\t\t\t{props.sideInfo}\n\t\t\t</Paper>\n\t\t</div>}\n\t</div>;\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { CircularProgress, Grid, IconButton, TextField, Theme, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { devicesService } from '../../services/devices.service';\nimport { LocalNetworkDevice } from '../../infrastructure/generated/api';\nimport { ComponentType, useEffect, useState } from 'react';\nimport { handleServerRestError } from '../../services/notifications.service';\nimport { Loader } from '../../components/Loader';\nimport { compareIpByDevicePart } from '../../infrastructure/utils';\nimport { useTranslation } from 'react-i18next';\nimport { ThemeTooltip } from '../../components/global/ThemeTooltip';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { DEFAULT_FONT_RATION } from '../../infrastructure/consts';\nimport { ApiFacade } from '../../infrastructure/generated/proxies/api-proxies';\nimport { DashboardPageInjectProps } from '../Dashboard';\nimport { NoContent } from '../../components/NoContent';\nimport RouterIcon from '@material-ui/icons/Router';\nimport { marginLeft } from '../../logic/common/themeUtils';\nimport { useData } from '../../hooks/useData';\nimport { PageLayout } from '../../components/layouts/PageLayout';\n\n/**\n * The sort formula for sorting devices by ip -> name\n */\nfunction sortDevicesFormula(a: LocalNetworkDevice, b: LocalNetworkDevice): number {\n\tif (a.ip && b.ip) {\n\t\treturn compareIpByDevicePart(a.ip, b.ip);\n\t}\n\n\tif (a.ip) {\n\t\treturn -1;\n\t}\n\n\tif (b.ip) {\n\t\treturn 1;\n\t}\n\n\treturn (a.name || '') < (b.name || '') ? -1 : 1;\n}\n\nconst NAME_CONTROLS_WIDTH = 45;\nconst NAME_MOBILE_WIDTH = DEFAULT_FONT_RATION * 8;\nconst NAME_DESKTOP_WIDTH = DEFAULT_FONT_RATION * 15;\n\ninterface NetworkComponentProps {\n\tdevice: LocalNetworkDevice;\n}\n\ninterface NetworkComponent {\n\ttitle: string;\n\tcontent: ComponentType<NetworkComponentProps>;\n}\n\ninterface NetworkLayoutProps {\n\tdevices: LocalNetworkDevice[];\n\tname: NetworkComponent;\n\tmac: NetworkComponent;\n\tip: NetworkComponent;\n\tvendor: NetworkComponent;\n}\n\n/**\n * The network devices page desktop layout\n */\nfunction NetworkDesktopLayout(props: NetworkLayoutProps) {\n\treturn <TableContainer component={Paper}>\n\t\t<Table stickyHeader>\n\t\t\t<TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t\t<TableCell >{props.name.title}</TableCell>\n\t\t\t\t\t<TableCell align=\"center\">{props.mac.title}</TableCell>\n\t\t\t\t\t<TableCell align=\"center\">{props.ip.title}</TableCell>\n\t\t\t\t\t<TableCell align=\"center\">{props.vendor.title}</TableCell>\n\t\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t\t<TableBody >\n\t\t\t\t{props.devices.map((device) => (\n\t\t\t\t\t<TableRow\n\t\t\t\t\t\tkey={device.mac}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableCell ><props.name.content device={device} /></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\"><props.mac.content device={device} /></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\"><props.ip.content device={device} /></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\"><props.vendor.content device={device} /></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</TableBody>\n\t\t</Table>\n\t</TableContainer>\n}\n\n/**\n * The network devices page mobile layout\n */\nfunction NetworkMobileLayout(props: NetworkLayoutProps) {\n\tconst theme = useTheme();\n\n\tconst titleFontSize = DEFAULT_FONT_RATION * 0.5;\n\tconst textFontSize = DEFAULT_FONT_RATION * 0.7;\n\n\treturn <Grid\n\t\tcontainer\n\t\tdirection=\"column\"\n\t\tjustifyContent=\"center\"\n\t\talignItems=\"stretch\"\n\t>\n\t\t{props.devices.map(device =>\n\t\t\t<Paper elevation={3} style={{ margin: DEFAULT_FONT_RATION }}>\n\t\t\t\t<Grid\n\t\t\t\t\tstyle={{ padding: DEFAULT_FONT_RATION }}\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\talignItems=\"stretch\"\n\t\t\t\t>\n\t\t\t\t\t{/* On the first row, show the editable device name */}\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tstyle={{ width: '100%', marginBottom: DEFAULT_FONT_RATION * 0.5 }}\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustifyContent=\"flex-start\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography style={{ fontSize: titleFontSize, width: '100%', color: theme.palette.text.hint }} >{props.name.title}</Typography>\n\t\t\t\t\t\t<div style={{ fontSize: textFontSize, width: '100%' }} ><props.name.content device={device} /></div>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{/* On the second row, show the mac & IP */}\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tstyle={{ width: '100%', marginBottom: DEFAULT_FONT_RATION * 0.5 }}\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustifyContent=\"space-between\"\n\t\t\t\t\t\talignItems=\"flex-end\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography style={{ fontSize: titleFontSize, color: theme.palette.text.hint }} >{props.ip.title}</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography style={{ fontSize: textFontSize }} ><props.ip.content device={device} /></Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography style={{ fontSize: titleFontSize, color: theme.palette.text.hint }} >{props.mac.title}</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography style={{ fontSize: textFontSize }} ><props.mac.content device={device} /></Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{/* On the last row, show the vendor name */}\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustifyContent=\"flex-start\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography style={{ fontSize: titleFontSize, width: '100%', color: theme.palette.text.hint }} >{props.vendor.title}</Typography>\n\t\t\t\t\t\t<Typography style={{ fontSize: textFontSize }} ><props.vendor.content device={device} /></Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t)\n\t\t}\n\t</Grid >\n}\n\nexport default function Network(props: DashboardPageInjectProps) {\n\tconst { t } = useTranslation();\n\tconst theme = useTheme();\n\tconst wideDesktopMode = useMediaQuery((theme: Theme) => theme.breakpoints.up('md'));\n\tconst [devices, loading] = useData(devicesService, []);\n\n\tconst [saving, setSaving] = useState<boolean>(false);\n\tconst [filteredDevices, setFilteredDevices] = useState<LocalNetworkDevice[]>([]);\n\tconst [editNameMode, setEditNameMode] = useState<string>('');\n\n\tuseEffect(() => {\n\t\t// every time the devices collection has changed or the search term changed, re-calc the filtered minions\n\t\tcalcDevicesFilter(devices);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [devices, props.searchText]);\n\n\tfunction calcDevicesFilter(devices: LocalNetworkDevice[]) {\n\t\tconst searchString = props.searchText?.trim().toLowerCase() || '';\n\t\t// In case of empty search term, \"clone\" collection anyway to avoid sort cache issue\n\t\tconst filteredDevices = !searchString ? [...devices] : devices.filter(d => {\n\t\t\t// If the name match, return true\n\t\t\tif (d.name?.toLowerCase().includes(searchString)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (d.mac?.toLowerCase().includes(searchString)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (d.ip?.toLowerCase().includes(searchString)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (d.vendor?.toLowerCase().includes(searchString)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tsetFilteredDevices(filteredDevices.sort(sortDevicesFormula));\n\t}\n\n\tfunction selectNameToEdit(device: LocalNetworkDevice) {\n\t\tsetEditNameMode(device.mac);\n\t}\n\n\tasync function setName(device: LocalNetworkDevice, name: string) {\n\t\tsetSaving(true);\n\t\tconst lastName = device.name;\n\t\ttry {\n\t\t\t// Create \"new\" device instance with the new name\n\t\t\tconst setDevice = { ...device, name };\n\t\t\t// Update current view device name\n\t\t\tdevice.name = setDevice.name;\n\t\t\tawait ApiFacade.DevicesApi.setDeviceName(setDevice, device.mac);\n\t\t\tdevicesService.postNewData(devices);\n\t\t} catch (error) {\n\t\t\t// Once change failure, revert the name change\n\t\t\tdevice.name = lastName;\n\t\t\thandleServerRestError(error);\n\t\t}\n\t\tsetSaving(false);\n\t\t// Reset edit name input\n\t\tsetEditNameMode('');\n\t}\n\n\tif (loading) {\n\t\treturn <Loader />;\n\t}\n\n\t// If there are no any device, show proper message\n\tif (devices.length === 0) {\n\t\treturn <NoContent Icon={RouterIcon} message={t('dashboard.network.no.devices.message')} />\n\t}\n\n\t// If there are no any device match the search, show proper message\n\tif (filteredDevices.length === 0) {\n\t\treturn <NoContent Icon={RouterIcon} message={t('dashboard.network.no.devices.match.message')} />\n\t}\n\n\n\tfunction NameComponent(props: NetworkComponentProps) {\n\t\tconst [editName, setEditName] = useState<string>();\n\n\t\tconst nameCellWidth = wideDesktopMode ? NAME_DESKTOP_WIDTH : NAME_MOBILE_WIDTH;\n\n\t\treturn <Grid\n\t\t\tstyle={{ minWidth: nameCellWidth, width: '100%' }}\n\t\t\tcontainer\n\t\t\tdirection=\"row\"\n\t\t\tjustifyContent=\"flex-start\"\n\t\t\talignItems=\"center\"\n\t\t>\n\t\t\t{editNameMode !== props.device.mac && <div style={{\n\t\t\t\t// Show all over the width, but give some space for the edit button\n\t\t\t\twidth: `calc(100% - ${NAME_CONTROLS_WIDTH}px)`,\n\t\t\t}}>\n\t\t\t\t<Typography style={{\n\t\t\t\t\twidth: wideDesktopMode ? nameCellWidth - NAME_CONTROLS_WIDTH : '100%',\n\t\t\t\t\ttextOverflow: 'clip',\n\t\t\t\t\toverflowWrap: 'break-word'\n\t\t\t\t}}>\n\t\t\t\t\t{props.device.name}\n\t\t\t\t</Typography>\n\t\t\t</div>}\n\t\t\t{/* On edit mode, show the name within the text input */}\n\t\t\t{editNameMode === props.device.mac && <TextField\n\t\t\t\t// Show all over the width, but give some space for the save/cancel/loading\n\t\t\t\tstyle={{ width: `calc(100% - ${NAME_CONTROLS_WIDTH}px)` }}\n\t\t\t\tdisabled={saving}\n\t\t\t\tvariant=\"standard\"\n\t\t\t\tvalue={editName === undefined ? props.device.name : editName}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetEditName(e.target.value);\n\t\t\t\t}}\n\t\t\t/>}\n\t\t\t{/* The edit button, show when not in edit mode */}\n\t\t\t{editNameMode !== props.device.mac && <div>\n\t\t\t\t<ThemeTooltip title={<span>{t('global.edit')}</span>} >\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={saving}\n\t\t\t\t\t\tonClick={() => selectNameToEdit(props.device)}\n\t\t\t\t\t\tcolor=\"inherit\">\n\t\t\t\t\t\t<EditIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</ThemeTooltip>\n\t\t\t</div>}\n\t\t\t{/* On edit mode, the edit controls container (edit, save, loading etc) */}\n\t\t\t{editNameMode === props.device.mac && <div\n\t\t\t\tstyle={{ [marginLeft(theme)]: DEFAULT_FONT_RATION * 0.4 }}\n\t\t\t>\n\t\t\t\t{saving && <CircularProgress size={DEFAULT_FONT_RATION * 1.85} thickness={8} />}\n\t\t\t\t{!saving && <Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ThemeTooltip title={<span>{t('global.save')}</span>} >\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tstyle={{ padding: DEFAULT_FONT_RATION * 0.15 }}\n\t\t\t\t\t\t\t\tonClick={() => { setName(props.device, editName || ''); }}\n\t\t\t\t\t\t\t\tcolor=\"inherit\">\n\t\t\t\t\t\t\t\t<SaveIcon style={{ fontSize: DEFAULT_FONT_RATION * 0.8 }} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ThemeTooltip>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ThemeTooltip title={<span>{t('global.cancel')}</span>} >\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tstyle={{ padding: DEFAULT_FONT_RATION * 0.15 }}\n\t\t\t\t\t\t\t\tonClick={() => { setEditNameMode(''); }}\n\t\t\t\t\t\t\t\tcolor=\"inherit\">\n\t\t\t\t\t\t\t\t<CloseIcon style={{ fontSize: DEFAULT_FONT_RATION * 0.8 }} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ThemeTooltip>\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>}\n\t\t\t</div>}\n\t\t</Grid>;\n\t}\n\n\tfunction MACComponent(props: NetworkComponentProps) {\n\t\treturn <div>{props.device.mac}</div>;\n\t}\n\n\tfunction IPComponent(props: NetworkComponentProps) {\n\t\treturn <div>{props.device.ip}</div>;\n\t}\n\n\tfunction VendorComponent(props: NetworkComponentProps) {\n\t\treturn <div>{props.device.vendor}</div>;\n\t}\n\n\tconst NetworkLayout = wideDesktopMode ? NetworkDesktopLayout : NetworkMobileLayout;\n\n\treturn <PageLayout>\n\t\t<NetworkLayout\n\t\t\tdevices={filteredDevices}\n\t\t\tname={{\n\t\t\t\ttitle: t('dashboard.network.device.name'),\n\t\t\t\tcontent: NameComponent\n\t\t\t}}\n\t\t\tmac={{\n\t\t\t\ttitle: t('dashboard.network.device.mac'),\n\t\t\t\tcontent: MACComponent\n\t\t\t}}\n\t\t\tip={{\n\t\t\t\ttitle: t('dashboard.network.device.ip'),\n\t\t\t\tcontent: IPComponent\n\t\t\t}}\n\t\t\tvendor={{\n\t\t\t\ttitle: t('dashboard.network.device.vendor'),\n\t\t\t\tcontent: VendorComponent\n\t\t\t}}\n\t\t/>\n\t</PageLayout>;\n}"],"sourceRoot":""}