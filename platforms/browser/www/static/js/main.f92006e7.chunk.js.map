{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","React","useState","Date","selectedDate","setSelectedDate","handleDateChange","date","className","src","logo","alt","CircularProgress","utils","DateFnsUtils","Grid","container","justifyContent","disableToolbar","variant","format","margin","id","label","value","onChange","KeyboardButtonProps","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","startApp","ReactDOM","render","StrictMode","document","getElementById","window","cordova","addEventListener"],"mappings":"0LAAe,MAA0B,iC,oEC8E1BA,MArEf,WAEC,MAAwCC,IAAMC,SAC7C,IAAIC,KAAK,wBADV,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAmB,SAACC,GACzBF,EAAgBE,IAGjB,OACC,qBAAKC,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAACC,EAAA,EAAD,IACA,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACC,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,eAA/B,UACC,cAAC,IAAD,CACCC,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACPC,OAAO,SACPC,GAAG,qBACHC,MAAM,qBACNC,MAAOpB,EACPqB,SAAUnB,EACVoB,oBAAqB,CACpB,aAAc,iBAGhB,cAAC,IAAD,CACCL,OAAO,SACPC,GAAG,qBACHC,MAAM,qBACNH,OAAO,aACPI,MAAOpB,EACPqB,SAAUnB,EACVoB,oBAAqB,CACpB,aAAc,iBAGhB,cAAC,IAAD,CACCL,OAAO,SACPC,GAAG,cACHC,MAAM,cACNC,MAAOpB,EACPqB,SAAUnB,EACVoB,oBAAqB,CACpB,aAAc,sBAKlB,sCACM,+CADN,0BAGA,mBACClB,UAAU,WACVmB,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJL,+BCnDWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHRQ,EAAW,WACfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,KAOCe,OAAOC,QACRH,SAASI,iBAAiB,cAAeR,GAAU,GAEnDA,K","file":"static/js/main.f92006e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'date-fns';\nimport { CircularProgress } from '@material-ui/core';\nimport { KeyboardDatePicker, KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\n\nfunction App() {\n\t// The first commit of Material-UI\n\tconst [selectedDate, setSelectedDate] = React.useState<Date | null>(\n\t\tnew Date('2014-08-18T21:11:54'),\n\t);\n\n\tconst handleDateChange = (date: Date | null) => {\n\t\tsetSelectedDate(date);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<CircularProgress />\n\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t\t<Grid container justifyContent=\"space-around\">\n\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\tdisableToolbar\n\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\tformat=\"MM/dd/yyyy\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tid=\"date-picker-inline\"\n\t\t\t\t\t\t\tlabel=\"Date picker inline\"\n\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tid=\"date-picker-dialog\"\n\t\t\t\t\t\t\tlabel=\"Date picker dialog\"\n\t\t\t\t\t\t\tformat=\"MM/dd/yyyy\"\n\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<KeyboardTimePicker\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tid=\"time-picker\"\n\t\t\t\t\t\t\tlabel=\"Time picker\"\n\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t'aria-label': 'change time',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t<p>\n\t\t\t\t\tEdit <code>src/App.tsx</code> and save to reload.\n\t\t\t\t</p>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tLearn React\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n};\n\ndeclare var window: Window & {\n  cordova: unknown;\n};\n\nif(window.cordova) {\n  document.addEventListener('deviceready', startApp, false);\n} else {\n  startApp();\n}\n"],"sourceRoot":""}